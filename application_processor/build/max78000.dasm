
/Pace-2024-ectf/application_processor/build/max78000.elf:     file format elf32-littlearm


Disassembly of section .text:

1000e000 <__isr_vector>:
1000e000:	20020000 	.word	0x20020000
1000e004:	10011c81 	.word	0x10011c81
1000e008:	10011ab5 	.word	0x10011ab5
1000e00c:	10011cbf 	.word	0x10011cbf
1000e010:	10011cc1 	.word	0x10011cc1
1000e014:	10011cc3 	.word	0x10011cc3
1000e018:	10011cc5 	.word	0x10011cc5
	...
1000e02c:	10011cc7 	.word	0x10011cc7
1000e030:	10011cc9 	.word	0x10011cc9
1000e034:	00000000 	.word	0x00000000
1000e038:	10011ccb 	.word	0x10011ccb
1000e03c:	10011ccd 	.word	0x10011ccd
1000e040:	10011cd1 	.word	0x10011cd1
1000e044:	10011cd3 	.word	0x10011cd3
1000e048:	10011cd5 	.word	0x10011cd5
1000e04c:	10011cd7 	.word	0x10011cd7
1000e050:	10011cd9 	.word	0x10011cd9
1000e054:	10011cdb 	.word	0x10011cdb
1000e058:	10011cdd 	.word	0x10011cdd
1000e05c:	10011cdf 	.word	0x10011cdf
1000e060:	10011ce1 	.word	0x10011ce1
1000e064:	10011ce3 	.word	0x10011ce3
1000e068:	10011ce5 	.word	0x10011ce5
1000e06c:	10011ce7 	.word	0x10011ce7
1000e070:	10011ce9 	.word	0x10011ce9
1000e074:	10011ceb 	.word	0x10011ceb
1000e078:	10011ced 	.word	0x10011ced
1000e07c:	10011cef 	.word	0x10011cef
1000e080:	10011cf1 	.word	0x10011cf1
1000e084:	10011cf3 	.word	0x10011cf3
1000e088:	10011cf5 	.word	0x10011cf5
1000e08c:	10011cf7 	.word	0x10011cf7
1000e090:	10011cf9 	.word	0x10011cf9
1000e094:	10011cfb 	.word	0x10011cfb
1000e098:	10011cfd 	.word	0x10011cfd
1000e09c:	10011cff 	.word	0x10011cff
1000e0a0:	10011a39 	.word	0x10011a39
1000e0a4:	10011a41 	.word	0x10011a41
1000e0a8:	10011d05 	.word	0x10011d05
1000e0ac:	10011d07 	.word	0x10011d07
1000e0b0:	10011d09 	.word	0x10011d09
1000e0b4:	10011d0b 	.word	0x10011d0b
1000e0b8:	10011d0d 	.word	0x10011d0d
1000e0bc:	10011d0f 	.word	0x10011d0f
1000e0c0:	10011d11 	.word	0x10011d11
1000e0c4:	10011d13 	.word	0x10011d13
1000e0c8:	10011d15 	.word	0x10011d15
1000e0cc:	10011d17 	.word	0x10011d17
1000e0d0:	10011d19 	.word	0x10011d19
1000e0d4:	10011d1b 	.word	0x10011d1b
1000e0d8:	10011d1d 	.word	0x10011d1d
1000e0dc:	10011d1f 	.word	0x10011d1f
1000e0e0:	10011d21 	.word	0x10011d21
1000e0e4:	10011d23 	.word	0x10011d23
1000e0e8:	10011d25 	.word	0x10011d25
1000e0ec:	10011d27 	.word	0x10011d27
1000e0f0:	10011d29 	.word	0x10011d29
1000e0f4:	10011d2b 	.word	0x10011d2b
1000e0f8:	10011d2d 	.word	0x10011d2d
1000e0fc:	10011d2f 	.word	0x10011d2f
1000e100:	10011d31 	.word	0x10011d31
1000e104:	10011d33 	.word	0x10011d33
1000e108:	10011d35 	.word	0x10011d35
1000e10c:	10011d37 	.word	0x10011d37
1000e110:	10011d39 	.word	0x10011d39
1000e114:	10011d3b 	.word	0x10011d3b
1000e118:	10011d3d 	.word	0x10011d3d
1000e11c:	10011d3f 	.word	0x10011d3f
1000e120:	10011d41 	.word	0x10011d41
1000e124:	10011d43 	.word	0x10011d43
1000e128:	10011d45 	.word	0x10011d45
1000e12c:	10011d47 	.word	0x10011d47
1000e130:	10011d49 	.word	0x10011d49
1000e134:	10011d4b 	.word	0x10011d4b
1000e138:	10011d4d 	.word	0x10011d4d
1000e13c:	10011d4f 	.word	0x10011d4f
1000e140:	10011d51 	.word	0x10011d51
1000e144:	10011d53 	.word	0x10011d53
1000e148:	10011d55 	.word	0x10011d55
1000e14c:	10011d57 	.word	0x10011d57
1000e150:	10011d59 	.word	0x10011d59
1000e154:	10011d5b 	.word	0x10011d5b
1000e158:	10011d5d 	.word	0x10011d5d
1000e15c:	10011d5f 	.word	0x10011d5f
1000e160:	10011d61 	.word	0x10011d61
1000e164:	10011d63 	.word	0x10011d63
1000e168:	10011d65 	.word	0x10011d65
1000e16c:	10011d67 	.word	0x10011d67
1000e170:	10011d69 	.word	0x10011d69
1000e174:	10011d6b 	.word	0x10011d6b
1000e178:	10011d6d 	.word	0x10011d6d
1000e17c:	10011d6f 	.word	0x10011d6f
1000e180:	10011d71 	.word	0x10011d71
1000e184:	10011d73 	.word	0x10011d73
1000e188:	10011d75 	.word	0x10011d75
1000e18c:	10011d77 	.word	0x10011d77
1000e190:	10011d79 	.word	0x10011d79
1000e194:	10011d7b 	.word	0x10011d7b
1000e198:	10011d7d 	.word	0x10011d7d
1000e19c:	10011d7f 	.word	0x10011d7f
1000e1a0:	10011d81 	.word	0x10011d81
1000e1a4:	10011d83 	.word	0x10011d83
1000e1a8:	10011d85 	.word	0x10011d85
1000e1ac:	10011d87 	.word	0x10011d87
1000e1b0:	10011d89 	.word	0x10011d89
1000e1b4:	10011d8b 	.word	0x10011d8b
1000e1b8:	10011d8d 	.word	0x10011d8d
1000e1bc:	10011d8f 	.word	0x10011d8f
1000e1c0:	10011d91 	.word	0x10011d91
1000e1c4:	10011d93 	.word	0x10011d93
1000e1c8:	10011d95 	.word	0x10011d95
1000e1cc:	10011d97 	.word	0x10011d97
1000e1d0:	10011d99 	.word	0x10011d99
1000e1d4:	10011d9b 	.word	0x10011d9b
1000e1d8:	10011d9d 	.word	0x10011d9d
1000e1dc:	10011d9f 	.word	0x10011d9f
	...

1000e200 <firmware_startup>:
1000e200:	4800      	ldr	r0, [pc, #0]	@ (1000e204 <firmware_startup+0x4>)
1000e202:	4780      	blx	r0
1000e204:	10011c81 	.word	0x10011c81

1000e208 <deregister_tm_clones>:
1000e208:	4803      	ldr	r0, [pc, #12]	@ (1000e218 <deregister_tm_clones+0x10>)
1000e20a:	4b04      	ldr	r3, [pc, #16]	@ (1000e21c <deregister_tm_clones+0x14>)
1000e20c:	4283      	cmp	r3, r0
1000e20e:	d002      	beq.n	1000e216 <deregister_tm_clones+0xe>
1000e210:	4b03      	ldr	r3, [pc, #12]	@ (1000e220 <deregister_tm_clones+0x18>)
1000e212:	b103      	cbz	r3, 1000e216 <deregister_tm_clones+0xe>
1000e214:	4718      	bx	r3
1000e216:	4770      	bx	lr
1000e218:	20000bcc 	.word	0x20000bcc
1000e21c:	20000bcc 	.word	0x20000bcc
1000e220:	00000000 	.word	0x00000000

1000e224 <register_tm_clones>:
1000e224:	4805      	ldr	r0, [pc, #20]	@ (1000e23c <register_tm_clones+0x18>)
1000e226:	4b06      	ldr	r3, [pc, #24]	@ (1000e240 <register_tm_clones+0x1c>)
1000e228:	1a1b      	subs	r3, r3, r0
1000e22a:	0fd9      	lsrs	r1, r3, #31
1000e22c:	eb01 01a3 	add.w	r1, r1, r3, asr #2
1000e230:	1049      	asrs	r1, r1, #1
1000e232:	d002      	beq.n	1000e23a <register_tm_clones+0x16>
1000e234:	4b03      	ldr	r3, [pc, #12]	@ (1000e244 <register_tm_clones+0x20>)
1000e236:	b103      	cbz	r3, 1000e23a <register_tm_clones+0x16>
1000e238:	4718      	bx	r3
1000e23a:	4770      	bx	lr
1000e23c:	20000bcc 	.word	0x20000bcc
1000e240:	20000bcc 	.word	0x20000bcc
1000e244:	00000000 	.word	0x00000000

1000e248 <__do_global_dtors_aux>:
1000e248:	b510      	push	{r4, lr}
1000e24a:	4c06      	ldr	r4, [pc, #24]	@ (1000e264 <__do_global_dtors_aux+0x1c>)
1000e24c:	7823      	ldrb	r3, [r4, #0]
1000e24e:	b943      	cbnz	r3, 1000e262 <__do_global_dtors_aux+0x1a>
1000e250:	f7ff ffda 	bl	1000e208 <deregister_tm_clones>
1000e254:	4b04      	ldr	r3, [pc, #16]	@ (1000e268 <__do_global_dtors_aux+0x20>)
1000e256:	b113      	cbz	r3, 1000e25e <__do_global_dtors_aux+0x16>
1000e258:	4804      	ldr	r0, [pc, #16]	@ (1000e26c <__do_global_dtors_aux+0x24>)
1000e25a:	f3af 8000 	nop.w
1000e25e:	2301      	movs	r3, #1
1000e260:	7023      	strb	r3, [r4, #0]
1000e262:	bd10      	pop	{r4, pc}
1000e264:	20000c00 	.word	0x20000c00
1000e268:	00000000 	.word	0x00000000
1000e26c:	1002a910 	.word	0x1002a910

1000e270 <frame_dummy>:
1000e270:	b508      	push	{r3, lr}
1000e272:	4b05      	ldr	r3, [pc, #20]	@ (1000e288 <frame_dummy+0x18>)
1000e274:	b11b      	cbz	r3, 1000e27e <frame_dummy+0xe>
1000e276:	4905      	ldr	r1, [pc, #20]	@ (1000e28c <frame_dummy+0x1c>)
1000e278:	4805      	ldr	r0, [pc, #20]	@ (1000e290 <frame_dummy+0x20>)
1000e27a:	f3af 8000 	nop.w
1000e27e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
1000e282:	f7ff bfcf 	b.w	1000e224 <register_tm_clones>
1000e286:	bf00      	nop
1000e288:	00000000 	.word	0x00000000
1000e28c:	20000c04 	.word	0x20000c04
1000e290:	1002a910 	.word	0x1002a910
1000e294:	00000000 	.word	0x00000000

1000e298 <init>:

/********************************* UTILITIES **********************************/

// Initialize the device
// This must be called on startup to initialize the flash and i2c interfaces
void init() {
1000e298:	b510      	push	{r4, lr}
  \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
1000e29a:	b662      	cpsie	i

    // Setup Flash
    flash_simple_init();

    // Test application has been booted before
    flash_simple_read(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000e29c:	4c1a      	ldr	r4, [pc, #104]	@ (1000e308 <init+0x70>)
    flash_simple_init();
1000e29e:	f000 fd81 	bl	1000eda4 <flash_simple_init>
    flash_simple_read(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000e2a2:	2288      	movs	r2, #136	@ 0x88
1000e2a4:	4819      	ldr	r0, [pc, #100]	@ (1000e30c <init+0x74>)
1000e2a6:	4621      	mov	r1, r4
1000e2a8:	f000 fd96 	bl	1000edd8 <flash_simple_read>

    // Write Component IDs from flash if first boot e.g. flash unwritten
    if (flash_status.flash_magic != FLASH_MAGIC) {
1000e2ac:	4b18      	ldr	r3, [pc, #96]	@ (1000e310 <init+0x78>)
1000e2ae:	6822      	ldr	r2, [r4, #0]
1000e2b0:	429a      	cmp	r2, r3
1000e2b2:	d01c      	beq.n	1000e2ee <init+0x56>
        print_debug("First boot, setting flash!\n");
1000e2b4:	4817      	ldr	r0, [pc, #92]	@ (1000e314 <init+0x7c>)
1000e2b6:	f007 ffb3 	bl	10016220 <printf>
1000e2ba:	4817      	ldr	r0, [pc, #92]	@ (1000e318 <init+0x80>)
1000e2bc:	f008 f818 	bl	100162f0 <puts>
1000e2c0:	4816      	ldr	r0, [pc, #88]	@ (1000e31c <init+0x84>)
1000e2c2:	f007 ffad 	bl	10016220 <printf>
1000e2c6:	4b16      	ldr	r3, [pc, #88]	@ (1000e320 <init+0x88>)
1000e2c8:	681b      	ldr	r3, [r3, #0]
1000e2ca:	6898      	ldr	r0, [r3, #8]
1000e2cc:	f008 f998 	bl	10016600 <fflush>

        flash_status.flash_magic = FLASH_MAGIC;
1000e2d0:	a109      	add	r1, pc, #36	@ (adr r1, 1000e2f8 <init+0x60>)
1000e2d2:	e9d1 0100 	ldrd	r0, r1, [r1]
1000e2d6:	a30a      	add	r3, pc, #40	@ (adr r3, 1000e300 <init+0x68>)
1000e2d8:	e9d3 2300 	ldrd	r2, r3, [r3]
1000e2dc:	e9c4 0100 	strd	r0, r1, [r4]
1000e2e0:	e9c4 2302 	strd	r2, r3, [r4, #8]
        flash_status.component_cnt = COMPONENT_CNT;
        uint32_t component_ids[COMPONENT_CNT] = {COMPONENT_IDS};
        memcpy(flash_status.component_ids, component_ids, 
            COMPONENT_CNT*sizeof(uint32_t));

        flash_simple_write(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000e2e4:	4809      	ldr	r0, [pc, #36]	@ (1000e30c <init+0x74>)
1000e2e6:	2288      	movs	r2, #136	@ 0x88
1000e2e8:	4621      	mov	r1, r4
1000e2ea:	f000 fd77 	bl	1000eddc <flash_simple_write>
    }
    
    // Initialize board link interface
    board_link_init();
}
1000e2ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    board_link_init();
1000e2f2:	f000 bc5b 	b.w	1000ebac <board_link_init>
1000e2f6:	bf00      	nop
1000e2f8:	deadbeef 	.word	0xdeadbeef
1000e2fc:	00000002 	.word	0x00000002
1000e300:	99887720 	.word	0x99887720
1000e304:	99887721 	.word	0x99887721
1000e308:	20000c20 	.word	0x20000c20
1000e30c:	1007c000 	.word	0x1007c000
1000e310:	deadbeef 	.word	0xdeadbeef
1000e314:	1002116c 	.word	0x1002116c
1000e318:	10021178 	.word	0x10021178
1000e31c:	10021194 	.word	0x10021194
1000e320:	20000590 	.word	0x20000590

1000e324 <scan_components>:
    return len;
}

/******************************** COMPONENT COMMS ********************************/

int scan_components() {
1000e324:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    // Print out provisioned component IDs
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e328:	f8df a0dc 	ldr.w	sl, [pc, #220]	@ 1000e408 <scan_components+0xe4>
1000e32c:	4e37      	ldr	r6, [pc, #220]	@ (1000e40c <scan_components+0xe8>)
1000e32e:	f8da 3004 	ldr.w	r3, [sl, #4]
int scan_components() {
1000e332:	f5ad 7d00 	sub.w	sp, sp, #512	@ 0x200
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e336:	b1db      	cbz	r3, 1000e370 <scan_components+0x4c>
        print_info("P>0x%08x\n", flash_status.component_ids[i]);
1000e338:	f8df 90d4 	ldr.w	r9, [pc, #212]	@ 1000e410 <scan_components+0xec>
1000e33c:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 1000e414 <scan_components+0xf0>
1000e340:	4f35      	ldr	r7, [pc, #212]	@ (1000e418 <scan_components+0xf4>)
1000e342:	f10a 0504 	add.w	r5, sl, #4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e346:	2400      	movs	r4, #0
        print_info("P>0x%08x\n", flash_status.component_ids[i]);
1000e348:	4648      	mov	r0, r9
1000e34a:	f007 ff69 	bl	10016220 <printf>
1000e34e:	f855 1f04 	ldr.w	r1, [r5, #4]!
1000e352:	4640      	mov	r0, r8
1000e354:	f007 ff64 	bl	10016220 <printf>
1000e358:	4638      	mov	r0, r7
1000e35a:	f007 ff61 	bl	10016220 <printf>
1000e35e:	6833      	ldr	r3, [r6, #0]
1000e360:	6898      	ldr	r0, [r3, #8]
1000e362:	f008 f94d 	bl	10016600 <fflush>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e366:	f8da 3004 	ldr.w	r3, [sl, #4]
1000e36a:	3401      	adds	r4, #1
1000e36c:	42a3      	cmp	r3, r4
1000e36e:	d8eb      	bhi.n	1000e348 <scan_components+0x24>
        int len = issue_cmd(addr, transmit_buffer, receive_buffer);

        // Success, device is present
        if (len > 0) {
            scan_message* scan = (scan_message*) receive_buffer;
            print_info("F>0x%08x\n", scan->component_id);
1000e370:	4d27      	ldr	r5, [pc, #156]	@ (1000e410 <scan_components+0xec>)
1000e372:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 1000e41c <scan_components+0xf8>
1000e376:	4f28      	ldr	r7, [pc, #160]	@ (1000e418 <scan_components+0xf4>)
    for (i2c_addr_t addr = 0x8; addr < 0x78; addr++) {
1000e378:	2408      	movs	r4, #8
1000e37a:	e01f      	b.n	1000e3bc <scan_components+0x98>
        command->opcode = COMPONENT_CMD_SCAN;
1000e37c:	f88d e100 	strb.w	lr, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e380:	f000 fc18 	bl	1000ebb4 <send_packet>
1000e384:	4603      	mov	r3, r0
    if (result == ERROR_RETURN) {
1000e386:	3301      	adds	r3, #1
    int len = poll_and_receive_packet(addr, receive);
1000e388:	4669      	mov	r1, sp
1000e38a:	4620      	mov	r0, r4
    if (result == ERROR_RETURN) {
1000e38c:	d012      	beq.n	1000e3b4 <scan_components+0x90>
    int len = poll_and_receive_packet(addr, receive);
1000e38e:	f000 fc2b 	bl	1000ebe8 <poll_and_receive_packet>
1000e392:	4603      	mov	r3, r0
        if (len > 0) {
1000e394:	2b00      	cmp	r3, #0
            print_info("F>0x%08x\n", scan->component_id);
1000e396:	4628      	mov	r0, r5
        if (len > 0) {
1000e398:	dd0c      	ble.n	1000e3b4 <scan_components+0x90>
            print_info("F>0x%08x\n", scan->component_id);
1000e39a:	f007 ff41 	bl	10016220 <printf>
1000e39e:	9900      	ldr	r1, [sp, #0]
1000e3a0:	4640      	mov	r0, r8
1000e3a2:	f007 ff3d 	bl	10016220 <printf>
1000e3a6:	4638      	mov	r0, r7
1000e3a8:	f007 ff3a 	bl	10016220 <printf>
1000e3ac:	6833      	ldr	r3, [r6, #0]
1000e3ae:	6898      	ldr	r0, [r3, #8]
1000e3b0:	f008 f926 	bl	10016600 <fflush>
    for (i2c_addr_t addr = 0x8; addr < 0x78; addr++) {
1000e3b4:	3401      	adds	r4, #1
1000e3b6:	b2e4      	uxtb	r4, r4
1000e3b8:	2c78      	cmp	r4, #120	@ 0x78
1000e3ba:	d013      	beq.n	1000e3e4 <scan_components+0xc0>
        command->opcode = COMPONENT_CMD_SCAN;
1000e3bc:	f1a4 0318 	sub.w	r3, r4, #24
1000e3c0:	b2db      	uxtb	r3, r3
1000e3c2:	f8df c05c 	ldr.w	ip, [pc, #92]	@ 1000e420 <scan_components+0xfc>
1000e3c6:	f04f 0e01 	mov.w	lr, #1
1000e3ca:	2b1e      	cmp	r3, #30
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e3cc:	aa40      	add	r2, sp, #256	@ 0x100
1000e3ce:	4671      	mov	r1, lr
1000e3d0:	4620      	mov	r0, r4
1000e3d2:	fa2c fc03 	lsr.w	ip, ip, r3
1000e3d6:	d8d1      	bhi.n	1000e37c <scan_components+0x58>
1000e3d8:	f01c 0f01 	tst.w	ip, #1
1000e3dc:	d0ce      	beq.n	1000e37c <scan_components+0x58>
    for (i2c_addr_t addr = 0x8; addr < 0x78; addr++) {
1000e3de:	4474      	add	r4, lr
1000e3e0:	b2e4      	uxtb	r4, r4
1000e3e2:	e7eb      	b.n	1000e3bc <scan_components+0x98>
        }
    }
    print_success("List\n");
1000e3e4:	480f      	ldr	r0, [pc, #60]	@ (1000e424 <scan_components+0x100>)
1000e3e6:	f007 ff1b 	bl	10016220 <printf>
1000e3ea:	480f      	ldr	r0, [pc, #60]	@ (1000e428 <scan_components+0x104>)
1000e3ec:	f007 ff80 	bl	100162f0 <puts>
1000e3f0:	4809      	ldr	r0, [pc, #36]	@ (1000e418 <scan_components+0xf4>)
1000e3f2:	f007 ff15 	bl	10016220 <printf>
1000e3f6:	6833      	ldr	r3, [r6, #0]
1000e3f8:	6898      	ldr	r0, [r3, #8]
1000e3fa:	f008 f901 	bl	10016600 <fflush>
    return SUCCESS_RETURN;
}
1000e3fe:	2000      	movs	r0, #0
1000e400:	f50d 7d00 	add.w	sp, sp, #512	@ 0x200
1000e404:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1000e408:	20000c20 	.word	0x20000c20
1000e40c:	20000590 	.word	0x20000590
1000e410:	10021198 	.word	0x10021198
1000e414:	100211a4 	.word	0x100211a4
1000e418:	10021194 	.word	0x10021194
1000e41c:	100211b0 	.word	0x100211b0
1000e420:	40010001 	.word	0x40010001
1000e424:	100211bc 	.word	0x100211bc
1000e428:	100211c8 	.word	0x100211c8

1000e42c <validate_components>:

int validate_components() {
1000e42c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    // Buffers for board link communication
    uint8_t receive_buffer[MAX_I2C_MESSAGE_LEN];
    uint8_t transmit_buffer[MAX_I2C_MESSAGE_LEN];

    // Send validate command to each component
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e430:	4f24      	ldr	r7, [pc, #144]	@ (1000e4c4 <validate_components+0x98>)
1000e432:	687b      	ldr	r3, [r7, #4]
int validate_components() {
1000e434:	f5ad 7d00 	sub.w	sp, sp, #512	@ 0x200
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e438:	2b00      	cmp	r3, #0
1000e43a:	d037      	beq.n	1000e4ac <validate_components+0x80>
1000e43c:	1d3d      	adds	r5, r7, #4
1000e43e:	2600      	movs	r6, #0
        // Set the I2C address of the component
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);

        // Create command message
        command_message* command = (command_message*) transmit_buffer;
        command->opcode = COMPONENT_CMD_VALIDATE;
1000e440:	f04f 0802 	mov.w	r8, #2
1000e444:	e003      	b.n	1000e44e <validate_components+0x22>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e446:	687b      	ldr	r3, [r7, #4]
1000e448:	3601      	adds	r6, #1
1000e44a:	42b3      	cmp	r3, r6
1000e44c:	d92e      	bls.n	1000e4ac <validate_components+0x80>
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
1000e44e:	f855 0f04 	ldr.w	r0, [r5, #4]!
1000e452:	f000 fbad 	bl	1000ebb0 <component_id_to_i2c_addr>
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e456:	2101      	movs	r1, #1
1000e458:	aa40      	add	r2, sp, #256	@ 0x100
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
1000e45a:	4604      	mov	r4, r0
        command->opcode = COMPONENT_CMD_VALIDATE;
1000e45c:	f88d 8100 	strb.w	r8, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e460:	f000 fba8 	bl	1000ebb4 <send_packet>
1000e464:	4603      	mov	r3, r0
    if (result == ERROR_RETURN) {
1000e466:	3301      	adds	r3, #1
    int len = poll_and_receive_packet(addr, receive);
1000e468:	4669      	mov	r1, sp
1000e46a:	4620      	mov	r0, r4
    if (result == ERROR_RETURN) {
1000e46c:	d023      	beq.n	1000e4b6 <validate_components+0x8a>
    int len = poll_and_receive_packet(addr, receive);
1000e46e:	f000 fbbb 	bl	1000ebe8 <poll_and_receive_packet>
    if (len == ERROR_RETURN) {
1000e472:	3001      	adds	r0, #1
1000e474:	d01f      	beq.n	1000e4b6 <validate_components+0x8a>
            return ERROR_RETURN;
        }

        validate_message* validate = (validate_message*) receive_buffer;
        // Check that the result is correct
        if (validate->component_id != flash_status.component_ids[i]) {
1000e476:	9a00      	ldr	r2, [sp, #0]
1000e478:	682b      	ldr	r3, [r5, #0]
1000e47a:	429a      	cmp	r2, r3
1000e47c:	d0e3      	beq.n	1000e446 <validate_components+0x1a>
            print_error("Component ID: 0x%08x invalid\n", flash_status.component_ids[i]);
1000e47e:	3602      	adds	r6, #2
1000e480:	4811      	ldr	r0, [pc, #68]	@ (1000e4c8 <validate_components+0x9c>)
1000e482:	f007 fecd 	bl	10016220 <printf>
1000e486:	4811      	ldr	r0, [pc, #68]	@ (1000e4cc <validate_components+0xa0>)
1000e488:	f857 1026 	ldr.w	r1, [r7, r6, lsl #2]
1000e48c:	f007 fec8 	bl	10016220 <printf>
1000e490:	480f      	ldr	r0, [pc, #60]	@ (1000e4d0 <validate_components+0xa4>)
1000e492:	f007 fec5 	bl	10016220 <printf>
1000e496:	4b0f      	ldr	r3, [pc, #60]	@ (1000e4d4 <validate_components+0xa8>)
1000e498:	681b      	ldr	r3, [r3, #0]
1000e49a:	6898      	ldr	r0, [r3, #8]
1000e49c:	f008 f8b0 	bl	10016600 <fflush>
            return ERROR_RETURN;
1000e4a0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
            return ERROR_RETURN;
        }
    }
    return SUCCESS_RETURN;
}
1000e4a4:	f50d 7d00 	add.w	sp, sp, #512	@ 0x200
1000e4a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return SUCCESS_RETURN;
1000e4ac:	2000      	movs	r0, #0
}
1000e4ae:	f50d 7d00 	add.w	sp, sp, #512	@ 0x200
1000e4b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            print_error("Could not validate component\n");
1000e4b6:	4804      	ldr	r0, [pc, #16]	@ (1000e4c8 <validate_components+0x9c>)
1000e4b8:	f007 feb2 	bl	10016220 <printf>
1000e4bc:	4806      	ldr	r0, [pc, #24]	@ (1000e4d8 <validate_components+0xac>)
1000e4be:	f007 ff17 	bl	100162f0 <puts>
1000e4c2:	e7e5      	b.n	1000e490 <validate_components+0x64>
1000e4c4:	20000c20 	.word	0x20000c20
1000e4c8:	100211d0 	.word	0x100211d0
1000e4cc:	100211fc 	.word	0x100211fc
1000e4d0:	10021194 	.word	0x10021194
1000e4d4:	20000590 	.word	0x20000590
1000e4d8:	100211dc 	.word	0x100211dc

1000e4dc <boot_components>:

int boot_components() {
1000e4dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    // Buffers for board link communication
    uint8_t receive_buffer[MAX_I2C_MESSAGE_LEN];
    uint8_t transmit_buffer[MAX_I2C_MESSAGE_LEN];

    // Send boot command to each component
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e4e0:	4f29      	ldr	r7, [pc, #164]	@ (1000e588 <boot_components+0xac>)
1000e4e2:	687b      	ldr	r3, [r7, #4]
int boot_components() {
1000e4e4:	f5ad 7d01 	sub.w	sp, sp, #516	@ 0x204
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e4e8:	b3a3      	cbz	r3, 1000e554 <boot_components+0x78>
1000e4ea:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 1000e58c <boot_components+0xb0>
            print_error("Could not boot component\n");
            return ERROR_RETURN;
        }

        // Print boot message from component
        print_info("0x%08x>%s\n", flash_status.component_ids[i], receive_buffer);
1000e4ee:	f8df 90a0 	ldr.w	r9, [pc, #160]	@ 1000e590 <boot_components+0xb4>
1000e4f2:	f8df b0a0 	ldr.w	fp, [pc, #160]	@ 1000e594 <boot_components+0xb8>
1000e4f6:	f8df a0a0 	ldr.w	sl, [pc, #160]	@ 1000e598 <boot_components+0xbc>
1000e4fa:	1d3e      	adds	r6, r7, #4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e4fc:	2500      	movs	r5, #0
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
1000e4fe:	f856 0f04 	ldr.w	r0, [r6, #4]!
1000e502:	f000 fb55 	bl	1000ebb0 <component_id_to_i2c_addr>
        command->opcode = COMPONENT_CMD_BOOT;
1000e506:	2303      	movs	r3, #3
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e508:	2101      	movs	r1, #1
1000e50a:	aa40      	add	r2, sp, #256	@ 0x100
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
1000e50c:	4604      	mov	r4, r0
        command->opcode = COMPONENT_CMD_BOOT;
1000e50e:	f88d 3100 	strb.w	r3, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e512:	f000 fb4f 	bl	1000ebb4 <send_packet>
1000e516:	4603      	mov	r3, r0
    if (result == ERROR_RETURN) {
1000e518:	3301      	adds	r3, #1
    int len = poll_and_receive_packet(addr, receive);
1000e51a:	4669      	mov	r1, sp
1000e51c:	4620      	mov	r0, r4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e51e:	f105 0501 	add.w	r5, r5, #1
    if (result == ERROR_RETURN) {
1000e522:	d01c      	beq.n	1000e55e <boot_components+0x82>
    int len = poll_and_receive_packet(addr, receive);
1000e524:	f000 fb60 	bl	1000ebe8 <poll_and_receive_packet>
1000e528:	4603      	mov	r3, r0
    if (len == ERROR_RETURN) {
1000e52a:	3301      	adds	r3, #1
        print_info("0x%08x>%s\n", flash_status.component_ids[i], receive_buffer);
1000e52c:	4648      	mov	r0, r9
    if (len == ERROR_RETURN) {
1000e52e:	d016      	beq.n	1000e55e <boot_components+0x82>
        print_info("0x%08x>%s\n", flash_status.component_ids[i], receive_buffer);
1000e530:	f007 fe76 	bl	10016220 <printf>
1000e534:	6831      	ldr	r1, [r6, #0]
1000e536:	466a      	mov	r2, sp
1000e538:	4658      	mov	r0, fp
1000e53a:	f007 fe71 	bl	10016220 <printf>
1000e53e:	4650      	mov	r0, sl
1000e540:	f007 fe6e 	bl	10016220 <printf>
1000e544:	f8d8 3000 	ldr.w	r3, [r8]
1000e548:	6898      	ldr	r0, [r3, #8]
1000e54a:	f008 f859 	bl	10016600 <fflush>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e54e:	687b      	ldr	r3, [r7, #4]
1000e550:	42ab      	cmp	r3, r5
1000e552:	d8d4      	bhi.n	1000e4fe <boot_components+0x22>
    }
    return SUCCESS_RETURN;
1000e554:	2000      	movs	r0, #0
}
1000e556:	f50d 7d01 	add.w	sp, sp, #516	@ 0x204
1000e55a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            print_error("Could not boot component\n");
1000e55e:	480f      	ldr	r0, [pc, #60]	@ (1000e59c <boot_components+0xc0>)
1000e560:	f007 fe5e 	bl	10016220 <printf>
1000e564:	480e      	ldr	r0, [pc, #56]	@ (1000e5a0 <boot_components+0xc4>)
1000e566:	f007 fec3 	bl	100162f0 <puts>
1000e56a:	480b      	ldr	r0, [pc, #44]	@ (1000e598 <boot_components+0xbc>)
1000e56c:	f007 fe58 	bl	10016220 <printf>
1000e570:	f8d8 3000 	ldr.w	r3, [r8]
1000e574:	6898      	ldr	r0, [r3, #8]
1000e576:	f008 f843 	bl	10016600 <fflush>
            return ERROR_RETURN;
1000e57a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000e57e:	f50d 7d01 	add.w	sp, sp, #516	@ 0x204
1000e582:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1000e586:	bf00      	nop
1000e588:	20000c20 	.word	0x20000c20
1000e58c:	20000590 	.word	0x20000590
1000e590:	10021198 	.word	0x10021198
1000e594:	1002121c 	.word	0x1002121c
1000e598:	10021194 	.word	0x10021194
1000e59c:	100211d0 	.word	0x100211d0
1000e5a0:	10021228 	.word	0x10021228

1000e5a4 <attest_component>:

int attest_component(uint32_t component_id) {
1000e5a4:	b530      	push	{r4, r5, lr}
1000e5a6:	f5ad 7d01 	sub.w	sp, sp, #516	@ 0x204
1000e5aa:	4604      	mov	r4, r0
    // Buffers for board link communication
    uint8_t receive_buffer[MAX_I2C_MESSAGE_LEN];
    uint8_t transmit_buffer[MAX_I2C_MESSAGE_LEN];

    // Set the I2C address of the component
    i2c_addr_t addr = component_id_to_i2c_addr(component_id);
1000e5ac:	f000 fb00 	bl	1000ebb0 <component_id_to_i2c_addr>

    // Create command message
    command_message* command = (command_message*) transmit_buffer;
    command->opcode = COMPONENT_CMD_ATTEST;
1000e5b0:	2304      	movs	r3, #4
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e5b2:	aa40      	add	r2, sp, #256	@ 0x100
1000e5b4:	2101      	movs	r1, #1
    i2c_addr_t addr = component_id_to_i2c_addr(component_id);
1000e5b6:	4605      	mov	r5, r0
    command->opcode = COMPONENT_CMD_ATTEST;
1000e5b8:	f88d 3100 	strb.w	r3, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e5bc:	f000 fafa 	bl	1000ebb4 <send_packet>
    if (result == ERROR_RETURN) {
1000e5c0:	3001      	adds	r0, #1
1000e5c2:	d026      	beq.n	1000e612 <attest_component+0x6e>
    int len = poll_and_receive_packet(addr, receive);
1000e5c4:	4669      	mov	r1, sp
1000e5c6:	4628      	mov	r0, r5
1000e5c8:	f000 fb0e 	bl	1000ebe8 <poll_and_receive_packet>
    if (len == ERROR_RETURN) {
1000e5cc:	3001      	adds	r0, #1
1000e5ce:	d020      	beq.n	1000e612 <attest_component+0x6e>
        print_error("Could not attest component\n");
        return ERROR_RETURN;
    }

    // Print out attestation data 
    print_info("C>0x%08x\n", component_id);
1000e5d0:	4818      	ldr	r0, [pc, #96]	@ (1000e634 <attest_component+0x90>)
1000e5d2:	f007 fe25 	bl	10016220 <printf>
1000e5d6:	4621      	mov	r1, r4
1000e5d8:	4817      	ldr	r0, [pc, #92]	@ (1000e638 <attest_component+0x94>)
1000e5da:	4c18      	ldr	r4, [pc, #96]	@ (1000e63c <attest_component+0x98>)
1000e5dc:	f007 fe20 	bl	10016220 <printf>
1000e5e0:	4817      	ldr	r0, [pc, #92]	@ (1000e640 <attest_component+0x9c>)
1000e5e2:	f007 fe1d 	bl	10016220 <printf>
1000e5e6:	6823      	ldr	r3, [r4, #0]
1000e5e8:	6898      	ldr	r0, [r3, #8]
1000e5ea:	f008 f809 	bl	10016600 <fflush>
    print_info("%s", receive_buffer);
1000e5ee:	4811      	ldr	r0, [pc, #68]	@ (1000e634 <attest_component+0x90>)
1000e5f0:	f007 fe16 	bl	10016220 <printf>
1000e5f4:	4669      	mov	r1, sp
1000e5f6:	4813      	ldr	r0, [pc, #76]	@ (1000e644 <attest_component+0xa0>)
1000e5f8:	f007 fe12 	bl	10016220 <printf>
1000e5fc:	4810      	ldr	r0, [pc, #64]	@ (1000e640 <attest_component+0x9c>)
1000e5fe:	f007 fe0f 	bl	10016220 <printf>
1000e602:	6823      	ldr	r3, [r4, #0]
1000e604:	6898      	ldr	r0, [r3, #8]
1000e606:	f007 fffb 	bl	10016600 <fflush>
    return SUCCESS_RETURN;
1000e60a:	2000      	movs	r0, #0
}
1000e60c:	f50d 7d01 	add.w	sp, sp, #516	@ 0x204
1000e610:	bd30      	pop	{r4, r5, pc}
        print_error("Could not attest component\n");
1000e612:	480d      	ldr	r0, [pc, #52]	@ (1000e648 <attest_component+0xa4>)
1000e614:	f007 fe04 	bl	10016220 <printf>
1000e618:	480c      	ldr	r0, [pc, #48]	@ (1000e64c <attest_component+0xa8>)
1000e61a:	f007 fe69 	bl	100162f0 <puts>
1000e61e:	4808      	ldr	r0, [pc, #32]	@ (1000e640 <attest_component+0x9c>)
1000e620:	f007 fdfe 	bl	10016220 <printf>
1000e624:	4b05      	ldr	r3, [pc, #20]	@ (1000e63c <attest_component+0x98>)
1000e626:	681b      	ldr	r3, [r3, #0]
1000e628:	6898      	ldr	r0, [r3, #8]
1000e62a:	f007 ffe9 	bl	10016600 <fflush>
        return ERROR_RETURN;
1000e62e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000e632:	e7eb      	b.n	1000e60c <attest_component+0x68>
1000e634:	10021198 	.word	0x10021198
1000e638:	10021244 	.word	0x10021244
1000e63c:	20000590 	.word	0x20000590
1000e640:	10021194 	.word	0x10021194
1000e644:	10021250 	.word	0x10021250
1000e648:	100211d0 	.word	0x100211d0
1000e64c:	10021254 	.word	0x10021254

1000e650 <attempt_attest.part.0>:
    print_error("Component 0x%08x is not provisioned for the system\r\n",
            component_id_out);
}

// Attest a component if the PIN is correct
void attempt_attest() {
1000e650:	b500      	push	{lr}
1000e652:	b08f      	sub	sp, #60	@ 0x3c

    if (validate_pin()) {
        return;
    }
    uint32_t component_id;
    recv_input("Component ID: ", buf);
1000e654:	4810      	ldr	r0, [pc, #64]	@ (1000e698 <attempt_attest.part.0+0x48>)
1000e656:	a901      	add	r1, sp, #4
1000e658:	f000 faee 	bl	1000ec38 <recv_input>
    sscanf(buf, "%x", &component_id);
1000e65c:	490f      	ldr	r1, [pc, #60]	@ (1000e69c <attempt_attest.part.0+0x4c>)
1000e65e:	466a      	mov	r2, sp
1000e660:	a801      	add	r0, sp, #4
1000e662:	f005 fab1 	bl	10013bc8 <sscanf>
    if (attest_component(component_id) == SUCCESS_RETURN) {
1000e666:	9800      	ldr	r0, [sp, #0]
1000e668:	f7ff ff9c 	bl	1000e5a4 <attest_component>
1000e66c:	b110      	cbz	r0, 1000e674 <attempt_attest.part.0+0x24>
        print_success("Attest\n");
    }
}
1000e66e:	b00f      	add	sp, #60	@ 0x3c
1000e670:	f85d fb04 	ldr.w	pc, [sp], #4
        print_success("Attest\n");
1000e674:	480a      	ldr	r0, [pc, #40]	@ (1000e6a0 <attempt_attest.part.0+0x50>)
1000e676:	f007 fdd3 	bl	10016220 <printf>
1000e67a:	480a      	ldr	r0, [pc, #40]	@ (1000e6a4 <attempt_attest.part.0+0x54>)
1000e67c:	f007 fe38 	bl	100162f0 <puts>
1000e680:	4809      	ldr	r0, [pc, #36]	@ (1000e6a8 <attempt_attest.part.0+0x58>)
1000e682:	f007 fdcd 	bl	10016220 <printf>
1000e686:	4b09      	ldr	r3, [pc, #36]	@ (1000e6ac <attempt_attest.part.0+0x5c>)
1000e688:	681b      	ldr	r3, [r3, #0]
1000e68a:	6898      	ldr	r0, [r3, #8]
1000e68c:	f007 ffb8 	bl	10016600 <fflush>
}
1000e690:	b00f      	add	sp, #60	@ 0x3c
1000e692:	f85d fb04 	ldr.w	pc, [sp], #4
1000e696:	bf00      	nop
1000e698:	10021270 	.word	0x10021270
1000e69c:	10021280 	.word	0x10021280
1000e6a0:	100211bc 	.word	0x100211bc
1000e6a4:	10021284 	.word	0x10021284
1000e6a8:	10021194 	.word	0x10021194
1000e6ac:	20000590 	.word	0x20000590

1000e6b0 <boot>:
void boot() {
1000e6b0:	b510      	push	{r4, lr}
    bzero(key, BLOCK_SIZE);
1000e6b2:	2000      	movs	r0, #0
void boot() {
1000e6b4:	b090      	sub	sp, #64	@ 0x40
    encrypt_sym((uint8_t*)data, BLOCK_SIZE, key, ciphertext); 
1000e6b6:	aa04      	add	r2, sp, #16
1000e6b8:	2110      	movs	r1, #16
1000e6ba:	466b      	mov	r3, sp
    bzero(key, BLOCK_SIZE);
1000e6bc:	e9cd 0004 	strd	r0, r0, [sp, #16]
1000e6c0:	e9cd 0006 	strd	r0, r0, [sp, #24]
    encrypt_sym((uint8_t*)data, BLOCK_SIZE, key, ciphertext); 
1000e6c4:	483c      	ldr	r0, [pc, #240]	@ (1000e7b8 <boot+0x108>)
    print_debug("Encrypted data: ");
1000e6c6:	4c3d      	ldr	r4, [pc, #244]	@ (1000e7bc <boot+0x10c>)
    encrypt_sym((uint8_t*)data, BLOCK_SIZE, key, ciphertext); 
1000e6c8:	f000 fafc 	bl	1000ecc4 <encrypt_sym>
    print_debug("Encrypted data: ");
1000e6cc:	483c      	ldr	r0, [pc, #240]	@ (1000e7c0 <boot+0x110>)
1000e6ce:	f007 fda7 	bl	10016220 <printf>
1000e6d2:	483c      	ldr	r0, [pc, #240]	@ (1000e7c4 <boot+0x114>)
1000e6d4:	f007 fda4 	bl	10016220 <printf>
1000e6d8:	483b      	ldr	r0, [pc, #236]	@ (1000e7c8 <boot+0x118>)
1000e6da:	f007 fda1 	bl	10016220 <printf>
1000e6de:	6823      	ldr	r3, [r4, #0]
1000e6e0:	6898      	ldr	r0, [r3, #8]
1000e6e2:	f007 ff8d 	bl	10016600 <fflush>
    print_hex_debug(ciphertext, BLOCK_SIZE);
1000e6e6:	4836      	ldr	r0, [pc, #216]	@ (1000e7c0 <boot+0x110>)
1000e6e8:	f007 fd9a 	bl	10016220 <printf>
1000e6ec:	2110      	movs	r1, #16
1000e6ee:	4668      	mov	r0, sp
1000e6f0:	f000 fad0 	bl	1000ec94 <print_hex>
1000e6f4:	4834      	ldr	r0, [pc, #208]	@ (1000e7c8 <boot+0x118>)
1000e6f6:	f007 fd93 	bl	10016220 <printf>
1000e6fa:	6823      	ldr	r3, [r4, #0]
1000e6fc:	6898      	ldr	r0, [r3, #8]
1000e6fe:	f007 ff7f 	bl	10016600 <fflush>
    hash(ciphertext, BLOCK_SIZE, hash_out);
1000e702:	aa08      	add	r2, sp, #32
1000e704:	2110      	movs	r1, #16
1000e706:	4668      	mov	r0, sp
1000e708:	f000 fb32 	bl	1000ed70 <hash>
    print_debug("Hash result: ");
1000e70c:	482c      	ldr	r0, [pc, #176]	@ (1000e7c0 <boot+0x110>)
1000e70e:	f007 fd87 	bl	10016220 <printf>
1000e712:	482e      	ldr	r0, [pc, #184]	@ (1000e7cc <boot+0x11c>)
1000e714:	f007 fd84 	bl	10016220 <printf>
1000e718:	482b      	ldr	r0, [pc, #172]	@ (1000e7c8 <boot+0x118>)
1000e71a:	f007 fd81 	bl	10016220 <printf>
1000e71e:	6823      	ldr	r3, [r4, #0]
1000e720:	6898      	ldr	r0, [r3, #8]
1000e722:	f007 ff6d 	bl	10016600 <fflush>
    print_hex_debug(hash_out, HASH_SIZE);
1000e726:	4826      	ldr	r0, [pc, #152]	@ (1000e7c0 <boot+0x110>)
1000e728:	f007 fd7a 	bl	10016220 <printf>
1000e72c:	2110      	movs	r1, #16
1000e72e:	a808      	add	r0, sp, #32
1000e730:	f000 fab0 	bl	1000ec94 <print_hex>
1000e734:	4824      	ldr	r0, [pc, #144]	@ (1000e7c8 <boot+0x118>)
1000e736:	f007 fd73 	bl	10016220 <printf>
1000e73a:	6823      	ldr	r3, [r4, #0]
1000e73c:	6898      	ldr	r0, [r3, #8]
1000e73e:	f007 ff5f 	bl	10016600 <fflush>
    decrypt_sym(ciphertext, BLOCK_SIZE, key, decrypted);
1000e742:	ab0c      	add	r3, sp, #48	@ 0x30
1000e744:	aa04      	add	r2, sp, #16
1000e746:	2110      	movs	r1, #16
1000e748:	4668      	mov	r0, sp
1000e74a:	f000 fae5 	bl	1000ed18 <decrypt_sym>
    print_debug("Decrypted message: %s\r\n", decrypted);
1000e74e:	481c      	ldr	r0, [pc, #112]	@ (1000e7c0 <boot+0x110>)
1000e750:	f007 fd66 	bl	10016220 <printf>
1000e754:	a90c      	add	r1, sp, #48	@ 0x30
1000e756:	481e      	ldr	r0, [pc, #120]	@ (1000e7d0 <boot+0x120>)
1000e758:	f007 fd62 	bl	10016220 <printf>
1000e75c:	481a      	ldr	r0, [pc, #104]	@ (1000e7c8 <boot+0x118>)
1000e75e:	f007 fd5f 	bl	10016220 <printf>
1000e762:	6823      	ldr	r3, [r4, #0]
        MXC_Delay(500000);
1000e764:	4c1b      	ldr	r4, [pc, #108]	@ (1000e7d4 <boot+0x124>)
    print_debug("Decrypted message: %s\r\n", decrypted);
1000e766:	6898      	ldr	r0, [r3, #8]
1000e768:	f007 ff4a 	bl	10016600 <fflush>
        LED_On(LED1);
1000e76c:	2000      	movs	r0, #0
1000e76e:	f003 fa2b 	bl	10011bc8 <LED_On>
        MXC_Delay(500000);
1000e772:	4620      	mov	r0, r4
1000e774:	f003 fc46 	bl	10012004 <MXC_Delay>
        LED_On(LED2);
1000e778:	2001      	movs	r0, #1
1000e77a:	f003 fa25 	bl	10011bc8 <LED_On>
        MXC_Delay(500000);
1000e77e:	4620      	mov	r0, r4
1000e780:	f003 fc40 	bl	10012004 <MXC_Delay>
        LED_On(LED3);
1000e784:	2002      	movs	r0, #2
1000e786:	f003 fa1f 	bl	10011bc8 <LED_On>
        MXC_Delay(500000);
1000e78a:	4620      	mov	r0, r4
1000e78c:	f003 fc3a 	bl	10012004 <MXC_Delay>
        LED_Off(LED1);
1000e790:	2000      	movs	r0, #0
1000e792:	f003 fa39 	bl	10011c08 <LED_Off>
        MXC_Delay(500000);
1000e796:	4620      	mov	r0, r4
1000e798:	f003 fc34 	bl	10012004 <MXC_Delay>
        LED_Off(LED2);
1000e79c:	2001      	movs	r0, #1
1000e79e:	f003 fa33 	bl	10011c08 <LED_Off>
        MXC_Delay(500000);
1000e7a2:	4620      	mov	r0, r4
1000e7a4:	f003 fc2e 	bl	10012004 <MXC_Delay>
        LED_Off(LED3);
1000e7a8:	2002      	movs	r0, #2
1000e7aa:	f003 fa2d 	bl	10011c08 <LED_Off>
        MXC_Delay(500000);
1000e7ae:	4620      	mov	r0, r4
1000e7b0:	f003 fc28 	bl	10012004 <MXC_Delay>
    while (1) {
1000e7b4:	e7da      	b.n	1000e76c <boot+0xbc>
1000e7b6:	bf00      	nop
1000e7b8:	1002128c 	.word	0x1002128c
1000e7bc:	20000590 	.word	0x20000590
1000e7c0:	1002116c 	.word	0x1002116c
1000e7c4:	1002129c 	.word	0x1002129c
1000e7c8:	10021194 	.word	0x10021194
1000e7cc:	100212b0 	.word	0x100212b0
1000e7d0:	100212c0 	.word	0x100212c0
1000e7d4:	0007a120 	.word	0x0007a120

1000e7d8 <validate_pin>:
int validate_pin() {
1000e7d8:	b510      	push	{r4, lr}
1000e7da:	b08e      	sub	sp, #56	@ 0x38
    recv_input("Enter pin: ", buf);
1000e7dc:	4819      	ldr	r0, [pc, #100]	@ (1000e844 <validate_pin+0x6c>)
1000e7de:	a901      	add	r1, sp, #4
1000e7e0:	f000 fa2a 	bl	1000ec38 <recv_input>
    if (!strcmp(buf, AP_PIN)) {
1000e7e4:	4b18      	ldr	r3, [pc, #96]	@ (1000e848 <validate_pin+0x70>)
1000e7e6:	9a01      	ldr	r2, [sp, #4]
1000e7e8:	429a      	cmp	r2, r3
1000e7ea:	d012      	beq.n	1000e812 <validate_pin+0x3a>
    print_error("Invalid PIN!\n");
1000e7ec:	4817      	ldr	r0, [pc, #92]	@ (1000e84c <validate_pin+0x74>)
1000e7ee:	f007 fd17 	bl	10016220 <printf>
1000e7f2:	4817      	ldr	r0, [pc, #92]	@ (1000e850 <validate_pin+0x78>)
1000e7f4:	f007 fd7c 	bl	100162f0 <puts>
1000e7f8:	4816      	ldr	r0, [pc, #88]	@ (1000e854 <validate_pin+0x7c>)
1000e7fa:	f007 fd11 	bl	10016220 <printf>
1000e7fe:	4b16      	ldr	r3, [pc, #88]	@ (1000e858 <validate_pin+0x80>)
1000e800:	681b      	ldr	r3, [r3, #0]
1000e802:	6898      	ldr	r0, [r3, #8]
1000e804:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
1000e808:	f007 fefa 	bl	10016600 <fflush>
}
1000e80c:	4620      	mov	r0, r4
1000e80e:	b00e      	add	sp, #56	@ 0x38
1000e810:	bd10      	pop	{r4, pc}
    if (!strcmp(buf, AP_PIN)) {
1000e812:	f8bd 2008 	ldrh.w	r2, [sp, #8]
1000e816:	f243 3333 	movw	r3, #13107	@ 0x3333
1000e81a:	429a      	cmp	r2, r3
1000e81c:	d1e6      	bne.n	1000e7ec <validate_pin+0x14>
1000e81e:	f89d 400a 	ldrb.w	r4, [sp, #10]
1000e822:	2c00      	cmp	r4, #0
1000e824:	d1e2      	bne.n	1000e7ec <validate_pin+0x14>
        print_debug("Pin Accepted!\n");
1000e826:	480d      	ldr	r0, [pc, #52]	@ (1000e85c <validate_pin+0x84>)
1000e828:	f007 fcfa 	bl	10016220 <printf>
1000e82c:	480c      	ldr	r0, [pc, #48]	@ (1000e860 <validate_pin+0x88>)
1000e82e:	f007 fd5f 	bl	100162f0 <puts>
1000e832:	4808      	ldr	r0, [pc, #32]	@ (1000e854 <validate_pin+0x7c>)
1000e834:	f007 fcf4 	bl	10016220 <printf>
1000e838:	4b07      	ldr	r3, [pc, #28]	@ (1000e858 <validate_pin+0x80>)
1000e83a:	681b      	ldr	r3, [r3, #0]
1000e83c:	6898      	ldr	r0, [r3, #8]
1000e83e:	f007 fedf 	bl	10016600 <fflush>
        return SUCCESS_RETURN;
1000e842:	e7e3      	b.n	1000e80c <validate_pin+0x34>
1000e844:	100212d8 	.word	0x100212d8
1000e848:	32343935 	.word	0x32343935
1000e84c:	100211d0 	.word	0x100211d0
1000e850:	100212fc 	.word	0x100212fc
1000e854:	10021194 	.word	0x10021194
1000e858:	20000590 	.word	0x20000590
1000e85c:	1002116c 	.word	0x1002116c
1000e860:	100212ec 	.word	0x100212ec

1000e864 <validate_token>:
int validate_token() {
1000e864:	b510      	push	{r4, lr}
1000e866:	b08e      	sub	sp, #56	@ 0x38
    recv_input("Enter token: ", buf);
1000e868:	4815      	ldr	r0, [pc, #84]	@ (1000e8c0 <validate_token+0x5c>)
1000e86a:	a901      	add	r1, sp, #4
1000e86c:	f000 f9e4 	bl	1000ec38 <recv_input>
    if (!strcmp(buf, AP_TOKEN)) {
1000e870:	4914      	ldr	r1, [pc, #80]	@ (1000e8c4 <validate_token+0x60>)
1000e872:	a801      	add	r0, sp, #4
1000e874:	f007 fb64 	bl	10015f40 <strcmp>
1000e878:	b988      	cbnz	r0, 1000e89e <validate_token+0x3a>
        print_debug("Token Accepted!\n");
1000e87a:	4604      	mov	r4, r0
1000e87c:	4812      	ldr	r0, [pc, #72]	@ (1000e8c8 <validate_token+0x64>)
1000e87e:	f007 fccf 	bl	10016220 <printf>
1000e882:	4812      	ldr	r0, [pc, #72]	@ (1000e8cc <validate_token+0x68>)
1000e884:	f007 fd34 	bl	100162f0 <puts>
1000e888:	4811      	ldr	r0, [pc, #68]	@ (1000e8d0 <validate_token+0x6c>)
1000e88a:	f007 fcc9 	bl	10016220 <printf>
1000e88e:	4b11      	ldr	r3, [pc, #68]	@ (1000e8d4 <validate_token+0x70>)
1000e890:	681b      	ldr	r3, [r3, #0]
1000e892:	6898      	ldr	r0, [r3, #8]
1000e894:	f007 feb4 	bl	10016600 <fflush>
}
1000e898:	4620      	mov	r0, r4
1000e89a:	b00e      	add	sp, #56	@ 0x38
1000e89c:	bd10      	pop	{r4, pc}
    print_error("Invalid Token!\n");
1000e89e:	480e      	ldr	r0, [pc, #56]	@ (1000e8d8 <validate_token+0x74>)
1000e8a0:	f007 fcbe 	bl	10016220 <printf>
1000e8a4:	480d      	ldr	r0, [pc, #52]	@ (1000e8dc <validate_token+0x78>)
1000e8a6:	f007 fd23 	bl	100162f0 <puts>
1000e8aa:	4809      	ldr	r0, [pc, #36]	@ (1000e8d0 <validate_token+0x6c>)
1000e8ac:	f007 fcb8 	bl	10016220 <printf>
1000e8b0:	4b08      	ldr	r3, [pc, #32]	@ (1000e8d4 <validate_token+0x70>)
1000e8b2:	681b      	ldr	r3, [r3, #0]
1000e8b4:	6898      	ldr	r0, [r3, #8]
1000e8b6:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
1000e8ba:	f007 fea1 	bl	10016600 <fflush>
    return ERROR_RETURN;
1000e8be:	e7eb      	b.n	1000e898 <validate_token+0x34>
1000e8c0:	1002130c 	.word	0x1002130c
1000e8c4:	1002131c 	.word	0x1002131c
1000e8c8:	1002116c 	.word	0x1002116c
1000e8cc:	10021330 	.word	0x10021330
1000e8d0:	10021194 	.word	0x10021194
1000e8d4:	20000590 	.word	0x20000590
1000e8d8:	100211d0 	.word	0x100211d0
1000e8dc:	10021340 	.word	0x10021340

1000e8e0 <attempt_boot>:
void attempt_boot() {
1000e8e0:	b510      	push	{r4, lr}
    if (validate_components()) {
1000e8e2:	f7ff fda3 	bl	1000e42c <validate_components>
1000e8e6:	b9f8      	cbnz	r0, 1000e928 <attempt_boot+0x48>
    print_debug("All Components validated\n");
1000e8e8:	4826      	ldr	r0, [pc, #152]	@ (1000e984 <attempt_boot+0xa4>)
1000e8ea:	4c27      	ldr	r4, [pc, #156]	@ (1000e988 <attempt_boot+0xa8>)
1000e8ec:	f007 fc98 	bl	10016220 <printf>
1000e8f0:	4826      	ldr	r0, [pc, #152]	@ (1000e98c <attempt_boot+0xac>)
1000e8f2:	f007 fcfd 	bl	100162f0 <puts>
1000e8f6:	4826      	ldr	r0, [pc, #152]	@ (1000e990 <attempt_boot+0xb0>)
1000e8f8:	f007 fc92 	bl	10016220 <printf>
1000e8fc:	6823      	ldr	r3, [r4, #0]
1000e8fe:	6898      	ldr	r0, [r3, #8]
1000e900:	f007 fe7e 	bl	10016600 <fflush>
    if (boot_components()) {
1000e904:	f7ff fdea 	bl	1000e4dc <boot_components>
1000e908:	b1f0      	cbz	r0, 1000e948 <attempt_boot+0x68>
        print_error("Failed to boot all components\n");
1000e90a:	4822      	ldr	r0, [pc, #136]	@ (1000e994 <attempt_boot+0xb4>)
1000e90c:	f007 fc88 	bl	10016220 <printf>
1000e910:	4821      	ldr	r0, [pc, #132]	@ (1000e998 <attempt_boot+0xb8>)
1000e912:	f007 fced 	bl	100162f0 <puts>
1000e916:	481e      	ldr	r0, [pc, #120]	@ (1000e990 <attempt_boot+0xb0>)
1000e918:	f007 fc82 	bl	10016220 <printf>
1000e91c:	6823      	ldr	r3, [r4, #0]
}
1000e91e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        print_error("Failed to boot all components\n");
1000e922:	6898      	ldr	r0, [r3, #8]
1000e924:	f007 be6c 	b.w	10016600 <fflush>
        print_error("Components could not be validated\n");
1000e928:	481a      	ldr	r0, [pc, #104]	@ (1000e994 <attempt_boot+0xb4>)
1000e92a:	f007 fc79 	bl	10016220 <printf>
1000e92e:	481b      	ldr	r0, [pc, #108]	@ (1000e99c <attempt_boot+0xbc>)
1000e930:	f007 fcde 	bl	100162f0 <puts>
1000e934:	4816      	ldr	r0, [pc, #88]	@ (1000e990 <attempt_boot+0xb0>)
1000e936:	f007 fc73 	bl	10016220 <printf>
1000e93a:	4b13      	ldr	r3, [pc, #76]	@ (1000e988 <attempt_boot+0xa8>)
1000e93c:	681b      	ldr	r3, [r3, #0]
}
1000e93e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        print_error("Components could not be validated\n");
1000e942:	6898      	ldr	r0, [r3, #8]
1000e944:	f007 be5c 	b.w	10016600 <fflush>
    print_info("AP>%s\n", AP_BOOT_MSG);
1000e948:	4815      	ldr	r0, [pc, #84]	@ (1000e9a0 <attempt_boot+0xc0>)
1000e94a:	f007 fc69 	bl	10016220 <printf>
1000e94e:	4915      	ldr	r1, [pc, #84]	@ (1000e9a4 <attempt_boot+0xc4>)
1000e950:	4815      	ldr	r0, [pc, #84]	@ (1000e9a8 <attempt_boot+0xc8>)
1000e952:	f007 fc65 	bl	10016220 <printf>
1000e956:	480e      	ldr	r0, [pc, #56]	@ (1000e990 <attempt_boot+0xb0>)
1000e958:	f007 fc62 	bl	10016220 <printf>
1000e95c:	6823      	ldr	r3, [r4, #0]
1000e95e:	6898      	ldr	r0, [r3, #8]
1000e960:	f007 fe4e 	bl	10016600 <fflush>
    print_success("Boot\n");
1000e964:	4811      	ldr	r0, [pc, #68]	@ (1000e9ac <attempt_boot+0xcc>)
1000e966:	f007 fc5b 	bl	10016220 <printf>
1000e96a:	4811      	ldr	r0, [pc, #68]	@ (1000e9b0 <attempt_boot+0xd0>)
1000e96c:	f007 fcc0 	bl	100162f0 <puts>
1000e970:	4807      	ldr	r0, [pc, #28]	@ (1000e990 <attempt_boot+0xb0>)
1000e972:	f007 fc55 	bl	10016220 <printf>
1000e976:	6823      	ldr	r3, [r4, #0]
1000e978:	6898      	ldr	r0, [r3, #8]
1000e97a:	f007 fe41 	bl	10016600 <fflush>
    boot();
1000e97e:	f7ff fe97 	bl	1000e6b0 <boot>
1000e982:	bf00      	nop
1000e984:	1002116c 	.word	0x1002116c
1000e988:	20000590 	.word	0x20000590
1000e98c:	10021374 	.word	0x10021374
1000e990:	10021194 	.word	0x10021194
1000e994:	100211d0 	.word	0x100211d0
1000e998:	10021390 	.word	0x10021390
1000e99c:	10021350 	.word	0x10021350
1000e9a0:	10021198 	.word	0x10021198
1000e9a4:	100213b0 	.word	0x100213b0
1000e9a8:	100213c4 	.word	0x100213c4
1000e9ac:	100211bc 	.word	0x100211bc
1000e9b0:	100213cc 	.word	0x100213cc

1000e9b4 <attempt_replace>:
void attempt_replace() {
1000e9b4:	b570      	push	{r4, r5, r6, lr}
1000e9b6:	b090      	sub	sp, #64	@ 0x40
    if (validate_token()) {
1000e9b8:	f7ff ff54 	bl	1000e864 <validate_token>
1000e9bc:	b108      	cbz	r0, 1000e9c2 <attempt_replace+0xe>
}
1000e9be:	b010      	add	sp, #64	@ 0x40
1000e9c0:	bd70      	pop	{r4, r5, r6, pc}
    uint32_t component_id_in = 0;
1000e9c2:	4604      	mov	r4, r0
    recv_input("Component ID In: ", buf);
1000e9c4:	a903      	add	r1, sp, #12
1000e9c6:	482f      	ldr	r0, [pc, #188]	@ (1000ea84 <attempt_replace+0xd0>)
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e9c8:	4e2f      	ldr	r6, [pc, #188]	@ (1000ea88 <attempt_replace+0xd4>)
    uint32_t component_id_out = 0;
1000e9ca:	e9cd 4401 	strd	r4, r4, [sp, #4]
    recv_input("Component ID In: ", buf);
1000e9ce:	f000 f933 	bl	1000ec38 <recv_input>
    sscanf(buf, "%x", &component_id_in);
1000e9d2:	aa01      	add	r2, sp, #4
1000e9d4:	492d      	ldr	r1, [pc, #180]	@ (1000ea8c <attempt_replace+0xd8>)
1000e9d6:	a803      	add	r0, sp, #12
1000e9d8:	f005 f8f6 	bl	10013bc8 <sscanf>
    recv_input("Component ID Out: ", buf);
1000e9dc:	482c      	ldr	r0, [pc, #176]	@ (1000ea90 <attempt_replace+0xdc>)
1000e9de:	a903      	add	r1, sp, #12
1000e9e0:	f000 f92a 	bl	1000ec38 <recv_input>
    sscanf(buf, "%x", &component_id_out);
1000e9e4:	4929      	ldr	r1, [pc, #164]	@ (1000ea8c <attempt_replace+0xd8>)
1000e9e6:	aa02      	add	r2, sp, #8
1000e9e8:	a803      	add	r0, sp, #12
1000e9ea:	f005 f8ed 	bl	10013bc8 <sscanf>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e9ee:	6871      	ldr	r1, [r6, #4]
1000e9f0:	2900      	cmp	r1, #0
1000e9f2:	d035      	beq.n	1000ea60 <attempt_replace+0xac>
        if (flash_status.component_ids[i] == component_id_out) {
1000e9f4:	9d02      	ldr	r5, [sp, #8]
1000e9f6:	1d33      	adds	r3, r6, #4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e9f8:	4620      	mov	r0, r4
1000e9fa:	e002      	b.n	1000ea02 <attempt_replace+0x4e>
1000e9fc:	3001      	adds	r0, #1
1000e9fe:	4288      	cmp	r0, r1
1000ea00:	d02e      	beq.n	1000ea60 <attempt_replace+0xac>
        if (flash_status.component_ids[i] == component_id_out) {
1000ea02:	f853 2f04 	ldr.w	r2, [r3, #4]!
1000ea06:	42aa      	cmp	r2, r5
1000ea08:	d1f8      	bne.n	1000e9fc <attempt_replace+0x48>
            flash_status.component_ids[i] = component_id_in;
1000ea0a:	1c83      	adds	r3, r0, #2
1000ea0c:	9a01      	ldr	r2, [sp, #4]
            flash_simple_erase_page(FLASH_ADDR);
1000ea0e:	4821      	ldr	r0, [pc, #132]	@ (1000ea94 <attempt_replace+0xe0>)
            flash_status.component_ids[i] = component_id_in;
1000ea10:	f846 2023 	str.w	r2, [r6, r3, lsl #2]
            flash_simple_erase_page(FLASH_ADDR);
1000ea14:	f000 f9de 	bl	1000edd4 <flash_simple_erase_page>
            flash_simple_write(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000ea18:	491b      	ldr	r1, [pc, #108]	@ (1000ea88 <attempt_replace+0xd4>)
1000ea1a:	481e      	ldr	r0, [pc, #120]	@ (1000ea94 <attempt_replace+0xe0>)
            print_debug("Replaced 0x%08x with 0x%08x\n", component_id_out,
1000ea1c:	4c1e      	ldr	r4, [pc, #120]	@ (1000ea98 <attempt_replace+0xe4>)
            flash_simple_write(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000ea1e:	2288      	movs	r2, #136	@ 0x88
1000ea20:	f000 f9dc 	bl	1000eddc <flash_simple_write>
            print_debug("Replaced 0x%08x with 0x%08x\n", component_id_out,
1000ea24:	481d      	ldr	r0, [pc, #116]	@ (1000ea9c <attempt_replace+0xe8>)
1000ea26:	f007 fbfb 	bl	10016220 <printf>
1000ea2a:	e9dd 2101 	ldrd	r2, r1, [sp, #4]
1000ea2e:	481c      	ldr	r0, [pc, #112]	@ (1000eaa0 <attempt_replace+0xec>)
1000ea30:	f007 fbf6 	bl	10016220 <printf>
1000ea34:	481b      	ldr	r0, [pc, #108]	@ (1000eaa4 <attempt_replace+0xf0>)
1000ea36:	f007 fbf3 	bl	10016220 <printf>
1000ea3a:	6823      	ldr	r3, [r4, #0]
1000ea3c:	6898      	ldr	r0, [r3, #8]
1000ea3e:	f007 fddf 	bl	10016600 <fflush>
            print_success("Replace\n");
1000ea42:	4819      	ldr	r0, [pc, #100]	@ (1000eaa8 <attempt_replace+0xf4>)
1000ea44:	f007 fbec 	bl	10016220 <printf>
1000ea48:	4818      	ldr	r0, [pc, #96]	@ (1000eaac <attempt_replace+0xf8>)
1000ea4a:	f007 fc51 	bl	100162f0 <puts>
1000ea4e:	4815      	ldr	r0, [pc, #84]	@ (1000eaa4 <attempt_replace+0xf0>)
1000ea50:	f007 fbe6 	bl	10016220 <printf>
1000ea54:	6823      	ldr	r3, [r4, #0]
1000ea56:	6898      	ldr	r0, [r3, #8]
1000ea58:	f007 fdd2 	bl	10016600 <fflush>
}
1000ea5c:	b010      	add	sp, #64	@ 0x40
1000ea5e:	bd70      	pop	{r4, r5, r6, pc}
    print_error("Component 0x%08x is not provisioned for the system\r\n",
1000ea60:	4813      	ldr	r0, [pc, #76]	@ (1000eab0 <attempt_replace+0xfc>)
1000ea62:	f007 fbdd 	bl	10016220 <printf>
1000ea66:	9902      	ldr	r1, [sp, #8]
1000ea68:	4812      	ldr	r0, [pc, #72]	@ (1000eab4 <attempt_replace+0x100>)
1000ea6a:	f007 fbd9 	bl	10016220 <printf>
1000ea6e:	480d      	ldr	r0, [pc, #52]	@ (1000eaa4 <attempt_replace+0xf0>)
1000ea70:	f007 fbd6 	bl	10016220 <printf>
1000ea74:	4b08      	ldr	r3, [pc, #32]	@ (1000ea98 <attempt_replace+0xe4>)
1000ea76:	681b      	ldr	r3, [r3, #0]
1000ea78:	6898      	ldr	r0, [r3, #8]
1000ea7a:	f007 fdc1 	bl	10016600 <fflush>
}
1000ea7e:	b010      	add	sp, #64	@ 0x40
1000ea80:	bd70      	pop	{r4, r5, r6, pc}
1000ea82:	bf00      	nop
1000ea84:	100213d4 	.word	0x100213d4
1000ea88:	20000c20 	.word	0x20000c20
1000ea8c:	10021280 	.word	0x10021280
1000ea90:	100213e8 	.word	0x100213e8
1000ea94:	1007c000 	.word	0x1007c000
1000ea98:	20000590 	.word	0x20000590
1000ea9c:	1002116c 	.word	0x1002116c
1000eaa0:	100213fc 	.word	0x100213fc
1000eaa4:	10021194 	.word	0x10021194
1000eaa8:	100211bc 	.word	0x100211bc
1000eaac:	1002141c 	.word	0x1002141c
1000eab0:	100211d0 	.word	0x100211d0
1000eab4:	10021424 	.word	0x10021424

1000eab8 <main>:

/*********************************** MAIN *************************************/

int main() {
1000eab8:	b580      	push	{r7, lr}
1000eaba:	b09a      	sub	sp, #104	@ 0x68
    // Initialize board
    init();
1000eabc:	f7ff fbec 	bl	1000e298 <init>

    // Print the component IDs to be helpful
    // Your design does not need to do this
    print_info("Application Processor Started\n");
1000eac0:	482e      	ldr	r0, [pc, #184]	@ (1000eb7c <main+0xc4>)
1000eac2:	f8df 90bc 	ldr.w	r9, [pc, #188]	@ 1000eb80 <main+0xc8>

    // Handle commands forever
    char buf[100];
    while (1) {
        recv_input("Enter Command: ", buf);
1000eac6:	4d2f      	ldr	r5, [pc, #188]	@ (1000eb84 <main+0xcc>)

        // Execute requested command
        if (!strcmp(buf, "list")) {
1000eac8:	4c2f      	ldr	r4, [pc, #188]	@ (1000eb88 <main+0xd0>)
            scan_components();
        } else if (!strcmp(buf, "boot")) {
1000eaca:	4e30      	ldr	r6, [pc, #192]	@ (1000eb8c <main+0xd4>)
            attempt_boot();
        } else if (!strcmp(buf, "replace")) {
1000eacc:	4f30      	ldr	r7, [pc, #192]	@ (1000eb90 <main+0xd8>)
            attempt_replace();
        } else if (!strcmp(buf, "attest")) {
1000eace:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 1000eb94 <main+0xdc>
        } else if (!strcmp(buf, "replace")) {
1000ead2:	f8df a0c4 	ldr.w	sl, [pc, #196]	@ 1000eb98 <main+0xe0>
    print_info("Application Processor Started\n");
1000ead6:	f007 fba3 	bl	10016220 <printf>
1000eada:	4830      	ldr	r0, [pc, #192]	@ (1000eb9c <main+0xe4>)
1000eadc:	f007 fc08 	bl	100162f0 <puts>
1000eae0:	482f      	ldr	r0, [pc, #188]	@ (1000eba0 <main+0xe8>)
1000eae2:	f007 fb9d 	bl	10016220 <printf>
1000eae6:	f8d9 3000 	ldr.w	r3, [r9]
1000eaea:	6898      	ldr	r0, [r3, #8]
1000eaec:	f007 fd88 	bl	10016600 <fflush>
        recv_input("Enter Command: ", buf);
1000eaf0:	a901      	add	r1, sp, #4
1000eaf2:	4628      	mov	r0, r5
1000eaf4:	f000 f8a0 	bl	1000ec38 <recv_input>
        if (!strcmp(buf, "list")) {
1000eaf8:	9b01      	ldr	r3, [sp, #4]
1000eafa:	42a3      	cmp	r3, r4
1000eafc:	d018      	beq.n	1000eb30 <main+0x78>
        } else if (!strcmp(buf, "boot")) {
1000eafe:	9b01      	ldr	r3, [sp, #4]
1000eb00:	42b3      	cmp	r3, r6
1000eb02:	d01c      	beq.n	1000eb3e <main+0x86>
        } else if (!strcmp(buf, "replace")) {
1000eb04:	9b01      	ldr	r3, [sp, #4]
1000eb06:	42bb      	cmp	r3, r7
1000eb08:	d020      	beq.n	1000eb4c <main+0x94>
        } else if (!strcmp(buf, "attest")) {
1000eb0a:	9b01      	ldr	r3, [sp, #4]
1000eb0c:	4543      	cmp	r3, r8
1000eb0e:	d023      	beq.n	1000eb58 <main+0xa0>
            attempt_attest();
        } else {
            print_error("Unrecognized command '%s'\n", buf);
1000eb10:	4824      	ldr	r0, [pc, #144]	@ (1000eba4 <main+0xec>)
1000eb12:	f007 fb85 	bl	10016220 <printf>
1000eb16:	a901      	add	r1, sp, #4
1000eb18:	4823      	ldr	r0, [pc, #140]	@ (1000eba8 <main+0xf0>)
1000eb1a:	f007 fb81 	bl	10016220 <printf>
1000eb1e:	4820      	ldr	r0, [pc, #128]	@ (1000eba0 <main+0xe8>)
1000eb20:	f007 fb7e 	bl	10016220 <printf>
1000eb24:	f8d9 3000 	ldr.w	r3, [r9]
1000eb28:	6898      	ldr	r0, [r3, #8]
1000eb2a:	f007 fd69 	bl	10016600 <fflush>
1000eb2e:	e7df      	b.n	1000eaf0 <main+0x38>
        if (!strcmp(buf, "list")) {
1000eb30:	f89d 3008 	ldrb.w	r3, [sp, #8]
1000eb34:	2b00      	cmp	r3, #0
1000eb36:	d1e2      	bne.n	1000eafe <main+0x46>
            scan_components();
1000eb38:	f7ff fbf4 	bl	1000e324 <scan_components>
1000eb3c:	e7d8      	b.n	1000eaf0 <main+0x38>
        } else if (!strcmp(buf, "boot")) {
1000eb3e:	f89d 3008 	ldrb.w	r3, [sp, #8]
1000eb42:	2b00      	cmp	r3, #0
1000eb44:	d1de      	bne.n	1000eb04 <main+0x4c>
            attempt_boot();
1000eb46:	f7ff fecb 	bl	1000e8e0 <attempt_boot>
1000eb4a:	e7d1      	b.n	1000eaf0 <main+0x38>
        } else if (!strcmp(buf, "replace")) {
1000eb4c:	9b02      	ldr	r3, [sp, #8]
1000eb4e:	4553      	cmp	r3, sl
1000eb50:	d1db      	bne.n	1000eb0a <main+0x52>
            attempt_replace();
1000eb52:	f7ff ff2f 	bl	1000e9b4 <attempt_replace>
1000eb56:	e7cb      	b.n	1000eaf0 <main+0x38>
        } else if (!strcmp(buf, "attest")) {
1000eb58:	f8bd 2008 	ldrh.w	r2, [sp, #8]
1000eb5c:	f247 4373 	movw	r3, #29811	@ 0x7473
1000eb60:	429a      	cmp	r2, r3
1000eb62:	d1d5      	bne.n	1000eb10 <main+0x58>
1000eb64:	f89d 300a 	ldrb.w	r3, [sp, #10]
1000eb68:	2b00      	cmp	r3, #0
1000eb6a:	d1d1      	bne.n	1000eb10 <main+0x58>
    if (validate_pin()) {
1000eb6c:	f7ff fe34 	bl	1000e7d8 <validate_pin>
1000eb70:	2800      	cmp	r0, #0
1000eb72:	d1bd      	bne.n	1000eaf0 <main+0x38>
1000eb74:	f7ff fd6c 	bl	1000e650 <attempt_attest.part.0>
1000eb78:	e7ba      	b.n	1000eaf0 <main+0x38>
1000eb7a:	bf00      	nop
1000eb7c:	10021198 	.word	0x10021198
1000eb80:	20000590 	.word	0x20000590
1000eb84:	1002147c 	.word	0x1002147c
1000eb88:	7473696c 	.word	0x7473696c
1000eb8c:	746f6f62 	.word	0x746f6f62
1000eb90:	6c706572 	.word	0x6c706572
1000eb94:	65747461 	.word	0x65747461
1000eb98:	00656361 	.word	0x00656361
1000eb9c:	1002145c 	.word	0x1002145c
1000eba0:	10021194 	.word	0x10021194
1000eba4:	100211d0 	.word	0x100211d0
1000eba8:	100214ac 	.word	0x100214ac

1000ebac <board_link_init>:
 * @brief Initialize the board link connection
 * 
 * Initiailize the underlying i2c simple interface
*/
void board_link_init(void) {
    i2c_simple_controller_init();
1000ebac:	f000 b922 	b.w	1000edf4 <i2c_simple_controller_init>

1000ebb0 <component_id_to_i2c_addr>:
 * 
 * @return i2c_addr_t, i2c address
*/
i2c_addr_t component_id_to_i2c_addr(uint32_t component_id) {
    return (uint8_t) component_id & COMPONENT_ADDR_MASK;
}
1000ebb0:	b2c0      	uxtb	r0, r0
1000ebb2:	4770      	bx	lr

1000ebb4 <send_packet>:
 * 
 * @return status: SUCCESS_RETURN if success, ERROR_RETURN if error
 *
 * Function sends an arbitrary packet over i2c to a specified component
*/
int send_packet(i2c_addr_t address, uint8_t len, uint8_t* packet) {
1000ebb4:	b570      	push	{r4, r5, r6, lr}
1000ebb6:	4604      	mov	r4, r0
1000ebb8:	460d      	mov	r5, r1
1000ebba:	4616      	mov	r6, r2

    int result;
    result = i2c_simple_write_receive_len(address, len);
1000ebbc:	f000 f99e 	bl	1000eefc <i2c_simple_write_receive_len>
    if (result < SUCCESS_RETURN) {
1000ebc0:	2800      	cmp	r0, #0
1000ebc2:	db0d      	blt.n	1000ebe0 <send_packet+0x2c>
        return ERROR_RETURN;
    }
    result = i2c_simple_write_data_generic(address, RECEIVE, len, packet);
1000ebc4:	4633      	mov	r3, r6
1000ebc6:	462a      	mov	r2, r5
1000ebc8:	2100      	movs	r1, #0
1000ebca:	4620      	mov	r0, r4
1000ebcc:	f000 f9e4 	bl	1000ef98 <i2c_simple_write_data_generic>
    if (result < SUCCESS_RETURN) {
1000ebd0:	2800      	cmp	r0, #0
1000ebd2:	db05      	blt.n	1000ebe0 <send_packet+0x2c>
        return ERROR_RETURN;
    }
    result = i2c_simple_write_receive_done(address, true);
1000ebd4:	2101      	movs	r1, #1
1000ebd6:	4620      	mov	r0, r4
1000ebd8:	f000 f974 	bl	1000eec4 <i2c_simple_write_receive_done>
    if (result < SUCCESS_RETURN) {
1000ebdc:	17c0      	asrs	r0, r0, #31
        return ERROR_RETURN;
    }

    return SUCCESS_RETURN;
}
1000ebde:	bd70      	pop	{r4, r5, r6, pc}
        return ERROR_RETURN;
1000ebe0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000ebe4:	bd70      	pop	{r4, r5, r6, pc}
1000ebe6:	bf00      	nop

1000ebe8 <poll_and_receive_packet>:
 * @param address: i2c_addr_t, i2c address
 * @param packet: uint8_t*, pointer to a buffer where a packet will be received 
 * 
 * @return int: size of data received, ERROR_RETURN if error
*/
int poll_and_receive_packet(i2c_addr_t address, uint8_t* packet) {
1000ebe8:	b570      	push	{r4, r5, r6, lr}
1000ebea:	4604      	mov	r4, r0
1000ebec:	460e      	mov	r6, r1

    int result = SUCCESS_RETURN;
1000ebee:	e002      	b.n	1000ebf6 <poll_and_receive_packet+0xe>
    while (true) {
        result = i2c_simple_read_transmit_done(address);
        if (result < SUCCESS_RETURN) {
            return ERROR_RETURN;
        }
        else if (result == SUCCESS_RETURN) {
1000ebf0:	d00c      	beq.n	1000ec0c <poll_and_receive_packet+0x24>
            break;
        }
        MXC_Delay(50);
1000ebf2:	f003 fa07 	bl	10012004 <MXC_Delay>
        result = i2c_simple_read_transmit_done(address);
1000ebf6:	4620      	mov	r0, r4
1000ebf8:	f000 f920 	bl	1000ee3c <i2c_simple_read_transmit_done>
        if (result < SUCCESS_RETURN) {
1000ebfc:	2800      	cmp	r0, #0
        MXC_Delay(50);
1000ebfe:	f04f 0032 	mov.w	r0, #50	@ 0x32
        if (result < SUCCESS_RETURN) {
1000ec02:	daf5      	bge.n	1000ebf0 <poll_and_receive_packet+0x8>
            return ERROR_RETURN;
1000ec04:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
    if (result < SUCCESS_RETURN) {
        return ERROR_RETURN;
    }

    return len;
}
1000ec08:	4628      	mov	r0, r5
1000ec0a:	bd70      	pop	{r4, r5, r6, pc}
    int len = i2c_simple_read_transmit_len(address);
1000ec0c:	4620      	mov	r0, r4
1000ec0e:	f000 f937 	bl	1000ee80 <i2c_simple_read_transmit_len>
    if (len < SUCCESS_RETURN) {
1000ec12:	1e05      	subs	r5, r0, #0
1000ec14:	dbf6      	blt.n	1000ec04 <poll_and_receive_packet+0x1c>
    result = i2c_simple_read_data_generic(address, TRANSMIT, (uint8_t)len, packet);
1000ec16:	4633      	mov	r3, r6
1000ec18:	b2ea      	uxtb	r2, r5
1000ec1a:	2103      	movs	r1, #3
1000ec1c:	4620      	mov	r0, r4
1000ec1e:	f000 f9a3 	bl	1000ef68 <i2c_simple_read_data_generic>
    if (result < SUCCESS_RETURN) {
1000ec22:	2800      	cmp	r0, #0
1000ec24:	dbee      	blt.n	1000ec04 <poll_and_receive_packet+0x1c>
    result = i2c_simple_write_transmit_done(address, true);
1000ec26:	2101      	movs	r1, #1
1000ec28:	4620      	mov	r0, r4
1000ec2a:	f000 f981 	bl	1000ef30 <i2c_simple_write_transmit_done>
    if (result < SUCCESS_RETURN) {
1000ec2e:	2800      	cmp	r0, #0
1000ec30:	dbe8      	blt.n	1000ec04 <poll_and_receive_packet+0x1c>
}
1000ec32:	4628      	mov	r0, r5
1000ec34:	bd70      	pop	{r4, r5, r6, pc}
1000ec36:	bf00      	nop

1000ec38 <recv_input>:
 */

#include "host_messaging.h"

// Print a message through USB UART and then receive a line over USB UART
void recv_input(const char *msg, char *buf) {
1000ec38:	b570      	push	{r4, r5, r6, lr}
1000ec3a:	4605      	mov	r5, r0
    print_debug(msg);
1000ec3c:	4810      	ldr	r0, [pc, #64]	@ (1000ec80 <recv_input+0x48>)
1000ec3e:	4e11      	ldr	r6, [pc, #68]	@ (1000ec84 <recv_input+0x4c>)
void recv_input(const char *msg, char *buf) {
1000ec40:	460c      	mov	r4, r1
    print_debug(msg);
1000ec42:	f007 faed 	bl	10016220 <printf>
1000ec46:	4628      	mov	r0, r5
1000ec48:	f007 faea 	bl	10016220 <printf>
1000ec4c:	480e      	ldr	r0, [pc, #56]	@ (1000ec88 <recv_input+0x50>)
1000ec4e:	f007 fae7 	bl	10016220 <printf>
1000ec52:	6833      	ldr	r3, [r6, #0]
1000ec54:	6898      	ldr	r0, [r3, #8]
1000ec56:	f007 fcd3 	bl	10016600 <fflush>
    fflush(0);
1000ec5a:	2000      	movs	r0, #0
1000ec5c:	f007 fcd0 	bl	10016600 <fflush>
    print_ack();
1000ec60:	480a      	ldr	r0, [pc, #40]	@ (1000ec8c <recv_input+0x54>)
1000ec62:	f007 fadd 	bl	10016220 <printf>
1000ec66:	6833      	ldr	r3, [r6, #0]
1000ec68:	6898      	ldr	r0, [r3, #8]
1000ec6a:	f007 fcc9 	bl	10016600 <fflush>
    gets(buf);
1000ec6e:	4620      	mov	r0, r4
1000ec70:	f006 fcc6 	bl	10015600 <gets>
    puts("");
}
1000ec74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    puts("");
1000ec78:	4805      	ldr	r0, [pc, #20]	@ (1000ec90 <recv_input+0x58>)
1000ec7a:	f007 bb39 	b.w	100162f0 <puts>
1000ec7e:	bf00      	nop
1000ec80:	1002116c 	.word	0x1002116c
1000ec84:	20000590 	.word	0x20000590
1000ec88:	10021194 	.word	0x10021194
1000ec8c:	100214c8 	.word	0x100214c8
1000ec90:	10021458 	.word	0x10021458

1000ec94 <print_hex>:

// Prints a buffer of bytes as a hex string
void print_hex(uint8_t *buf, size_t len) {
    for (int i = 0; i < len; i++)
1000ec94:	b181      	cbz	r1, 1000ecb8 <print_hex+0x24>
void print_hex(uint8_t *buf, size_t len) {
1000ec96:	b570      	push	{r4, r5, r6, lr}
1000ec98:	4401      	add	r1, r0
    	printf("%02x", buf[i]);
1000ec9a:	4e09      	ldr	r6, [pc, #36]	@ (1000ecc0 <print_hex+0x2c>)
1000ec9c:	1e44      	subs	r4, r0, #1
1000ec9e:	1e4d      	subs	r5, r1, #1
1000eca0:	f814 1f01 	ldrb.w	r1, [r4, #1]!
1000eca4:	4630      	mov	r0, r6
1000eca6:	f007 fabb 	bl	10016220 <printf>
    for (int i = 0; i < len; i++)
1000ecaa:	42ac      	cmp	r4, r5
1000ecac:	d1f8      	bne.n	1000eca0 <print_hex+0xc>
    printf("\n");
}
1000ecae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    printf("\n");
1000ecb2:	200a      	movs	r0, #10
1000ecb4:	f007 bac8 	b.w	10016248 <putchar>
1000ecb8:	200a      	movs	r0, #10
1000ecba:	f007 bac5 	b.w	10016248 <putchar>
1000ecbe:	bf00      	nop
1000ecc0:	100214d4 	.word	0x100214d4

1000ecc4 <encrypt_sym>:
 * @param ciphertext A pointer to a buffer of length len where the resulting
 *          ciphertext will be written to
 *
 * @return 0 on success, -1 on bad length, other non-zero for other error
 */
int encrypt_sym(uint8_t *plaintext, size_t len, uint8_t *key, uint8_t *ciphertext) {
1000ecc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1000ecc8:	460c      	mov	r4, r1
1000ecca:	b0dc      	sub	sp, #368	@ 0x170
    Aes ctx; // Context for encryption
    int result; // Library result

    // Ensure valid length
    if (len <= 0 || len % BLOCK_SIZE)
1000eccc:	b309      	cbz	r1, 1000ed12 <encrypt_sym+0x4e>
1000ecce:	461e      	mov	r6, r3
1000ecd0:	f011 030f 	ands.w	r3, r1, #15
1000ecd4:	d11d      	bne.n	1000ed12 <encrypt_sym+0x4e>
        return -1;

    // Set the key for encryption
    result = wc_AesSetKey(&ctx, key, 16, NULL, AES_ENCRYPTION);
1000ecd6:	4611      	mov	r1, r2
1000ecd8:	4605      	mov	r5, r0
1000ecda:	9300      	str	r3, [sp, #0]
1000ecdc:	2210      	movs	r2, #16
1000ecde:	a803      	add	r0, sp, #12
1000ece0:	f002 f9b8 	bl	10011054 <wc_AesSetKey>
    if (result != 0)
1000ece4:	4680      	mov	r8, r0
1000ece6:	b980      	cbnz	r0, 1000ed0a <encrypt_sym+0x46>
        return result; // Report error


    // Encrypt each block
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000ece8:	2c01      	cmp	r4, #1
1000ecea:	f104 37ff 	add.w	r7, r4, #4294967295	@ 0xffffffff
1000ecee:	d00c      	beq.n	1000ed0a <encrypt_sym+0x46>
1000ecf0:	4604      	mov	r4, r0
1000ecf2:	e001      	b.n	1000ecf8 <encrypt_sym+0x34>
1000ecf4:	42a7      	cmp	r7, r4
1000ecf6:	d908      	bls.n	1000ed0a <encrypt_sym+0x46>
        result = wc_AesEncryptDirect(&ctx, ciphertext + i, plaintext + i);
1000ecf8:	192a      	adds	r2, r5, r4
1000ecfa:	1931      	adds	r1, r6, r4
1000ecfc:	a803      	add	r0, sp, #12
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000ecfe:	3410      	adds	r4, #16
        result = wc_AesEncryptDirect(&ctx, ciphertext + i, plaintext + i);
1000ed00:	f002 f9b6 	bl	10011070 <wc_AesEncryptDirect>
        if (result != 0)
1000ed04:	2800      	cmp	r0, #0
1000ed06:	d0f5      	beq.n	1000ecf4 <encrypt_sym+0x30>
        result = wc_AesEncryptDirect(&ctx, ciphertext + i, plaintext + i);
1000ed08:	4680      	mov	r8, r0
            return result; // Report error
    }
    return 0;
}
1000ed0a:	4640      	mov	r0, r8
1000ed0c:	b05c      	add	sp, #368	@ 0x170
1000ed0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return -1;
1000ed12:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
1000ed16:	e7f8      	b.n	1000ed0a <encrypt_sym+0x46>

1000ed18 <decrypt_sym>:
 * @param plaintext A pointer to a buffer of length len where the resulting
 *          plaintext will be written to
 *
 * @return 0 on success, -1 on bad length, other non-zero for other error
 */
int decrypt_sym(uint8_t *ciphertext, size_t len, uint8_t *key, uint8_t *plaintext) {
1000ed18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1000ed1c:	b0dc      	sub	sp, #368	@ 0x170
    Aes ctx; // Context for decryption
    int result; // Library result

    // Ensure valid length
    if (len <= 0 || len % BLOCK_SIZE)
1000ed1e:	b319      	cbz	r1, 1000ed68 <decrypt_sym+0x50>
1000ed20:	461e      	mov	r6, r3
1000ed22:	f011 030f 	ands.w	r3, r1, #15
1000ed26:	460c      	mov	r4, r1
1000ed28:	d11e      	bne.n	1000ed68 <decrypt_sym+0x50>
        return -1;

    // Set the key for decryption
    result = wc_AesSetKey(&ctx, key, 16, NULL, AES_DECRYPTION);
1000ed2a:	4611      	mov	r1, r2
1000ed2c:	2201      	movs	r2, #1
1000ed2e:	9200      	str	r2, [sp, #0]
1000ed30:	4605      	mov	r5, r0
1000ed32:	2210      	movs	r2, #16
1000ed34:	a803      	add	r0, sp, #12
1000ed36:	f002 f98d 	bl	10011054 <wc_AesSetKey>
    if (result != 0)
1000ed3a:	4680      	mov	r8, r0
1000ed3c:	b980      	cbnz	r0, 1000ed60 <decrypt_sym+0x48>
        return result; // Report error

    // Decrypt each block
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000ed3e:	2c01      	cmp	r4, #1
1000ed40:	f104 37ff 	add.w	r7, r4, #4294967295	@ 0xffffffff
1000ed44:	d00c      	beq.n	1000ed60 <decrypt_sym+0x48>
1000ed46:	4604      	mov	r4, r0
1000ed48:	e001      	b.n	1000ed4e <decrypt_sym+0x36>
1000ed4a:	42a7      	cmp	r7, r4
1000ed4c:	d908      	bls.n	1000ed60 <decrypt_sym+0x48>
        result = wc_AesDecryptDirect(&ctx, plaintext + i, ciphertext + i);
1000ed4e:	192a      	adds	r2, r5, r4
1000ed50:	1931      	adds	r1, r6, r4
1000ed52:	a803      	add	r0, sp, #12
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000ed54:	3410      	adds	r4, #16
        result = wc_AesDecryptDirect(&ctx, plaintext + i, ciphertext + i);
1000ed56:	f002 f9a3 	bl	100110a0 <wc_AesDecryptDirect>
        if (result != 0)
1000ed5a:	2800      	cmp	r0, #0
1000ed5c:	d0f5      	beq.n	1000ed4a <decrypt_sym+0x32>
        result = wc_AesDecryptDirect(&ctx, plaintext + i, ciphertext + i);
1000ed5e:	4680      	mov	r8, r0
            return result; // Report error
    }
    return 0;
}
1000ed60:	4640      	mov	r0, r8
1000ed62:	b05c      	add	sp, #368	@ 0x170
1000ed64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return -1;
1000ed68:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
1000ed6c:	e7f8      	b.n	1000ed60 <decrypt_sym+0x48>
1000ed6e:	bf00      	nop

1000ed70 <hash>:
 *
 * @return 0 on success, non-zero for other error
 */
int hash(void *data, size_t len, uint8_t *hash_out) {
    // Pass values to hash
    return wc_Md5Hash((uint8_t *)data, len, hash_out);
1000ed70:	f002 b9ae 	b.w	100110d0 <wc_Md5Hash>

1000ed74 <flash_simple_irq>:
 * 
 * This ISR allows for access to the flash through simple_flash to operate
 */
void flash_simple_irq(void) {
    uint32_t temp;
    temp = MXC_FLC0->intr;
1000ed74:	4a09      	ldr	r2, [pc, #36]	@ (1000ed9c <flash_simple_irq+0x28>)
1000ed76:	6a53      	ldr	r3, [r2, #36]	@ 0x24

    if (temp & MXC_F_FLC_INTR_DONE) {
1000ed78:	07d9      	lsls	r1, r3, #31
1000ed7a:	d503      	bpl.n	1000ed84 <flash_simple_irq+0x10>
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_DONE;
1000ed7c:	6a51      	ldr	r1, [r2, #36]	@ 0x24
1000ed7e:	f021 0101 	bic.w	r1, r1, #1
1000ed82:	6251      	str	r1, [r2, #36]	@ 0x24
    }

    if (temp & MXC_F_FLC_INTR_AF) {
1000ed84:	079b      	lsls	r3, r3, #30
1000ed86:	d400      	bmi.n	1000ed8a <flash_simple_irq+0x16>
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_AF;
        printf(" -> Interrupt! (Flash access failure)\n\n");
    }
}
1000ed88:	4770      	bx	lr
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_AF;
1000ed8a:	4a04      	ldr	r2, [pc, #16]	@ (1000ed9c <flash_simple_irq+0x28>)
        printf(" -> Interrupt! (Flash access failure)\n\n");
1000ed8c:	4804      	ldr	r0, [pc, #16]	@ (1000eda0 <flash_simple_irq+0x2c>)
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_AF;
1000ed8e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
1000ed90:	f023 0302 	bic.w	r3, r3, #2
1000ed94:	6253      	str	r3, [r2, #36]	@ 0x24
        printf(" -> Interrupt! (Flash access failure)\n\n");
1000ed96:	f007 baab 	b.w	100162f0 <puts>
1000ed9a:	bf00      	nop
1000ed9c:	40029000 	.word	0x40029000
1000eda0:	100214dc 	.word	0x100214dc

1000eda4 <flash_simple_init>:
 * @brief Initialize the Simple Flash Interface
 * 
 * This function registers the interrupt for the flash system,
 * enables the interrupt, and disables ICC
*/
void flash_simple_init(void) {
1000eda4:	b508      	push	{r3, lr}
    // Setup Flash
    MXC_NVIC_SetVector(FLC0_IRQn, flash_simple_irq);
1000eda6:	4908      	ldr	r1, [pc, #32]	@ (1000edc8 <flash_simple_init+0x24>)
1000eda8:	2017      	movs	r0, #23
1000edaa:	f003 f965 	bl	10012078 <MXC_NVIC_SetVector>
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1000edae:	4b07      	ldr	r3, [pc, #28]	@ (1000edcc <flash_simple_init+0x28>)
1000edb0:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
1000edb4:	601a      	str	r2, [r3, #0]
    NVIC_EnableIRQ(FLC0_IRQn);
    MXC_FLC_EnableInt(MXC_F_FLC_INTR_DONEIE | MXC_F_FLC_INTR_AFIE);
1000edb6:	f44f 7040 	mov.w	r0, #768	@ 0x300
1000edba:	f003 faa9 	bl	10012310 <MXC_FLC_EnableInt>
    MXC_ICC_Disable(MXC_ICC0);
}
1000edbe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    MXC_ICC_Disable(MXC_ICC0);
1000edc2:	4803      	ldr	r0, [pc, #12]	@ (1000edd0 <flash_simple_init+0x2c>)
1000edc4:	f004 bb4a 	b.w	1001345c <MXC_ICC_Disable>
1000edc8:	1000ed75 	.word	0x1000ed75
1000edcc:	e000e100 	.word	0xe000e100
1000edd0:	4002a000 	.word	0x4002a000

1000edd4 <flash_simple_erase_page>:
 * Flash memory can only be erased in a large block size called a page.
 * Once erased, memory can only be written one way e.g. 1->0.
 * In order to be re-written the entire page must be erased.
*/
int flash_simple_erase_page(uint32_t address) {
    return MXC_FLC_PageErase(address);
1000edd4:	f01b bd8c 	b.w	1002a8f0 <__MXC_FLC_PageErase_veneer>

1000edd8 <flash_simple_read>:
 * 
 * This function reads data from the specified flash page into the buffer
 * with the specified amount of bytes
*/
void flash_simple_read(uint32_t address, uint32_t* buffer, uint32_t size) {
    MXC_FLC_Read(address, buffer, size);
1000edd8:	f003 ba98 	b.w	1001230c <MXC_FLC_Read>

1000eddc <flash_simple_write>:
 * This function writes data to the specified flash page from the buffer passed
 * with the specified amount of bytes. Flash memory can only be written in one
 * way e.g. 1->0. To rewrite previously written memory see the 
 * flash_simple_erase_page documentation.
*/
int flash_simple_write(uint32_t address, uint32_t* buffer, uint32_t size) {
1000eddc:	460b      	mov	r3, r1
    return MXC_FLC_Write(address, size, buffer);
1000edde:	4611      	mov	r1, r2
1000ede0:	461a      	mov	r2, r3
1000ede2:	f003 ba91 	b.w	10012308 <MXC_FLC_Write>
1000ede6:	bf00      	nop

1000ede8 <I2C_Handler>:
 * @brief Built-In I2C Interrupt Handler
 *
 * Utilize the built-in I2C interrupt handler to allow for the use
 * of MXC_I2C_Master_Transaction() function calls
 */
static void I2C_Handler(void) { MXC_I2C_AsyncHandler(I2C_INTERFACE); }
1000ede8:	4801      	ldr	r0, [pc, #4]	@ (1000edf0 <I2C_Handler+0x8>)
1000edea:	f003 bcf5 	b.w	100127d8 <MXC_I2C_AsyncHandler>
1000edee:	bf00      	nop
1000edf0:	4001e000 	.word	0x4001e000

1000edf4 <i2c_simple_controller_init>:
 * @brief Initialize the I2C Connection
 * 
 * Initialize the I2C by enabling the module, setting the correct
 * frequency, and enabling the interrupt to our I2C_Handler
*/
int i2c_simple_controller_init(void) {
1000edf4:	b510      	push	{r4, lr}
    int error;

    // Initialize the I2C Interface
    error = MXC_I2C_Init(I2C_INTERFACE, true, 0);
1000edf6:	480c      	ldr	r0, [pc, #48]	@ (1000ee28 <i2c_simple_controller_init+0x34>)
1000edf8:	2200      	movs	r2, #0
1000edfa:	2101      	movs	r1, #1
1000edfc:	f003 fc88 	bl	10012710 <MXC_I2C_Init>
    if (error != E_NO_ERROR) {
1000ee00:	4604      	mov	r4, r0
1000ee02:	b960      	cbnz	r0, 1000ee1e <i2c_simple_controller_init+0x2a>
        printf("Failed to initialize I2C.\n");
        return error;
    }
    // Set frequency to frequency macro
    MXC_I2C_SetFrequency(I2C_INTERFACE, I2C_FREQ);
1000ee04:	4909      	ldr	r1, [pc, #36]	@ (1000ee2c <i2c_simple_controller_init+0x38>)
1000ee06:	4808      	ldr	r0, [pc, #32]	@ (1000ee28 <i2c_simple_controller_init+0x34>)
1000ee08:	f003 fccc 	bl	100127a4 <MXC_I2C_SetFrequency>
    
    // Set up interrupt
    MXC_NVIC_SetVector(MXC_I2C_GET_IRQ(MXC_I2C_GET_IDX(I2C_INTERFACE)), I2C_Handler);
1000ee0c:	4908      	ldr	r1, [pc, #32]	@ (1000ee30 <i2c_simple_controller_init+0x3c>)
1000ee0e:	2024      	movs	r0, #36	@ 0x24
1000ee10:	f003 f932 	bl	10012078 <MXC_NVIC_SetVector>
1000ee14:	4b07      	ldr	r3, [pc, #28]	@ (1000ee34 <i2c_simple_controller_init+0x40>)
1000ee16:	2210      	movs	r2, #16
1000ee18:	605a      	str	r2, [r3, #4]
    NVIC_EnableIRQ(MXC_I2C_GET_IRQ(MXC_I2C_GET_IDX(I2C_INTERFACE)));

    return E_NO_ERROR;
}
1000ee1a:	4620      	mov	r0, r4
1000ee1c:	bd10      	pop	{r4, pc}
        printf("Failed to initialize I2C.\n");
1000ee1e:	4806      	ldr	r0, [pc, #24]	@ (1000ee38 <i2c_simple_controller_init+0x44>)
1000ee20:	f007 fa66 	bl	100162f0 <puts>
}
1000ee24:	4620      	mov	r0, r4
1000ee26:	bd10      	pop	{r4, pc}
1000ee28:	4001e000 	.word	0x4001e000
1000ee2c:	000186a0 	.word	0x000186a0
1000ee30:	1000ede9 	.word	0x1000ede9
1000ee34:	e000e100 	.word	0xe000e100
1000ee38:	10021504 	.word	0x10021504

1000ee3c <i2c_simple_read_transmit_done>:
 * @return int: TRANSMIT_DONE value, negative if error
 *
 * Read the TRANSMIT_DONE for an I2C peripheral
 * and return the value 
*/
int i2c_simple_read_transmit_done(i2c_addr_t addr) {
1000ee3c:	b510      	push	{r4, lr}
*/
int i2c_simple_read_status_generic(i2c_addr_t addr, ECTF_I2C_REGS reg) {
    uint8_t value = 0;

    mxc_i2c_req_t request;
    request.i2c = I2C_INTERFACE;
1000ee3e:	490f      	ldr	r1, [pc, #60]	@ (1000ee7c <i2c_simple_read_transmit_done+0x40>)
int i2c_simple_read_transmit_done(i2c_addr_t addr) {
1000ee40:	b08a      	sub	sp, #40	@ 0x28
1000ee42:	2404      	movs	r4, #4
    request.addr = addr;
1000ee44:	e9cd 1002 	strd	r1, r0, [sp, #8]
    uint8_t value = 0;
1000ee48:	2300      	movs	r3, #0
    request.tx_len = 1;
1000ee4a:	2201      	movs	r2, #1
1000ee4c:	f88d 4006 	strb.w	r4, [sp, #6]
    request.tx_buf = (uint8_t*)&reg;
    request.rx_len = 1;
    request.rx_buf = (uint8_t*)&value;
1000ee50:	f10d 0107 	add.w	r1, sp, #7
    request.tx_buf = (uint8_t*)&reg;
1000ee54:	f10d 0406 	add.w	r4, sp, #6
    request.restart = 0;
    request.callback = NULL;

    int result = MXC_I2C_MasterTransaction(&request);
1000ee58:	a802      	add	r0, sp, #8
    request.tx_buf = (uint8_t*)&reg;
1000ee5a:	e9cd 4204 	strd	r4, r2, [sp, #16]
    request.rx_buf = (uint8_t*)&value;
1000ee5e:	e9cd 1206 	strd	r1, r2, [sp, #24]
    request.callback = NULL;
1000ee62:	e9cd 3308 	strd	r3, r3, [sp, #32]
    uint8_t value = 0;
1000ee66:	f88d 3007 	strb.w	r3, [sp, #7]
    int result = MXC_I2C_MasterTransaction(&request);
1000ee6a:	f003 fcaf 	bl	100127cc <MXC_I2C_MasterTransaction>
    if (result < 0) {
1000ee6e:	2800      	cmp	r0, #0
        return result;
    }
    return value;
1000ee70:	bfa8      	it	ge
1000ee72:	f89d 0007 	ldrbge.w	r0, [sp, #7]
}
1000ee76:	b00a      	add	sp, #40	@ 0x28
1000ee78:	bd10      	pop	{r4, pc}
1000ee7a:	bf00      	nop
1000ee7c:	4001e000 	.word	0x4001e000

1000ee80 <i2c_simple_read_transmit_len>:
int i2c_simple_read_transmit_len(i2c_addr_t addr) {
1000ee80:	b510      	push	{r4, lr}
    request.i2c = I2C_INTERFACE;
1000ee82:	490f      	ldr	r1, [pc, #60]	@ (1000eec0 <i2c_simple_read_transmit_len+0x40>)
int i2c_simple_read_transmit_len(i2c_addr_t addr) {
1000ee84:	b08a      	sub	sp, #40	@ 0x28
1000ee86:	2405      	movs	r4, #5
    request.addr = addr;
1000ee88:	e9cd 1002 	strd	r1, r0, [sp, #8]
    uint8_t value = 0;
1000ee8c:	2300      	movs	r3, #0
    request.tx_len = 1;
1000ee8e:	2201      	movs	r2, #1
1000ee90:	f88d 4006 	strb.w	r4, [sp, #6]
    request.rx_buf = (uint8_t*)&value;
1000ee94:	f10d 0107 	add.w	r1, sp, #7
    request.tx_buf = (uint8_t*)&reg;
1000ee98:	f10d 0406 	add.w	r4, sp, #6
    int result = MXC_I2C_MasterTransaction(&request);
1000ee9c:	a802      	add	r0, sp, #8
    request.tx_buf = (uint8_t*)&reg;
1000ee9e:	e9cd 4204 	strd	r4, r2, [sp, #16]
    request.rx_buf = (uint8_t*)&value;
1000eea2:	e9cd 1206 	strd	r1, r2, [sp, #24]
    request.callback = NULL;
1000eea6:	e9cd 3308 	strd	r3, r3, [sp, #32]
    uint8_t value = 0;
1000eeaa:	f88d 3007 	strb.w	r3, [sp, #7]
    int result = MXC_I2C_MasterTransaction(&request);
1000eeae:	f003 fc8d 	bl	100127cc <MXC_I2C_MasterTransaction>
    if (result < 0) {
1000eeb2:	2800      	cmp	r0, #0
    return value;
1000eeb4:	bfa8      	it	ge
1000eeb6:	f89d 0007 	ldrbge.w	r0, [sp, #7]
}
1000eeba:	b00a      	add	sp, #40	@ 0x28
1000eebc:	bd10      	pop	{r4, pc}
1000eebe:	bf00      	nop
1000eec0:	4001e000 	.word	0x4001e000

1000eec4 <i2c_simple_write_receive_done>:
int i2c_simple_write_receive_done(i2c_addr_t addr, bool done) {
1000eec4:	b530      	push	{r4, r5, lr}
1000eec6:	b08b      	sub	sp, #44	@ 0x2c
1000eec8:	4605      	mov	r5, r0
    uint8_t packet[2];
    packet[0] = (uint8_t) reg;
    packet[1] = value;
    
    mxc_i2c_req_t request;
    request.i2c = I2C_INTERFACE;
1000eeca:	4a0b      	ldr	r2, [pc, #44]	@ (1000eef8 <i2c_simple_write_receive_done+0x34>)
1000eecc:	9202      	str	r2, [sp, #8]
    packet[0] = (uint8_t) reg;
1000eece:	2001      	movs	r0, #1
    request.addr = addr;
    request.tx_len = 2;
    request.tx_buf = packet;
    request.rx_len = 0;
1000eed0:	2300      	movs	r3, #0
    packet[0] = (uint8_t) reg;
1000eed2:	f88d 0004 	strb.w	r0, [sp, #4]
    request.tx_buf = packet;
1000eed6:	aa01      	add	r2, sp, #4
    request.tx_len = 2;
1000eed8:	2402      	movs	r4, #2
    request.rx_buf = 0;
    request.restart = 0;
    request.callback = NULL;

    return MXC_I2C_MasterTransaction(&request);
1000eeda:	a802      	add	r0, sp, #8
    request.tx_buf = packet;
1000eedc:	e9cd 2404 	strd	r2, r4, [sp, #16]
    request.rx_buf = 0;
1000eee0:	e9cd 3306 	strd	r3, r3, [sp, #24]
    request.callback = NULL;
1000eee4:	e9cd 3308 	strd	r3, r3, [sp, #32]
    packet[1] = value;
1000eee8:	f88d 1005 	strb.w	r1, [sp, #5]
    request.addr = addr;
1000eeec:	9503      	str	r5, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
1000eeee:	f003 fc6d 	bl	100127cc <MXC_I2C_MasterTransaction>
}
1000eef2:	b00b      	add	sp, #44	@ 0x2c
1000eef4:	bd30      	pop	{r4, r5, pc}
1000eef6:	bf00      	nop
1000eef8:	4001e000 	.word	0x4001e000

1000eefc <i2c_simple_write_receive_len>:
int i2c_simple_write_receive_len(i2c_addr_t addr, uint8_t len) {
1000eefc:	b510      	push	{r4, lr}
1000eefe:	b08a      	sub	sp, #40	@ 0x28
1000ef00:	4604      	mov	r4, r0
    request.i2c = I2C_INTERFACE;
1000ef02:	480a      	ldr	r0, [pc, #40]	@ (1000ef2c <i2c_simple_write_receive_len+0x30>)
    packet[1] = value;
1000ef04:	f88d 1005 	strb.w	r1, [sp, #5]
    request.rx_len = 0;
1000ef08:	2300      	movs	r3, #0
    packet[0] = (uint8_t) reg;
1000ef0a:	2202      	movs	r2, #2
    request.i2c = I2C_INTERFACE;
1000ef0c:	9002      	str	r0, [sp, #8]
    request.tx_buf = packet;
1000ef0e:	a901      	add	r1, sp, #4
    return MXC_I2C_MasterTransaction(&request);
1000ef10:	a802      	add	r0, sp, #8
    request.tx_buf = packet;
1000ef12:	e9cd 1204 	strd	r1, r2, [sp, #16]
    request.rx_buf = 0;
1000ef16:	e9cd 3306 	strd	r3, r3, [sp, #24]
    request.callback = NULL;
1000ef1a:	e9cd 3308 	strd	r3, r3, [sp, #32]
    packet[0] = (uint8_t) reg;
1000ef1e:	f88d 2004 	strb.w	r2, [sp, #4]
    request.addr = addr;
1000ef22:	9403      	str	r4, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
1000ef24:	f003 fc52 	bl	100127cc <MXC_I2C_MasterTransaction>
}
1000ef28:	b00a      	add	sp, #40	@ 0x28
1000ef2a:	bd10      	pop	{r4, pc}
1000ef2c:	4001e000 	.word	0x4001e000

1000ef30 <i2c_simple_write_transmit_done>:
int i2c_simple_write_transmit_done(i2c_addr_t addr, bool done) {
1000ef30:	b530      	push	{r4, r5, lr}
1000ef32:	b08b      	sub	sp, #44	@ 0x2c
1000ef34:	4605      	mov	r5, r0
    request.i2c = I2C_INTERFACE;
1000ef36:	4a0b      	ldr	r2, [pc, #44]	@ (1000ef64 <i2c_simple_write_transmit_done+0x34>)
1000ef38:	9202      	str	r2, [sp, #8]
    packet[0] = (uint8_t) reg;
1000ef3a:	2004      	movs	r0, #4
    request.rx_len = 0;
1000ef3c:	2300      	movs	r3, #0
    request.tx_buf = packet;
1000ef3e:	eb0d 0200 	add.w	r2, sp, r0
    packet[0] = (uint8_t) reg;
1000ef42:	f88d 0004 	strb.w	r0, [sp, #4]
    request.tx_len = 2;
1000ef46:	2402      	movs	r4, #2
    return MXC_I2C_MasterTransaction(&request);
1000ef48:	a802      	add	r0, sp, #8
    request.tx_buf = packet;
1000ef4a:	e9cd 2404 	strd	r2, r4, [sp, #16]
    request.rx_buf = 0;
1000ef4e:	e9cd 3306 	strd	r3, r3, [sp, #24]
    request.callback = NULL;
1000ef52:	e9cd 3308 	strd	r3, r3, [sp, #32]
    packet[1] = value;
1000ef56:	f88d 1005 	strb.w	r1, [sp, #5]
    request.addr = addr;
1000ef5a:	9503      	str	r5, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
1000ef5c:	f003 fc36 	bl	100127cc <MXC_I2C_MasterTransaction>
}
1000ef60:	b00b      	add	sp, #44	@ 0x2c
1000ef62:	bd30      	pop	{r4, r5, pc}
1000ef64:	4001e000 	.word	0x4001e000

1000ef68 <i2c_simple_read_data_generic>:
{
1000ef68:	b530      	push	{r4, r5, lr}
1000ef6a:	b08b      	sub	sp, #44	@ 0x2c
    request.i2c = I2C_INTERFACE;
1000ef6c:	4d09      	ldr	r5, [pc, #36]	@ (1000ef94 <i2c_simple_read_data_generic+0x2c>)
{
1000ef6e:	f88d 1007 	strb.w	r1, [sp, #7]
    request.addr = addr;
1000ef72:	9003      	str	r0, [sp, #12]
    request.tx_buf = (uint8_t*)&reg;
1000ef74:	f10d 0107 	add.w	r1, sp, #7
    request.tx_len = 1;
1000ef78:	2001      	movs	r0, #1
    request.tx_buf = (uint8_t*)&reg;
1000ef7a:	e9cd 1004 	strd	r1, r0, [sp, #16]
    request.restart = 0;
1000ef7e:	2400      	movs	r4, #0
    return MXC_I2C_MasterTransaction(&request);
1000ef80:	a802      	add	r0, sp, #8
    request.rx_buf = buf;
1000ef82:	e9cd 3206 	strd	r3, r2, [sp, #24]
    request.callback = NULL;
1000ef86:	e9cd 4408 	strd	r4, r4, [sp, #32]
    request.i2c = I2C_INTERFACE;
1000ef8a:	9502      	str	r5, [sp, #8]
    return MXC_I2C_MasterTransaction(&request);
1000ef8c:	f003 fc1e 	bl	100127cc <MXC_I2C_MasterTransaction>
}
1000ef90:	b00b      	add	sp, #44	@ 0x2c
1000ef92:	bd30      	pop	{r4, r5, pc}
1000ef94:	4001e000 	.word	0x4001e000

1000ef98 <i2c_simple_write_data_generic>:
int i2c_simple_write_data_generic(i2c_addr_t addr, ECTF_I2C_REGS reg, uint8_t len, uint8_t* buf) {
1000ef98:	b570      	push	{r4, r5, r6, lr}
1000ef9a:	b0ca      	sub	sp, #296	@ 0x128
1000ef9c:	468c      	mov	ip, r1
1000ef9e:	4605      	mov	r5, r0
    memcpy(&packet[1], buf, len);
1000efa0:	4619      	mov	r1, r3
1000efa2:	f10d 0025 	add.w	r0, sp, #37	@ 0x25
int i2c_simple_write_data_generic(i2c_addr_t addr, ECTF_I2C_REGS reg, uint8_t len, uint8_t* buf) {
1000efa6:	4614      	mov	r4, r2
    packet[0] = reg;
1000efa8:	f88d c024 	strb.w	ip, [sp, #36]	@ 0x24
    memcpy(&packet[1], buf, len);
1000efac:	f007 fc30 	bl	10016810 <memcpy>
    request.i2c = I2C_INTERFACE;
1000efb0:	4b08      	ldr	r3, [pc, #32]	@ (1000efd4 <i2c_simple_write_data_generic+0x3c>)
1000efb2:	9301      	str	r3, [sp, #4]
    packet[0] = reg;
1000efb4:	ae09      	add	r6, sp, #36	@ 0x24
    request.rx_len = 0;
1000efb6:	2300      	movs	r3, #0
    request.tx_len = len+1;
1000efb8:	3401      	adds	r4, #1
    return MXC_I2C_MasterTransaction(&request);
1000efba:	a801      	add	r0, sp, #4
    request.rx_buf = 0;
1000efbc:	e9cd 3305 	strd	r3, r3, [sp, #20]
    request.callback = NULL;
1000efc0:	e9cd 3307 	strd	r3, r3, [sp, #28]
    request.addr = addr;
1000efc4:	9502      	str	r5, [sp, #8]
    request.tx_len = len+1;
1000efc6:	9404      	str	r4, [sp, #16]
    request.tx_buf = packet;
1000efc8:	9603      	str	r6, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
1000efca:	f003 fbff 	bl	100127cc <MXC_I2C_MasterTransaction>
}
1000efce:	b04a      	add	sp, #296	@ 0x128
1000efd0:	bd70      	pop	{r4, r5, r6, pc}
1000efd2:	bf00      	nop
1000efd4:	4001e000 	.word	0x4001e000

1000efd8 <AesEncrypt_C>:
 * @param [out] outBlock  Encrypted block.
 * @param [in]  r         Rounds divided by 2.
 */
static void AesEncrypt_C(Aes* aes, const byte* inBlock, byte* outBlock,
        word32 r)
{
1000efd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000efdc:	b087      	sub	sp, #28
1000efde:	680d      	ldr	r5, [r1, #0]
1000efe0:	684f      	ldr	r7, [r1, #4]
1000efe2:	688e      	ldr	r6, [r1, #8]
1000efe4:	68cc      	ldr	r4, [r1, #12]
1000efe6:	e9cd 3200 	strd	r3, r2, [sp]
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    /* AddRoundKey */
    s0 ^= rk[0];
1000efea:	6803      	ldr	r3, [r0, #0]
1000efec:	ba2d      	rev	r5, r5
1000efee:	405d      	eors	r5, r3
    s1 ^= rk[1];
1000eff0:	6843      	ldr	r3, [r0, #4]
1000eff2:	ba3f      	rev	r7, r7
1000eff4:	405f      	eors	r7, r3
    s2 ^= rk[2];
1000eff6:	6883      	ldr	r3, [r0, #8]
1000eff8:	ba36      	rev	r6, r6
1000effa:	405e      	eors	r6, r3
    s3 ^= rk[3];
1000effc:	68c3      	ldr	r3, [r0, #12]
    s0 ^= rk[(o)+0]; s1 ^= rk[(o)+1]; s2 ^= rk[(o)+2]; s3 ^= rk[(o)+3];
#endif

#ifndef WOLFSSL_AES_NO_UNROLL
/* Unroll the loop. */
                       ENC_ROUND_T_S( 0);
1000effe:	b2f9      	uxtb	r1, r7
1000f000:	b2f2      	uxtb	r2, r6
1000f002:	ba24      	rev	r4, r4
    s3 ^= rk[3];
1000f004:	405c      	eors	r4, r3
                       ENC_ROUND_T_S( 0);
1000f006:	f501 7140 	add.w	r1, r1, #768	@ 0x300
1000f00a:	4bea      	ldr	r3, [pc, #936]	@ (1000f3b4 <AesEncrypt_C+0x3dc>)
1000f00c:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f010:	fa5f fe84 	uxtb.w	lr, r4
1000f014:	f853 8021 	ldr.w	r8, [r3, r1, lsl #2]
1000f018:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f01c:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f020:	0e2a      	lsrs	r2, r5, #24
1000f022:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000f026:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f02a:	fa5f fc85 	uxtb.w	ip, r5
1000f02e:	ea82 020e 	eor.w	r2, r2, lr
1000f032:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
1000f036:	ea4f 6e17 	mov.w	lr, r7, lsr #24
1000f03a:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f03e:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000f042:	ea8e 0e0c 	eor.w	lr, lr, ip
1000f046:	ea4f 6c16 	mov.w	ip, r6, lsr #24
1000f04a:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f04e:	ea8c 0c08 	eor.w	ip, ip, r8
1000f052:	ea4f 6814 	mov.w	r8, r4, lsr #24
1000f056:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f05a:	ea88 0101 	eor.w	r1, r8, r1
1000f05e:	f3c7 4807 	ubfx	r8, r7, #16, #8
1000f062:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f066:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f06a:	9102      	str	r1, [sp, #8]
1000f06c:	f853 b027 	ldr.w	fp, [r3, r7, lsl #2]
1000f070:	6901      	ldr	r1, [r0, #16]
1000f072:	f3c6 4707 	ubfx	r7, r6, #16, #8
1000f076:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f07a:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f07e:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000f082:	f853 9026 	ldr.w	r9, [r3, r6, lsl #2]
1000f086:	f853 a028 	ldr.w	sl, [r3, r8, lsl #2]
1000f08a:	f3c4 4607 	ubfx	r6, r4, #16, #8
1000f08e:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f092:	f507 7780 	add.w	r7, r7, #256	@ 0x100
1000f096:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f09a:	404a      	eors	r2, r1
1000f09c:	6941      	ldr	r1, [r0, #20]
1000f09e:	f853 8027 	ldr.w	r8, [r3, r7, lsl #2]
1000f0a2:	f853 7024 	ldr.w	r7, [r3, r4, lsl #2]
1000f0a6:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f0aa:	f3c5 4407 	ubfx	r4, r5, #16, #8
1000f0ae:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f0b2:	ea8e 0e01 	eor.w	lr, lr, r1
1000f0b6:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000f0ba:	6981      	ldr	r1, [r0, #24]
1000f0bc:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f0c0:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f0c4:	ea8c 0c01 	eor.w	ip, ip, r1
1000f0c8:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f0cc:	ea8c 0c06 	eor.w	ip, ip, r6
1000f0d0:	ea8c 0c05 	eor.w	ip, ip, r5
1000f0d4:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f0d8:	69c5      	ldr	r5, [r0, #28]
1000f0da:	9902      	ldr	r1, [sp, #8]
1000f0dc:	4069      	eors	r1, r5
1000f0de:	4061      	eors	r1, r4
1000f0e0:	ea81 010b 	eor.w	r1, r1, fp
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f0e4:	b2cc      	uxtb	r4, r1
                       ENC_ROUND_T_S( 0);
1000f0e6:	ea8e 0e08 	eor.w	lr, lr, r8
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f0ea:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                       ENC_ROUND_T_S( 0);
1000f0ee:	ea8e 0e07 	eor.w	lr, lr, r7
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f0f2:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
1000f0f6:	f3ce 4407 	ubfx	r4, lr, #16, #8
1000f0fa:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                       ENC_ROUND_T_S( 0);
1000f0fe:	ea82 020a 	eor.w	r2, r2, sl
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f102:	f853 7024 	ldr.w	r7, [r3, r4, lsl #2]
1000f106:	fa5f f48e 	uxtb.w	r4, lr
1000f10a:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                       ENC_ROUND_T_S( 0);
1000f10e:	ea82 0209 	eor.w	r2, r2, r9
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f112:	9403      	str	r4, [sp, #12]
1000f114:	fa5f f48c 	uxtb.w	r4, ip
1000f118:	f504 7940 	add.w	r9, r4, #768	@ 0x300
1000f11c:	0e14      	lsrs	r4, r2, #24
1000f11e:	b2d6      	uxtb	r6, r2
1000f120:	f3c2 4b07 	ubfx	fp, r2, #16, #8
1000f124:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f128:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f12c:	f8cd 9014 	str.w	r9, [sp, #20]
1000f130:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f134:	9204      	str	r2, [sp, #16]
1000f136:	f3cc 2807 	ubfx	r8, ip, #8, #8
1000f13a:	6a02      	ldr	r2, [r0, #32]
1000f13c:	f508 7800 	add.w	r8, r8, #512	@ 0x200
1000f140:	406c      	eors	r4, r5
1000f142:	4054      	eors	r4, r2
1000f144:	ea4f 691e 	mov.w	r9, lr, lsr #24
1000f148:	407c      	eors	r4, r7
1000f14a:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f14e:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
1000f152:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f156:	9a03      	ldr	r2, [sp, #12]
1000f158:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000f15c:	4067      	eors	r7, r4
1000f15e:	f50e 7a00 	add.w	sl, lr, #512	@ 0x200
1000f162:	f853 4029 	ldr.w	r4, [r3, r9, lsl #2]
1000f166:	f8dd 9014 	ldr.w	r9, [sp, #20]
1000f16a:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
1000f16e:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
1000f172:	f3cc 4c07 	ubfx	ip, ip, #16, #8
1000f176:	f50c 7580 	add.w	r5, ip, #256	@ 0x100
1000f17a:	4074      	eors	r4, r6
1000f17c:	ea4f 6c11 	mov.w	ip, r1, lsr #24
1000f180:	f853 602e 	ldr.w	r6, [r3, lr, lsl #2]
1000f184:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1000f188:	9502      	str	r5, [sp, #8]
1000f18a:	9a02      	ldr	r2, [sp, #8]
1000f18c:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f190:	ea86 060e 	eor.w	r6, r6, lr
1000f194:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
1000f198:	f3c1 4507 	ubfx	r5, r1, #16, #8
1000f19c:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f1a0:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f1a4:	ea8c 0c0e 	eor.w	ip, ip, lr
1000f1a8:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1000f1ac:	9a04      	ldr	r2, [sp, #16]
1000f1ae:	f853 9021 	ldr.w	r9, [r3, r1, lsl #2]
1000f1b2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f1b6:	6a42      	ldr	r2, [r0, #36]	@ 0x24
1000f1b8:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000f1bc:	4054      	eors	r4, r2
1000f1be:	6a82      	ldr	r2, [r0, #40]	@ 0x28
1000f1c0:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
1000f1c4:	4056      	eors	r6, r2
1000f1c6:	f50b 7b80 	add.w	fp, fp, #256	@ 0x100
1000f1ca:	ea86 0608 	eor.w	r6, r6, r8
1000f1ce:	404e      	eors	r6, r1
1000f1d0:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
1000f1d2:	f853 502b 	ldr.w	r5, [r3, fp, lsl #2]
1000f1d6:	ea8c 0c01 	eor.w	ip, ip, r1
1000f1da:	ea8c 0c05 	eor.w	ip, ip, r5
1000f1de:	ea8c 0c0a 	eor.w	ip, ip, sl
1000f1e2:	fa5f f28c 	uxtb.w	r2, ip
1000f1e6:	ea84 040e 	eor.w	r4, r4, lr
1000f1ea:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f1ee:	ea84 0409 	eor.w	r4, r4, r9
1000f1f2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f1f6:	f3c4 4207 	ubfx	r2, r4, #16, #8
1000f1fa:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f1fe:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
1000f202:	f3c6 2207 	ubfx	r2, r6, #8, #8
1000f206:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f20a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f20e:	9502      	str	r5, [sp, #8]
1000f210:	b2fa      	uxtb	r2, r7
1000f212:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f216:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f21a:	f3c6 4207 	ubfx	r2, r6, #16, #8
1000f21e:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f222:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f226:	9203      	str	r2, [sp, #12]
1000f228:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000f22c:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f230:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1000f234:	f8cd e010 	str.w	lr, [sp, #16]
1000f238:	b2e2      	uxtb	r2, r4
1000f23a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f23e:	fa5f fe86 	uxtb.w	lr, r6
1000f242:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1000f246:	f3cc 4207 	ubfx	r2, ip, #16, #8
1000f24a:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f24e:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000f252:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
1000f256:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
1000f25a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
1000f25e:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000f262:	0e36      	lsrs	r6, r6, #24
1000f264:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f268:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f26c:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000f270:	ea86 060b 	eor.w	r6, r6, fp
1000f274:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
1000f278:	f3c7 4707 	ubfx	r7, r7, #16, #8
1000f27c:	ea8b 0b01 	eor.w	fp, fp, r1
1000f280:	f507 7180 	add.w	r1, r7, #256	@ 0x100
1000f284:	0e27      	lsrs	r7, r4, #24
1000f286:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f28a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000f28e:	ea87 0c05 	eor.w	ip, r7, r5
1000f292:	6b05      	ldr	r5, [r0, #48]	@ 0x30
1000f294:	ea8b 0b05 	eor.w	fp, fp, r5
1000f298:	9d02      	ldr	r5, [sp, #8]
1000f29a:	ea8b 070a 	eor.w	r7, fp, sl
1000f29e:	406f      	eors	r7, r5
1000f2a0:	6b45      	ldr	r5, [r0, #52]	@ 0x34
1000f2a2:	ea8c 0c05 	eor.w	ip, ip, r5
1000f2a6:	9d03      	ldr	r5, [sp, #12]
1000f2a8:	ea8c 0c05 	eor.w	ip, ip, r5
1000f2ac:	9d04      	ldr	r5, [sp, #16]
1000f2ae:	ea8c 0c05 	eor.w	ip, ip, r5
1000f2b2:	6b85      	ldr	r5, [r0, #56]	@ 0x38
1000f2b4:	406e      	eors	r6, r5
1000f2b6:	f853 502e 	ldr.w	r5, [r3, lr, lsl #2]
1000f2ba:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f2be:	ea82 0e05 	eor.w	lr, r2, r5
1000f2c2:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f2c6:	f853 5021 	ldr.w	r5, [r3, r1, lsl #2]
1000f2ca:	6bc1      	ldr	r1, [r0, #60]	@ 0x3c
1000f2cc:	f853 2024 	ldr.w	r2, [r3, r4, lsl #2]
1000f2d0:	ea8e 0e01 	eor.w	lr, lr, r1
1000f2d4:	ea8e 0e05 	eor.w	lr, lr, r5
1000f2d8:	ea8e 0e02 	eor.w	lr, lr, r2
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f2dc:	fa5f f28e 	uxtb.w	r2, lr
1000f2e0:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f2e4:	ea86 0609 	eor.w	r6, r6, r9
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f2e8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f2ec:	b2fa      	uxtb	r2, r7
1000f2ee:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f2f2:	ea86 0608 	eor.w	r6, r6, r8
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f2f6:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000f2fa:	fa5f f28c 	uxtb.w	r2, ip
1000f2fe:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f302:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f306:	b2f2      	uxtb	r2, r6
1000f308:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f30c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000f310:	0e3a      	lsrs	r2, r7, #24
1000f312:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f316:	4051      	eors	r1, r2
1000f318:	ea4f 621c 	mov.w	r2, ip, lsr #24
1000f31c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f320:	ea82 0208 	eor.w	r2, r2, r8
1000f324:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000f328:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f32c:	ea88 0505 	eor.w	r5, r8, r5
1000f330:	ea4f 681e 	mov.w	r8, lr, lsr #24
1000f334:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f338:	ea88 0404 	eor.w	r4, r8, r4
1000f33c:	f3cc 4807 	ubfx	r8, ip, #16, #8
1000f340:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000f344:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000f348:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000f34c:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
1000f350:	9402      	str	r4, [sp, #8]
1000f352:	f853 402c 	ldr.w	r4, [r3, ip, lsl #2]
1000f356:	9403      	str	r4, [sp, #12]
1000f358:	f3c6 4c07 	ubfx	ip, r6, #16, #8
1000f35c:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000f360:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f364:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f368:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
1000f36c:	6c04      	ldr	r4, [r0, #64]	@ 0x40
1000f36e:	f853 a026 	ldr.w	sl, [r3, r6, lsl #2]
1000f372:	f3ce 4c07 	ubfx	ip, lr, #16, #8
1000f376:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000f37a:	f50e 7600 	add.w	r6, lr, #512	@ 0x200
1000f37e:	4061      	eors	r1, r4
1000f380:	6c44      	ldr	r4, [r0, #68]	@ 0x44
1000f382:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000f386:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000f38a:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000f38e:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f392:	4062      	eors	r2, r4
1000f394:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f398:	6c84      	ldr	r4, [r0, #72]	@ 0x48
1000f39a:	f853 e02c 	ldr.w	lr, [r3, ip, lsl #2]
1000f39e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000f3a2:	4065      	eors	r5, r4
1000f3a4:	ea85 050e 	eor.w	r5, r5, lr
1000f3a8:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f3ac:	407d      	eors	r5, r7
1000f3ae:	9c02      	ldr	r4, [sp, #8]
1000f3b0:	6cc7      	ldr	r7, [r0, #76]	@ 0x4c
1000f3b2:	e001      	b.n	1000f3b8 <AesEncrypt_C+0x3e0>
1000f3b4:	10022620 	.word	0x10022620
1000f3b8:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f3bc:	407c      	eors	r4, r7
1000f3be:	9f03      	ldr	r7, [sp, #12]
1000f3c0:	4074      	eors	r4, r6
1000f3c2:	407c      	eors	r4, r7
1000f3c4:	b2e6      	uxtb	r6, r4
1000f3c6:	ea82 0209 	eor.w	r2, r2, r9
1000f3ca:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f3ce:	ea82 0208 	eor.w	r2, r2, r8
1000f3d2:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
1000f3d6:	f3c2 4607 	ubfx	r6, r2, #16, #8
1000f3da:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f3de:	ea81 010b 	eor.w	r1, r1, fp
1000f3e2:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1000f3e6:	f8cd c008 	str.w	ip, [sp, #8]
1000f3ea:	f3c5 4c07 	ubfx	ip, r5, #16, #8
1000f3ee:	f50c 7b80 	add.w	fp, ip, #256	@ 0x100
1000f3f2:	fa5f fc82 	uxtb.w	ip, r2
1000f3f6:	ea81 010a 	eor.w	r1, r1, sl
1000f3fa:	f3c5 2607 	ubfx	r6, r5, #8, #8
1000f3fe:	f50c 7940 	add.w	r9, ip, #768	@ 0x300
1000f402:	fa5f fc85 	uxtb.w	ip, r5
1000f406:	0e2d      	lsrs	r5, r5, #24
1000f408:	9504      	str	r5, [sp, #16]
1000f40a:	0e0d      	lsrs	r5, r1, #24
1000f40c:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f410:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f414:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
1000f418:	f8cd e00c 	str.w	lr, [sp, #12]
1000f41c:	b2ce      	uxtb	r6, r1
1000f41e:	406f      	eors	r7, r5
1000f420:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f424:	0e15      	lsrs	r5, r2, #24
1000f426:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f42a:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f42e:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
1000f432:	4075      	eors	r5, r6
1000f434:	6d06      	ldr	r6, [r0, #80]	@ 0x50
1000f436:	4077      	eors	r7, r6
1000f438:	9e02      	ldr	r6, [sp, #8]
1000f43a:	4077      	eors	r7, r6
1000f43c:	9e03      	ldr	r6, [sp, #12]
1000f43e:	4077      	eors	r7, r6
1000f440:	6d46      	ldr	r6, [r0, #84]	@ 0x54
1000f442:	4075      	eors	r5, r6
1000f444:	f853 602b 	ldr.w	r6, [r3, fp, lsl #2]
1000f448:	f8dd b010 	ldr.w	fp, [sp, #16]
1000f44c:	ea4f 6814 	mov.w	r8, r4, lsr #24
1000f450:	f3c4 4e07 	ubfx	lr, r4, #16, #8
1000f454:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f458:	f50c 7a40 	add.w	sl, ip, #768	@ 0x300
1000f45c:	4075      	eors	r5, r6
1000f45e:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f462:	f853 602b 	ldr.w	r6, [r3, fp, lsl #2]
1000f466:	f3c1 4c07 	ubfx	ip, r1, #16, #8
1000f46a:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f46e:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f472:	ea86 0909 	eor.w	r9, r6, r9
1000f476:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f47a:	f853 6028 	ldr.w	r6, [r3, r8, lsl #2]
1000f47e:	f853 802a 	ldr.w	r8, [r3, sl, lsl #2]
1000f482:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f486:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f48a:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f48e:	f853 a02e 	ldr.w	sl, [r3, lr, lsl #2]
1000f492:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000f496:	ea85 0e04 	eor.w	lr, r5, r4
1000f49a:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
1000f49e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f4a2:	6d82      	ldr	r2, [r0, #88]	@ 0x58
1000f4a4:	ea86 0608 	eor.w	r6, r6, r8
1000f4a8:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f4ac:	ea89 0c02 	eor.w	ip, r9, r2
1000f4b0:	6dc2      	ldr	r2, [r0, #92]	@ 0x5c
1000f4b2:	4056      	eors	r6, r2
1000f4b4:	ea86 0608 	eor.w	r6, r6, r8
1000f4b8:	404e      	eors	r6, r1
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f4ba:	b2f2      	uxtb	r2, r6
1000f4bc:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f4c0:	ea8c 0c0a 	eor.w	ip, ip, sl
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f4c4:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000f4c8:	b2fa      	uxtb	r2, r7
1000f4ca:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f4ce:	ea8c 0c04 	eor.w	ip, ip, r4
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f4d2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f4d6:	fa5f f28e 	uxtb.w	r2, lr
1000f4da:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f4de:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000f4e2:	fa5f f28c 	uxtb.w	r2, ip
1000f4e6:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f4ea:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f4ee:	0e3a      	lsrs	r2, r7, #24
1000f4f0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f4f4:	ea82 0208 	eor.w	r2, r2, r8
1000f4f8:	ea4f 681e 	mov.w	r8, lr, lsr #24
1000f4fc:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f500:	ea88 0505 	eor.w	r5, r8, r5
1000f504:	ea4f 681c 	mov.w	r8, ip, lsr #24
1000f508:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f50c:	ea88 0404 	eor.w	r4, r8, r4
1000f510:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000f514:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f518:	ea88 0101 	eor.w	r1, r8, r1
1000f51c:	f3ce 4807 	ubfx	r8, lr, #16, #8
1000f520:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000f524:	f50e 7e00 	add.w	lr, lr, #512	@ 0x200
1000f528:	9102      	str	r1, [sp, #8]
1000f52a:	f853 102e 	ldr.w	r1, [r3, lr, lsl #2]
1000f52e:	9103      	str	r1, [sp, #12]
1000f530:	f3cc 4e07 	ubfx	lr, ip, #16, #8
1000f534:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000f538:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000f53c:	6e01      	ldr	r1, [r0, #96]	@ 0x60
1000f53e:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
1000f542:	f3c6 4c07 	ubfx	ip, r6, #16, #8
1000f546:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f54a:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000f54e:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f552:	404a      	eors	r2, r1
1000f554:	6e41      	ldr	r1, [r0, #100]	@ 0x64
1000f556:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
1000f55a:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000f55e:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f562:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000f566:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000f56a:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f56e:	404d      	eors	r5, r1
1000f570:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f574:	6e81      	ldr	r1, [r0, #104]	@ 0x68
1000f576:	f853 902e 	ldr.w	r9, [r3, lr, lsl #2]
1000f57a:	f853 e02c 	ldr.w	lr, [r3, ip, lsl #2]
1000f57e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000f582:	404c      	eors	r4, r1
1000f584:	ea84 040e 	eor.w	r4, r4, lr
1000f588:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f58c:	407c      	eors	r4, r7
1000f58e:	9902      	ldr	r1, [sp, #8]
1000f590:	6ec7      	ldr	r7, [r0, #108]	@ 0x6c
1000f592:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f596:	4079      	eors	r1, r7
1000f598:	9f03      	ldr	r7, [sp, #12]
1000f59a:	4071      	eors	r1, r6
1000f59c:	4079      	eors	r1, r7
1000f59e:	ea82 020b 	eor.w	r2, r2, fp
1000f5a2:	ea85 0509 	eor.w	r5, r5, r9
1000f5a6:	ea82 020a 	eor.w	r2, r2, sl
1000f5aa:	ea85 0508 	eor.w	r5, r5, r8
1000f5ae:	fa5f f881 	uxtb.w	r8, r1
1000f5b2:	0e17      	lsrs	r7, r2, #24
1000f5b4:	f508 7840 	add.w	r8, r8, #768	@ 0x300
1000f5b8:	fa5f fe82 	uxtb.w	lr, r2
1000f5bc:	b2e6      	uxtb	r6, r4
1000f5be:	f853 9027 	ldr.w	r9, [r3, r7, lsl #2]
1000f5c2:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
1000f5c6:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f5ca:	fa5f fc85 	uxtb.w	ip, r5
1000f5ce:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f5d2:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
1000f5d6:	f853 b026 	ldr.w	fp, [r3, r6, lsl #2]
1000f5da:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f5de:	ea89 0707 	eor.w	r7, r9, r7
1000f5e2:	0e2e      	lsrs	r6, r5, #24
1000f5e4:	f853 902e 	ldr.w	r9, [r3, lr, lsl #2]
1000f5e8:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f5ec:	f3c5 4e07 	ubfx	lr, r5, #16, #8
1000f5f0:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f5f4:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000f5f8:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f5fc:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000f600:	f853 a02e 	ldr.w	sl, [r3, lr, lsl #2]
1000f604:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f608:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
1000f60c:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000f610:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f614:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f618:	ea8c 0c08 	eor.w	ip, ip, r8
1000f61c:	ea4f 6811 	mov.w	r8, r1, lsr #24
1000f620:	ea86 0609 	eor.w	r6, r6, r9
1000f624:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
1000f628:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f62c:	f3c1 4407 	ubfx	r4, r1, #16, #8
1000f630:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f634:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000f638:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f63c:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f640:	ea88 0b0b 	eor.w	fp, r8, fp
1000f644:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
1000f648:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
1000f64c:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
1000f650:	f3c2 4107 	ubfx	r1, r2, #16, #8
1000f654:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f658:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f65c:	f501 7180 	add.w	r1, r1, #256	@ 0x100
1000f660:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f664:	9202      	str	r2, [sp, #8]
1000f666:	6f02      	ldr	r2, [r0, #112]	@ 0x70
1000f668:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000f66c:	4057      	eors	r7, r2
1000f66e:	6f42      	ldr	r2, [r0, #116]	@ 0x74
1000f670:	4056      	eors	r6, r2
1000f672:	ea86 0608 	eor.w	r6, r6, r8
1000f676:	4066      	eors	r6, r4
1000f678:	6f84      	ldr	r4, [r0, #120]	@ 0x78
1000f67a:	9a02      	ldr	r2, [sp, #8]
1000f67c:	ea8c 0c04 	eor.w	ip, ip, r4
1000f680:	6fc4      	ldr	r4, [r0, #124]	@ 0x7c
1000f682:	ea8c 0c05 	eor.w	ip, ip, r5
1000f686:	ea8b 0404 	eor.w	r4, fp, r4
1000f68a:	ea8c 0c02 	eor.w	ip, ip, r2
1000f68e:	404c      	eors	r4, r1
1000f690:	4672      	mov	r2, lr
1000f692:	4054      	eors	r4, r2
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f694:	b2e2      	uxtb	r2, r4
1000f696:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f69a:	ea87 070a 	eor.w	r7, r7, sl
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f69e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f6a2:	f3c6 4207 	ubfx	r2, r6, #16, #8
1000f6a6:	f502 7280 	add.w	r2, r2, #256	@ 0x100
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f6aa:	ea87 0709 	eor.w	r7, r7, r9
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f6ae:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f6b2:	9202      	str	r2, [sp, #8]
1000f6b4:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000f6b8:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f6bc:	f3c7 4907 	ubfx	r9, r7, #16, #8
1000f6c0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f6c4:	9103      	str	r1, [sp, #12]
1000f6c6:	b2fa      	uxtb	r2, r7
1000f6c8:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f6cc:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1000f6d0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f6d4:	f3cc 4207 	ubfx	r2, ip, #16, #8
1000f6d8:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f6dc:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1000f6e0:	f8cd e010 	str.w	lr, [sp, #16]
1000f6e4:	f3c4 2207 	ubfx	r2, r4, #8, #8
1000f6e8:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f6ec:	fa5f fe8c 	uxtb.w	lr, ip
1000f6f0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000f6f4:	f8cd 8014 	str.w	r8, [sp, #20]
1000f6f8:	b2f2      	uxtb	r2, r6
1000f6fa:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f6fe:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000f702:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f706:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f70a:	ea8c 0202 	eor.w	r2, ip, r2
1000f70e:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000f712:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f716:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
1000f71a:	ea8b 0b05 	eor.w	fp, fp, r5
1000f71e:	0e35      	lsrs	r5, r6, #24
1000f720:	f507 7c00 	add.w	ip, r7, #512	@ 0x200
1000f724:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f728:	9f02      	ldr	r7, [sp, #8]
1000f72a:	ea85 0a01 	eor.w	sl, r5, r1
1000f72e:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
1000f732:	ea8b 0b05 	eor.w	fp, fp, r5
1000f736:	9d03      	ldr	r5, [sp, #12]
1000f738:	ea8b 0707 	eor.w	r7, fp, r7
1000f73c:	406f      	eors	r7, r5
1000f73e:	f8d0 5084 	ldr.w	r5, [r0, #132]	@ 0x84
1000f742:	ea8a 0a05 	eor.w	sl, sl, r5
1000f746:	9d04      	ldr	r5, [sp, #16]
1000f748:	ea4f 6814 	mov.w	r8, r4, lsr #24
1000f74c:	ea8a 0a05 	eor.w	sl, sl, r5
1000f750:	f3c4 4407 	ubfx	r4, r4, #16, #8
1000f754:	9d05      	ldr	r5, [sp, #20]
1000f756:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f75a:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f75e:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f762:	f506 7100 	add.w	r1, r6, #512	@ 0x200
1000f766:	ea8a 0605 	eor.w	r6, sl, r5
1000f76a:	f8d0 5088 	ldr.w	r5, [r0, #136]	@ 0x88
1000f76e:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f772:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000f776:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f77a:	406a      	eors	r2, r5
1000f77c:	f853 502e 	ldr.w	r5, [r3, lr, lsl #2]
1000f780:	ea82 0e04 	eor.w	lr, r2, r4
1000f784:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
1000f788:	f853 4029 	ldr.w	r4, [r3, r9, lsl #2]
1000f78c:	ea8e 0e02 	eor.w	lr, lr, r2
1000f790:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
1000f794:	ea88 0505 	eor.w	r5, r8, r5
1000f798:	ea85 0c02 	eor.w	ip, r5, r2
1000f79c:	ea8c 0c04 	eor.w	ip, ip, r4
1000f7a0:	ea8c 0c01 	eor.w	ip, ip, r1
1000f7a4:	fa5f f28c 	uxtb.w	r2, ip
1000f7a8:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f7ac:	ea4f 6817 	mov.w	r8, r7, lsr #24
1000f7b0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f7b4:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f7b8:	b2fa      	uxtb	r2, r7
1000f7ba:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f7be:	ea88 0101 	eor.w	r1, r8, r1
1000f7c2:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000f7c6:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f7ca:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f7ce:	b2f2      	uxtb	r2, r6
1000f7d0:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f7d4:	ea88 0505 	eor.w	r5, r8, r5
1000f7d8:	ea4f 681e 	mov.w	r8, lr, lsr #24
1000f7dc:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000f7e0:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f7e4:	fa5f f28e 	uxtb.w	r2, lr
1000f7e8:	ea88 0404 	eor.w	r4, r8, r4
1000f7ec:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f7f0:	ea4f 681c 	mov.w	r8, ip, lsr #24
1000f7f4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f7f8:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f7fc:	ea88 0202 	eor.w	r2, r8, r2
1000f800:	f3c6 4807 	ubfx	r8, r6, #16, #8
1000f804:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f808:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f80c:	9202      	str	r2, [sp, #8]
1000f80e:	f853 2026 	ldr.w	r2, [r3, r6, lsl #2]
1000f812:	9203      	str	r2, [sp, #12]
1000f814:	f3ce 4607 	ubfx	r6, lr, #16, #8
1000f818:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f81c:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000f820:	f853 9026 	ldr.w	r9, [r3, r6, lsl #2]
1000f824:	f3cc 4607 	ubfx	r6, ip, #16, #8
1000f828:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000f82c:	f50e 7e00 	add.w	lr, lr, #512	@ 0x200
1000f830:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f834:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
1000f838:	f853 a02e 	ldr.w	sl, [r3, lr, lsl #2]
1000f83c:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
1000f840:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90
1000f844:	4051      	eors	r1, r2
1000f846:	f8d0 2094 	ldr.w	r2, [r0, #148]	@ 0x94
1000f84a:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000f84e:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f852:	4055      	eors	r5, r2
1000f854:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f858:	f8d0 2098 	ldr.w	r2, [r0, #152]	@ 0x98
1000f85c:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000f860:	4054      	eors	r4, r2
1000f862:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f866:	ea84 040e 	eor.w	r4, r4, lr
1000f86a:	9a02      	ldr	r2, [sp, #8]
1000f86c:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f870:	407c      	eors	r4, r7
1000f872:	f8d0 709c 	ldr.w	r7, [r0, #156]	@ 0x9c
1000f876:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000f87a:	407a      	eors	r2, r7
1000f87c:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000f880:	4072      	eors	r2, r6
    if (r > 5) {
1000f882:	9e00      	ldr	r6, [sp, #0]
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f884:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f888:	9f03      	ldr	r7, [sp, #12]
1000f88a:	ea81 010b 	eor.w	r1, r1, fp
1000f88e:	ea85 0509 	eor.w	r5, r5, r9
    if (r > 5) {
1000f892:	2e05      	cmp	r6, #5
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f894:	ea81 010a 	eor.w	r1, r1, sl
1000f898:	ea85 0508 	eor.w	r5, r5, r8
1000f89c:	ea82 0207 	eor.w	r2, r2, r7
    if (r > 5) {
1000f8a0:	f240 81ed 	bls.w	1000fc7e <AesEncrypt_C+0xca6>
        ENC_ROUND_S_T(40); ENC_ROUND_T_S(40);
1000f8a4:	b2d6      	uxtb	r6, r2
1000f8a6:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f8aa:	f3c5 4e07 	ubfx	lr, r5, #16, #8
1000f8ae:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
1000f8b2:	b2ce      	uxtb	r6, r1
1000f8b4:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f8b8:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f8bc:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1000f8c0:	b2ee      	uxtb	r6, r5
1000f8c2:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f8c6:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000f8ca:	b2e6      	uxtb	r6, r4
1000f8cc:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f8d0:	f853 b026 	ldr.w	fp, [r3, r6, lsl #2]
1000f8d4:	0e0e      	lsrs	r6, r1, #24
1000f8d6:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f8da:	4077      	eors	r7, r6
1000f8dc:	0e2e      	lsrs	r6, r5, #24
1000f8de:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f8e2:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f8e6:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000f8ea:	ea86 060c 	eor.w	r6, r6, ip
1000f8ee:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000f8f2:	f853 a025 	ldr.w	sl, [r3, r5, lsl #2]
1000f8f6:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f8fa:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000f8fe:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f902:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f906:	ea8c 0c08 	eor.w	ip, ip, r8
1000f90a:	ea4f 6812 	mov.w	r8, r2, lsr #24
1000f90e:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
1000f912:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f916:	f3c2 4407 	ubfx	r4, r2, #16, #8
1000f91a:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f91e:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000f922:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f926:	ea88 0b0b 	eor.w	fp, r8, fp
1000f92a:	f853 802e 	ldr.w	r8, [r3, lr, lsl #2]
1000f92e:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
1000f932:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f936:	f3c1 4207 	ubfx	r2, r1, #16, #8
1000f93a:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f93e:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f942:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f946:	9202      	str	r2, [sp, #8]
1000f948:	f8d0 20a0 	ldr.w	r2, [r0, #160]	@ 0xa0
1000f94c:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f950:	4057      	eors	r7, r2
1000f952:	f8d0 20a4 	ldr.w	r2, [r0, #164]	@ 0xa4
1000f956:	4056      	eors	r6, r2
1000f958:	ea86 060e 	eor.w	r6, r6, lr
1000f95c:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f960:	4075      	eors	r5, r6
1000f962:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f966:	f8d0 60a8 	ldr.w	r6, [r0, #168]	@ 0xa8
1000f96a:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000f96e:	9a02      	ldr	r2, [sp, #8]
1000f970:	ea8c 0c06 	eor.w	ip, ip, r6
1000f974:	ea8c 0c04 	eor.w	ip, ip, r4
1000f978:	ea8c 0c01 	eor.w	ip, ip, r1
1000f97c:	f8d0 10ac 	ldr.w	r1, [r0, #172]	@ 0xac
1000f980:	ea8b 0601 	eor.w	r6, fp, r1
1000f984:	4056      	eors	r6, r2
1000f986:	4652      	mov	r2, sl
1000f988:	4056      	eors	r6, r2
1000f98a:	b2f2      	uxtb	r2, r6
1000f98c:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f990:	f3cc 4407 	ubfx	r4, ip, #16, #8
1000f994:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f998:	f3c5 4207 	ubfx	r2, r5, #16, #8
1000f99c:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f9a0:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f9a4:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1000f9a8:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f9ac:	9403      	str	r4, [sp, #12]
1000f9ae:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000f9b2:	f3c6 2407 	ubfx	r4, r6, #8, #8
1000f9b6:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f9ba:	ea87 0708 	eor.w	r7, r7, r8
1000f9be:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f9c2:	ea87 0709 	eor.w	r7, r7, r9
1000f9c6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f9ca:	f853 e024 	ldr.w	lr, [r3, r4, lsl #2]
1000f9ce:	9202      	str	r2, [sp, #8]
1000f9d0:	b2ec      	uxtb	r4, r5
1000f9d2:	b2fa      	uxtb	r2, r7
1000f9d4:	f8cd e010 	str.w	lr, [sp, #16]
1000f9d8:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f9dc:	fa5f fe8c 	uxtb.w	lr, ip
1000f9e0:	f504 7440 	add.w	r4, r4, #768	@ 0x300
1000f9e4:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000f9e8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f9ec:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f9f0:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f9f4:	ea8c 0404 	eor.w	r4, ip, r4
1000f9f8:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000f9fc:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000fa00:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000fa04:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000fa08:	ea8c 0101 	eor.w	r1, ip, r1
1000fa0c:	ea4f 6c15 	mov.w	ip, r5, lsr #24
1000fa10:	f3c6 4607 	ubfx	r6, r6, #16, #8
1000fa14:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
1000fa18:	ea8a 0a02 	eor.w	sl, sl, r2
1000fa1c:	f8d0 20b0 	ldr.w	r2, [r0, #176]	@ 0xb0
1000fa20:	4051      	eors	r1, r2
1000fa22:	9a02      	ldr	r2, [sp, #8]
1000fa24:	ea81 010b 	eor.w	r1, r1, fp
1000fa28:	4051      	eors	r1, r2
1000fa2a:	f8d0 20b4 	ldr.w	r2, [r0, #180]	@ 0xb4
1000fa2e:	ea8a 0a02 	eor.w	sl, sl, r2
1000fa32:	9a03      	ldr	r2, [sp, #12]
1000fa34:	ea8a 0a02 	eor.w	sl, sl, r2
1000fa38:	9a04      	ldr	r2, [sp, #16]
1000fa3a:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000fa3e:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000fa42:	f505 7c00 	add.w	ip, r5, #512	@ 0x200
1000fa46:	f3c7 4907 	ubfx	r9, r7, #16, #8
1000fa4a:	ea8a 0502 	eor.w	r5, sl, r2
1000fa4e:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000fa52:	f8d0 20b8 	ldr.w	r2, [r0, #184]	@ 0xb8
1000fa56:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fa5a:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000fa5e:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000fa62:	4054      	eors	r4, r2
1000fa64:	4074      	eors	r4, r6
1000fa66:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
1000fa6a:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
1000fa6e:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
1000fa72:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1000fa76:	4074      	eors	r4, r6
1000fa78:	f8d0 60bc 	ldr.w	r6, [r0, #188]	@ 0xbc
1000fa7c:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
1000fa80:	ea88 0202 	eor.w	r2, r8, r2
1000fa84:	4072      	eors	r2, r6
        if (r > 6) {
1000fa86:	9e00      	ldr	r6, [sp, #0]
        ENC_ROUND_S_T(40); ENC_ROUND_T_S(40);
1000fa88:	ea82 020e 	eor.w	r2, r2, lr
        if (r > 6) {
1000fa8c:	2e06      	cmp	r6, #6
        ENC_ROUND_S_T(40); ENC_ROUND_T_S(40);
1000fa8e:	ea82 0207 	eor.w	r2, r2, r7
        if (r > 6) {
1000fa92:	f000 80f4 	beq.w	1000fc7e <AesEncrypt_C+0xca6>
            ENC_ROUND_S_T(48); ENC_ROUND_T_S(48);
1000fa96:	b2d6      	uxtb	r6, r2
1000fa98:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000fa9c:	f3c5 4e07 	ubfx	lr, r5, #16, #8
1000faa0:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
1000faa4:	b2ce      	uxtb	r6, r1
1000faa6:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000faaa:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000faae:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1000fab2:	b2ee      	uxtb	r6, r5
1000fab4:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000fab8:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000fabc:	b2e6      	uxtb	r6, r4
1000fabe:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000fac2:	f853 b026 	ldr.w	fp, [r3, r6, lsl #2]
1000fac6:	0e0e      	lsrs	r6, r1, #24
1000fac8:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000facc:	4077      	eors	r7, r6
1000face:	0e2e      	lsrs	r6, r5, #24
1000fad0:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000fad4:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fad8:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000fadc:	ea86 060c 	eor.w	r6, r6, ip
1000fae0:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000fae4:	f853 a025 	ldr.w	sl, [r3, r5, lsl #2]
1000fae8:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000faec:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000faf0:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000faf4:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000faf8:	ea8c 0c08 	eor.w	ip, ip, r8
1000fafc:	ea4f 6812 	mov.w	r8, r2, lsr #24
1000fb00:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
1000fb04:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000fb08:	f3c2 4407 	ubfx	r4, r2, #16, #8
1000fb0c:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000fb10:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000fb14:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000fb18:	ea88 0b0b 	eor.w	fp, r8, fp
1000fb1c:	f853 802e 	ldr.w	r8, [r3, lr, lsl #2]
1000fb20:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
1000fb24:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000fb28:	f3c1 4207 	ubfx	r2, r1, #16, #8
1000fb2c:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000fb30:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000fb34:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fb38:	9202      	str	r2, [sp, #8]
1000fb3a:	f8d0 20c0 	ldr.w	r2, [r0, #192]	@ 0xc0
1000fb3e:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000fb42:	4057      	eors	r7, r2
1000fb44:	f8d0 20c4 	ldr.w	r2, [r0, #196]	@ 0xc4
1000fb48:	4056      	eors	r6, r2
1000fb4a:	ea86 060e 	eor.w	r6, r6, lr
1000fb4e:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000fb52:	4075      	eors	r5, r6
1000fb54:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000fb58:	f8d0 60c8 	ldr.w	r6, [r0, #200]	@ 0xc8
1000fb5c:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000fb60:	9a02      	ldr	r2, [sp, #8]
1000fb62:	ea8c 0c06 	eor.w	ip, ip, r6
1000fb66:	ea8c 0c04 	eor.w	ip, ip, r4
1000fb6a:	ea8c 0c01 	eor.w	ip, ip, r1
1000fb6e:	f8d0 10cc 	ldr.w	r1, [r0, #204]	@ 0xcc
1000fb72:	ea8b 0601 	eor.w	r6, fp, r1
1000fb76:	4056      	eors	r6, r2
1000fb78:	4652      	mov	r2, sl
1000fb7a:	4056      	eors	r6, r2
1000fb7c:	b2f2      	uxtb	r2, r6
1000fb7e:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000fb82:	f3cc 4407 	ubfx	r4, ip, #16, #8
1000fb86:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000fb8a:	f3c5 4207 	ubfx	r2, r5, #16, #8
1000fb8e:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000fb92:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000fb96:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1000fb9a:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000fb9e:	9403      	str	r4, [sp, #12]
1000fba0:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000fba4:	f3c6 2407 	ubfx	r4, r6, #8, #8
1000fba8:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000fbac:	ea87 0708 	eor.w	r7, r7, r8
1000fbb0:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000fbb4:	ea87 0709 	eor.w	r7, r7, r9
1000fbb8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fbbc:	f853 e024 	ldr.w	lr, [r3, r4, lsl #2]
1000fbc0:	9202      	str	r2, [sp, #8]
1000fbc2:	b2ec      	uxtb	r4, r5
1000fbc4:	b2fa      	uxtb	r2, r7
1000fbc6:	f8cd e010 	str.w	lr, [sp, #16]
1000fbca:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000fbce:	fa5f fe8c 	uxtb.w	lr, ip
1000fbd2:	f504 7440 	add.w	r4, r4, #768	@ 0x300
1000fbd6:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000fbda:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fbde:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000fbe2:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000fbe6:	ea8c 0404 	eor.w	r4, ip, r4
1000fbea:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000fbee:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000fbf2:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000fbf6:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000fbfa:	ea8c 0101 	eor.w	r1, ip, r1
1000fbfe:	ea4f 6c15 	mov.w	ip, r5, lsr #24
1000fc02:	f3c6 4607 	ubfx	r6, r6, #16, #8
1000fc06:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
1000fc0a:	ea8a 0a02 	eor.w	sl, sl, r2
1000fc0e:	f8d0 20d0 	ldr.w	r2, [r0, #208]	@ 0xd0
1000fc12:	4051      	eors	r1, r2
1000fc14:	9a02      	ldr	r2, [sp, #8]
1000fc16:	ea81 010b 	eor.w	r1, r1, fp
1000fc1a:	4051      	eors	r1, r2
1000fc1c:	f8d0 20d4 	ldr.w	r2, [r0, #212]	@ 0xd4
1000fc20:	ea8a 0a02 	eor.w	sl, sl, r2
1000fc24:	9a03      	ldr	r2, [sp, #12]
1000fc26:	ea8a 0a02 	eor.w	sl, sl, r2
1000fc2a:	9a04      	ldr	r2, [sp, #16]
1000fc2c:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000fc30:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000fc34:	f505 7c00 	add.w	ip, r5, #512	@ 0x200
1000fc38:	f3c7 4907 	ubfx	r9, r7, #16, #8
1000fc3c:	ea8a 0502 	eor.w	r5, sl, r2
1000fc40:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000fc44:	f8d0 20d8 	ldr.w	r2, [r0, #216]	@ 0xd8
1000fc48:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fc4c:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000fc50:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000fc54:	4054      	eors	r4, r2
1000fc56:	4074      	eors	r4, r6
1000fc58:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
1000fc5c:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
1000fc60:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
1000fc64:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1000fc68:	4074      	eors	r4, r6
1000fc6a:	f8d0 60dc 	ldr.w	r6, [r0, #220]	@ 0xdc
1000fc6e:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
1000fc72:	ea88 0202 	eor.w	r2, r8, r2
1000fc76:	4072      	eors	r2, r6
1000fc78:	ea82 020e 	eor.w	r2, r2, lr
1000fc7c:	407a      	eors	r2, r7
#ifndef WOLFSSL_AES_TOUCH_LINES
    s0 =
        (GetTable(Te[2], GETBYTE(t0, 3)) & 0xff000000) ^
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000fc7e:	b2d6      	uxtb	r6, r2
1000fc80:	f506 7680 	add.w	r6, r6, #256	@ 0x100
        (GetTable(Te[3], GETBYTE(t2, 2)) & 0x00ff0000) ^
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
        rk[1];
    s2 =
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000fc84:	ea4f 6914 	mov.w	r9, r4, lsr #24
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000fc88:	f813 c026 	ldrb.w	ip, [r3, r6, lsl #2]
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
1000fc8c:	f3c5 4607 	ubfx	r6, r5, #16, #8
1000fc90:	f506 7640 	add.w	r6, r6, #768	@ 0x300
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000fc94:	f509 7900 	add.w	r9, r9, #512	@ 0x200
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
1000fc98:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000fc9c:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
1000fca0:	f406 087f 	and.w	r8, r6, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t0, 3)) & 0xff000000) ^
1000fca4:	0e0e      	lsrs	r6, r1, #24
1000fca6:	f506 7600 	add.w	r6, r6, #512	@ 0x200
        rk[2];
    s3 =
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
        (GetTable(Te[0], GETBYTE(t1, 1)) & 0x0000ff00) ^
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fcaa:	fa5f fa84 	uxtb.w	sl, r4
        (GetTable(Te[2], GETBYTE(t0, 3)) & 0xff000000) ^
1000fcae:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fcb2:	f006 467f 	and.w	r6, r6, #4278190080	@ 0xff000000
1000fcb6:	ea48 0806 	orr.w	r8, r8, r6
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000fcba:	b2ce      	uxtb	r6, r1
1000fcbc:	f506 7680 	add.w	r6, r6, #256	@ 0x100
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fcc0:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000fcc4:	f813 7026 	ldrb.w	r7, [r3, r6, lsl #2]
        (GetTable(Te[3], GETBYTE(t2, 2)) & 0x00ff0000) ^
1000fcc8:	f3c4 4607 	ubfx	r6, r4, #16, #8
1000fccc:	f506 7640 	add.w	r6, r6, #768	@ 0x300
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
1000fcd0:	f3c4 2407 	ubfx	r4, r4, #8, #8
        (GetTable(Te[3], GETBYTE(t2, 2)) & 0x00ff0000) ^
1000fcd4:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fcd8:	f406 0e7f 	and.w	lr, r6, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t1, 3)) & 0xff000000) ^
1000fcdc:	0e2e      	lsrs	r6, r5, #24
1000fcde:	f506 7600 	add.w	r6, r6, #512	@ 0x200
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000fce2:	f009 497f 	and.w	r9, r9, #4278190080	@ 0xff000000
        (GetTable(Te[2], GETBYTE(t1, 3)) & 0xff000000) ^
1000fce6:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fcea:	f006 467f 	and.w	r6, r6, #4278190080	@ 0xff000000
1000fcee:	ea4e 0e06 	orr.w	lr, lr, r6
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fcf2:	b2ee      	uxtb	r6, r5
        (GetTable(Te[0], GETBYTE(t1, 1)) & 0x0000ff00) ^
1000fcf4:	f3c5 2507 	ubfx	r5, r5, #8, #8
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000fcf8:	ea4f 6b12 	mov.w	fp, r2, lsr #24
        (GetTable(Te[0], GETBYTE(t1, 1)) & 0x0000ff00) ^
1000fcfc:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000fd00:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
1000fd04:	9502      	str	r5, [sp, #8]
        (GetTable(Te[3], GETBYTE(t3, 2)) & 0x00ff0000) ^
1000fd06:	f3c2 4507 	ubfx	r5, r2, #16, #8
1000fd0a:	f505 7540 	add.w	r5, r5, #768	@ 0x300
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
1000fd0e:	f3c2 2207 	ubfx	r2, r2, #8, #8
        (GetTable(Te[3], GETBYTE(t3, 2)) & 0x00ff0000) ^
1000fd12:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
1000fd16:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
        (GetTable(Te[3], GETBYTE(t3, 2)) & 0x00ff0000) ^
1000fd1a:	f405 057f 	and.w	r5, r5, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000fd1e:	ea45 0509 	orr.w	r5, r5, r9
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
1000fd22:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fd26:	f813 402a 	ldrb.w	r4, [r3, sl, lsl #2]
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000fd2a:	f3c1 4a07 	ubfx	sl, r1, #16, #8
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000fd2e:	f50b 7b00 	add.w	fp, fp, #512	@ 0x200
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fd32:	f506 7680 	add.w	r6, r6, #256	@ 0x100
        (GetTable(Te[0], GETBYTE(t0, 1)) & 0x0000ff00) ^
1000fd36:	f3c1 2107 	ubfx	r1, r1, #8, #8
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000fd3a:	f50a 7a40 	add.w	sl, sl, #768	@ 0x300
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fd3e:	f813 6026 	ldrb.w	r6, [r3, r6, lsl #2]
        (GetTable(Te[0], GETBYTE(t0, 1)) & 0x0000ff00) ^
1000fd42:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000fd46:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000fd4a:	f853 302b 	ldr.w	r3, [r3, fp, lsl #2]
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
1000fd4e:	f402 4b7f 	and.w	fp, r2, #65280	@ 0xff00
    rk += r * 8;
1000fd52:	9a00      	ldr	r2, [sp, #0]
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000fd54:	f40a 0a7f 	and.w	sl, sl, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000fd58:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
1000fd5c:	ea4a 0303 	orr.w	r3, sl, r3
    rk += r * 8;
1000fd60:	eb00 1a42 	add.w	sl, r0, r2, lsl #5
1000fd64:	0152      	lsls	r2, r2, #5
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
1000fd66:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000fd6a:	5882      	ldr	r2, [r0, r2]
1000fd6c:	ea8c 0c02 	eor.w	ip, ip, r2
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000fd70:	f8da 2004 	ldr.w	r2, [sl, #4]
1000fd74:	4057      	eors	r7, r2
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fd76:	f8da 2008 	ldr.w	r2, [sl, #8]
1000fd7a:	4056      	eors	r6, r2
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fd7c:	f8da 200c 	ldr.w	r2, [sl, #12]
1000fd80:	4054      	eors	r4, r2
1000fd82:	9a02      	ldr	r2, [sp, #8]
        (GetTable(Te[0], GETBYTE(t0, 1)) & 0x0000ff00) ^
1000fd84:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000fd88:	ea8c 0c09 	eor.w	ip, ip, r9
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000fd8c:	ea87 070b 	eor.w	r7, r7, fp
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fd90:	404e      	eors	r6, r1
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fd92:	4054      	eors	r4, r2
    s1 = ByteReverseWord32(s1);
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    XMEMCPY(outBlock,                  &s0, sizeof(s0));
1000fd94:	9901      	ldr	r1, [sp, #4]
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000fd96:	ea8c 0c08 	eor.w	ip, ip, r8
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000fd9a:	ea87 070e 	eor.w	r7, r7, lr
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fd9e:	406e      	eors	r6, r5
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fda0:	405c      	eors	r4, r3
1000fda2:	fa9c fc8c 	rev.w	ip, ip
    s1 = ByteReverseWord32(s1);
1000fda6:	ba3f      	rev	r7, r7
    s2 = ByteReverseWord32(s2);
1000fda8:	ba36      	rev	r6, r6
    s3 = ByteReverseWord32(s3);
1000fdaa:	ba24      	rev	r4, r4
    XMEMCPY(outBlock,                  &s0, sizeof(s0));
1000fdac:	f8c1 c000 	str.w	ip, [r1]
    XMEMCPY(outBlock +     sizeof(s0), &s1, sizeof(s1));
1000fdb0:	604f      	str	r7, [r1, #4]
    XMEMCPY(outBlock + 2 * sizeof(s0), &s2, sizeof(s2));
1000fdb2:	608e      	str	r6, [r1, #8]
    XMEMCPY(outBlock + 3 * sizeof(s0), &s3, sizeof(s3));
1000fdb4:	60cc      	str	r4, [r1, #12]
}
1000fdb6:	b007      	add	sp, #28
1000fdb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

1000fdbc <AesDecrypt_C>:
 * @param [out] outBlock  Encrypted block.
 * @param [in]  r         Rounds divided by 2.
 */
static void AesDecrypt_C(Aes* aes, const byte* inBlock, byte* outBlock,
    word32 r)
{
1000fdbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000fdc0:	b087      	sub	sp, #28
1000fdc2:	680d      	ldr	r5, [r1, #0]
1000fdc4:	684c      	ldr	r4, [r1, #4]
1000fdc6:	f8d1 9008 	ldr.w	r9, [r1, #8]
1000fdca:	68ce      	ldr	r6, [r1, #12]
1000fdcc:	e9cd 3200 	strd	r3, r2, [sp]
    s1 = ByteReverseWord32(s1);
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    s0 ^= rk[0];
1000fdd0:	6803      	ldr	r3, [r0, #0]
1000fdd2:	ba2d      	rev	r5, r5
1000fdd4:	405d      	eors	r5, r3
    s1 ^= rk[1];
1000fdd6:	6843      	ldr	r3, [r0, #4]
1000fdd8:	ba24      	rev	r4, r4
1000fdda:	405c      	eors	r4, r3
    s2 ^= rk[2];
1000fddc:	6883      	ldr	r3, [r0, #8]
1000fdde:	fa99 f989 	rev.w	r9, r9
1000fde2:	ea89 0903 	eor.w	r9, r9, r3
    s3 ^= rk[3];
1000fde6:	68c3      	ldr	r3, [r0, #12]
                          &s2, GETBYTE(t3, 0), &s3, GETBYTE(t0, 0));           \
    s0 ^= rk[(o)+0]; s1 ^= rk[(o)+1]; s2 ^= rk[(o)+2]; s3 ^= rk[(o)+3];
#endif

#ifndef WOLFSSL_AES_NO_UNROLL
                       DEC_ROUND_T_S( 0);
1000fde8:	fa5f fc84 	uxtb.w	ip, r4
1000fdec:	fa5f f789 	uxtb.w	r7, r9
1000fdf0:	b2ea      	uxtb	r2, r5
1000fdf2:	ba36      	rev	r6, r6
    s3 ^= rk[3];
1000fdf4:	405e      	eors	r6, r3
                       DEC_ROUND_T_S( 0);
1000fdf6:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
1000fdfa:	4be8      	ldr	r3, [pc, #928]	@ (1001019c <AesDecrypt_C+0x3e0>)
1000fdfc:	f507 7740 	add.w	r7, r7, #768	@ 0x300
1000fe00:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000fe04:	b2f1      	uxtb	r1, r6
1000fe06:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000fe0a:	f853 c027 	ldr.w	ip, [r3, r7, lsl #2]
1000fe0e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
1000fe12:	f501 7140 	add.w	r1, r1, #768	@ 0x300
1000fe16:	0e2a      	lsrs	r2, r5, #24
1000fe18:	f853 e021 	ldr.w	lr, [r3, r1, lsl #2]
1000fe1c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000fe20:	0e22      	lsrs	r2, r4, #24
1000fe22:	ea81 0108 	eor.w	r1, r1, r8
1000fe26:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fe2a:	ea82 020c 	eor.w	r2, r2, ip
1000fe2e:	ea4f 6c19 	mov.w	ip, r9, lsr #24
1000fe32:	9202      	str	r2, [sp, #8]
1000fe34:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000fe38:	ea8c 0c0e 	eor.w	ip, ip, lr
1000fe3c:	ea4f 6e16 	mov.w	lr, r6, lsr #24
1000fe40:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
1000fe44:	ea8b 0b07 	eor.w	fp, fp, r7
1000fe48:	f3c6 4707 	ubfx	r7, r6, #16, #8
1000fe4c:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000fe50:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000fe54:	f507 7780 	add.w	r7, r7, #256	@ 0x100
1000fe58:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
1000fe5c:	f853 a027 	ldr.w	sl, [r3, r7, lsl #2]
1000fe60:	f3c5 4607 	ubfx	r6, r5, #16, #8
1000fe64:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000fe68:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000fe6c:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000fe70:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000fe74:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
1000fe78:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000fe7c:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000fe80:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000fe84:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000fe88:	f853 2024 	ldr.w	r2, [r3, r4, lsl #2]
1000fe8c:	9203      	str	r2, [sp, #12]
1000fe8e:	6902      	ldr	r2, [r0, #16]
1000fe90:	9c02      	ldr	r4, [sp, #8]
1000fe92:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
1000fe96:	4051      	eors	r1, r2
1000fe98:	6942      	ldr	r2, [r0, #20]
1000fe9a:	f3c9 4507 	ubfx	r5, r9, #16, #8
1000fe9e:	f3c9 2907 	ubfx	r9, r9, #8, #8
1000fea2:	4054      	eors	r4, r2
1000fea4:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000fea8:	f509 7900 	add.w	r9, r9, #512	@ 0x200
1000feac:	ea84 0208 	eor.w	r2, r4, r8
1000feb0:	ea82 020e 	eor.w	r2, r2, lr
1000feb4:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000feb8:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
1000febc:	f8d0 e018 	ldr.w	lr, [r0, #24]
1000fec0:	9c03      	ldr	r4, [sp, #12]
1000fec2:	ea8c 0c0e 	eor.w	ip, ip, lr
1000fec6:	ea8c 0c07 	eor.w	ip, ip, r7
1000feca:	ea8c 0c06 	eor.w	ip, ip, r6
1000fece:	69c6      	ldr	r6, [r0, #28]
1000fed0:	ea8b 0b06 	eor.w	fp, fp, r6
1000fed4:	ea8b 0b05 	eor.w	fp, fp, r5
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000fed8:	b2d5      	uxtb	r5, r2
1000feda:	f505 7540 	add.w	r5, r5, #768	@ 0x300
                       DEC_ROUND_T_S( 0);
1000fede:	ea8b 0404 	eor.w	r4, fp, r4
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000fee2:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
1000fee6:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000feea:	f505 7580 	add.w	r5, r5, #256	@ 0x100
                       DEC_ROUND_T_S( 0);
1000feee:	ea81 010a 	eor.w	r1, r1, sl
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000fef2:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
1000fef6:	9702      	str	r7, [sp, #8]
1000fef8:	fa5f f58c 	uxtb.w	r5, ip
                       DEC_ROUND_T_S( 0);
1000fefc:	ea81 0109 	eor.w	r1, r1, r9
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000ff00:	f505 7b40 	add.w	fp, r5, #768	@ 0x300
1000ff04:	b2e5      	uxtb	r5, r4
1000ff06:	f505 7e40 	add.w	lr, r5, #768	@ 0x300
1000ff0a:	b2cd      	uxtb	r5, r1
1000ff0c:	f505 7940 	add.w	r9, r5, #768	@ 0x300
1000ff10:	0e0d      	lsrs	r5, r1, #24
1000ff12:	ea4f 6812 	mov.w	r8, r2, lsr #24
1000ff16:	f3c2 4a07 	ubfx	sl, r2, #16, #8
1000ff1a:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000ff1e:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000ff22:	f8cd e00c 	str.w	lr, [sp, #12]
1000ff26:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000ff2a:	9205      	str	r2, [sp, #20]
1000ff2c:	f3cc 2707 	ubfx	r7, ip, #8, #8
1000ff30:	6a02      	ldr	r2, [r0, #32]
1000ff32:	4075      	eors	r5, r6
1000ff34:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000ff38:	4055      	eors	r5, r2
1000ff3a:	9a02      	ldr	r2, [sp, #8]
1000ff3c:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000ff40:	4055      	eors	r5, r2
1000ff42:	406f      	eors	r7, r5
1000ff44:	9a03      	ldr	r2, [sp, #12]
1000ff46:	f853 5028 	ldr.w	r5, [r3, r8, lsl #2]
1000ff4a:	f853 802b 	ldr.w	r8, [r3, fp, lsl #2]
1000ff4e:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
1000ff52:	f3cc 4c07 	ubfx	ip, ip, #16, #8
1000ff56:	f50c 7680 	add.w	r6, ip, #256	@ 0x100
1000ff5a:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000ff5e:	9604      	str	r6, [sp, #16]
1000ff60:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000ff64:	ea85 0508 	eor.w	r5, r5, r8
1000ff68:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000ff6c:	9a05      	ldr	r2, [sp, #20]
1000ff6e:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000ff72:	f3c1 4607 	ubfx	r6, r1, #16, #8
1000ff76:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
1000ff7a:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000ff7e:	ea8e 0e08 	eor.w	lr, lr, r8
1000ff82:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000ff86:	f853 8029 	ldr.w	r8, [r3, r9, lsl #2]
1000ff8a:	f853 902a 	ldr.w	r9, [r3, sl, lsl #2]
1000ff8e:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
1000ff92:	6a42      	ldr	r2, [r0, #36]	@ 0x24
1000ff94:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000ff98:	ea8c 0c08 	eor.w	ip, ip, r8
1000ff9c:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000ffa0:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000ffa4:	9e04      	ldr	r6, [sp, #16]
1000ffa6:	4055      	eors	r5, r2
1000ffa8:	ea85 0508 	eor.w	r5, r5, r8
1000ffac:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000ffb0:	4065      	eors	r5, r4
1000ffb2:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000ffb6:	6a84      	ldr	r4, [r0, #40]	@ 0x28
1000ffb8:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000ffbc:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000ffc0:	ea8e 0e04 	eor.w	lr, lr, r4
1000ffc4:	ea8e 0e09 	eor.w	lr, lr, r9
1000ffc8:	ea8e 0e01 	eor.w	lr, lr, r1
1000ffcc:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
1000ffce:	b2ea      	uxtb	r2, r5
1000ffd0:	ea8c 0c01 	eor.w	ip, ip, r1
1000ffd4:	ea8c 0c06 	eor.w	ip, ip, r6
1000ffd8:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000ffdc:	ea8c 0c0a 	eor.w	ip, ip, sl
1000ffe0:	f3c7 4107 	ubfx	r1, r7, #16, #8
1000ffe4:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
1000ffe8:	f3cc 4207 	ubfx	r2, ip, #16, #8
1000ffec:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000fff0:	f501 7180 	add.w	r1, r1, #256	@ 0x100
1000fff4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fff8:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000fffc:	9103      	str	r1, [sp, #12]
1000fffe:	f3cc 2107 	ubfx	r1, ip, #8, #8
10010002:	f501 7100 	add.w	r1, r1, #512	@ 0x200
10010006:	9202      	str	r2, [sp, #8]
10010008:	f853 8021 	ldr.w	r8, [r3, r1, lsl #2]
1001000c:	f8cd 8010 	str.w	r8, [sp, #16]
10010010:	fa5f f18c 	uxtb.w	r1, ip
10010014:	f501 7140 	add.w	r1, r1, #768	@ 0x300
10010018:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1001001c:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
10010020:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
10010024:	f3c5 4107 	ubfx	r1, r5, #16, #8
10010028:	f501 7180 	add.w	r1, r1, #256	@ 0x100
1001002c:	f3ce 2207 	ubfx	r2, lr, #8, #8
10010030:	f853 8021 	ldr.w	r8, [r3, r1, lsl #2]
10010034:	f3c7 2107 	ubfx	r1, r7, #8, #8
10010038:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1001003c:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010040:	f853 c021 	ldr.w	ip, [r3, r1, lsl #2]
10010044:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
10010048:	b2f9      	uxtb	r1, r7
1001004a:	0e3f      	lsrs	r7, r7, #24
1001004c:	fa5f f28e 	uxtb.w	r2, lr
10010050:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010054:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010058:	ea87 0a0a 	eor.w	sl, r7, sl
1001005c:	0e2f      	lsrs	r7, r5, #24
1001005e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010062:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010066:	f3c5 2507 	ubfx	r5, r5, #8, #8
1001006a:	ea87 0902 	eor.w	r9, r7, r2
1001006e:	f505 7200 	add.w	r2, r5, #512	@ 0x200
10010072:	ea4f 651e 	mov.w	r5, lr, lsr #24
10010076:	f501 7140 	add.w	r1, r1, #768	@ 0x300
1001007a:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
1001007e:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
10010082:	4067      	eors	r7, r4
10010084:	6b04      	ldr	r4, [r0, #48]	@ 0x30
10010086:	ea8a 0a04 	eor.w	sl, sl, r4
1001008a:	9c02      	ldr	r4, [sp, #8]
1001008c:	ea8a 0a04 	eor.w	sl, sl, r4
10010090:	6b44      	ldr	r4, [r0, #52]	@ 0x34
10010092:	ea89 0904 	eor.w	r9, r9, r4
10010096:	9c03      	ldr	r4, [sp, #12]
10010098:	ea89 0904 	eor.w	r9, r9, r4
1001009c:	9c04      	ldr	r4, [sp, #16]
1001009e:	ea8b 0b01 	eor.w	fp, fp, r1
100100a2:	ea89 0504 	eor.w	r5, r9, r4
100100a6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
100100aa:	6b84      	ldr	r4, [r0, #56]	@ 0x38
100100ac:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
100100ae:	f3ce 4e07 	ubfx	lr, lr, #16, #8
100100b2:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100100b6:	4067      	eors	r7, r4
100100b8:	ea8b 0b02 	eor.w	fp, fp, r2
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
100100bc:	b2ea      	uxtb	r2, r5
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
100100be:	f853 402e 	ldr.w	r4, [r3, lr, lsl #2]
100100c2:	ea87 0708 	eor.w	r7, r7, r8
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
100100c6:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
100100ca:	ea87 070c 	eor.w	r7, r7, ip
100100ce:	ea8b 0b04 	eor.w	fp, fp, r4
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
100100d2:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
100100d6:	b2fa      	uxtb	r2, r7
100100d8:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
100100dc:	ea8b 0b01 	eor.w	fp, fp, r1
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
100100e0:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
100100e4:	fa5f f28b 	uxtb.w	r2, fp
100100e8:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
100100ec:	ea8a 0606 	eor.w	r6, sl, r6
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
100100f0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
100100f4:	b2f2      	uxtb	r2, r6
100100f6:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100100fa:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
100100fe:	0e32      	lsrs	r2, r6, #24
10010100:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010104:	4054      	eors	r4, r2
10010106:	0e2a      	lsrs	r2, r5, #24
10010108:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1001010c:	ea82 020e 	eor.w	r2, r2, lr
10010110:	ea4f 6e17 	mov.w	lr, r7, lsr #24
10010114:	9202      	str	r2, [sp, #8]
10010116:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1001011a:	ea8e 0101 	eor.w	r1, lr, r1
1001011e:	ea4f 6e1b 	mov.w	lr, fp, lsr #24
10010122:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010126:	ea8e 0808 	eor.w	r8, lr, r8
1001012a:	f3cb 4e07 	ubfx	lr, fp, #16, #8
1001012e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
10010132:	f50b 7c00 	add.w	ip, fp, #512	@ 0x200
10010136:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1001013a:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
1001013e:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
10010142:	9203      	str	r2, [sp, #12]
10010144:	f3c6 4c07 	ubfx	ip, r6, #16, #8
10010148:	f3c6 2607 	ubfx	r6, r6, #8, #8
1001014c:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
10010150:	f506 7600 	add.w	r6, r6, #512	@ 0x200
10010154:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
10010158:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1001015c:	6c02      	ldr	r2, [r0, #64]	@ 0x40
1001015e:	f3c5 4607 	ubfx	r6, r5, #16, #8
10010162:	f506 7680 	add.w	r6, r6, #256	@ 0x100
10010166:	4054      	eors	r4, r2
10010168:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
1001016c:	9a02      	ldr	r2, [sp, #8]
1001016e:	f3c7 4607 	ubfx	r6, r7, #16, #8
10010172:	f3c7 2707 	ubfx	r7, r7, #8, #8
10010176:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1001017a:	ea84 040b 	eor.w	r4, r4, fp
1001017e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010182:	ea84 0a07 	eor.w	sl, r4, r7
10010186:	6c47      	ldr	r7, [r0, #68]	@ 0x44
10010188:	9c03      	ldr	r4, [sp, #12]
1001018a:	407a      	eors	r2, r7
1001018c:	6c87      	ldr	r7, [r0, #72]	@ 0x48
1001018e:	ea82 0209 	eor.w	r2, r2, r9
10010192:	f3c5 2507 	ubfx	r5, r5, #8, #8
10010196:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1001019a:	e001      	b.n	100101a0 <AesDecrypt_C+0x3e4>
1001019c:	10021620 	.word	0x10021620
100101a0:	4062      	eors	r2, r4
100101a2:	f505 7500 	add.w	r5, r5, #512	@ 0x200
100101a6:	ea81 0407 	eor.w	r4, r1, r7
100101aa:	6cc7      	ldr	r7, [r0, #76]	@ 0x4c
100101ac:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
100101b0:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100101b4:	ea88 0107 	eor.w	r1, r8, r7
100101b8:	ea84 040e 	eor.w	r4, r4, lr
100101bc:	ea84 040c 	eor.w	r4, r4, ip
100101c0:	4071      	eors	r1, r6
100101c2:	f3ca 4c07 	ubfx	ip, sl, #16, #8
100101c6:	4069      	eors	r1, r5
100101c8:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
100101cc:	f8cd c00c 	str.w	ip, [sp, #12]
100101d0:	fa5f fc81 	uxtb.w	ip, r1
100101d4:	f50c 7e40 	add.w	lr, ip, #768	@ 0x300
100101d8:	b2d5      	uxtb	r5, r2
100101da:	fa5f fc8a 	uxtb.w	ip, sl
100101de:	f50c 7940 	add.w	r9, ip, #768	@ 0x300
100101e2:	f505 7540 	add.w	r5, r5, #768	@ 0x300
100101e6:	ea4f 6c1a 	mov.w	ip, sl, lsr #24
100101ea:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100101ee:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
100101f2:	f8cd e010 	str.w	lr, [sp, #16]
100101f6:	b2e7      	uxtb	r7, r4
100101f8:	ea8b 0b05 	eor.w	fp, fp, r5
100101fc:	f507 7740 	add.w	r7, r7, #768	@ 0x300
10010200:	0e15      	lsrs	r5, r2, #24
10010202:	f3c1 4607 	ubfx	r6, r1, #16, #8
10010206:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1001020a:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1001020e:	f506 7680 	add.w	r6, r6, #256	@ 0x100
10010212:	407d      	eors	r5, r7
10010214:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
10010218:	6d07      	ldr	r7, [r0, #80]	@ 0x50
1001021a:	9602      	str	r6, [sp, #8]
1001021c:	ea8b 0b07 	eor.w	fp, fp, r7
10010220:	9f02      	ldr	r7, [sp, #8]
10010222:	ea8b 0b07 	eor.w	fp, fp, r7
10010226:	6d47      	ldr	r7, [r0, #84]	@ 0x54
10010228:	407d      	eors	r5, r7
1001022a:	9f03      	ldr	r7, [sp, #12]
1001022c:	f3c4 2607 	ubfx	r6, r4, #8, #8
10010230:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010234:	ea4f 6814 	mov.w	r8, r4, lsr #24
10010238:	ea4f 6e11 	mov.w	lr, r1, lsr #24
1001023c:	f506 7600 	add.w	r6, r6, #512	@ 0x200
10010240:	f3c1 2107 	ubfx	r1, r1, #8, #8
10010244:	f501 7100 	add.w	r1, r1, #512	@ 0x200
10010248:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1001024c:	f3c2 4c07 	ubfx	ip, r2, #16, #8
10010250:	407d      	eors	r5, r7
10010252:	f3c2 2207 	ubfx	r2, r2, #8, #8
10010256:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
1001025a:	f8dd 8010 	ldr.w	r8, [sp, #16]
1001025e:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
10010262:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010266:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1001026a:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1001026e:	404d      	eors	r5, r1
10010270:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
10010274:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
10010278:	6d82      	ldr	r2, [r0, #88]	@ 0x58
1001027a:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1001027e:	ea87 0708 	eor.w	r7, r7, r8
10010282:	f3ca 2a07 	ubfx	sl, sl, #8, #8
10010286:	f853 8029 	ldr.w	r8, [r3, r9, lsl #2]
1001028a:	f50a 7a00 	add.w	sl, sl, #512	@ 0x200
1001028e:	4057      	eors	r7, r2
10010290:	f3c4 4407 	ubfx	r4, r4, #16, #8
10010294:	6dc2      	ldr	r2, [r0, #92]	@ 0x5c
10010296:	ea8e 0e08 	eor.w	lr, lr, r8
1001029a:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1001029e:	f853 802a 	ldr.w	r8, [r3, sl, lsl #2]
100102a2:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
100102a6:	ea87 070c 	eor.w	r7, r7, ip
100102aa:	ea8e 0c02 	eor.w	ip, lr, r2
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
100102ae:	b2ea      	uxtb	r2, r5
100102b0:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
100102b4:	ea87 0708 	eor.w	r7, r7, r8
100102b8:	ea8c 0c04 	eor.w	ip, ip, r4
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
100102bc:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
100102c0:	b2fa      	uxtb	r2, r7
100102c2:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
100102c6:	ea8c 0c01 	eor.w	ip, ip, r1
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
100102ca:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
100102ce:	fa5f f28c 	uxtb.w	r2, ip
100102d2:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
100102d6:	ea8b 0606 	eor.w	r6, fp, r6
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
100102da:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
100102de:	b2f2      	uxtb	r2, r6
100102e0:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100102e4:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
100102e8:	0e32      	lsrs	r2, r6, #24
100102ea:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100102ee:	4054      	eors	r4, r2
100102f0:	0e2a      	lsrs	r2, r5, #24
100102f2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100102f6:	4051      	eors	r1, r2
100102f8:	0e3a      	lsrs	r2, r7, #24
100102fa:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100102fe:	ea82 0208 	eor.w	r2, r2, r8
10010302:	ea4f 681c 	mov.w	r8, ip, lsr #24
10010306:	9202      	str	r2, [sp, #8]
10010308:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1001030c:	6e02      	ldr	r2, [r0, #96]	@ 0x60
1001030e:	ea88 0e0e 	eor.w	lr, r8, lr
10010312:	f3cc 4807 	ubfx	r8, ip, #16, #8
10010316:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1001031a:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1001031e:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
10010322:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
10010326:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1001032a:	f3c6 4c07 	ubfx	ip, r6, #16, #8
1001032e:	f3c6 2607 	ubfx	r6, r6, #8, #8
10010332:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
10010336:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1001033a:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
1001033e:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
10010342:	f3c5 4607 	ubfx	r6, r5, #16, #8
10010346:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1001034a:	4054      	eors	r4, r2
1001034c:	f853 a026 	ldr.w	sl, [r3, r6, lsl #2]
10010350:	9a02      	ldr	r2, [sp, #8]
10010352:	f3c7 4607 	ubfx	r6, r7, #16, #8
10010356:	f3c7 2707 	ubfx	r7, r7, #8, #8
1001035a:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1001035e:	ea84 040b 	eor.w	r4, r4, fp
10010362:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010366:	407c      	eors	r4, r7
10010368:	6e47      	ldr	r7, [r0, #100]	@ 0x64
1001036a:	f3c5 2507 	ubfx	r5, r5, #8, #8
1001036e:	4079      	eors	r1, r7
10010370:	f505 7500 	add.w	r5, r5, #512	@ 0x200
10010374:	6e87      	ldr	r7, [r0, #104]	@ 0x68
10010376:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1001037a:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1001037e:	407a      	eors	r2, r7
10010380:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
10010384:	6ec7      	ldr	r7, [r0, #108]	@ 0x6c
10010386:	ea82 020a 	eor.w	r2, r2, sl
1001038a:	ea82 020c 	eor.w	r2, r2, ip
1001038e:	ea81 0109 	eor.w	r1, r1, r9
10010392:	ea8e 0c07 	eor.w	ip, lr, r7
10010396:	ea81 0108 	eor.w	r1, r1, r8
1001039a:	ea8c 0c06 	eor.w	ip, ip, r6
1001039e:	ea8c 0c05 	eor.w	ip, ip, r5
100103a2:	fa5f f881 	uxtb.w	r8, r1
100103a6:	fa5f fe82 	uxtb.w	lr, r2
100103aa:	b2e5      	uxtb	r5, r4
100103ac:	0e26      	lsrs	r6, r4, #24
100103ae:	f508 7840 	add.w	r8, r8, #768	@ 0x300
100103b2:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
100103b6:	f505 7540 	add.w	r5, r5, #768	@ 0x300
100103ba:	f853 9026 	ldr.w	r9, [r3, r6, lsl #2]
100103be:	f853 6028 	ldr.w	r6, [r3, r8, lsl #2]
100103c2:	f853 802e 	ldr.w	r8, [r3, lr, lsl #2]
100103c6:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
100103ca:	0e0d      	lsrs	r5, r1, #24
100103cc:	fa5f f78c 	uxtb.w	r7, ip
100103d0:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100103d4:	f507 7740 	add.w	r7, r7, #768	@ 0x300
100103d8:	ea85 0508 	eor.w	r5, r5, r8
100103dc:	ea4f 6812 	mov.w	r8, r2, lsr #24
100103e0:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
100103e4:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100103e8:	ea88 0707 	eor.w	r7, r8, r7
100103ec:	ea4f 681c 	mov.w	r8, ip, lsr #24
100103f0:	f3c2 4a07 	ubfx	sl, r2, #16, #8
100103f4:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100103f8:	f3c2 2207 	ubfx	r2, r2, #8, #8
100103fc:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010400:	ea88 080e 	eor.w	r8, r8, lr
10010404:	f3cc 4e07 	ubfx	lr, ip, #16, #8
10010408:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1001040c:	9202      	str	r2, [sp, #8]
1001040e:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
10010412:	6f02      	ldr	r2, [r0, #112]	@ 0x70
10010414:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
10010418:	ea89 0606 	eor.w	r6, r9, r6
1001041c:	4056      	eors	r6, r2
1001041e:	9a02      	ldr	r2, [sp, #8]
10010420:	f3c4 4e07 	ubfx	lr, r4, #16, #8
10010424:	ea86 060b 	eor.w	r6, r6, fp
10010428:	4056      	eors	r6, r2
1001042a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1001042e:	6f42      	ldr	r2, [r0, #116]	@ 0x74
10010430:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
10010434:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
10010438:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1001043c:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
10010440:	4055      	eors	r5, r2
10010442:	6f82      	ldr	r2, [r0, #120]	@ 0x78
10010444:	f3c1 4907 	ubfx	r9, r1, #16, #8
10010448:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
1001044c:	f3c1 2107 	ubfx	r1, r1, #8, #8
10010450:	ea85 050e 	eor.w	r5, r5, lr
10010454:	4057      	eors	r7, r2
10010456:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1001045a:	6fc2      	ldr	r2, [r0, #124]	@ 0x7c
1001045c:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
10010460:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
10010464:	ea85 0c0c 	eor.w	ip, r5, ip
10010468:	ea88 0e02 	eor.w	lr, r8, r2
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
1001046c:	fa5f f28c 	uxtb.w	r2, ip
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
10010470:	ea8e 0e0a 	eor.w	lr, lr, sl
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010474:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
10010478:	f3c4 2407 	ubfx	r4, r4, #8, #8
1001047c:	f509 7980 	add.w	r9, r9, #256	@ 0x100
10010480:	ea8e 0e01 	eor.w	lr, lr, r1
10010484:	f504 7400 	add.w	r4, r4, #512	@ 0x200
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010488:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
1001048c:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
10010490:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010494:	f3ce 4207 	ubfx	r2, lr, #16, #8
10010498:	f502 7280 	add.w	r2, r2, #256	@ 0x100
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
1001049c:	ea87 0709 	eor.w	r7, r7, r9
100104a0:	4067      	eors	r7, r4
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
100104a2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100104a6:	9202      	str	r2, [sp, #8]
100104a8:	f3c7 2207 	ubfx	r2, r7, #8, #8
100104ac:	f502 7200 	add.w	r2, r2, #512	@ 0x200
100104b0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
100104b4:	f8cd 800c 	str.w	r8, [sp, #12]
100104b8:	b2fa      	uxtb	r2, r7
100104ba:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100104be:	fa5f f886 	uxtb.w	r8, r6
100104c2:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
100104c6:	f3c6 4207 	ubfx	r2, r6, #16, #8
100104ca:	f502 7280 	add.w	r2, r2, #256	@ 0x100
100104ce:	f508 7840 	add.w	r8, r8, #768	@ 0x300
100104d2:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
100104d6:	f8cd 9010 	str.w	r9, [sp, #16]
100104da:	f3ce 2207 	ubfx	r2, lr, #8, #8
100104de:	f502 7200 	add.w	r2, r2, #512	@ 0x200
100104e2:	f3cc 4907 	ubfx	r9, ip, #16, #8
100104e6:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
100104ea:	fa5f f28e 	uxtb.w	r2, lr
100104ee:	ea4f 6e1e 	mov.w	lr, lr, lsr #24
100104f2:	f8cd e014 	str.w	lr, [sp, #20]
100104f6:	ea4f 6e16 	mov.w	lr, r6, lsr #24
100104fa:	f3c6 2607 	ubfx	r6, r6, #8, #8
100104fe:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
10010502:	ea8b 0b01 	eor.w	fp, fp, r1
10010506:	f506 7100 	add.w	r1, r6, #512	@ 0x200
1001050a:	ea4f 661c 	mov.w	r6, ip, lsr #24
1001050e:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010512:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
10010516:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1001051a:	ea86 0a04 	eor.w	sl, r6, r4
1001051e:	0e3c      	lsrs	r4, r7, #24
10010520:	f3c7 4707 	ubfx	r7, r7, #16, #8
10010524:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
10010528:	ea84 0e02 	eor.w	lr, r4, r2
1001052c:	f8d0 4080 	ldr.w	r4, [r0, #128]	@ 0x80
10010530:	ea8b 0b04 	eor.w	fp, fp, r4
10010534:	9c02      	ldr	r4, [sp, #8]
10010536:	ea8b 0b04 	eor.w	fp, fp, r4
1001053a:	9c03      	ldr	r4, [sp, #12]
1001053c:	ea8b 0604 	eor.w	r6, fp, r4
10010540:	f8d0 4084 	ldr.w	r4, [r0, #132]	@ 0x84
10010544:	ea8a 0a04 	eor.w	sl, sl, r4
10010548:	9c04      	ldr	r4, [sp, #16]
1001054a:	ea8a 0a04 	eor.w	sl, sl, r4
1001054e:	f8d0 4088 	ldr.w	r4, [r0, #136]	@ 0x88
10010552:	f507 7280 	add.w	r2, r7, #256	@ 0x100
10010556:	ea8e 0704 	eor.w	r7, lr, r4
1001055a:	f8dd e014 	ldr.w	lr, [sp, #20]
1001055e:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
10010562:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010566:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1001056a:	ea8e 0404 	eor.w	r4, lr, r4
1001056e:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
10010572:	ea87 070e 	eor.w	r7, r7, lr
10010576:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1001057a:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
1001057e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
10010582:	4057      	eors	r7, r2
10010584:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
10010588:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
1001058c:	f853 102c 	ldr.w	r1, [r3, ip, lsl #2]
10010590:	ea8a 0505 	eor.w	r5, sl, r5
10010594:	ea84 0c02 	eor.w	ip, r4, r2
10010598:	b2ea      	uxtb	r2, r5
1001059a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1001059e:	ea8c 0c0e 	eor.w	ip, ip, lr
100105a2:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
100105a6:	b2fa      	uxtb	r2, r7
100105a8:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100105ac:	ea8c 0c01 	eor.w	ip, ip, r1
100105b0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
100105b4:	fa5f f28c 	uxtb.w	r2, ip
100105b8:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100105bc:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
100105c0:	b2f2      	uxtb	r2, r6
100105c2:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100105c6:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
100105ca:	0e32      	lsrs	r2, r6, #24
100105cc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100105d0:	4054      	eors	r4, r2
100105d2:	0e2a      	lsrs	r2, r5, #24
100105d4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100105d8:	4051      	eors	r1, r2
100105da:	0e3a      	lsrs	r2, r7, #24
100105dc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100105e0:	ea82 0208 	eor.w	r2, r2, r8
100105e4:	ea4f 681c 	mov.w	r8, ip, lsr #24
100105e8:	9202      	str	r2, [sp, #8]
100105ea:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100105ee:	ea88 080e 	eor.w	r8, r8, lr
100105f2:	f3cc 4e07 	ubfx	lr, ip, #16, #8
100105f6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
100105fa:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
100105fe:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
10010602:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
10010606:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
1001060a:	f3c6 4c07 	ubfx	ip, r6, #16, #8
1001060e:	f3c6 2607 	ubfx	r6, r6, #8, #8
10010612:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
10010616:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1001061a:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
1001061e:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
10010622:	f3c5 4607 	ubfx	r6, r5, #16, #8
10010626:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1001062a:	f3c5 2507 	ubfx	r5, r5, #8, #8
1001062e:	f505 7500 	add.w	r5, r5, #512	@ 0x200
10010632:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
10010636:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1001063a:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90
1001063e:	f3c7 4607 	ubfx	r6, r7, #16, #8
10010642:	f3c7 2707 	ubfx	r7, r7, #8, #8
10010646:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1001064a:	4054      	eors	r4, r2
1001064c:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010650:	9a02      	ldr	r2, [sp, #8]
10010652:	ea84 040b 	eor.w	r4, r4, fp
10010656:	407c      	eors	r4, r7
10010658:	f8d0 7094 	ldr.w	r7, [r0, #148]	@ 0x94
1001065c:	4079      	eors	r1, r7
1001065e:	f8d0 7098 	ldr.w	r7, [r0, #152]	@ 0x98
10010662:	f506 7680 	add.w	r6, r6, #256	@ 0x100
10010666:	407a      	eors	r2, r7
10010668:	f8d0 709c 	ldr.w	r7, [r0, #156]	@ 0x9c
1001066c:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
10010670:	ea82 020e 	eor.w	r2, r2, lr
10010674:	ea82 020c 	eor.w	r2, r2, ip
10010678:	ea88 0c07 	eor.w	ip, r8, r7
1001067c:	ea8c 0c06 	eor.w	ip, ip, r6
10010680:	ea8c 0c05 	eor.w	ip, ip, r5
    if (r > 5) {
10010684:	9d00      	ldr	r5, [sp, #0]
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010686:	ea81 0109 	eor.w	r1, r1, r9
    if (r > 5) {
1001068a:	2d05      	cmp	r5, #5
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
1001068c:	ea81 010a 	eor.w	r1, r1, sl
    if (r > 5) {
10010690:	f240 81ee 	bls.w	10010a70 <AesDecrypt_C+0xcb4>
        DEC_ROUND_S_T(40); DEC_ROUND_T_S(40);
10010694:	b2cd      	uxtb	r5, r1
10010696:	f505 7540 	add.w	r5, r5, #768	@ 0x300
1001069a:	f3c2 4a07 	ubfx	sl, r2, #16, #8
1001069e:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
100106a2:	b2d5      	uxtb	r5, r2
100106a4:	f505 7540 	add.w	r5, r5, #768	@ 0x300
100106a8:	f3c1 4907 	ubfx	r9, r1, #16, #8
100106ac:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
100106b0:	fa5f f58c 	uxtb.w	r5, ip
100106b4:	f505 7540 	add.w	r5, r5, #768	@ 0x300
100106b8:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
100106bc:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
100106c0:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
100106c4:	b2e5      	uxtb	r5, r4
100106c6:	f505 7540 	add.w	r5, r5, #768	@ 0x300
100106ca:	f509 7980 	add.w	r9, r9, #256	@ 0x100
100106ce:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
100106d2:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
100106d6:	0e25      	lsrs	r5, r4, #24
100106d8:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100106dc:	406e      	eors	r6, r5
100106de:	0e0d      	lsrs	r5, r1, #24
100106e0:	f3c1 2107 	ubfx	r1, r1, #8, #8
100106e4:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100106e8:	ea85 0508 	eor.w	r5, r5, r8
100106ec:	ea4f 6812 	mov.w	r8, r2, lsr #24
100106f0:	f3c2 2207 	ubfx	r2, r2, #8, #8
100106f4:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100106f8:	ea88 0707 	eor.w	r7, r8, r7
100106fc:	ea4f 681c 	mov.w	r8, ip, lsr #24
10010700:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010704:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010708:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1001070c:	9202      	str	r2, [sp, #8]
1001070e:	ea88 080e 	eor.w	r8, r8, lr
10010712:	f3cc 4e07 	ubfx	lr, ip, #16, #8
10010716:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1001071a:	f8d0 20a0 	ldr.w	r2, [r0, #160]	@ 0xa0
1001071e:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
10010722:	4056      	eors	r6, r2
10010724:	9a02      	ldr	r2, [sp, #8]
10010726:	f3c4 4e07 	ubfx	lr, r4, #16, #8
1001072a:	ea86 060b 	eor.w	r6, r6, fp
1001072e:	4056      	eors	r6, r2
10010730:	f3cc 2c07 	ubfx	ip, ip, #8, #8
10010734:	f8d0 20a4 	ldr.w	r2, [r0, #164]	@ 0xa4
10010738:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1001073c:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
10010740:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010744:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
10010748:	4055      	eors	r5, r2
1001074a:	f8d0 20a8 	ldr.w	r2, [r0, #168]	@ 0xa8
1001074e:	ea85 050e 	eor.w	r5, r5, lr
10010752:	4057      	eors	r7, r2
10010754:	f501 7100 	add.w	r1, r1, #512	@ 0x200
10010758:	f8d0 20ac 	ldr.w	r2, [r0, #172]	@ 0xac
1001075c:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
10010760:	ea85 050c 	eor.w	r5, r5, ip
10010764:	f3c4 2407 	ubfx	r4, r4, #8, #8
10010768:	ea88 0c02 	eor.w	ip, r8, r2
1001076c:	b2ea      	uxtb	r2, r5
1001076e:	ea8c 0c0a 	eor.w	ip, ip, sl
10010772:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010776:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1001077a:	ea8c 0c01 	eor.w	ip, ip, r1
1001077e:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
10010782:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
10010786:	f3cc 4207 	ubfx	r2, ip, #16, #8
1001078a:	ea87 0709 	eor.w	r7, r7, r9
1001078e:	f502 7280 	add.w	r2, r2, #256	@ 0x100
10010792:	4067      	eors	r7, r4
10010794:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
10010798:	f3c7 2207 	ubfx	r2, r7, #8, #8
1001079c:	f502 7200 	add.w	r2, r2, #512	@ 0x200
100107a0:	ea4f 6816 	mov.w	r8, r6, lsr #24
100107a4:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
100107a8:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100107ac:	b2fa      	uxtb	r2, r7
100107ae:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100107b2:	ea4f 6a1c 	mov.w	sl, ip, lsr #24
100107b6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
100107ba:	f3c6 4207 	ubfx	r2, r6, #16, #8
100107be:	f502 7280 	add.w	r2, r2, #256	@ 0x100
100107c2:	ea88 080e 	eor.w	r8, r8, lr
100107c6:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
100107ca:	f3cc 2207 	ubfx	r2, ip, #8, #8
100107ce:	f502 7200 	add.w	r2, r2, #512	@ 0x200
100107d2:	ea4f 6e15 	mov.w	lr, r5, lsr #24
100107d6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100107da:	9202      	str	r2, [sp, #8]
100107dc:	fa5f f28c 	uxtb.w	r2, ip
100107e0:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100107e4:	fa5f fc86 	uxtb.w	ip, r6
100107e8:	f3c6 2607 	ubfx	r6, r6, #8, #8
100107ec:	f506 7600 	add.w	r6, r6, #512	@ 0x200
100107f0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100107f4:	9603      	str	r6, [sp, #12]
100107f6:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100107fa:	ea8e 0101 	eor.w	r1, lr, r1
100107fe:	ea4f 6e17 	mov.w	lr, r7, lsr #24
10010802:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
10010806:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1001080a:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1001080e:	ea8e 0602 	eor.w	r6, lr, r2
10010812:	f8d0 20b0 	ldr.w	r2, [r0, #176]	@ 0xb0
10010816:	ea88 0802 	eor.w	r8, r8, r2
1001081a:	f8d0 20b4 	ldr.w	r2, [r0, #180]	@ 0xb4
1001081e:	f3c5 4e07 	ubfx	lr, r5, #16, #8
10010822:	4051      	eors	r1, r2
10010824:	9a02      	ldr	r2, [sp, #8]
10010826:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1001082a:	ea81 010b 	eor.w	r1, r1, fp
1001082e:	4051      	eors	r1, r2
10010830:	f8d0 20b8 	ldr.w	r2, [r0, #184]	@ 0xb8
10010834:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010838:	4056      	eors	r6, r2
1001083a:	ea86 020e 	eor.w	r2, r6, lr
1001083e:	9e03      	ldr	r6, [sp, #12]
10010840:	f3c5 2507 	ubfx	r5, r5, #8, #8
10010844:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
10010848:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1001084c:	ea88 0804 	eor.w	r8, r8, r4
10010850:	f3c7 4707 	ubfx	r7, r7, #16, #8
10010854:	ea88 0409 	eor.w	r4, r8, r9
10010858:	f853 902a 	ldr.w	r9, [r3, sl, lsl #2]
1001085c:	f507 7780 	add.w	r7, r7, #256	@ 0x100
10010860:	4072      	eors	r2, r6
10010862:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
10010866:	f8d0 50bc 	ldr.w	r5, [r0, #188]	@ 0xbc
1001086a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1001086e:	ea89 0c0c 	eor.w	ip, r9, ip
10010872:	ea8c 0c05 	eor.w	ip, ip, r5
        if (r > 6) {
10010876:	9d00      	ldr	r5, [sp, #0]
        DEC_ROUND_S_T(40); DEC_ROUND_T_S(40);
10010878:	ea8c 0c07 	eor.w	ip, ip, r7
        if (r > 6) {
1001087c:	2d06      	cmp	r5, #6
        DEC_ROUND_S_T(40); DEC_ROUND_T_S(40);
1001087e:	ea8c 0c06 	eor.w	ip, ip, r6
        if (r > 6) {
10010882:	f000 80f5 	beq.w	10010a70 <AesDecrypt_C+0xcb4>
            DEC_ROUND_S_T(48); DEC_ROUND_T_S(48);
10010886:	b2cd      	uxtb	r5, r1
10010888:	f505 7540 	add.w	r5, r5, #768	@ 0x300
1001088c:	f3c2 4a07 	ubfx	sl, r2, #16, #8
10010890:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
10010894:	b2d5      	uxtb	r5, r2
10010896:	f505 7540 	add.w	r5, r5, #768	@ 0x300
1001089a:	f3c1 4907 	ubfx	r9, r1, #16, #8
1001089e:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
100108a2:	fa5f f58c 	uxtb.w	r5, ip
100108a6:	f505 7540 	add.w	r5, r5, #768	@ 0x300
100108aa:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
100108ae:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
100108b2:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
100108b6:	b2e5      	uxtb	r5, r4
100108b8:	f505 7540 	add.w	r5, r5, #768	@ 0x300
100108bc:	f509 7980 	add.w	r9, r9, #256	@ 0x100
100108c0:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
100108c4:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
100108c8:	0e25      	lsrs	r5, r4, #24
100108ca:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100108ce:	406e      	eors	r6, r5
100108d0:	0e0d      	lsrs	r5, r1, #24
100108d2:	f3c1 2107 	ubfx	r1, r1, #8, #8
100108d6:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100108da:	ea85 0508 	eor.w	r5, r5, r8
100108de:	ea4f 6812 	mov.w	r8, r2, lsr #24
100108e2:	f3c2 2207 	ubfx	r2, r2, #8, #8
100108e6:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100108ea:	ea88 0707 	eor.w	r7, r8, r7
100108ee:	ea4f 681c 	mov.w	r8, ip, lsr #24
100108f2:	f502 7200 	add.w	r2, r2, #512	@ 0x200
100108f6:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100108fa:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100108fe:	9202      	str	r2, [sp, #8]
10010900:	ea88 080e 	eor.w	r8, r8, lr
10010904:	f3cc 4e07 	ubfx	lr, ip, #16, #8
10010908:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1001090c:	f8d0 20c0 	ldr.w	r2, [r0, #192]	@ 0xc0
10010910:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
10010914:	4056      	eors	r6, r2
10010916:	9a02      	ldr	r2, [sp, #8]
10010918:	f3c4 4e07 	ubfx	lr, r4, #16, #8
1001091c:	ea86 060b 	eor.w	r6, r6, fp
10010920:	4056      	eors	r6, r2
10010922:	f3cc 2c07 	ubfx	ip, ip, #8, #8
10010926:	f8d0 20c4 	ldr.w	r2, [r0, #196]	@ 0xc4
1001092a:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1001092e:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
10010932:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010936:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1001093a:	4055      	eors	r5, r2
1001093c:	f8d0 20c8 	ldr.w	r2, [r0, #200]	@ 0xc8
10010940:	ea85 050e 	eor.w	r5, r5, lr
10010944:	4057      	eors	r7, r2
10010946:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1001094a:	f8d0 20cc 	ldr.w	r2, [r0, #204]	@ 0xcc
1001094e:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
10010952:	ea85 050c 	eor.w	r5, r5, ip
10010956:	f3c4 2407 	ubfx	r4, r4, #8, #8
1001095a:	ea88 0c02 	eor.w	ip, r8, r2
1001095e:	b2ea      	uxtb	r2, r5
10010960:	ea8c 0c0a 	eor.w	ip, ip, sl
10010964:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010968:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1001096c:	ea8c 0c01 	eor.w	ip, ip, r1
10010970:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
10010974:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
10010978:	f3cc 4207 	ubfx	r2, ip, #16, #8
1001097c:	ea87 0709 	eor.w	r7, r7, r9
10010980:	f502 7280 	add.w	r2, r2, #256	@ 0x100
10010984:	4067      	eors	r7, r4
10010986:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1001098a:	f3c7 2207 	ubfx	r2, r7, #8, #8
1001098e:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010992:	ea4f 6816 	mov.w	r8, r6, lsr #24
10010996:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
1001099a:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1001099e:	b2fa      	uxtb	r2, r7
100109a0:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100109a4:	ea4f 6a1c 	mov.w	sl, ip, lsr #24
100109a8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
100109ac:	f3c6 4207 	ubfx	r2, r6, #16, #8
100109b0:	f502 7280 	add.w	r2, r2, #256	@ 0x100
100109b4:	ea88 080e 	eor.w	r8, r8, lr
100109b8:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
100109bc:	f3cc 2207 	ubfx	r2, ip, #8, #8
100109c0:	f502 7200 	add.w	r2, r2, #512	@ 0x200
100109c4:	ea4f 6e15 	mov.w	lr, r5, lsr #24
100109c8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100109cc:	9202      	str	r2, [sp, #8]
100109ce:	fa5f f28c 	uxtb.w	r2, ip
100109d2:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100109d6:	fa5f fc86 	uxtb.w	ip, r6
100109da:	f3c6 2607 	ubfx	r6, r6, #8, #8
100109de:	f506 7600 	add.w	r6, r6, #512	@ 0x200
100109e2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100109e6:	9603      	str	r6, [sp, #12]
100109e8:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100109ec:	ea8e 0101 	eor.w	r1, lr, r1
100109f0:	ea4f 6e17 	mov.w	lr, r7, lsr #24
100109f4:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
100109f8:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100109fc:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
10010a00:	ea8e 0602 	eor.w	r6, lr, r2
10010a04:	f8d0 20d0 	ldr.w	r2, [r0, #208]	@ 0xd0
10010a08:	ea88 0802 	eor.w	r8, r8, r2
10010a0c:	f8d0 20d4 	ldr.w	r2, [r0, #212]	@ 0xd4
10010a10:	f3c5 4e07 	ubfx	lr, r5, #16, #8
10010a14:	4051      	eors	r1, r2
10010a16:	9a02      	ldr	r2, [sp, #8]
10010a18:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
10010a1c:	ea81 010b 	eor.w	r1, r1, fp
10010a20:	4051      	eors	r1, r2
10010a22:	f8d0 20d8 	ldr.w	r2, [r0, #216]	@ 0xd8
10010a26:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010a2a:	4056      	eors	r6, r2
10010a2c:	f3c7 4707 	ubfx	r7, r7, #16, #8
10010a30:	f3c5 2507 	ubfx	r5, r5, #8, #8
10010a34:	ea86 020e 	eor.w	r2, r6, lr
10010a38:	f507 7780 	add.w	r7, r7, #256	@ 0x100
10010a3c:	9e03      	ldr	r6, [sp, #12]
10010a3e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010a42:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
10010a46:	f505 7500 	add.w	r5, r5, #512	@ 0x200
10010a4a:	ea88 0804 	eor.w	r8, r8, r4
10010a4e:	ea88 0409 	eor.w	r4, r8, r9
10010a52:	f853 902a 	ldr.w	r9, [r3, sl, lsl #2]
10010a56:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
10010a5a:	f8d0 30dc 	ldr.w	r3, [r0, #220]	@ 0xdc
10010a5e:	ea89 0c0c 	eor.w	ip, r9, ip
10010a62:	ea8c 0c03 	eor.w	ip, ip, r3
10010a66:	ea8c 0c07 	eor.w	ip, ip, r7
10010a6a:	4072      	eors	r2, r6
10010a6c:	ea8c 0c05 	eor.w	ip, ip, r5

#ifndef WC_NO_CACHE_RESISTANT
    t0 |= PreFetchTd4();
#endif

    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010a70:	4b31      	ldr	r3, [pc, #196]	@ (10010b38 <AesDecrypt_C+0xd7c>)
10010a72:	0e25      	lsrs	r5, r4, #24
10010a74:	b2ce      	uxtb	r6, r1
10010a76:	5d5d      	ldrb	r5, [r3, r5]
10010a78:	5d9e      	ldrb	r6, [r3, r6]
10010a7a:	ea46 6605 	orr.w	r6, r6, r5, lsl #24
                          GETBYTE(t2, 1), GETBYTE(t1, 0)) ^ rk[0];
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010a7e:	0e0d      	lsrs	r5, r1, #24
                          GETBYTE(t3, 1), GETBYTE(t2, 0)) ^ rk[1];
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010a80:	fa5f fe8c 	uxtb.w	lr, ip
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010a84:	5d5f      	ldrb	r7, [r3, r5]
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010a86:	f813 e00e 	ldrb.w	lr, [r3, lr]
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010a8a:	b2d5      	uxtb	r5, r2
10010a8c:	5d5d      	ldrb	r5, [r3, r5]
10010a8e:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010a92:	0e17      	lsrs	r7, r2, #24
10010a94:	5ddf      	ldrb	r7, [r3, r7]
10010a96:	ea4e 6e07 	orr.w	lr, lr, r7, lsl #24
                          GETBYTE(t0, 1), GETBYTE(t3, 0)) ^ rk[2];
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010a9a:	ea4f 671c 	mov.w	r7, ip, lsr #24
10010a9e:	f813 8007 	ldrb.w	r8, [r3, r7]
10010aa2:	b2e7      	uxtb	r7, r4
10010aa4:	5ddf      	ldrb	r7, [r3, r7]
10010aa6:	ea47 6708 	orr.w	r7, r7, r8, lsl #24
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010aaa:	f3cc 4807 	ubfx	r8, ip, #16, #8
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010aae:	f3cc 2c07 	ubfx	ip, ip, #8, #8
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010ab2:	f813 8008 	ldrb.w	r8, [r3, r8]
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010ab6:	f813 c00c 	ldrb.w	ip, [r3, ip]
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010aba:	ea46 4608 	orr.w	r6, r6, r8, lsl #16
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010abe:	f3c4 4807 	ubfx	r8, r4, #16, #8
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010ac2:	f3c4 2407 	ubfx	r4, r4, #8, #8
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010ac6:	f813 8008 	ldrb.w	r8, [r3, r8]
10010aca:	ea45 4508 	orr.w	r5, r5, r8, lsl #16
10010ace:	ea45 250c 	orr.w	r5, r5, ip, lsl #8
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010ad2:	f813 c004 	ldrb.w	ip, [r3, r4]
10010ad6:	f3c1 4407 	ubfx	r4, r1, #16, #8
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010ada:	f3c1 2107 	ubfx	r1, r1, #8, #8
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010ade:	5d1c      	ldrb	r4, [r3, r4]
10010ae0:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
10010ae4:	ea44 240c 	orr.w	r4, r4, ip, lsl #8
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010ae8:	f813 c001 	ldrb.w	ip, [r3, r1]
10010aec:	f3c2 4107 	ubfx	r1, r2, #16, #8
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010af0:	f3c2 2207 	ubfx	r2, r2, #8, #8
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010af4:	5c59      	ldrb	r1, [r3, r1]
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010af6:	5c9b      	ldrb	r3, [r3, r2]
    rk += r * 8;
10010af8:	9a00      	ldr	r2, [sp, #0]
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010afa:	ea46 2303 	orr.w	r3, r6, r3, lsl #8
    rk += r * 8;
10010afe:	eb00 1642 	add.w	r6, r0, r2, lsl #5
10010b02:	0152      	lsls	r2, r2, #5
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010b04:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
                          GETBYTE(t2, 1), GETBYTE(t1, 0)) ^ rk[0];
10010b08:	5882      	ldr	r2, [r0, r2]
10010b0a:	4053      	eors	r3, r2
                          GETBYTE(t3, 1), GETBYTE(t2, 0)) ^ rk[1];
10010b0c:	6872      	ldr	r2, [r6, #4]
10010b0e:	ea85 0002 	eor.w	r0, r5, r2
                          GETBYTE(t0, 1), GETBYTE(t3, 0)) ^ rk[2];
10010b12:	68b2      	ldr	r2, [r6, #8]
    s1 = ByteReverseWord32(s1);
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    XMEMCPY(outBlock,                  &s0, sizeof(s0));
10010b14:	9d01      	ldr	r5, [sp, #4]
                          GETBYTE(t0, 1), GETBYTE(t3, 0)) ^ rk[2];
10010b16:	4062      	eors	r2, r4
                          GETBYTE(t1, 1), GETBYTE(t0, 0)) ^ rk[3];
10010b18:	68f4      	ldr	r4, [r6, #12]
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010b1a:	ea41 210c 	orr.w	r1, r1, ip, lsl #8
10010b1e:	ba1b      	rev	r3, r3
    XMEMCPY(outBlock,                  &s0, sizeof(s0));
10010b20:	602b      	str	r3, [r5, #0]
                          GETBYTE(t1, 1), GETBYTE(t0, 0)) ^ rk[3];
10010b22:	ea81 0304 	eor.w	r3, r1, r4
10010b26:	ba00      	rev	r0, r0
    s2 = ByteReverseWord32(s2);
10010b28:	ba12      	rev	r2, r2
    s3 = ByteReverseWord32(s3);
10010b2a:	ba1b      	rev	r3, r3
    XMEMCPY(outBlock + sizeof(s0),     &s1, sizeof(s1));
10010b2c:	6068      	str	r0, [r5, #4]
    XMEMCPY(outBlock + 2 * sizeof(s0), &s2, sizeof(s2));
10010b2e:	60aa      	str	r2, [r5, #8]
    XMEMCPY(outBlock + 3 * sizeof(s0), &s3, sizeof(s3));
10010b30:	60eb      	str	r3, [r5, #12]

}
10010b32:	b007      	add	sp, #28
10010b34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10010b38:	10021520 	.word	0x10021520

10010b3c <wc_AesSetKeyLocal.constprop.0>:
    #ifdef WOLFSSL_IMX6_CAAM_BLOB
        byte   local[32];
        word32 localSz = 32;
    #endif

        if (aes == NULL)
10010b3c:	2800      	cmp	r0, #0
10010b3e:	f000 827d 	beq.w	1001103c <wc_AesSetKeyLocal.constprop.0+0x500>
    static WARN_UNUSED_RESULT int wc_AesSetKeyLocal(
10010b42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        ret = wc_debug_CipherLifecycleCheck(aes->CipherLifecycleTag, 0);
        if (ret < 0)
            return ret;
#endif

        switch (keylen) {
10010b46:	f1a2 0510 	sub.w	r5, r2, #16
10010b4a:	2d10      	cmp	r5, #16
    static WARN_UNUSED_RESULT int wc_AesSetKeyLocal(
10010b4c:	b085      	sub	sp, #20
10010b4e:	4692      	mov	sl, r2
        switch (keylen) {
10010b50:	d804      	bhi.n	10010b5c <wc_AesSetKeyLocal.constprop.0+0x20>
10010b52:	461f      	mov	r7, r3
10010b54:	4bd8      	ldr	r3, [pc, #864]	@ (10010eb8 <wc_AesSetKeyLocal.constprop.0+0x37c>)
10010b56:	40eb      	lsrs	r3, r5
10010b58:	07db      	lsls	r3, r3, #31
10010b5a:	d404      	bmi.n	10010b66 <wc_AesSetKeyLocal.constprop.0+0x2a>
10010b5c:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
    #endif
    #ifdef WOLFSSL_IMX6_CAAM_BLOB
        ForceZero(local, sizeof(local));
    #endif
        return ret;
    } /* wc_AesSetKeyLocal */
10010b60:	b005      	add	sp, #20
10010b62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        aes->rounds = (keylen/4) + 6;
10010b66:	ea4f 0892 	mov.w	r8, r2, lsr #2
10010b6a:	f108 0306 	add.w	r3, r8, #6
10010b6e:	4689      	mov	r9, r1
10010b70:	4604      	mov	r4, r0
        aes->keylen = (int)keylen;
10010b72:	f8c0 20f4 	str.w	r2, [r0, #244]	@ 0xf4
        aes->rounds = (keylen/4) + 6;
10010b76:	f8c0 30f0 	str.w	r3, [r0, #240]	@ 0xf0
        XMEMCPY(aes->key, userKey, keylen);
10010b7a:	4606      	mov	r6, r0
            return ret;
    }
#endif

    if (iv)
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
10010b7c:	f100 0bf8 	add.w	fp, r0, #248	@ 0xf8
    if (iv)
10010b80:	2f00      	cmp	r7, #0
10010b82:	d047      	beq.n	10010c14 <wc_AesSetKeyLocal.constprop.0+0xd8>
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
10010b84:	f8d7 e000 	ldr.w	lr, [r7]
10010b88:	f8d7 c004 	ldr.w	ip, [r7, #4]
10010b8c:	68bd      	ldr	r5, [r7, #8]
10010b8e:	68fb      	ldr	r3, [r7, #12]
10010b90:	f8c0 e0f8 	str.w	lr, [r0, #248]	@ 0xf8
10010b94:	f8cb c004 	str.w	ip, [fp, #4]
10010b98:	f8cb 5008 	str.w	r5, [fp, #8]
10010b9c:	f8cb 300c 	str.w	r3, [fp, #12]
        XMEMCPY(aes->key, userKey, keylen);
10010ba0:	f005 fe36 	bl	10016810 <memcpy>
    if ((((size_t)in & 0x3) == 0) &&
        (((size_t)out & 0x3) == 0))
#endif
    {
        word32 count = byteCount/(word32)sizeof(word32);
        for (i = 0; i < count; i++)
10010ba4:	eb04 0888 	add.w	r8, r4, r8, lsl #2
10010ba8:	4625      	mov	r5, r4
    static WARN_UNUSED_RESULT int wc_AesSetKeyLocal(
10010baa:	4623      	mov	r3, r4
            out[i] = ByteReverseWord32(in[i]);
10010bac:	681a      	ldr	r2, [r3, #0]
10010bae:	ba12      	rev	r2, r2
10010bb0:	f843 2b04 	str.w	r2, [r3], #4
        for (i = 0; i < count; i++)
10010bb4:	4598      	cmp	r8, r3
10010bb6:	d1f9      	bne.n	10010bac <wc_AesSetKeyLocal.constprop.0+0x70>
    XMEMCPY(rk, key, keySz);
10010bb8:	4649      	mov	r1, r9
10010bba:	4652      	mov	r2, sl
10010bbc:	4620      	mov	r0, r4
10010bbe:	f005 fe27 	bl	10016810 <memcpy>
10010bc2:	4623      	mov	r3, r4
            out[i] = ByteReverseWord32(in[i]);
10010bc4:	681a      	ldr	r2, [r3, #0]
10010bc6:	ba12      	rev	r2, r2
10010bc8:	f843 2b04 	str.w	r2, [r3], #4
        for (i = 0; i < count; i++)
10010bcc:	4598      	cmp	r8, r3
10010bce:	d1f9      	bne.n	10010bc4 <wc_AesSetKeyLocal.constprop.0+0x88>
    switch (keySz) {
10010bd0:	f1ba 0f18 	cmp.w	sl, #24
10010bd4:	f000 81e8 	beq.w	10010fa8 <wc_AesSetKeyLocal.constprop.0+0x46c>
10010bd8:	f1ba 0f20 	cmp.w	sl, #32
10010bdc:	f000 815d 	beq.w	10010e9a <wc_AesSetKeyLocal.constprop.0+0x35e>
10010be0:	f1ba 0f10 	cmp.w	sl, #16
10010be4:	f000 8117 	beq.w	10010e16 <wc_AesSetKeyLocal.constprop.0+0x2da>
    if (dir == AES_DECRYPTION) {
10010be8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10010bea:	2b01      	cmp	r3, #1
10010bec:	d01d      	beq.n	10010c2a <wc_AesSetKeyLocal.constprop.0+0xee>
    if (iv)
10010bee:	2f00      	cmp	r7, #0
10010bf0:	f000 8108 	beq.w	10010e04 <wc_AesSetKeyLocal.constprop.0+0x2c8>
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
10010bf4:	6838      	ldr	r0, [r7, #0]
10010bf6:	6879      	ldr	r1, [r7, #4]
10010bf8:	68ba      	ldr	r2, [r7, #8]
10010bfa:	68fb      	ldr	r3, [r7, #12]
10010bfc:	f8c4 00f8 	str.w	r0, [r4, #248]	@ 0xf8
10010c00:	f8cb 1004 	str.w	r1, [fp, #4]
10010c04:	f8cb 2008 	str.w	r2, [fp, #8]
10010c08:	f8cb 300c 	str.w	r3, [fp, #12]
        return ret;
10010c0c:	2000      	movs	r0, #0
    } /* wc_AesSetKeyLocal */
10010c0e:	b005      	add	sp, #20
10010c10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    else
        XMEMSET(aes->reg,  0, AES_BLOCK_SIZE);
10010c14:	f8c0 70f8 	str.w	r7, [r0, #248]	@ 0xf8
10010c18:	f8cb 7004 	str.w	r7, [fp, #4]
10010c1c:	f8cb 7008 	str.w	r7, [fp, #8]
10010c20:	f8cb 700c 	str.w	r7, [fp, #12]
        XMEMCPY(aes->key, userKey, keylen);
10010c24:	f005 fdf4 	bl	10016810 <memcpy>
10010c28:	e7bc      	b.n	10010ba4 <wc_AesSetKeyLocal.constprop.0+0x68>
        for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
10010c2a:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
10010c2e:	009e      	lsls	r6, r3, #2
10010c30:	d025      	beq.n	10010c7e <wc_AesSetKeyLocal.constprop.0+0x142>
10010c32:	eb04 1303 	add.w	r3, r4, r3, lsl #4
10010c36:	4622      	mov	r2, r4
10010c38:	2100      	movs	r1, #0
            temp = rk[i    ]; rk[i    ] = rk[j    ]; rk[j    ] = temp;
10010c3a:	6810      	ldr	r0, [r2, #0]
10010c3c:	f8d3 c000 	ldr.w	ip, [r3]
10010c40:	f8c2 c000 	str.w	ip, [r2]
10010c44:	6018      	str	r0, [r3, #0]
            temp = rk[i + 1]; rk[i + 1] = rk[j + 1]; rk[j + 1] = temp;
10010c46:	6850      	ldr	r0, [r2, #4]
10010c48:	f8d3 c004 	ldr.w	ip, [r3, #4]
10010c4c:	f8c2 c004 	str.w	ip, [r2, #4]
10010c50:	6058      	str	r0, [r3, #4]
            temp = rk[i + 2]; rk[i + 2] = rk[j + 2]; rk[j + 2] = temp;
10010c52:	6890      	ldr	r0, [r2, #8]
10010c54:	f8d3 c008 	ldr.w	ip, [r3, #8]
10010c58:	f8c2 c008 	str.w	ip, [r2, #8]
10010c5c:	6098      	str	r0, [r3, #8]
            temp = rk[i + 3]; rk[i + 3] = rk[j + 3]; rk[j + 3] = temp;
10010c5e:	68d0      	ldr	r0, [r2, #12]
10010c60:	f8d3 c00c 	ldr.w	ip, [r3, #12]
10010c64:	f8c2 c00c 	str.w	ip, [r2, #12]
        for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
10010c68:	3104      	adds	r1, #4
            temp = rk[i + 3]; rk[i + 3] = rk[j + 3]; rk[j + 3] = temp;
10010c6a:	60d8      	str	r0, [r3, #12]
        for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
10010c6c:	1a70      	subs	r0, r6, r1
10010c6e:	4281      	cmp	r1, r0
10010c70:	f102 0210 	add.w	r2, r2, #16
10010c74:	f1a3 0310 	sub.w	r3, r3, #16
10010c78:	d3df      	bcc.n	10010c3a <wc_AesSetKeyLocal.constprop.0+0xfe>
        for (i = 1; i < aes->rounds; i++) {
10010c7a:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
10010c7e:	2b01      	cmp	r3, #1
10010c80:	d9b5      	bls.n	10010bee <wc_AesSetKeyLocal.constprop.0+0xb2>
10010c82:	4b8e      	ldr	r3, [pc, #568]	@ (10010ebc <wc_AesSetKeyLocal.constprop.0+0x380>)
10010c84:	4a8e      	ldr	r2, [pc, #568]	@ (10010ec0 <wc_AesSetKeyLocal.constprop.0+0x384>)
10010c86:	f8cd b008 	str.w	fp, [sp, #8]
10010c8a:	f04f 0e01 	mov.w	lr, #1
10010c8e:	46a3      	mov	fp, r4
10010c90:	9703      	str	r7, [sp, #12]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[1], 3)) & 0xff) ^
10010c92:	e9d5 6004 	ldrd	r6, r0, [r5, #16]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[0], 0)) & 0xff);
10010c96:	b2f4      	uxtb	r4, r6
10010c98:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
10010c9c:	69a9      	ldr	r1, [r5, #24]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[0], 0)) & 0xff);
10010c9e:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
10010ca2:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[0], 3)) & 0xff) ^
10010ca6:	ea4f 6a16 	mov.w	sl, r6, lsr #24
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010caa:	f852 9024 	ldr.w	r9, [r2, r4, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[1], 0)) & 0xff);
10010cae:	b2c4      	uxtb	r4, r0
10010cb0:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[0], 3)) & 0xff) ^
10010cb4:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[1], 0)) & 0xff);
10010cb8:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[0], 3)) & 0xff) ^
10010cbc:	f813 a02a 	ldrb.w	sl, [r3, sl, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[1], 0)) & 0xff);
10010cc0:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010cc4:	f852 a02a 	ldr.w	sl, [r2, sl, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
10010cc8:	f852 c024 	ldr.w	ip, [r2, r4, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[2], 0)) & 0xff);
10010ccc:	b2cc      	uxtb	r4, r1
10010cce:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010cd2:	ea8a 0a09 	eor.w	sl, sl, r9
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[2], 0)) & 0xff);
10010cd6:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
10010cda:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
10010cde:	f3c1 4707 	ubfx	r7, r1, #16, #8
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010ce2:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
10010ce6:	9401      	str	r4, [sp, #4]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[0], 2)) & 0xff) ^
10010ce8:	f3c6 4407 	ubfx	r4, r6, #16, #8
10010cec:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010cf0:	f3c6 2607 	ubfx	r6, r6, #8, #8
10010cf4:	f506 7680 	add.w	r6, r6, #256	@ 0x100
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[0], 2)) & 0xff) ^
10010cf8:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010cfc:	f813 6026 	ldrb.w	r6, [r3, r6, lsl #2]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[0], 2)) & 0xff) ^
10010d00:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010d04:	f506 7600 	add.w	r6, r6, #512	@ 0x200
10010d08:	f852 8024 	ldr.w	r8, [r2, r4, lsl #2]
10010d0c:	f852 6026 	ldr.w	r6, [r2, r6, lsl #2]
10010d10:	ea8a 0a08 	eor.w	sl, sl, r8
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
10010d14:	f3c0 4407 	ubfx	r4, r0, #16, #8
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010d18:	ea8a 0606 	eor.w	r6, sl, r6
            rk[0] =
10010d1c:	612e      	str	r6, [r5, #16]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
10010d1e:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[1], 3)) & 0xff) ^
10010d22:	0e06      	lsrs	r6, r0, #24
10010d24:	f506 7680 	add.w	r6, r6, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
10010d28:	f3c0 2007 	ubfx	r0, r0, #8, #8
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
10010d2c:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[1], 3)) & 0xff) ^
10010d30:	f813 6026 	ldrb.w	r6, [r3, r6, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
10010d34:	f500 7080 	add.w	r0, r0, #256	@ 0x100
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
10010d38:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
10010d3c:	f813 8020 	ldrb.w	r8, [r3, r0, lsl #2]
10010d40:	f852 0026 	ldr.w	r0, [r2, r6, lsl #2]
10010d44:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
10010d48:	f508 7800 	add.w	r8, r8, #512	@ 0x200
10010d4c:	ea80 000c 	eor.w	r0, r0, ip
10010d50:	4060      	eors	r0, r4
10010d52:	f852 4028 	ldr.w	r4, [r2, r8, lsl #2]
10010d56:	4060      	eors	r0, r4
            rk[1] =
10010d58:	6168      	str	r0, [r5, #20]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
10010d5a:	f507 7780 	add.w	r7, r7, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
10010d5e:	0e08      	lsrs	r0, r1, #24
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010d60:	f3c1 2107 	ubfx	r1, r1, #8, #8
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
10010d64:	f500 7080 	add.w	r0, r0, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010d68:	f501 7180 	add.w	r1, r1, #256	@ 0x100
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
10010d6c:	f813 7027 	ldrb.w	r7, [r3, r7, lsl #2]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
10010d70:	f813 4020 	ldrb.w	r4, [r3, r0, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010d74:	f813 0021 	ldrb.w	r0, [r3, r1, lsl #2]
10010d78:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
10010d7c:	9c01      	ldr	r4, [sp, #4]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
10010d7e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010d82:	f500 7000 	add.w	r0, r0, #512	@ 0x200
10010d86:	f852 7027 	ldr.w	r7, [r2, r7, lsl #2]
10010d8a:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
10010d8e:	4061      	eors	r1, r4
10010d90:	4079      	eors	r1, r7
10010d92:	4041      	eors	r1, r0
            rk[2] =
10010d94:	61a9      	str	r1, [r5, #24]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[3], 3)) & 0xff) ^
10010d96:	69e9      	ldr	r1, [r5, #28]
10010d98:	0e08      	lsrs	r0, r1, #24
10010d9a:	f500 7080 	add.w	r0, r0, #256	@ 0x100
        for (i = 1; i < aes->rounds; i++) {
10010d9e:	3510      	adds	r5, #16
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[3], 3)) & 0xff) ^
10010da0:	f813 6020 	ldrb.w	r6, [r3, r0, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[3], 0)) & 0xff);
10010da4:	b2c8      	uxtb	r0, r1
10010da6:	f500 7080 	add.w	r0, r0, #256	@ 0x100
        for (i = 1; i < aes->rounds; i++) {
10010daa:	f10e 0e01 	add.w	lr, lr, #1
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[3], 0)) & 0xff);
10010dae:	f813 4020 	ldrb.w	r4, [r3, r0, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010db2:	f852 0026 	ldr.w	r0, [r2, r6, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[3], 0)) & 0xff);
10010db6:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010dba:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
10010dbe:	4060      	eors	r0, r4
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[3], 2)) & 0xff) ^
10010dc0:	f3c1 4407 	ubfx	r4, r1, #16, #8
10010dc4:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010dc8:	f3c1 2107 	ubfx	r1, r1, #8, #8
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[3], 2)) & 0xff) ^
10010dcc:	f813 6024 	ldrb.w	r6, [r3, r4, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010dd0:	f501 7180 	add.w	r1, r1, #256	@ 0x100
10010dd4:	f813 4021 	ldrb.w	r4, [r3, r1, lsl #2]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[3], 2)) & 0xff) ^
10010dd8:	f506 7180 	add.w	r1, r6, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010ddc:	f504 7400 	add.w	r4, r4, #512	@ 0x200
10010de0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
10010de4:	4041      	eors	r1, r0
10010de6:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
10010dea:	4041      	eors	r1, r0
            rk[3] =
10010dec:	60e9      	str	r1, [r5, #12]
        for (i = 1; i < aes->rounds; i++) {
10010dee:	f8db 10f0 	ldr.w	r1, [fp, #240]	@ 0xf0
10010df2:	458e      	cmp	lr, r1
10010df4:	f4ff af4d 	bcc.w	10010c92 <wc_AesSetKeyLocal.constprop.0+0x156>
10010df8:	465c      	mov	r4, fp
10010dfa:	e9dd b702 	ldrd	fp, r7, [sp, #8]
    if (iv)
10010dfe:	2f00      	cmp	r7, #0
10010e00:	f47f aef8 	bne.w	10010bf4 <wc_AesSetKeyLocal.constprop.0+0xb8>
        XMEMSET(aes->reg,  0, AES_BLOCK_SIZE);
10010e04:	f8c4 70f8 	str.w	r7, [r4, #248]	@ 0xf8
10010e08:	f8cb 7004 	str.w	r7, [fp, #4]
10010e0c:	f8cb 7008 	str.w	r7, [fp, #8]
10010e10:	f8cb 700c 	str.w	r7, [fp, #12]
10010e14:	e6fa      	b.n	10010c0c <wc_AesSetKeyLocal.constprop.0+0xd0>
10010e16:	e9d4 ce01 	ldrd	ip, lr, [r4, #4]
10010e1a:	4b28      	ldr	r3, [pc, #160]	@ (10010ebc <wc_AesSetKeyLocal.constprop.0+0x380>)
10010e1c:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 10010ec4 <wc_AesSetKeyLocal.constprop.0+0x388>
10010e20:	6820      	ldr	r0, [r4, #0]
10010e22:	68e1      	ldr	r1, [r4, #12]
10010e24:	46a2      	mov	sl, r4
10010e26:	461a      	mov	r2, r3
10010e28:	4674      	mov	r4, lr
10010e2a:	4663      	mov	r3, ip
10010e2c:	f108 0928 	add.w	r9, r8, #40	@ 0x28
10010e30:	4694      	mov	ip, r2
10010e32:	46d6      	mov	lr, sl
10010e34:	e000      	b.n	10010e38 <wc_AesSetKeyLocal.constprop.0+0x2fc>
            rk += 4;
10010e36:	3610      	adds	r6, #16
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010e38:	b2ca      	uxtb	r2, r1
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010e3a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
10010e3e:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010e42:	f85c 2022 	ldr.w	r2, [ip, r2, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010e46:	f81c a02a 	ldrb.w	sl, [ip, sl, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010e4a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010e4e:	ea42 020a 	orr.w	r2, r2, sl
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10010e52:	f3c1 4a07 	ubfx	sl, r1, #16, #8
10010e56:	f50a 7a00 	add.w	sl, sl, #512	@ 0x200
10010e5a:	f85c a02a 	ldr.w	sl, [ip, sl, lsl #2]
10010e5e:	f00a 4a7f 	and.w	sl, sl, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010e62:	ea82 020a 	eor.w	r2, r2, sl
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
10010e66:	f3c1 2a07 	ubfx	sl, r1, #8, #8
10010e6a:	f50a 7a40 	add.w	sl, sl, #768	@ 0x300
10010e6e:	f85c a02a 	ldr.w	sl, [ip, sl, lsl #2]
10010e72:	f40a 0a7f 	and.w	sl, sl, #16711680	@ 0xff0000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010e76:	ea82 020a 	eor.w	r2, r2, sl
                rcon[i];
10010e7a:	f858 ab04 	ldr.w	sl, [r8], #4
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010e7e:	ea82 020a 	eor.w	r2, r2, sl
10010e82:	4050      	eors	r0, r2
            rk[5] = rk[1] ^ rk[4];
10010e84:	4043      	eors	r3, r0
            rk[6] = rk[2] ^ rk[5];
10010e86:	405c      	eors	r4, r3
            rk[7] = rk[3] ^ rk[6];
10010e88:	4061      	eors	r1, r4
            if (++i == 10)
10010e8a:	45c1      	cmp	r9, r8
            rk[5] = rk[1] ^ rk[4];
10010e8c:	e9c6 0304 	strd	r0, r3, [r6, #16]
            rk[7] = rk[3] ^ rk[6];
10010e90:	e9c6 4106 	strd	r4, r1, [r6, #24]
            if (++i == 10)
10010e94:	d1cf      	bne.n	10010e36 <wc_AesSetKeyLocal.constprop.0+0x2fa>
10010e96:	4674      	mov	r4, lr
10010e98:	e6a6      	b.n	10010be8 <wc_AesSetKeyLocal.constprop.0+0xac>
10010e9a:	e9d4 8e00 	ldrd	r8, lr, [r4]
10010e9e:	e9d4 c102 	ldrd	ip, r1, [r4, #8]
10010ea2:	4622      	mov	r2, r4
10010ea4:	9501      	str	r5, [sp, #4]
10010ea6:	4664      	mov	r4, ip
10010ea8:	f8df 901c 	ldr.w	r9, [pc, #28]	@ 10010ec8 <wc_AesSetKeyLocal.constprop.0+0x38c>
10010eac:	4b03      	ldr	r3, [pc, #12]	@ (10010ebc <wc_AesSetKeyLocal.constprop.0+0x380>)
10010eae:	4640      	mov	r0, r8
10010eb0:	4675      	mov	r5, lr
10010eb2:	4694      	mov	ip, r2
10010eb4:	e041      	b.n	10010f3a <wc_AesSetKeyLocal.constprop.0+0x3fe>
10010eb6:	bf00      	nop
10010eb8:	00010101 	.word	0x00010101
10010ebc:	10022620 	.word	0x10022620
10010ec0:	10021620 	.word	0x10021620
10010ec4:	10023620 	.word	0x10023620
10010ec8:	1002361c 	.word	0x1002361c
                (GetTable(Te[3], GETBYTE(temp, 2)) & 0x00ff0000) ^
10010ecc:	f3c1 4e07 	ubfx	lr, r1, #16, #8
10010ed0:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10010ed4:	f3c1 2807 	ubfx	r8, r1, #8, #8
                (GetTable(Te[3], GETBYTE(temp, 2)) & 0x00ff0000) ^
10010ed8:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10010edc:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
                (GetTable(Te[3], GETBYTE(temp, 2)) & 0x00ff0000) ^
10010ee0:	f40e 0e7f 	and.w	lr, lr, #16711680	@ 0xff0000
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10010ee4:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
10010ee8:	ea4e 0e08 	orr.w	lr, lr, r8
                (GetTable(Te[2], GETBYTE(temp, 3)) & 0xff000000) ^
10010eec:	ea4f 6811 	mov.w	r8, r1, lsr #24
10010ef0:	f508 7800 	add.w	r8, r8, #512	@ 0x200
10010ef4:	f853 a028 	ldr.w	sl, [r3, r8, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 0)) & 0x000000ff);
10010ef8:	fa5f f881 	uxtb.w	r8, r1
10010efc:	f508 7880 	add.w	r8, r8, #256	@ 0x100
                (GetTable(Te[2], GETBYTE(temp, 3)) & 0xff000000) ^
10010f00:	f00a 4a7f 	and.w	sl, sl, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 0)) & 0x000000ff);
10010f04:	f813 8028 	ldrb.w	r8, [r3, r8, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10010f08:	ea4a 0808 	orr.w	r8, sl, r8
10010f0c:	f8d6 a010 	ldr.w	sl, [r6, #16]
10010f10:	ea8e 0e0a 	eor.w	lr, lr, sl
10010f14:	ea8e 0e08 	eor.w	lr, lr, r8
            rk[13] = rk[ 5] ^ rk[12];
10010f18:	f8d6 8014 	ldr.w	r8, [r6, #20]
            rk[12] = rk[ 4] ^
10010f1c:	f8c6 e030 	str.w	lr, [r6, #48]	@ 0x30
            rk[13] = rk[ 5] ^ rk[12];
10010f20:	ea8e 0e08 	eor.w	lr, lr, r8
            rk[14] = rk[ 6] ^ rk[13];
10010f24:	f8d6 8018 	ldr.w	r8, [r6, #24]
            rk[13] = rk[ 5] ^ rk[12];
10010f28:	f8c6 e034 	str.w	lr, [r6, #52]	@ 0x34
            rk[14] = rk[ 6] ^ rk[13];
10010f2c:	ea8e 0e08 	eor.w	lr, lr, r8
            rk[15] = rk[ 7] ^ rk[14];
10010f30:	ea82 020e 	eor.w	r2, r2, lr
10010f34:	e9c6 e20e 	strd	lr, r2, [r6, #56]	@ 0x38
            rk += 8;
10010f38:	3620      	adds	r6, #32
            temp = rk[ 7];
10010f3a:	69f2      	ldr	r2, [r6, #28]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f3c:	f859 af04 	ldr.w	sl, [r9, #4]!
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010f40:	fa5f fe82 	uxtb.w	lr, r2
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f44:	ea4f 6812 	mov.w	r8, r2, lsr #24
10010f48:	f508 7880 	add.w	r8, r8, #256	@ 0x100
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010f4c:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f50:	f813 8028 	ldrb.w	r8, [r3, r8, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010f54:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f58:	ea4e 0e08 	orr.w	lr, lr, r8
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10010f5c:	f3c2 4807 	ubfx	r8, r2, #16, #8
10010f60:	f508 7800 	add.w	r8, r8, #512	@ 0x200
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f64:	ea8e 0e0a 	eor.w	lr, lr, sl
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10010f68:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010f6c:	f008 487f 	and.w	r8, r8, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f70:	ea8e 0e08 	eor.w	lr, lr, r8
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
10010f74:	f3c2 2807 	ubfx	r8, r2, #8, #8
10010f78:	f508 7840 	add.w	r8, r8, #768	@ 0x300
10010f7c:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010f80:	f408 087f 	and.w	r8, r8, #16711680	@ 0xff0000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f84:	ea8e 0e08 	eor.w	lr, lr, r8
10010f88:	ea80 000e 	eor.w	r0, r0, lr
            rk[ 9] = rk[ 1] ^ rk[ 8];
10010f8c:	4045      	eors	r5, r0
            if (++i == 7)
10010f8e:	f8df e0b4 	ldr.w	lr, [pc, #180]	@ 10011044 <wc_AesSetKeyLocal.constprop.0+0x508>
            rk[10] = rk[ 2] ^ rk[ 9];
10010f92:	406c      	eors	r4, r5
            rk[11] = rk[ 3] ^ rk[10];
10010f94:	4061      	eors	r1, r4
            if (++i == 7)
10010f96:	45ce      	cmp	lr, r9
            rk[ 9] = rk[ 1] ^ rk[ 8];
10010f98:	e9c6 0508 	strd	r0, r5, [r6, #32]
            rk[11] = rk[ 3] ^ rk[10];
10010f9c:	e9c6 410a 	strd	r4, r1, [r6, #40]	@ 0x28
            if (++i == 7)
10010fa0:	d194      	bne.n	10010ecc <wc_AesSetKeyLocal.constprop.0+0x390>
10010fa2:	9d01      	ldr	r5, [sp, #4]
10010fa4:	4664      	mov	r4, ip
10010fa6:	e61f      	b.n	10010be8 <wc_AesSetKeyLocal.constprop.0+0xac>
10010fa8:	e9d4 c902 	ldrd	ip, r9, [r4, #8]
10010fac:	4b26      	ldr	r3, [pc, #152]	@ (10011048 <wc_AesSetKeyLocal.constprop.0+0x50c>)
10010fae:	f8d4 e000 	ldr.w	lr, [r4]
10010fb2:	6860      	ldr	r0, [r4, #4]
10010fb4:	9501      	str	r5, [sp, #4]
10010fb6:	461a      	mov	r2, r3
10010fb8:	46a0      	mov	r8, r4
10010fba:	4663      	mov	r3, ip
10010fbc:	f8df a08c 	ldr.w	sl, [pc, #140]	@ 1001104c <wc_AesSetKeyLocal.constprop.0+0x510>
10010fc0:	4675      	mov	r5, lr
10010fc2:	464c      	mov	r4, r9
10010fc4:	4694      	mov	ip, r2
10010fc6:	e005      	b.n	10010fd4 <wc_AesSetKeyLocal.constprop.0+0x498>
            rk[10] = rk[ 4] ^ rk[ 9];
10010fc8:	6932      	ldr	r2, [r6, #16]
10010fca:	4062      	eors	r2, r4
            rk[11] = rk[ 5] ^ rk[10];
10010fcc:	4051      	eors	r1, r2
10010fce:	e9c6 210a 	strd	r2, r1, [r6, #40]	@ 0x28
            rk += 6;
10010fd2:	3618      	adds	r6, #24
            temp = rk[ 5];
10010fd4:	6971      	ldr	r1, [r6, #20]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010fd6:	f85a 9f04 	ldr.w	r9, [sl, #4]!
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010fda:	b2ca      	uxtb	r2, r1
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010fdc:	ea4f 6e11 	mov.w	lr, r1, lsr #24
10010fe0:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010fe4:	f85c 2022 	ldr.w	r2, [ip, r2, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010fe8:	f81c e02e 	ldrb.w	lr, [ip, lr, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010fec:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010ff0:	ea42 020e 	orr.w	r2, r2, lr
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10010ff4:	f3c1 4e07 	ubfx	lr, r1, #16, #8
10010ff8:	f50e 7e00 	add.w	lr, lr, #512	@ 0x200
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010ffc:	ea82 0209 	eor.w	r2, r2, r9
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10011000:	f85c e02e 	ldr.w	lr, [ip, lr, lsl #2]
10011004:	f00e 4e7f 	and.w	lr, lr, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10011008:	ea82 020e 	eor.w	r2, r2, lr
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
1001100c:	f3c1 2e07 	ubfx	lr, r1, #8, #8
10011010:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
10011014:	f85c e02e 	ldr.w	lr, [ip, lr, lsl #2]
10011018:	f40e 0e7f 	and.w	lr, lr, #16711680	@ 0xff0000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1001101c:	ea82 020e 	eor.w	r2, r2, lr
10011020:	4055      	eors	r5, r2
            rk[ 7] = rk[ 1] ^ rk[ 6];
10011022:	4068      	eors	r0, r5
            if (++i == 8)
10011024:	4a0a      	ldr	r2, [pc, #40]	@ (10011050 <wc_AesSetKeyLocal.constprop.0+0x514>)
            rk[ 8] = rk[ 2] ^ rk[ 7];
10011026:	4043      	eors	r3, r0
            rk[ 9] = rk[ 3] ^ rk[ 8];
10011028:	405c      	eors	r4, r3
            if (++i == 8)
1001102a:	4552      	cmp	r2, sl
            rk[ 7] = rk[ 1] ^ rk[ 6];
1001102c:	e9c6 5006 	strd	r5, r0, [r6, #24]
            rk[ 9] = rk[ 3] ^ rk[ 8];
10011030:	e9c6 3408 	strd	r3, r4, [r6, #32]
            if (++i == 8)
10011034:	d1c8      	bne.n	10010fc8 <wc_AesSetKeyLocal.constprop.0+0x48c>
10011036:	9d01      	ldr	r5, [sp, #4]
10011038:	4644      	mov	r4, r8
1001103a:	e5d5      	b.n	10010be8 <wc_AesSetKeyLocal.constprop.0+0xac>
1001103c:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
    } /* wc_AesSetKeyLocal */
10011040:	4770      	bx	lr
10011042:	bf00      	nop
10011044:	10023638 	.word	0x10023638
10011048:	10022620 	.word	0x10022620
1001104c:	1002361c 	.word	0x1002361c
10011050:	1002363c 	.word	0x1002363c

10011054 <wc_AesSetKey>:
    {
10011054:	b410      	push	{r4}
10011056:	9c01      	ldr	r4, [sp, #4]
        if (aes == NULL) {
10011058:	b128      	cbz	r0, 10011066 <wc_AesSetKey+0x12>
        if (keylen > sizeof(aes->key)) {
1001105a:	2af0      	cmp	r2, #240	@ 0xf0
1001105c:	d803      	bhi.n	10011066 <wc_AesSetKey+0x12>
        return wc_AesSetKeyLocal(aes, userKey, keylen, iv, dir, 1);
1001105e:	9401      	str	r4, [sp, #4]
    } /* wc_AesSetKey() */
10011060:	bc10      	pop	{r4}
        return wc_AesSetKeyLocal(aes, userKey, keylen, iv, dir, 1);
10011062:	f7ff bd6b 	b.w	10010b3c <wc_AesSetKeyLocal.constprop.0>
    } /* wc_AesSetKey() */
10011066:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
1001106a:	bc10      	pop	{r4}
1001106c:	4770      	bx	lr
1001106e:	bf00      	nop

10011070 <wc_AesEncryptDirect>:
        /* Allow direct access to one block encrypt */
        int wc_AesEncryptDirect(Aes* aes, byte* out, const byte* in)
        {
            int ret;

            if (aes == NULL)
10011070:	b190      	cbz	r0, 10011098 <wc_AesEncryptDirect+0x28>
        {
10011072:	b508      	push	{r3, lr}
10011074:	4613      	mov	r3, r2
10011076:	460a      	mov	r2, r1
10011078:	4619      	mov	r1, r3
    r = aes->rounds >> 1;
1001107a:	f8d0 30f0 	ldr.w	r3, [r0, #240]	@ 0xf0
1001107e:	085b      	lsrs	r3, r3, #1
    if (r > 7 || r == 0) {
10011080:	f103 3cff 	add.w	ip, r3, #4294967295	@ 0xffffffff
10011084:	f1bc 0f06 	cmp.w	ip, #6
10011088:	d803      	bhi.n	10011092 <wc_AesEncryptDirect+0x22>
    AesEncrypt_C(aes, inBlock, outBlock, r);
1001108a:	f7fd ffa5 	bl	1000efd8 <AesEncrypt_C>
    return 0;
1001108e:	2000      	movs	r0, #0
                return BAD_FUNC_ARG;
            VECTOR_REGISTERS_PUSH;
            ret = wc_AesEncrypt(aes, in, out);
            VECTOR_REGISTERS_POP;
            return ret;
        }
10011090:	bd08      	pop	{r3, pc}
        return KEYUSAGE_E;
10011092:	f06f 00e1 	mvn.w	r0, #225	@ 0xe1
        }
10011096:	bd08      	pop	{r3, pc}
                return BAD_FUNC_ARG;
10011098:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
        }
1001109c:	4770      	bx	lr
1001109e:	bf00      	nop

100110a0 <wc_AesDecryptDirect>:
        /* Allow direct access to one block decrypt */
        int wc_AesDecryptDirect(Aes* aes, byte* out, const byte* in)
        {
            int ret;

            if (aes == NULL)
100110a0:	b190      	cbz	r0, 100110c8 <wc_AesDecryptDirect+0x28>
        {
100110a2:	b508      	push	{r3, lr}
100110a4:	4613      	mov	r3, r2
100110a6:	460a      	mov	r2, r1
100110a8:	4619      	mov	r1, r3
    r = aes->rounds >> 1;
100110aa:	f8d0 30f0 	ldr.w	r3, [r0, #240]	@ 0xf0
100110ae:	085b      	lsrs	r3, r3, #1
    if (r > 7 || r == 0) {
100110b0:	f103 3cff 	add.w	ip, r3, #4294967295	@ 0xffffffff
100110b4:	f1bc 0f06 	cmp.w	ip, #6
100110b8:	d803      	bhi.n	100110c2 <wc_AesDecryptDirect+0x22>
    AesDecrypt_C(aes, inBlock, outBlock, r);
100110ba:	f7fe fe7f 	bl	1000fdbc <AesDecrypt_C>
    return 0;
100110be:	2000      	movs	r0, #0
                return BAD_FUNC_ARG;
            VECTOR_REGISTERS_PUSH;
            ret = wc_AesDecrypt(aes, in, out);
            VECTOR_REGISTERS_POP;
            return ret;
        }
100110c0:	bd08      	pop	{r3, pc}
        return KEYUSAGE_E;
100110c2:	f06f 00e1 	mvn.w	r0, #225	@ 0xe1
        }
100110c6:	bd08      	pop	{r3, pc}
                return BAD_FUNC_ARG;
100110c8:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
        }
100110cc:	4770      	bx	lr
100110ce:	bf00      	nop

100110d0 <wc_Md5Hash>:

#if !defined(WOLFSSL_TI_HASH)

#if !defined(NO_MD5)
    int wc_Md5Hash(const byte* data, word32 len, byte* hash)
    {
100110d0:	b5f0      	push	{r4, r5, r6, r7, lr}
100110d2:	b099      	sub	sp, #100	@ 0x64
100110d4:	4605      	mov	r5, r0
        md5 = (wc_Md5*)XMALLOC(sizeof(wc_Md5), NULL, DYNAMIC_TYPE_TMP_BUFFER);
        if (md5 == NULL)
            return MEMORY_E;
    #endif

        if ((ret = wc_InitMd5(md5)) != 0) {
100110d6:	4668      	mov	r0, sp
    {
100110d8:	460e      	mov	r6, r1
100110da:	4617      	mov	r7, r2
        if ((ret = wc_InitMd5(md5)) != 0) {
100110dc:	f000 fc84 	bl	100119e8 <wc_InitMd5>
100110e0:	b118      	cbz	r0, 100110ea <wc_Md5Hash+0x1a>
100110e2:	4604      	mov	r4, r0
    #ifdef WOLFSSL_SMALL_STACK
        XFREE(md5, NULL, DYNAMIC_TYPE_TMP_BUFFER);
    #endif

        return ret;
    }
100110e4:	4620      	mov	r0, r4
100110e6:	b019      	add	sp, #100	@ 0x64
100110e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            if ((ret = wc_Md5Update(md5, data, len)) != 0) {
100110ea:	4632      	mov	r2, r6
100110ec:	4629      	mov	r1, r5
100110ee:	4668      	mov	r0, sp
100110f0:	f000 fba2 	bl	10011838 <wc_Md5Update>
100110f4:	4604      	mov	r4, r0
100110f6:	b128      	cbz	r0, 10011104 <wc_Md5Hash+0x34>
            wc_Md5Free(md5);
100110f8:	4668      	mov	r0, sp
100110fa:	f000 fc93 	bl	10011a24 <wc_Md5Free>
    }
100110fe:	4620      	mov	r0, r4
10011100:	b019      	add	sp, #100	@ 0x64
10011102:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if ((ret = wc_Md5Final(md5, hash)) != 0) {
10011104:	4639      	mov	r1, r7
10011106:	4668      	mov	r0, sp
10011108:	f000 fc16 	bl	10011938 <wc_Md5Final>
1001110c:	4604      	mov	r4, r0
1001110e:	e7f3      	b.n	100110f8 <wc_Md5Hash+0x28>

10011110 <Transform>:
    word32 a = md5->digest[0];
    word32 b = md5->digest[1];
    word32 c = md5->digest[2];
    word32 d = md5->digest[3];

    MD5STEP(F1, a, b, c, d, buffer[0]  + 0xd76aa478,  7);
10011110:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
10011112:	4ae9      	ldr	r2, [pc, #932]	@ (100114b8 <Transform+0x3a8>)
{
10011114:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    MD5STEP(F1, a, b, c, d, buffer[0]  + 0xd76aa478,  7);
10011118:	441a      	add	r2, r3
1001111a:	e9d0 3415 	ldrd	r3, r4, [r0, #84]	@ 0x54
    word32 b = md5->digest[1];
1001111e:	6d07      	ldr	r7, [r0, #80]	@ 0x50
    MD5STEP(F1, a, b, c, d, buffer[0]  + 0xd76aa478,  7);
10011120:	f8d1 b000 	ldr.w	fp, [r1]
    MD5STEP(F1, d, a, b, c, buffer[1]  + 0xe8c7b756, 12);
10011124:	6d46      	ldr	r6, [r0, #84]	@ 0x54
10011126:	684d      	ldr	r5, [r1, #4]
    MD5STEP(F1, c, d, a, b, buffer[2]  + 0x242070db, 17);
    MD5STEP(F1, b, c, d, a, buffer[3]  + 0xc1bdceee, 22);
    MD5STEP(F1, a, b, c, d, buffer[4]  + 0xf57c0faf,  7);
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
10011128:	f8d1 e014 	ldr.w	lr, [r1, #20]
    MD5STEP(F1, c, d, a, b, buffer[6]  + 0xa8304613, 17);
1001112c:	f8d1 8018 	ldr.w	r8, [r1, #24]
    MD5STEP(F1, b, c, d, a, buffer[7]  + 0xfd469501, 22);
10011130:	f8d1 a01c 	ldr.w	sl, [r1, #28]
    MD5STEP(F1, a, b, c, d, buffer[8]  + 0x698098d8,  7);
10011134:	f8d1 9020 	ldr.w	r9, [r1, #32]
    MD5STEP(F1, a, b, c, d, buffer[0]  + 0xd76aa478,  7);
10011138:	4063      	eors	r3, r4
1001113a:	403b      	ands	r3, r7
1001113c:	445a      	add	r2, fp
1001113e:	4063      	eors	r3, r4
10011140:	4413      	add	r3, r2
    MD5STEP(F1, d, a, b, c, buffer[1]  + 0xe8c7b756, 12);
10011142:	4ade      	ldr	r2, [pc, #888]	@ (100114bc <Transform+0x3ac>)
10011144:	4422      	add	r2, r4
    MD5STEP(F1, a, b, c, d, buffer[0]  + 0xd76aa478,  7);
10011146:	eb07 6373 	add.w	r3, r7, r3, ror #25
    MD5STEP(F1, d, a, b, c, buffer[1]  + 0xe8c7b756, 12);
1001114a:	462c      	mov	r4, r5
1001114c:	442a      	add	r2, r5
1001114e:	ea87 0506 	eor.w	r5, r7, r6
10011152:	401d      	ands	r5, r3
10011154:	4075      	eors	r5, r6
10011156:	4415      	add	r5, r2
    MD5STEP(F1, c, d, a, b, buffer[2]  + 0x242070db, 17);
10011158:	4ad9      	ldr	r2, [pc, #868]	@ (100114c0 <Transform+0x3b0>)
{
1001115a:	b08d      	sub	sp, #52	@ 0x34
    MD5STEP(F1, c, d, a, b, buffer[2]  + 0x242070db, 17);
1001115c:	4432      	add	r2, r6
1001115e:	688e      	ldr	r6, [r1, #8]
10011160:	9601      	str	r6, [sp, #4]
    MD5STEP(F1, d, a, b, c, buffer[1]  + 0xe8c7b756, 12);
10011162:	eb03 5535 	add.w	r5, r3, r5, ror #20
    MD5STEP(F1, c, d, a, b, buffer[2]  + 0x242070db, 17);
10011166:	4432      	add	r2, r6
10011168:	ea87 0603 	eor.w	r6, r7, r3
1001116c:	402e      	ands	r6, r5
1001116e:	970a      	str	r7, [sp, #40]	@ 0x28
10011170:	407e      	eors	r6, r7
10011172:	4416      	add	r6, r2
    MD5STEP(F1, b, c, d, a, buffer[3]  + 0xc1bdceee, 22);
10011174:	4fd3      	ldr	r7, [pc, #844]	@ (100114c4 <Transform+0x3b4>)
10011176:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
10011178:	f8cd e010 	str.w	lr, [sp, #16]
    MD5STEP(F1, b, c, d, a, buffer[3]  + 0xc1bdceee, 22);
1001117c:	4417      	add	r7, r2
1001117e:	68ca      	ldr	r2, [r1, #12]
10011180:	9202      	str	r2, [sp, #8]
    MD5STEP(F1, c, d, a, b, buffer[2]  + 0x242070db, 17);
10011182:	eb05 36f6 	add.w	r6, r5, r6, ror #15
    MD5STEP(F1, b, c, d, a, buffer[3]  + 0xc1bdceee, 22);
10011186:	4417      	add	r7, r2
10011188:	ea83 0205 	eor.w	r2, r3, r5
1001118c:	4032      	ands	r2, r6
1001118e:	405a      	eors	r2, r3
10011190:	443a      	add	r2, r7
    MD5STEP(F1, a, b, c, d, buffer[4]  + 0xf57c0faf,  7);
10011192:	690f      	ldr	r7, [r1, #16]
    MD5STEP(F1, c, d, a, b, buffer[6]  + 0xa8304613, 17);
10011194:	f8cd 8014 	str.w	r8, [sp, #20]
    MD5STEP(F1, a, b, c, d, buffer[4]  + 0xf57c0faf,  7);
10011198:	46bc      	mov	ip, r7
1001119a:	4fcb      	ldr	r7, [pc, #812]	@ (100114c8 <Transform+0x3b8>)
1001119c:	f8cd c00c 	str.w	ip, [sp, #12]
100111a0:	4467      	add	r7, ip
    MD5STEP(F1, b, c, d, a, buffer[3]  + 0xc1bdceee, 22);
100111a2:	eb06 22b2 	add.w	r2, r6, r2, ror #10
    MD5STEP(F1, a, b, c, d, buffer[4]  + 0xf57c0faf,  7);
100111a6:	441f      	add	r7, r3
100111a8:	ea85 0306 	eor.w	r3, r5, r6
100111ac:	4013      	ands	r3, r2
100111ae:	406b      	eors	r3, r5
100111b0:	443b      	add	r3, r7
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
100111b2:	4fc6      	ldr	r7, [pc, #792]	@ (100114cc <Transform+0x3bc>)
    MD5STEP(F1, a, b, c, d, buffer[8]  + 0x698098d8,  7);
100111b4:	f8cd 9018 	str.w	r9, [sp, #24]
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
100111b8:	4477      	add	r7, lr
    MD5STEP(F1, a, b, c, d, buffer[4]  + 0xf57c0faf,  7);
100111ba:	eb02 6373 	add.w	r3, r2, r3, ror #25
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
100111be:	442f      	add	r7, r5
100111c0:	ea86 0502 	eor.w	r5, r6, r2
100111c4:	401d      	ands	r5, r3
100111c6:	4075      	eors	r5, r6
100111c8:	443d      	add	r5, r7
    MD5STEP(F1, c, d, a, b, buffer[6]  + 0xa8304613, 17);
100111ca:	4fc1      	ldr	r7, [pc, #772]	@ (100114d0 <Transform+0x3c0>)
100111cc:	4447      	add	r7, r8
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
100111ce:	eb03 5535 	add.w	r5, r3, r5, ror #20
    MD5STEP(F1, c, d, a, b, buffer[6]  + 0xa8304613, 17);
100111d2:	4437      	add	r7, r6
100111d4:	ea82 0603 	eor.w	r6, r2, r3
100111d8:	402e      	ands	r6, r5
100111da:	4056      	eors	r6, r2
100111dc:	443e      	add	r6, r7
    MD5STEP(F1, b, c, d, a, buffer[7]  + 0xfd469501, 22);
100111de:	4fbd      	ldr	r7, [pc, #756]	@ (100114d4 <Transform+0x3c4>)
    MD5STEP(F1, d, a, b, c, buffer[9]  + 0x8b44f7af, 12);
    MD5STEP(F1, c, d, a, b, buffer[10] + 0xffff5bb1, 17);
    MD5STEP(F1, b, c, d, a, buffer[11] + 0x895cd7be, 22);
    MD5STEP(F1, a, b, c, d, buffer[12] + 0x6b901122,  7);
100111e0:	f8d1 8030 	ldr.w	r8, [r1, #48]	@ 0x30
    MD5STEP(F1, b, c, d, a, buffer[7]  + 0xfd469501, 22);
100111e4:	4457      	add	r7, sl
    MD5STEP(F1, c, d, a, b, buffer[6]  + 0xa8304613, 17);
100111e6:	eb05 36f6 	add.w	r6, r5, r6, ror #15
    MD5STEP(F1, b, c, d, a, buffer[7]  + 0xfd469501, 22);
100111ea:	4417      	add	r7, r2
100111ec:	ea83 0205 	eor.w	r2, r3, r5
100111f0:	4032      	ands	r2, r6
100111f2:	405a      	eors	r2, r3
100111f4:	443a      	add	r2, r7
    MD5STEP(F1, a, b, c, d, buffer[8]  + 0x698098d8,  7);
100111f6:	4fb8      	ldr	r7, [pc, #736]	@ (100114d8 <Transform+0x3c8>)
100111f8:	444f      	add	r7, r9
    MD5STEP(F1, b, c, d, a, buffer[7]  + 0xfd469501, 22);
100111fa:	eb06 22b2 	add.w	r2, r6, r2, ror #10
    MD5STEP(F1, a, b, c, d, buffer[8]  + 0x698098d8,  7);
100111fe:	441f      	add	r7, r3
10011200:	ea85 0306 	eor.w	r3, r5, r6
10011204:	4013      	ands	r3, r2
10011206:	406b      	eors	r3, r5
10011208:	443b      	add	r3, r7
    MD5STEP(F1, d, a, b, c, buffer[9]  + 0x8b44f7af, 12);
1001120a:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
1001120c:	46bc      	mov	ip, r7
1001120e:	4fb3      	ldr	r7, [pc, #716]	@ (100114dc <Transform+0x3cc>)
10011210:	f8cd c01c 	str.w	ip, [sp, #28]
10011214:	4467      	add	r7, ip
    MD5STEP(F1, a, b, c, d, buffer[8]  + 0x698098d8,  7);
10011216:	eb02 6373 	add.w	r3, r2, r3, ror #25
    MD5STEP(F1, d, a, b, c, buffer[9]  + 0x8b44f7af, 12);
1001121a:	443d      	add	r5, r7
1001121c:	ea86 0702 	eor.w	r7, r6, r2
10011220:	401f      	ands	r7, r3
10011222:	4077      	eors	r7, r6
10011224:	442f      	add	r7, r5
    MD5STEP(F1, c, d, a, b, buffer[10] + 0xffff5bb1, 17);
10011226:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
10011228:	f5a5 4e24 	sub.w	lr, r5, #41984	@ 0xa400
    MD5STEP(F1, d, a, b, c, buffer[9]  + 0x8b44f7af, 12);
1001122c:	eb03 5737 	add.w	r7, r3, r7, ror #20
    MD5STEP(F1, c, d, a, b, buffer[10] + 0xffff5bb1, 17);
10011230:	ea82 0c03 	eor.w	ip, r2, r3
10011234:	f1ae 0e4f 	sub.w	lr, lr, #79	@ 0x4f
10011238:	44b6      	add	lr, r6
1001123a:	ea0c 0c07 	and.w	ip, ip, r7
    MD5STEP(F1, b, c, d, a, buffer[11] + 0x895cd7be, 22);
1001123e:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
    MD5STEP(F1, c, d, a, b, buffer[10] + 0xffff5bb1, 17);
10011240:	ea8c 0c02 	eor.w	ip, ip, r2
10011244:	44f4      	add	ip, lr
    MD5STEP(F1, b, c, d, a, buffer[11] + 0x895cd7be, 22);
10011246:	46b6      	mov	lr, r6
10011248:	4ea5      	ldr	r6, [pc, #660]	@ (100114e0 <Transform+0x3d0>)
1001124a:	f8cd e020 	str.w	lr, [sp, #32]
1001124e:	4476      	add	r6, lr
    MD5STEP(F1, c, d, a, b, buffer[10] + 0xffff5bb1, 17);
10011250:	eb07 3cfc 	add.w	ip, r7, ip, ror #15
    MD5STEP(F1, b, c, d, a, buffer[11] + 0x895cd7be, 22);
10011254:	4416      	add	r6, r2
10011256:	ea83 0207 	eor.w	r2, r3, r7
1001125a:	ea02 020c 	and.w	r2, r2, ip
1001125e:	405a      	eors	r2, r3
10011260:	4432      	add	r2, r6
    MD5STEP(F1, a, b, c, d, buffer[12] + 0x6b901122,  7);
10011262:	4ea0      	ldr	r6, [pc, #640]	@ (100114e4 <Transform+0x3d4>)
    MD5STEP(F1, d, a, b, c, buffer[13] + 0xfd987193, 12);
10011264:	f8df e280 	ldr.w	lr, [pc, #640]	@ 100114e8 <Transform+0x3d8>
    MD5STEP(F1, a, b, c, d, buffer[12] + 0x6b901122,  7);
10011268:	4446      	add	r6, r8
    MD5STEP(F1, b, c, d, a, buffer[11] + 0x895cd7be, 22);
1001126a:	eb0c 22b2 	add.w	r2, ip, r2, ror #10
    MD5STEP(F1, a, b, c, d, buffer[12] + 0x6b901122,  7);
1001126e:	441e      	add	r6, r3
10011270:	ea87 030c 	eor.w	r3, r7, ip
10011274:	4013      	ands	r3, r2
10011276:	407b      	eors	r3, r7
10011278:	4433      	add	r3, r6
    MD5STEP(F1, d, a, b, c, buffer[13] + 0xfd987193, 12);
1001127a:	6b4e      	ldr	r6, [r1, #52]	@ 0x34
1001127c:	44b6      	add	lr, r6
    MD5STEP(F1, a, b, c, d, buffer[12] + 0x6b901122,  7);
1001127e:	eb02 6373 	add.w	r3, r2, r3, ror #25
    MD5STEP(F1, d, a, b, c, buffer[13] + 0xfd987193, 12);
10011282:	4477      	add	r7, lr
10011284:	ea8c 0e02 	eor.w	lr, ip, r2
10011288:	ea0e 0e03 	and.w	lr, lr, r3
1001128c:	ea8e 0e0c 	eor.w	lr, lr, ip
10011290:	44be      	add	lr, r7
    MD5STEP(F1, c, d, a, b, buffer[14] + 0xa679438e, 17);
    MD5STEP(F1, b, c, d, a, buffer[15] + 0x49b40821, 22);
10011292:	e9d1 970e 	ldrd	r9, r7, [r1, #56]	@ 0x38
    MD5STEP(F1, c, d, a, b, buffer[14] + 0xa679438e, 17);
10011296:	4995      	ldr	r1, [pc, #596]	@ (100114ec <Transform+0x3dc>)

    MD5STEP(F2, a, b, c, d, buffer[1]  + 0xf61e2562,  5);
10011298:	9409      	str	r4, [sp, #36]	@ 0x24
    MD5STEP(F1, c, d, a, b, buffer[14] + 0xa679438e, 17);
1001129a:	4449      	add	r1, r9
    MD5STEP(F1, d, a, b, c, buffer[13] + 0xfd987193, 12);
1001129c:	eb03 5e3e 	add.w	lr, r3, lr, ror #20
    MD5STEP(F1, c, d, a, b, buffer[14] + 0xa679438e, 17);
100112a0:	4461      	add	r1, ip
100112a2:	ea82 0c03 	eor.w	ip, r2, r3
100112a6:	ea0c 0c0e 	and.w	ip, ip, lr
100112aa:	ea8c 0c02 	eor.w	ip, ip, r2
100112ae:	448c      	add	ip, r1
    MD5STEP(F1, b, c, d, a, buffer[15] + 0x49b40821, 22);
100112b0:	498f      	ldr	r1, [pc, #572]	@ (100114f0 <Transform+0x3e0>)
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
    MD5STEP(F2, c, d, a, b, buffer[11] + 0x265e5a51, 14);
    MD5STEP(F2, b, c, d, a, buffer[0]  + 0xe9b6c7aa, 20);
100112b2:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
    MD5STEP(F1, b, c, d, a, buffer[15] + 0x49b40821, 22);
100112b6:	4439      	add	r1, r7
    MD5STEP(F1, c, d, a, b, buffer[14] + 0xa679438e, 17);
100112b8:	eb0e 3cfc 	add.w	ip, lr, ip, ror #15
    MD5STEP(F1, b, c, d, a, buffer[15] + 0x49b40821, 22);
100112bc:	4411      	add	r1, r2
100112be:	ea83 020e 	eor.w	r2, r3, lr
100112c2:	ea02 020c 	and.w	r2, r2, ip
100112c6:	405a      	eors	r2, r3
100112c8:	440a      	add	r2, r1
    MD5STEP(F2, a, b, c, d, buffer[1]  + 0xf61e2562,  5);
100112ca:	498a      	ldr	r1, [pc, #552]	@ (100114f4 <Transform+0x3e4>)
    MD5STEP(F1, b, c, d, a, buffer[15] + 0x49b40821, 22);
100112cc:	eb0c 22b2 	add.w	r2, ip, r2, ror #10
    MD5STEP(F2, a, b, c, d, buffer[1]  + 0xf61e2562,  5);
100112d0:	4421      	add	r1, r4
100112d2:	4419      	add	r1, r3
100112d4:	ea8c 0302 	eor.w	r3, ip, r2
100112d8:	ea03 030e 	and.w	r3, r3, lr
100112dc:	ea83 030c 	eor.w	r3, r3, ip
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
100112e0:	9c05      	ldr	r4, [sp, #20]
    MD5STEP(F2, a, b, c, d, buffer[1]  + 0xf61e2562,  5);
100112e2:	440b      	add	r3, r1
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
100112e4:	4984      	ldr	r1, [pc, #528]	@ (100114f8 <Transform+0x3e8>)
    MD5STEP(F2, a, b, c, d, buffer[1]  + 0xf61e2562,  5);
100112e6:	eb02 63f3 	add.w	r3, r2, r3, ror #27
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
100112ea:	4421      	add	r1, r4
100112ec:	448e      	add	lr, r1
100112ee:	ea82 0103 	eor.w	r1, r2, r3
100112f2:	ea01 010c 	and.w	r1, r1, ip
100112f6:	4051      	eors	r1, r2
    MD5STEP(F2, c, d, a, b, buffer[11] + 0x265e5a51, 14);
100112f8:	9c08      	ldr	r4, [sp, #32]
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
100112fa:	4471      	add	r1, lr
    MD5STEP(F2, c, d, a, b, buffer[11] + 0x265e5a51, 14);
100112fc:	f8df e1fc 	ldr.w	lr, [pc, #508]	@ 100114fc <Transform+0x3ec>
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
10011300:	eb03 51f1 	add.w	r1, r3, r1, ror #23
    MD5STEP(F2, c, d, a, b, buffer[11] + 0x265e5a51, 14);
10011304:	44a6      	add	lr, r4
10011306:	44e6      	add	lr, ip
10011308:	ea83 0c01 	eor.w	ip, r3, r1
1001130c:	ea0c 0c02 	and.w	ip, ip, r2
10011310:	ea8c 0c03 	eor.w	ip, ip, r3
10011314:	44f4      	add	ip, lr
    MD5STEP(F2, b, c, d, a, buffer[0]  + 0xe9b6c7aa, 20);
10011316:	f8df e1e8 	ldr.w	lr, [pc, #488]	@ 10011500 <Transform+0x3f0>
    MD5STEP(F2, a, b, c, d, buffer[5]  + 0xd62f105d,  5);
    MD5STEP(F2, d, a, b, c, buffer[10] + 0x02441453,  9);
    MD5STEP(F2, c, d, a, b, buffer[15] + 0xd8a1e681, 14);
    MD5STEP(F2, b, c, d, a, buffer[4]  + 0xe7d3fbc8, 20);
    MD5STEP(F2, a, b, c, d, buffer[9]  + 0x21e1cde6,  5);
1001131a:	9c07      	ldr	r4, [sp, #28]
    MD5STEP(F2, c, d, a, b, buffer[11] + 0x265e5a51, 14);
1001131c:	eb01 4cbc 	add.w	ip, r1, ip, ror #18
    MD5STEP(F2, b, c, d, a, buffer[0]  + 0xe9b6c7aa, 20);
10011320:	44de      	add	lr, fp
10011322:	4496      	add	lr, r2
10011324:	ea81 020c 	eor.w	r2, r1, ip
10011328:	401a      	ands	r2, r3
1001132a:	404a      	eors	r2, r1
    MD5STEP(F2, a, b, c, d, buffer[5]  + 0xd62f105d,  5);
1001132c:	f8dd b010 	ldr.w	fp, [sp, #16]
    MD5STEP(F2, b, c, d, a, buffer[0]  + 0xe9b6c7aa, 20);
10011330:	4472      	add	r2, lr
    MD5STEP(F2, a, b, c, d, buffer[5]  + 0xd62f105d,  5);
10011332:	f8df e1d0 	ldr.w	lr, [pc, #464]	@ 10011504 <Transform+0x3f4>
    MD5STEP(F2, b, c, d, a, buffer[0]  + 0xe9b6c7aa, 20);
10011336:	eb0c 3232 	add.w	r2, ip, r2, ror #12
    MD5STEP(F2, a, b, c, d, buffer[5]  + 0xd62f105d,  5);
1001133a:	44de      	add	lr, fp
1001133c:	449e      	add	lr, r3
1001133e:	ea8c 0302 	eor.w	r3, ip, r2
10011342:	400b      	ands	r3, r1
10011344:	ea83 030c 	eor.w	r3, r3, ip
10011348:	4473      	add	r3, lr
    MD5STEP(F2, d, a, b, c, buffer[10] + 0x02441453,  9);
1001134a:	f8df e1bc 	ldr.w	lr, [pc, #444]	@ 10011508 <Transform+0x3f8>
    MD5STEP(F2, b, c, d, a, buffer[4]  + 0xe7d3fbc8, 20);
1001134e:	f8dd b00c 	ldr.w	fp, [sp, #12]
    MD5STEP(F2, a, b, c, d, buffer[5]  + 0xd62f105d,  5);
10011352:	eb02 63f3 	add.w	r3, r2, r3, ror #27
    MD5STEP(F2, d, a, b, c, buffer[10] + 0x02441453,  9);
10011356:	44ae      	add	lr, r5
10011358:	448e      	add	lr, r1
1001135a:	ea82 0103 	eor.w	r1, r2, r3
1001135e:	ea01 010c 	and.w	r1, r1, ip
10011362:	4051      	eors	r1, r2
10011364:	4471      	add	r1, lr
    MD5STEP(F2, c, d, a, b, buffer[15] + 0xd8a1e681, 14);
10011366:	f8df e1a4 	ldr.w	lr, [pc, #420]	@ 1001150c <Transform+0x3fc>
    MD5STEP(F2, d, a, b, c, buffer[10] + 0x02441453,  9);
1001136a:	eb03 51f1 	add.w	r1, r3, r1, ror #23
    MD5STEP(F2, c, d, a, b, buffer[15] + 0xd8a1e681, 14);
1001136e:	44be      	add	lr, r7
10011370:	44e6      	add	lr, ip
10011372:	ea83 0c01 	eor.w	ip, r3, r1
10011376:	ea0c 0c02 	and.w	ip, ip, r2
1001137a:	ea8c 0c03 	eor.w	ip, ip, r3
1001137e:	44f4      	add	ip, lr
    MD5STEP(F2, b, c, d, a, buffer[4]  + 0xe7d3fbc8, 20);
10011380:	f8df e18c 	ldr.w	lr, [pc, #396]	@ 10011510 <Transform+0x400>
    MD5STEP(F2, c, d, a, b, buffer[15] + 0xd8a1e681, 14);
10011384:	eb01 4cbc 	add.w	ip, r1, ip, ror #18
    MD5STEP(F2, b, c, d, a, buffer[4]  + 0xe7d3fbc8, 20);
10011388:	44de      	add	lr, fp
1001138a:	4496      	add	lr, r2
1001138c:	ea81 020c 	eor.w	r2, r1, ip
10011390:	401a      	ands	r2, r3
10011392:	404a      	eors	r2, r1
10011394:	4472      	add	r2, lr
    MD5STEP(F2, a, b, c, d, buffer[9]  + 0x21e1cde6,  5);
10011396:	f8df e17c 	ldr.w	lr, [pc, #380]	@ 10011514 <Transform+0x404>
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
    MD5STEP(F2, b, c, d, a, buffer[8]  + 0x455a14ed, 20);
    MD5STEP(F2, a, b, c, d, buffer[13] + 0xa9e3e905,  5);
    MD5STEP(F2, d, a, b, c, buffer[2]  + 0xfcefa3f8,  9);
    MD5STEP(F2, c, d, a, b, buffer[7]  + 0x676f02d9, 14);
    MD5STEP(F2, b, c, d, a, buffer[12] + 0x8d2a4c8a, 20);
1001139a:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 10011518 <Transform+0x408>
    MD5STEP(F2, b, c, d, a, buffer[4]  + 0xe7d3fbc8, 20);
1001139e:	eb0c 3232 	add.w	r2, ip, r2, ror #12
    MD5STEP(F2, a, b, c, d, buffer[9]  + 0x21e1cde6,  5);
100113a2:	44a6      	add	lr, r4
100113a4:	449e      	add	lr, r3
100113a6:	ea8c 0302 	eor.w	r3, ip, r2
100113aa:	400b      	ands	r3, r1
100113ac:	ea83 030c 	eor.w	r3, r3, ip
100113b0:	4473      	add	r3, lr
    MD5STEP(F2, d, a, b, c, buffer[14] + 0xc33707d6,  9);
100113b2:	f8df e168 	ldr.w	lr, [pc, #360]	@ 1001151c <Transform+0x40c>
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
100113b6:	9c02      	ldr	r4, [sp, #8]
    MD5STEP(F2, a, b, c, d, buffer[9]  + 0x21e1cde6,  5);
100113b8:	eb02 63f3 	add.w	r3, r2, r3, ror #27
    MD5STEP(F2, d, a, b, c, buffer[14] + 0xc33707d6,  9);
100113bc:	44ce      	add	lr, r9
100113be:	448e      	add	lr, r1
100113c0:	ea82 0103 	eor.w	r1, r2, r3
100113c4:	ea01 010c 	and.w	r1, r1, ip
100113c8:	4051      	eors	r1, r2
100113ca:	4471      	add	r1, lr
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
100113cc:	f8df e150 	ldr.w	lr, [pc, #336]	@ 10011520 <Transform+0x410>
    MD5STEP(F2, d, a, b, c, buffer[14] + 0xc33707d6,  9);
100113d0:	eb03 51f1 	add.w	r1, r3, r1, ror #23
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
100113d4:	44a6      	add	lr, r4
100113d6:	44e6      	add	lr, ip
100113d8:	ea83 0c01 	eor.w	ip, r3, r1
100113dc:	ea0c 0c02 	and.w	ip, ip, r2
100113e0:	ea8c 0c03 	eor.w	ip, ip, r3
    MD5STEP(F2, b, c, d, a, buffer[8]  + 0x455a14ed, 20);
100113e4:	9c06      	ldr	r4, [sp, #24]
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
100113e6:	44f4      	add	ip, lr
    MD5STEP(F2, b, c, d, a, buffer[8]  + 0x455a14ed, 20);
100113e8:	f8df e138 	ldr.w	lr, [pc, #312]	@ 10011524 <Transform+0x414>
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
100113ec:	eb01 4cbc 	add.w	ip, r1, ip, ror #18
    MD5STEP(F2, b, c, d, a, buffer[8]  + 0x455a14ed, 20);
100113f0:	44a6      	add	lr, r4
100113f2:	4496      	add	lr, r2
100113f4:	ea81 020c 	eor.w	r2, r1, ip
100113f8:	401a      	ands	r2, r3
100113fa:	404a      	eors	r2, r1
100113fc:	4472      	add	r2, lr
    MD5STEP(F2, a, b, c, d, buffer[13] + 0xa9e3e905,  5);
100113fe:	f8df e128 	ldr.w	lr, [pc, #296]	@ 10011528 <Transform+0x418>
    MD5STEP(F2, d, a, b, c, buffer[2]  + 0xfcefa3f8,  9);
10011402:	9c01      	ldr	r4, [sp, #4]
    MD5STEP(F2, b, c, d, a, buffer[8]  + 0x455a14ed, 20);
10011404:	eb0c 3232 	add.w	r2, ip, r2, ror #12
    MD5STEP(F2, a, b, c, d, buffer[13] + 0xa9e3e905,  5);
10011408:	44b6      	add	lr, r6
1001140a:	449e      	add	lr, r3
1001140c:	ea8c 0302 	eor.w	r3, ip, r2
10011410:	400b      	ands	r3, r1
10011412:	ea83 030c 	eor.w	r3, r3, ip
10011416:	4473      	add	r3, lr
    MD5STEP(F2, d, a, b, c, buffer[2]  + 0xfcefa3f8,  9);
10011418:	f8df e110 	ldr.w	lr, [pc, #272]	@ 1001152c <Transform+0x41c>
    MD5STEP(F2, a, b, c, d, buffer[13] + 0xa9e3e905,  5);
1001141c:	eb02 63f3 	add.w	r3, r2, r3, ror #27
    MD5STEP(F2, d, a, b, c, buffer[2]  + 0xfcefa3f8,  9);
10011420:	44a6      	add	lr, r4
10011422:	448e      	add	lr, r1
10011424:	ea82 0103 	eor.w	r1, r2, r3
10011428:	ea01 010c 	and.w	r1, r1, ip
1001142c:	4051      	eors	r1, r2
1001142e:	4471      	add	r1, lr
    MD5STEP(F2, c, d, a, b, buffer[7]  + 0x676f02d9, 14);
10011430:	f8df e0fc 	ldr.w	lr, [pc, #252]	@ 10011530 <Transform+0x420>

    MD5STEP(F3, a, b, c, d, buffer[5]  + 0xfffa3942,  4);
    MD5STEP(F3, d, a, b, c, buffer[8]  + 0x8771f681, 11);
    MD5STEP(F3, c, d, a, b, buffer[11] + 0x6d9d6122, 16);
    MD5STEP(F3, b, c, d, a, buffer[14] + 0xfde5380c, 23);
    MD5STEP(F3, a, b, c, d, buffer[1]  + 0xa4beea44,  4);
10011434:	9c09      	ldr	r4, [sp, #36]	@ 0x24
    MD5STEP(F2, d, a, b, c, buffer[2]  + 0xfcefa3f8,  9);
10011436:	eb03 51f1 	add.w	r1, r3, r1, ror #23
    MD5STEP(F2, c, d, a, b, buffer[7]  + 0x676f02d9, 14);
1001143a:	44d6      	add	lr, sl
1001143c:	44e6      	add	lr, ip
1001143e:	ea83 0c01 	eor.w	ip, r3, r1
10011442:	ea0c 0c02 	and.w	ip, ip, r2
10011446:	ea8c 0c03 	eor.w	ip, ip, r3
1001144a:	44f4      	add	ip, lr
1001144c:	eb01 4cbc 	add.w	ip, r1, ip, ror #18
    MD5STEP(F2, b, c, d, a, buffer[12] + 0x8d2a4c8a, 20);
10011450:	44c3      	add	fp, r8
10011452:	4493      	add	fp, r2
10011454:	ea81 020c 	eor.w	r2, r1, ip
10011458:	ea02 0e03 	and.w	lr, r2, r3
1001145c:	ea8e 0e01 	eor.w	lr, lr, r1
10011460:	44de      	add	lr, fp
10011462:	eb0c 3e3e 	add.w	lr, ip, lr, ror #12
    MD5STEP(F3, a, b, c, d, buffer[5]  + 0xfffa3942,  4);
10011466:	ea82 0b0e 	eor.w	fp, r2, lr
1001146a:	9a04      	ldr	r2, [sp, #16]
1001146c:	f5a2 22b8 	sub.w	r2, r2, #376832	@ 0x5c000
10011470:	f2a2 62be 	subw	r2, r2, #1726	@ 0x6be
10011474:	441a      	add	r2, r3
10011476:	445a      	add	r2, fp
    MD5STEP(F3, d, a, b, c, buffer[8]  + 0x8771f681, 11);
10011478:	4b2e      	ldr	r3, [pc, #184]	@ (10011534 <Transform+0x424>)
1001147a:	f8dd b018 	ldr.w	fp, [sp, #24]
1001147e:	445b      	add	r3, fp
    MD5STEP(F3, a, b, c, d, buffer[5]  + 0xfffa3942,  4);
10011480:	eb0e 7232 	add.w	r2, lr, r2, ror #28
    MD5STEP(F3, d, a, b, c, buffer[8]  + 0x8771f681, 11);
10011484:	4419      	add	r1, r3
10011486:	ea8c 030e 	eor.w	r3, ip, lr
1001148a:	4053      	eors	r3, r2
    MD5STEP(F3, c, d, a, b, buffer[11] + 0x6d9d6122, 16);
1001148c:	f8dd b020 	ldr.w	fp, [sp, #32]
    MD5STEP(F3, d, a, b, c, buffer[8]  + 0x8771f681, 11);
10011490:	440b      	add	r3, r1
    MD5STEP(F3, c, d, a, b, buffer[11] + 0x6d9d6122, 16);
10011492:	4929      	ldr	r1, [pc, #164]	@ (10011538 <Transform+0x428>)
10011494:	4459      	add	r1, fp
    MD5STEP(F3, d, a, b, c, buffer[8]  + 0x8771f681, 11);
10011496:	eb02 5373 	add.w	r3, r2, r3, ror #21
    MD5STEP(F3, c, d, a, b, buffer[11] + 0x6d9d6122, 16);
1001149a:	4461      	add	r1, ip
1001149c:	ea8e 0c02 	eor.w	ip, lr, r2
100114a0:	ea8c 0c03 	eor.w	ip, ip, r3
100114a4:	448c      	add	ip, r1
    MD5STEP(F3, b, c, d, a, buffer[14] + 0xfde5380c, 23);
100114a6:	4925      	ldr	r1, [pc, #148]	@ (1001153c <Transform+0x42c>)
    MD5STEP(F3, d, a, b, c, buffer[4]  + 0x4bdecfa9, 11);
100114a8:	f8dd b00c 	ldr.w	fp, [sp, #12]
    MD5STEP(F3, b, c, d, a, buffer[14] + 0xfde5380c, 23);
100114ac:	4449      	add	r1, r9
    MD5STEP(F3, c, d, a, b, buffer[11] + 0x6d9d6122, 16);
100114ae:	eb03 4c3c 	add.w	ip, r3, ip, ror #16
    MD5STEP(F3, b, c, d, a, buffer[14] + 0xfde5380c, 23);
100114b2:	448e      	add	lr, r1
100114b4:	e044      	b.n	10011540 <Transform+0x430>
100114b6:	bf00      	nop
100114b8:	d76aa478 	.word	0xd76aa478
100114bc:	e8c7b756 	.word	0xe8c7b756
100114c0:	242070db 	.word	0x242070db
100114c4:	c1bdceee 	.word	0xc1bdceee
100114c8:	f57c0faf 	.word	0xf57c0faf
100114cc:	4787c62a 	.word	0x4787c62a
100114d0:	a8304613 	.word	0xa8304613
100114d4:	fd469501 	.word	0xfd469501
100114d8:	698098d8 	.word	0x698098d8
100114dc:	8b44f7af 	.word	0x8b44f7af
100114e0:	895cd7be 	.word	0x895cd7be
100114e4:	6b901122 	.word	0x6b901122
100114e8:	fd987193 	.word	0xfd987193
100114ec:	a679438e 	.word	0xa679438e
100114f0:	49b40821 	.word	0x49b40821
100114f4:	f61e2562 	.word	0xf61e2562
100114f8:	c040b340 	.word	0xc040b340
100114fc:	265e5a51 	.word	0x265e5a51
10011500:	e9b6c7aa 	.word	0xe9b6c7aa
10011504:	d62f105d 	.word	0xd62f105d
10011508:	02441453 	.word	0x02441453
1001150c:	d8a1e681 	.word	0xd8a1e681
10011510:	e7d3fbc8 	.word	0xe7d3fbc8
10011514:	21e1cde6 	.word	0x21e1cde6
10011518:	8d2a4c8a 	.word	0x8d2a4c8a
1001151c:	c33707d6 	.word	0xc33707d6
10011520:	f4d50d87 	.word	0xf4d50d87
10011524:	455a14ed 	.word	0x455a14ed
10011528:	a9e3e905 	.word	0xa9e3e905
1001152c:	fcefa3f8 	.word	0xfcefa3f8
10011530:	676f02d9 	.word	0x676f02d9
10011534:	8771f681 	.word	0x8771f681
10011538:	6d9d6122 	.word	0x6d9d6122
1001153c:	fde5380c 	.word	0xfde5380c
10011540:	ea82 0103 	eor.w	r1, r2, r3
10011544:	ea81 010c 	eor.w	r1, r1, ip
10011548:	4471      	add	r1, lr
    MD5STEP(F3, a, b, c, d, buffer[1]  + 0xa4beea44,  4);
1001154a:	f8df e280 	ldr.w	lr, [pc, #640]	@ 100117cc <Transform+0x6bc>
1001154e:	44a6      	add	lr, r4
    MD5STEP(F3, b, c, d, a, buffer[14] + 0xfde5380c, 23);
10011550:	eb0c 2171 	add.w	r1, ip, r1, ror #9
    MD5STEP(F3, a, b, c, d, buffer[1]  + 0xa4beea44,  4);
10011554:	4496      	add	lr, r2
10011556:	ea83 020c 	eor.w	r2, r3, ip
1001155a:	404a      	eors	r2, r1
1001155c:	4472      	add	r2, lr
    MD5STEP(F3, d, a, b, c, buffer[4]  + 0x4bdecfa9, 11);
1001155e:	f8df e270 	ldr.w	lr, [pc, #624]	@ 100117d0 <Transform+0x6c0>
    MD5STEP(F3, c, d, a, b, buffer[7]  + 0xf6bb4b60, 16);
    MD5STEP(F3, b, c, d, a, buffer[10] + 0xbebfbc70, 23);
    MD5STEP(F3, a, b, c, d, buffer[13] + 0x289b7ec6,  4);
    MD5STEP(F3, d, a, b, c, buffer[0]  + 0xeaa127fa, 11);
    MD5STEP(F3, c, d, a, b, buffer[3]  + 0xd4ef3085, 16);
10011562:	9c02      	ldr	r4, [sp, #8]
    MD5STEP(F3, d, a, b, c, buffer[4]  + 0x4bdecfa9, 11);
10011564:	44de      	add	lr, fp
    MD5STEP(F3, a, b, c, d, buffer[1]  + 0xa4beea44,  4);
10011566:	eb01 7232 	add.w	r2, r1, r2, ror #28
    MD5STEP(F3, d, a, b, c, buffer[4]  + 0x4bdecfa9, 11);
1001156a:	4473      	add	r3, lr
1001156c:	ea8c 0e01 	eor.w	lr, ip, r1
10011570:	ea8e 0e02 	eor.w	lr, lr, r2
10011574:	449e      	add	lr, r3
    MD5STEP(F3, c, d, a, b, buffer[7]  + 0xf6bb4b60, 16);
10011576:	4b97      	ldr	r3, [pc, #604]	@ (100117d4 <Transform+0x6c4>)
    MD5STEP(F3, d, a, b, c, buffer[0]  + 0xeaa127fa, 11);
10011578:	f8dd b02c 	ldr.w	fp, [sp, #44]	@ 0x2c
    MD5STEP(F3, c, d, a, b, buffer[7]  + 0xf6bb4b60, 16);
1001157c:	4453      	add	r3, sl
    MD5STEP(F3, d, a, b, c, buffer[4]  + 0x4bdecfa9, 11);
1001157e:	eb02 5e7e 	add.w	lr, r2, lr, ror #21
    MD5STEP(F3, c, d, a, b, buffer[7]  + 0xf6bb4b60, 16);
10011582:	449c      	add	ip, r3
10011584:	ea81 0302 	eor.w	r3, r1, r2
10011588:	ea83 030e 	eor.w	r3, r3, lr
1001158c:	4463      	add	r3, ip
    MD5STEP(F3, b, c, d, a, buffer[10] + 0xbebfbc70, 23);
1001158e:	f8df c248 	ldr.w	ip, [pc, #584]	@ 100117d8 <Transform+0x6c8>
10011592:	44ac      	add	ip, r5
    MD5STEP(F3, c, d, a, b, buffer[7]  + 0xf6bb4b60, 16);
10011594:	eb0e 4333 	add.w	r3, lr, r3, ror #16
    MD5STEP(F3, b, c, d, a, buffer[10] + 0xbebfbc70, 23);
10011598:	4461      	add	r1, ip
1001159a:	ea82 0c0e 	eor.w	ip, r2, lr
1001159e:	ea8c 0c03 	eor.w	ip, ip, r3
100115a2:	448c      	add	ip, r1
    MD5STEP(F3, a, b, c, d, buffer[13] + 0x289b7ec6,  4);
100115a4:	498d      	ldr	r1, [pc, #564]	@ (100117dc <Transform+0x6cc>)
100115a6:	4431      	add	r1, r6
    MD5STEP(F3, b, c, d, a, buffer[10] + 0xbebfbc70, 23);
100115a8:	eb03 2c7c 	add.w	ip, r3, ip, ror #9
    MD5STEP(F3, a, b, c, d, buffer[13] + 0x289b7ec6,  4);
100115ac:	4411      	add	r1, r2
100115ae:	ea8e 0203 	eor.w	r2, lr, r3
100115b2:	ea82 020c 	eor.w	r2, r2, ip
100115b6:	440a      	add	r2, r1
    MD5STEP(F3, d, a, b, c, buffer[0]  + 0xeaa127fa, 11);
100115b8:	4989      	ldr	r1, [pc, #548]	@ (100117e0 <Transform+0x6d0>)
100115ba:	4459      	add	r1, fp
    MD5STEP(F3, a, b, c, d, buffer[13] + 0x289b7ec6,  4);
100115bc:	eb0c 7232 	add.w	r2, ip, r2, ror #28
    MD5STEP(F3, d, a, b, c, buffer[0]  + 0xeaa127fa, 11);
100115c0:	448e      	add	lr, r1
100115c2:	ea83 010c 	eor.w	r1, r3, ip
100115c6:	4051      	eors	r1, r2
100115c8:	4471      	add	r1, lr
    MD5STEP(F3, c, d, a, b, buffer[3]  + 0xd4ef3085, 16);
100115ca:	f8df e218 	ldr.w	lr, [pc, #536]	@ 100117e4 <Transform+0x6d4>
100115ce:	44a6      	add	lr, r4
    MD5STEP(F3, d, a, b, c, buffer[0]  + 0xeaa127fa, 11);
100115d0:	eb02 5171 	add.w	r1, r2, r1, ror #21
    MD5STEP(F3, c, d, a, b, buffer[3]  + 0xd4ef3085, 16);
100115d4:	449e      	add	lr, r3
100115d6:	ea8c 0302 	eor.w	r3, ip, r2
100115da:	404b      	eors	r3, r1
    MD5STEP(F3, b, c, d, a, buffer[6]  + 0x04881d05, 23);
100115dc:	9c05      	ldr	r4, [sp, #20]
    MD5STEP(F3, c, d, a, b, buffer[3]  + 0xd4ef3085, 16);
100115de:	4473      	add	r3, lr
    MD5STEP(F3, b, c, d, a, buffer[6]  + 0x04881d05, 23);
100115e0:	f8df e204 	ldr.w	lr, [pc, #516]	@ 100117e8 <Transform+0x6d8>
100115e4:	44a6      	add	lr, r4
    MD5STEP(F3, c, d, a, b, buffer[3]  + 0xd4ef3085, 16);
100115e6:	eb01 4333 	add.w	r3, r1, r3, ror #16
    MD5STEP(F3, b, c, d, a, buffer[6]  + 0x04881d05, 23);
100115ea:	44e6      	add	lr, ip
100115ec:	ea82 0c01 	eor.w	ip, r2, r1
100115f0:	ea8c 0c03 	eor.w	ip, ip, r3
    MD5STEP(F3, a, b, c, d, buffer[9]  + 0xd9d4d039,  4);
100115f4:	9c07      	ldr	r4, [sp, #28]
    MD5STEP(F3, b, c, d, a, buffer[6]  + 0x04881d05, 23);
100115f6:	44f4      	add	ip, lr
    MD5STEP(F3, a, b, c, d, buffer[9]  + 0xd9d4d039,  4);
100115f8:	f8df e1f0 	ldr.w	lr, [pc, #496]	@ 100117ec <Transform+0x6dc>
100115fc:	44a6      	add	lr, r4
    MD5STEP(F3, b, c, d, a, buffer[6]  + 0x04881d05, 23);
100115fe:	eb03 2c7c 	add.w	ip, r3, ip, ror #9
    MD5STEP(F3, a, b, c, d, buffer[9]  + 0xd9d4d039,  4);
10011602:	4496      	add	lr, r2
10011604:	ea81 0203 	eor.w	r2, r1, r3
10011608:	ea82 020c 	eor.w	r2, r2, ip
1001160c:	4472      	add	r2, lr
    MD5STEP(F3, d, a, b, c, buffer[12] + 0xe6db99e5, 11);
1001160e:	f8df e1e0 	ldr.w	lr, [pc, #480]	@ 100117f0 <Transform+0x6e0>
    MD5STEP(F3, c, d, a, b, buffer[15] + 0x1fa27cf8, 16);
    MD5STEP(F3, b, c, d, a, buffer[2]  + 0xc4ac5665, 23);
10011612:	9c01      	ldr	r4, [sp, #4]
    MD5STEP(F3, d, a, b, c, buffer[12] + 0xe6db99e5, 11);
10011614:	44c6      	add	lr, r8
    MD5STEP(F3, a, b, c, d, buffer[9]  + 0xd9d4d039,  4);
10011616:	eb0c 7232 	add.w	r2, ip, r2, ror #28
    MD5STEP(F3, d, a, b, c, buffer[12] + 0xe6db99e5, 11);
1001161a:	448e      	add	lr, r1
1001161c:	ea83 010c 	eor.w	r1, r3, ip
10011620:	4051      	eors	r1, r2
10011622:	4471      	add	r1, lr
    MD5STEP(F3, c, d, a, b, buffer[15] + 0x1fa27cf8, 16);
10011624:	f8df e1cc 	ldr.w	lr, [pc, #460]	@ 100117f4 <Transform+0x6e4>
10011628:	44be      	add	lr, r7
    MD5STEP(F3, d, a, b, c, buffer[12] + 0xe6db99e5, 11);
1001162a:	eb02 5171 	add.w	r1, r2, r1, ror #21
    MD5STEP(F3, c, d, a, b, buffer[15] + 0x1fa27cf8, 16);
1001162e:	4473      	add	r3, lr
10011630:	ea8c 0e02 	eor.w	lr, ip, r2
10011634:	ea8e 0e01 	eor.w	lr, lr, r1
10011638:	449e      	add	lr, r3
    MD5STEP(F3, b, c, d, a, buffer[2]  + 0xc4ac5665, 23);
1001163a:	4b6f      	ldr	r3, [pc, #444]	@ (100117f8 <Transform+0x6e8>)
1001163c:	4423      	add	r3, r4
    MD5STEP(F3, c, d, a, b, buffer[15] + 0x1fa27cf8, 16);
1001163e:	eb01 4e3e 	add.w	lr, r1, lr, ror #16
    MD5STEP(F3, b, c, d, a, buffer[2]  + 0xc4ac5665, 23);
10011642:	449c      	add	ip, r3
10011644:	ea82 0301 	eor.w	r3, r2, r1
10011648:	ea83 030e 	eor.w	r3, r3, lr
1001164c:	4463      	add	r3, ip

    MD5STEP(F4, a, b, c, d, buffer[0]  + 0xf4292244,  6);
1001164e:	f8df c1ac 	ldr.w	ip, [pc, #428]	@ 100117fc <Transform+0x6ec>
    MD5STEP(F4, c, d, a, b, buffer[14] + 0xab9423a7, 15);
    MD5STEP(F4, b, c, d, a, buffer[5]  + 0xfc93a039, 21);
    MD5STEP(F4, a, b, c, d, buffer[12] + 0x655b59c3,  6);
    MD5STEP(F4, d, a, b, c, buffer[3]  + 0x8f0ccc92, 10);
    MD5STEP(F4, c, d, a, b, buffer[10] + 0xffeff47d, 15);
    MD5STEP(F4, b, c, d, a, buffer[1]  + 0x85845dd1, 21);
10011652:	9c09      	ldr	r4, [sp, #36]	@ 0x24
    MD5STEP(F3, b, c, d, a, buffer[2]  + 0xc4ac5665, 23);
10011654:	eb0e 2373 	add.w	r3, lr, r3, ror #9
    MD5STEP(F4, a, b, c, d, buffer[0]  + 0xf4292244,  6);
10011658:	44dc      	add	ip, fp
1001165a:	4494      	add	ip, r2
1001165c:	ea63 0201 	orn	r2, r3, r1
10011660:	ea82 020e 	eor.w	r2, r2, lr
10011664:	4462      	add	r2, ip
    MD5STEP(F4, d, a, b, c, buffer[7]  + 0x432aff97, 10);
10011666:	f8df c198 	ldr.w	ip, [pc, #408]	@ 10011800 <Transform+0x6f0>
    MD5STEP(F4, a, b, c, d, buffer[8]  + 0x6fa87e4f,  6);
    MD5STEP(F4, d, a, b, c, buffer[15] + 0xfe2ce6e0, 10);
    MD5STEP(F4, c, d, a, b, buffer[6]  + 0xa3014314, 15);
    MD5STEP(F4, b, c, d, a, buffer[13] + 0x4e0811a1, 21);
    MD5STEP(F4, a, b, c, d, buffer[4]  + 0xf7537e82,  6);
1001166a:	f8dd b00c 	ldr.w	fp, [sp, #12]
    MD5STEP(F4, a, b, c, d, buffer[0]  + 0xf4292244,  6);
1001166e:	eb03 62b2 	add.w	r2, r3, r2, ror #26
    MD5STEP(F4, d, a, b, c, buffer[7]  + 0x432aff97, 10);
10011672:	44d4      	add	ip, sl
10011674:	448c      	add	ip, r1
10011676:	ea62 010e 	orn	r1, r2, lr
1001167a:	4059      	eors	r1, r3
1001167c:	4461      	add	r1, ip
    MD5STEP(F4, c, d, a, b, buffer[14] + 0xab9423a7, 15);
1001167e:	f8df c184 	ldr.w	ip, [pc, #388]	@ 10011804 <Transform+0x6f4>
    MD5STEP(F4, d, a, b, c, buffer[7]  + 0x432aff97, 10);
10011682:	eb02 51b1 	add.w	r1, r2, r1, ror #22
    MD5STEP(F4, c, d, a, b, buffer[14] + 0xab9423a7, 15);
10011686:	44cc      	add	ip, r9
10011688:	44f4      	add	ip, lr
1001168a:	ea61 0e03 	orn	lr, r1, r3
1001168e:	ea8e 0e02 	eor.w	lr, lr, r2
    MD5STEP(F4, b, c, d, a, buffer[5]  + 0xfc93a039, 21);
10011692:	f8dd 9010 	ldr.w	r9, [sp, #16]
    MD5STEP(F4, c, d, a, b, buffer[14] + 0xab9423a7, 15);
10011696:	44f4      	add	ip, lr
    MD5STEP(F4, b, c, d, a, buffer[5]  + 0xfc93a039, 21);
10011698:	f8df e16c 	ldr.w	lr, [pc, #364]	@ 10011808 <Transform+0x6f8>
    MD5STEP(F4, c, d, a, b, buffer[14] + 0xab9423a7, 15);
1001169c:	eb01 4c7c 	add.w	ip, r1, ip, ror #17
    MD5STEP(F4, b, c, d, a, buffer[5]  + 0xfc93a039, 21);
100116a0:	44ce      	add	lr, r9
100116a2:	449e      	add	lr, r3
100116a4:	ea6c 0302 	orn	r3, ip, r2
100116a8:	404b      	eors	r3, r1
100116aa:	4473      	add	r3, lr
    MD5STEP(F4, a, b, c, d, buffer[12] + 0x655b59c3,  6);
100116ac:	f8df e15c 	ldr.w	lr, [pc, #348]	@ 1001180c <Transform+0x6fc>
    MD5STEP(F4, b, c, d, a, buffer[5]  + 0xfc93a039, 21);
100116b0:	eb0c 23f3 	add.w	r3, ip, r3, ror #11
    MD5STEP(F4, a, b, c, d, buffer[12] + 0x655b59c3,  6);
100116b4:	44c6      	add	lr, r8
100116b6:	4496      	add	lr, r2
100116b8:	ea63 0201 	orn	r2, r3, r1
100116bc:	ea82 020c 	eor.w	r2, r2, ip
    MD5STEP(F4, d, a, b, c, buffer[3]  + 0x8f0ccc92, 10);
100116c0:	f8dd 8008 	ldr.w	r8, [sp, #8]
    MD5STEP(F4, a, b, c, d, buffer[12] + 0x655b59c3,  6);
100116c4:	4472      	add	r2, lr
    MD5STEP(F4, c, d, a, b, buffer[10] + 0xffeff47d, 15);
100116c6:	f5a5 1580 	sub.w	r5, r5, #1048576	@ 0x100000
    MD5STEP(F4, d, a, b, c, buffer[3]  + 0x8f0ccc92, 10);
100116ca:	f8df e144 	ldr.w	lr, [pc, #324]	@ 10011810 <Transform+0x700>
    MD5STEP(F4, a, b, c, d, buffer[12] + 0x655b59c3,  6);
100116ce:	eb03 62b2 	add.w	r2, r3, r2, ror #26
    MD5STEP(F4, c, d, a, b, buffer[10] + 0xffeff47d, 15);
100116d2:	f6a5 3583 	subw	r5, r5, #2947	@ 0xb83
100116d6:	4465      	add	r5, ip
    MD5STEP(F4, d, a, b, c, buffer[3]  + 0x8f0ccc92, 10);
100116d8:	44c6      	add	lr, r8
100116da:	ea62 0c0c 	orn	ip, r2, ip
100116de:	448e      	add	lr, r1
100116e0:	ea8c 0c03 	eor.w	ip, ip, r3
100116e4:	44f4      	add	ip, lr
100116e6:	eb02 5cbc 	add.w	ip, r2, ip, ror #22
    MD5STEP(F4, c, d, a, b, buffer[10] + 0xffeff47d, 15);
100116ea:	ea6c 0103 	orn	r1, ip, r3
100116ee:	4051      	eors	r1, r2
100116f0:	4429      	add	r1, r5
    MD5STEP(F4, b, c, d, a, buffer[1]  + 0x85845dd1, 21);
100116f2:	4d48      	ldr	r5, [pc, #288]	@ (10011814 <Transform+0x704>)
    MD5STEP(F4, a, b, c, d, buffer[8]  + 0x6fa87e4f,  6);
100116f4:	f8dd e018 	ldr.w	lr, [sp, #24]
    MD5STEP(F4, c, d, a, b, buffer[6]  + 0xa3014314, 15);
100116f8:	f8dd 8014 	ldr.w	r8, [sp, #20]
    MD5STEP(F4, c, d, a, b, buffer[10] + 0xffeff47d, 15);
100116fc:	eb0c 4171 	add.w	r1, ip, r1, ror #17
    MD5STEP(F4, b, c, d, a, buffer[1]  + 0x85845dd1, 21);
10011700:	4425      	add	r5, r4
10011702:	441d      	add	r5, r3
10011704:	ea61 0302 	orn	r3, r1, r2
10011708:	ea83 030c 	eor.w	r3, r3, ip
1001170c:	442b      	add	r3, r5
    MD5STEP(F4, a, b, c, d, buffer[8]  + 0x6fa87e4f,  6);
1001170e:	4d42      	ldr	r5, [pc, #264]	@ (10011818 <Transform+0x708>)
    MD5STEP(F4, d, a, b, c, buffer[11] + 0xbd3af235, 10);
    MD5STEP(F4, c, d, a, b, buffer[2]  + 0x2ad7d2bb, 15);
10011710:	9c01      	ldr	r4, [sp, #4]
    MD5STEP(F4, b, c, d, a, buffer[1]  + 0x85845dd1, 21);
10011712:	eb01 23f3 	add.w	r3, r1, r3, ror #11
    MD5STEP(F4, a, b, c, d, buffer[8]  + 0x6fa87e4f,  6);
10011716:	4475      	add	r5, lr
10011718:	4415      	add	r5, r2
1001171a:	ea63 020c 	orn	r2, r3, ip
1001171e:	404a      	eors	r2, r1
10011720:	442a      	add	r2, r5
    MD5STEP(F4, d, a, b, c, buffer[15] + 0xfe2ce6e0, 10);
10011722:	4d3e      	ldr	r5, [pc, #248]	@ (1001181c <Transform+0x70c>)
    MD5STEP(F4, a, b, c, d, buffer[8]  + 0x6fa87e4f,  6);
10011724:	eb03 62b2 	add.w	r2, r3, r2, ror #26
    MD5STEP(F4, d, a, b, c, buffer[15] + 0xfe2ce6e0, 10);
10011728:	443d      	add	r5, r7
1001172a:	ea62 0701 	orn	r7, r2, r1
1001172e:	405f      	eors	r7, r3
10011730:	4465      	add	r5, ip
10011732:	443d      	add	r5, r7
    MD5STEP(F4, c, d, a, b, buffer[6]  + 0xa3014314, 15);
10011734:	4f3a      	ldr	r7, [pc, #232]	@ (10011820 <Transform+0x710>)
    MD5STEP(F4, d, a, b, c, buffer[15] + 0xfe2ce6e0, 10);
10011736:	eb02 55b5 	add.w	r5, r2, r5, ror #22
    MD5STEP(F4, c, d, a, b, buffer[6]  + 0xa3014314, 15);
1001173a:	4447      	add	r7, r8
1001173c:	440f      	add	r7, r1
1001173e:	ea65 0103 	orn	r1, r5, r3
10011742:	4051      	eors	r1, r2
10011744:	4439      	add	r1, r7
    MD5STEP(F4, b, c, d, a, buffer[13] + 0x4e0811a1, 21);
10011746:	4f37      	ldr	r7, [pc, #220]	@ (10011824 <Transform+0x714>)
    MD5STEP(F4, c, d, a, b, buffer[6]  + 0xa3014314, 15);
10011748:	eb05 4171 	add.w	r1, r5, r1, ror #17
    MD5STEP(F4, b, c, d, a, buffer[13] + 0x4e0811a1, 21);
1001174c:	4437      	add	r7, r6
1001174e:	ea61 0602 	orn	r6, r1, r2
10011752:	441f      	add	r7, r3
10011754:	406e      	eors	r6, r5
    MD5STEP(F4, a, b, c, d, buffer[4]  + 0xf7537e82,  6);
10011756:	4b34      	ldr	r3, [pc, #208]	@ (10011828 <Transform+0x718>)
    MD5STEP(F4, b, c, d, a, buffer[13] + 0x4e0811a1, 21);
10011758:	443e      	add	r6, r7
1001175a:	eb01 26f6 	add.w	r6, r1, r6, ror #11
    MD5STEP(F4, a, b, c, d, buffer[4]  + 0xf7537e82,  6);
1001175e:	445b      	add	r3, fp
10011760:	441a      	add	r2, r3
10011762:	ea66 0305 	orn	r3, r6, r5
10011766:	404b      	eors	r3, r1
10011768:	4413      	add	r3, r2
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);

    /* Add the working vars back into digest state[]  */
    md5->digest[0] += a;
1001176a:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    MD5STEP(F4, d, a, b, c, buffer[11] + 0xbd3af235, 10);
1001176c:	f8dd b020 	ldr.w	fp, [sp, #32]
    MD5STEP(F4, a, b, c, d, buffer[4]  + 0xf7537e82,  6);
10011770:	eb06 63b3 	add.w	r3, r6, r3, ror #26
    md5->digest[0] += a;
10011774:	441a      	add	r2, r3
10011776:	64c2      	str	r2, [r0, #76]	@ 0x4c
    MD5STEP(F4, d, a, b, c, buffer[11] + 0xbd3af235, 10);
10011778:	4a2c      	ldr	r2, [pc, #176]	@ (1001182c <Transform+0x71c>)
1001177a:	445a      	add	r2, fp
1001177c:	4415      	add	r5, r2
1001177e:	ea63 0201 	orn	r2, r3, r1
10011782:	4072      	eors	r2, r6
10011784:	442a      	add	r2, r5
    md5->digest[1] += b;
    md5->digest[2] += c;
    md5->digest[3] += d;
10011786:	6d85      	ldr	r5, [r0, #88]	@ 0x58
    MD5STEP(F4, d, a, b, c, buffer[11] + 0xbd3af235, 10);
10011788:	eb03 52b2 	add.w	r2, r3, r2, ror #22
    md5->digest[3] += d;
1001178c:	4415      	add	r5, r2
1001178e:	6585      	str	r5, [r0, #88]	@ 0x58
    MD5STEP(F4, c, d, a, b, buffer[2]  + 0x2ad7d2bb, 15);
10011790:	4d27      	ldr	r5, [pc, #156]	@ (10011830 <Transform+0x720>)
10011792:	4425      	add	r5, r4
10011794:	440d      	add	r5, r1
10011796:	ea62 0106 	orn	r1, r2, r6
1001179a:	4059      	eors	r1, r3
1001179c:	4429      	add	r1, r5
1001179e:	eb02 4171 	add.w	r1, r2, r1, ror #17
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);
100117a2:	ea61 0303 	orn	r3, r1, r3
    md5->digest[1] += b;
100117a6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);
100117a8:	4053      	eors	r3, r2
    md5->digest[2] += c;
100117aa:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);
100117ac:	f8dd c01c 	ldr.w	ip, [sp, #28]
    md5->digest[1] += b;
100117b0:	440c      	add	r4, r1
    md5->digest[2] += c;
100117b2:	4411      	add	r1, r2
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);
100117b4:	4a1f      	ldr	r2, [pc, #124]	@ (10011834 <Transform+0x724>)
    md5->digest[2] += c;
100117b6:	6541      	str	r1, [r0, #84]	@ 0x54
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);
100117b8:	4462      	add	r2, ip
100117ba:	4432      	add	r2, r6
100117bc:	4413      	add	r3, r2
    md5->digest[1] += b;
100117be:	eb04 24f3 	add.w	r4, r4, r3, ror #11
100117c2:	6504      	str	r4, [r0, #80]	@ 0x50

    return 0;
}
100117c4:	2000      	movs	r0, #0
100117c6:	b00d      	add	sp, #52	@ 0x34
100117c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100117cc:	a4beea44 	.word	0xa4beea44
100117d0:	4bdecfa9 	.word	0x4bdecfa9
100117d4:	f6bb4b60 	.word	0xf6bb4b60
100117d8:	bebfbc70 	.word	0xbebfbc70
100117dc:	289b7ec6 	.word	0x289b7ec6
100117e0:	eaa127fa 	.word	0xeaa127fa
100117e4:	d4ef3085 	.word	0xd4ef3085
100117e8:	04881d05 	.word	0x04881d05
100117ec:	d9d4d039 	.word	0xd9d4d039
100117f0:	e6db99e5 	.word	0xe6db99e5
100117f4:	1fa27cf8 	.word	0x1fa27cf8
100117f8:	c4ac5665 	.word	0xc4ac5665
100117fc:	f4292244 	.word	0xf4292244
10011800:	432aff97 	.word	0x432aff97
10011804:	ab9423a7 	.word	0xab9423a7
10011808:	fc93a039 	.word	0xfc93a039
1001180c:	655b59c3 	.word	0x655b59c3
10011810:	8f0ccc92 	.word	0x8f0ccc92
10011814:	85845dd1 	.word	0x85845dd1
10011818:	6fa87e4f 	.word	0x6fa87e4f
1001181c:	fe2ce6e0 	.word	0xfe2ce6e0
10011820:	a3014314 	.word	0xa3014314
10011824:	4e0811a1 	.word	0x4e0811a1
10011828:	f7537e82 	.word	0xf7537e82
1001182c:	bd3af235 	.word	0xbd3af235
10011830:	2ad7d2bb 	.word	0x2ad7d2bb
10011834:	eb86d391 	.word	0xeb86d391

10011838 <wc_Md5Update>:
    return ret;
}

/* do block size increments/updates */
int wc_Md5Update(wc_Md5* md5, const byte* data, word32 len)
{
10011838:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int ret = 0;
    word32 blocksLen;
    byte* local;

    if (md5 == NULL || (data == NULL && len > 0)) {
1001183c:	2800      	cmp	r0, #0
1001183e:	d074      	beq.n	1001192a <wc_Md5Update+0xf2>
10011840:	460c      	mov	r4, r1
10011842:	4690      	mov	r8, r2
10011844:	4605      	mov	r5, r0
10011846:	2900      	cmp	r1, #0
10011848:	d04d      	beq.n	100118e6 <wc_Md5Update+0xae>
#endif
    }
#endif /* WOLFSSL_ASYNC_CRYPT */

    /* check that internal buffLen is valid */
    if (md5->buffLen >= WC_MD5_BLOCK_SIZE)
1001184a:	6800      	ldr	r0, [r0, #0]
1001184c:	283f      	cmp	r0, #63	@ 0x3f
1001184e:	d86f      	bhi.n	10011930 <wc_Md5Update+0xf8>
    if ((md5->loLen += len) < tmp) {
10011850:	686b      	ldr	r3, [r5, #4]
10011852:	18d3      	adds	r3, r2, r3
10011854:	606b      	str	r3, [r5, #4]
10011856:	d22c      	bcs.n	100118b2 <wc_Md5Update+0x7a>
    }

    /* add length for final */
    AddLength(md5, len);

    local = (byte*)md5->buffer;
10011858:	f105 060c 	add.w	r6, r5, #12

    /* process any remainder from previous operation */
    if (md5->buffLen > 0) {
1001185c:	bb80      	cbnz	r0, 100118c0 <wc_Md5Update+0x88>
        XTRANSFORM_LEN(md5, data, blocksLen);
        data += blocksLen;
        len  -= blocksLen;
    }
#else
    while (len >= WC_MD5_BLOCK_SIZE) {
1001185e:	f1b8 0f3f 	cmp.w	r8, #63	@ 0x3f
10011862:	d955      	bls.n	10011910 <wc_Md5Update+0xd8>
10011864:	f1a8 0740 	sub.w	r7, r8, #64	@ 0x40
10011868:	f027 073f 	bic.w	r7, r7, #63	@ 0x3f
1001186c:	3740      	adds	r7, #64	@ 0x40
1001186e:	4427      	add	r7, r4
            local32 = (word32*)data;
        }
        else
    #endif
        {
            XMEMCPY(local32, data, WC_MD5_BLOCK_SIZE);
10011870:	4633      	mov	r3, r6
10011872:	f104 0e40 	add.w	lr, r4, #64	@ 0x40
10011876:	f8d4 c000 	ldr.w	ip, [r4]
1001187a:	6860      	ldr	r0, [r4, #4]
1001187c:	68a1      	ldr	r1, [r4, #8]
1001187e:	68e2      	ldr	r2, [r4, #12]
10011880:	60da      	str	r2, [r3, #12]
10011882:	3410      	adds	r4, #16
10011884:	4574      	cmp	r4, lr
10011886:	f8c3 c000 	str.w	ip, [r3]
1001188a:	6058      	str	r0, [r3, #4]
1001188c:	6099      	str	r1, [r3, #8]
1001188e:	f103 0310 	add.w	r3, r3, #16
10011892:	d1f0      	bne.n	10011876 <wc_Md5Update+0x3e>

    #if defined(BIG_ENDIAN_ORDER) && !defined(FREESCALE_MMCAU_SHA)
        ByteReverseWords(local32, local32, WC_MD5_BLOCK_SIZE);
    #endif

        ret = XTRANSFORM(md5, (const byte*)local32);
10011894:	4631      	mov	r1, r6
10011896:	4628      	mov	r0, r5
10011898:	f7ff fc3a 	bl	10011110 <Transform>
    while (len >= WC_MD5_BLOCK_SIZE) {
1001189c:	42bc      	cmp	r4, r7
        ret = XTRANSFORM(md5, (const byte*)local32);
1001189e:	4681      	mov	r9, r0
    while (len >= WC_MD5_BLOCK_SIZE) {
100118a0:	d1e6      	bne.n	10011870 <wc_Md5Update+0x38>
        len  -= WC_MD5_BLOCK_SIZE;
100118a2:	f008 083f 	and.w	r8, r8, #63	@ 0x3f
    }
#endif /* XTRANSFORM_LEN */

    /* save remainder */
    if (len > 0) {
100118a6:	f1b8 0f00 	cmp.w	r8, #0
100118aa:	d127      	bne.n	100118fc <wc_Md5Update+0xc4>
        XMEMCPY(local, data, len);
        md5->buffLen = len;
    }

    return ret;
}
100118ac:	4648      	mov	r0, r9
100118ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        md5->hiLen++;                       /* carry low to high */
100118b2:	68ab      	ldr	r3, [r5, #8]
100118b4:	3301      	adds	r3, #1
100118b6:	60ab      	str	r3, [r5, #8]
    local = (byte*)md5->buffer;
100118b8:	f105 060c 	add.w	r6, r5, #12
    if (md5->buffLen > 0) {
100118bc:	2800      	cmp	r0, #0
100118be:	d0ce      	beq.n	1001185e <wc_Md5Update+0x26>
        blocksLen = min(len, WC_MD5_BLOCK_SIZE - md5->buffLen);
100118c0:	f1c0 0740 	rsb	r7, r0, #64	@ 0x40
        #define min min
    #endif
    /* returns the smaller of a and b */
    WC_MISC_STATIC WC_INLINE word32 min(word32 a, word32 b)
    {
        return a > b ? b : a;
100118c4:	4547      	cmp	r7, r8
100118c6:	bf28      	it	cs
100118c8:	4647      	movcs	r7, r8
        XMEMCPY(&local[md5->buffLen], data, blocksLen);
100118ca:	4430      	add	r0, r6
100118cc:	463a      	mov	r2, r7
100118ce:	4621      	mov	r1, r4
100118d0:	f004 ff9e 	bl	10016810 <memcpy>
        md5->buffLen += blocksLen;
100118d4:	682b      	ldr	r3, [r5, #0]
100118d6:	443b      	add	r3, r7
        if (md5->buffLen == WC_MD5_BLOCK_SIZE) {
100118d8:	2b40      	cmp	r3, #64	@ 0x40
        md5->buffLen += blocksLen;
100118da:	602b      	str	r3, [r5, #0]
        if (md5->buffLen == WC_MD5_BLOCK_SIZE) {
100118dc:	d01c      	beq.n	10011918 <wc_Md5Update+0xe0>
        data         += blocksLen;
100118de:	443c      	add	r4, r7
        len          -= blocksLen;
100118e0:	eba8 0807 	sub.w	r8, r8, r7
100118e4:	e7bb      	b.n	1001185e <wc_Md5Update+0x26>
    if (md5 == NULL || (data == NULL && len > 0)) {
100118e6:	bb02      	cbnz	r2, 1001192a <wc_Md5Update+0xf2>
    if (md5->buffLen >= WC_MD5_BLOCK_SIZE)
100118e8:	6803      	ldr	r3, [r0, #0]
        return BUFFER_E;
100118ea:	2b40      	cmp	r3, #64	@ 0x40
100118ec:	bf34      	ite	cc
100118ee:	f04f 0900 	movcc.w	r9, #0
100118f2:	f06f 0983 	mvncs.w	r9, #131	@ 0x83
}
100118f6:	4648      	mov	r0, r9
100118f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        XMEMCPY(local, data, len);
100118fc:	4639      	mov	r1, r7
100118fe:	4630      	mov	r0, r6
10011900:	4642      	mov	r2, r8
10011902:	f004 ff85 	bl	10016810 <memcpy>
        md5->buffLen = len;
10011906:	f8c5 8000 	str.w	r8, [r5]
}
1001190a:	4648      	mov	r0, r9
1001190c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    while (len >= WC_MD5_BLOCK_SIZE) {
10011910:	4627      	mov	r7, r4
10011912:	f04f 0900 	mov.w	r9, #0
10011916:	e7c6      	b.n	100118a6 <wc_Md5Update+0x6e>
            ret = XTRANSFORM(md5, (const byte*)local);
10011918:	4631      	mov	r1, r6
1001191a:	4628      	mov	r0, r5
1001191c:	f7ff fbf8 	bl	10011110 <Transform>
            if (ret != 0)
10011920:	4681      	mov	r9, r0
10011922:	2800      	cmp	r0, #0
10011924:	d1c2      	bne.n	100118ac <wc_Md5Update+0x74>
            md5->buffLen = 0;
10011926:	6028      	str	r0, [r5, #0]
10011928:	e7d9      	b.n	100118de <wc_Md5Update+0xa6>
        return BAD_FUNC_ARG;
1001192a:	f06f 09ac 	mvn.w	r9, #172	@ 0xac
1001192e:	e7bd      	b.n	100118ac <wc_Md5Update+0x74>
        return BUFFER_E;
10011930:	f06f 0983 	mvn.w	r9, #131	@ 0x83
10011934:	e7ba      	b.n	100118ac <wc_Md5Update+0x74>
10011936:	bf00      	nop

10011938 <wc_Md5Final>:

int wc_Md5Final(wc_Md5* md5, byte* hash)
{
    byte* local;

    if (md5 == NULL || hash == NULL) {
10011938:	2800      	cmp	r0, #0
1001193a:	d04a      	beq.n	100119d2 <wc_Md5Final+0x9a>
{
1001193c:	b570      	push	{r4, r5, r6, lr}
1001193e:	460d      	mov	r5, r1
    if (md5 == NULL || hash == NULL) {
10011940:	2900      	cmp	r1, #0
10011942:	d043      	beq.n	100119cc <wc_Md5Final+0x94>
        return IntelQaSymMd5(&md5->asyncDev, hash, NULL, WC_MD5_DIGEST_SIZE);
#endif
    }
#endif /* WOLFSSL_ASYNC_CRYPT */

    local = (byte*)md5->buffer; /* buffer allocated in word32 size */
10011944:	4606      	mov	r6, r0
10011946:	4604      	mov	r4, r0

    /* ensure we have a valid buffer length; (-1 to append a byte to length) */
    if (md5->buffLen > WC_MD5_BLOCK_SIZE - 1) {
10011948:	f856 3b0c 	ldr.w	r3, [r6], #12
1001194c:	2b3f      	cmp	r3, #63	@ 0x3f
1001194e:	d83a      	bhi.n	100119c6 <wc_Md5Final+0x8e>
        return BUFFER_E;
    }

    local[md5->buffLen++] = 0x80;  /* add 1 */
10011950:	1c5a      	adds	r2, r3, #1
10011952:	6002      	str	r2, [r0, #0]
10011954:	2280      	movs	r2, #128	@ 0x80
10011956:	54f2      	strb	r2, [r6, r3]

    /* pad with zeros */
    if (md5->buffLen > WC_MD5_PAD_SIZE) {
10011958:	6803      	ldr	r3, [r0, #0]
1001195a:	2b38      	cmp	r3, #56	@ 0x38
1001195c:	d826      	bhi.n	100119ac <wc_Md5Final+0x74>
        XMEMSET(&local[md5->buffLen], 0, WC_MD5_BLOCK_SIZE - md5->buffLen);
1001195e:	18f0      	adds	r0, r6, r3
        ByteReverseWords(md5->buffer, md5->buffer, WC_MD5_BLOCK_SIZE);
#endif
        XTRANSFORM(md5, local);
        md5->buffLen = 0;
    }
    XMEMSET(&local[md5->buffLen], 0, WC_MD5_PAD_SIZE - md5->buffLen);
10011960:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
10011964:	2100      	movs	r1, #0
10011966:	f004 f9d1 	bl	10015d0c <memset>
    ByteReverseWords(md5->buffer, md5->buffer, WC_MD5_BLOCK_SIZE);
#endif

    /* put lengths in bits */
    md5->hiLen = (md5->loLen >> (8 * sizeof(md5->loLen) - 3)) +
                 (md5->hiLen << 3);
1001196a:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
    md5->hiLen = (md5->loLen >> (8 * sizeof(md5->loLen) - 3)) +
1001196e:	0f5a      	lsrs	r2, r3, #29
10011970:	eb02 02c0 	add.w	r2, r2, r0, lsl #3
    md5->loLen = md5->loLen << 3;
10011974:	00db      	lsls	r3, r3, #3
    /* ! length ordering dependent on digest endian type ! */
    XMEMCPY(&local[WC_MD5_PAD_SIZE], &md5->loLen, sizeof(word32));
    XMEMCPY(&local[WC_MD5_PAD_SIZE + sizeof(word32)], &md5->hiLen, sizeof(word32));

    /* final transform and result to hash */
    XTRANSFORM(md5, local);
10011976:	4631      	mov	r1, r6
    XMEMCPY(&local[WC_MD5_PAD_SIZE], &md5->loLen, sizeof(word32));
10011978:	6463      	str	r3, [r4, #68]	@ 0x44
    XMEMCPY(&local[WC_MD5_PAD_SIZE + sizeof(word32)], &md5->hiLen, sizeof(word32));
1001197a:	64a2      	str	r2, [r4, #72]	@ 0x48
    XTRANSFORM(md5, local);
1001197c:	4620      	mov	r0, r4
1001197e:	f7ff fbc7 	bl	10011110 <Transform>
#ifdef BIG_ENDIAN_ORDER
    ByteReverseWords(md5->digest, md5->digest, WC_MD5_DIGEST_SIZE);
#endif
    XMEMCPY(hash, md5->digest, WC_MD5_DIGEST_SIZE);
10011982:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
10011984:	6d63      	ldr	r3, [r4, #84]	@ 0x54
10011986:	6d22      	ldr	r2, [r4, #80]	@ 0x50
10011988:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001198a:	6029      	str	r1, [r5, #0]
1001198c:	60ab      	str	r3, [r5, #8]
    md5->digest[0] = 0x67452301L;
1001198e:	4912      	ldr	r1, [pc, #72]	@ (100119d8 <wc_Md5Final+0xa0>)
    md5->digest[1] = 0xefcdab89L;
10011990:	4b12      	ldr	r3, [pc, #72]	@ (100119dc <wc_Md5Final+0xa4>)
    XMEMCPY(hash, md5->digest, WC_MD5_DIGEST_SIZE);
10011992:	60e8      	str	r0, [r5, #12]
10011994:	606a      	str	r2, [r5, #4]
    md5->digest[1] = 0xefcdab89L;
10011996:	e9c4 1313 	strd	r1, r3, [r4, #76]	@ 0x4c
    md5->digest[2] = 0x98badcfeL;
1001199a:	4a11      	ldr	r2, [pc, #68]	@ (100119e0 <wc_Md5Final+0xa8>)
    md5->digest[3] = 0x10325476L;
1001199c:	4b11      	ldr	r3, [pc, #68]	@ (100119e4 <wc_Md5Final+0xac>)
    md5->buffLen = 0;
1001199e:	2000      	movs	r0, #0
    md5->digest[3] = 0x10325476L;
100119a0:	e9c4 2315 	strd	r2, r3, [r4, #84]	@ 0x54
    md5->buffLen = 0;
100119a4:	6020      	str	r0, [r4, #0]
100119a6:	6060      	str	r0, [r4, #4]
    md5->hiLen   = 0;
100119a8:	60a0      	str	r0, [r4, #8]

    return _InitMd5(md5); /* reset state */
}
100119aa:	bd70      	pop	{r4, r5, r6, pc}
        XMEMSET(&local[md5->buffLen], 0, WC_MD5_BLOCK_SIZE - md5->buffLen);
100119ac:	f1c3 0240 	rsb	r2, r3, #64	@ 0x40
100119b0:	18f0      	adds	r0, r6, r3
100119b2:	2100      	movs	r1, #0
100119b4:	f004 f9aa 	bl	10015d0c <memset>
        XTRANSFORM(md5, local);
100119b8:	4631      	mov	r1, r6
100119ba:	4620      	mov	r0, r4
100119bc:	f7ff fba8 	bl	10011110 <Transform>
100119c0:	4630      	mov	r0, r6
100119c2:	2238      	movs	r2, #56	@ 0x38
100119c4:	e7ce      	b.n	10011964 <wc_Md5Final+0x2c>
        return BUFFER_E;
100119c6:	f06f 0083 	mvn.w	r0, #131	@ 0x83
}
100119ca:	bd70      	pop	{r4, r5, r6, pc}
        return BAD_FUNC_ARG;
100119cc:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
}
100119d0:	bd70      	pop	{r4, r5, r6, pc}
        return BAD_FUNC_ARG;
100119d2:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
}
100119d6:	4770      	bx	lr
100119d8:	67452301 	.word	0x67452301
100119dc:	efcdab89 	.word	0xefcdab89
100119e0:	98badcfe 	.word	0x98badcfe
100119e4:	10325476 	.word	0x10325476

100119e8 <wc_InitMd5>:
#endif /* !HAVE_MD5_CUST_API */


int wc_InitMd5(wc_Md5* md5)
{
    if (md5 == NULL) {
100119e8:	b180      	cbz	r0, 10011a0c <wc_InitMd5+0x24>
{
100119ea:	b410      	push	{r4}
    md5->digest[1] = 0xefcdab89L;
100119ec:	4a09      	ldr	r2, [pc, #36]	@ (10011a14 <wc_InitMd5+0x2c>)
    md5->digest[0] = 0x67452301L;
100119ee:	4c0a      	ldr	r4, [pc, #40]	@ (10011a18 <wc_InitMd5+0x30>)
    md5->digest[2] = 0x98badcfeL;
100119f0:	490a      	ldr	r1, [pc, #40]	@ (10011a1c <wc_InitMd5+0x34>)
    md5->digest[1] = 0xefcdab89L;
100119f2:	e9c0 4213 	strd	r4, r2, [r0, #76]	@ 0x4c
    md5->digest[3] = 0x10325476L;
100119f6:	4a0a      	ldr	r2, [pc, #40]	@ (10011a20 <wc_InitMd5+0x38>)
        return BAD_FUNC_ARG;
    }
    return wc_InitMd5_ex(md5, NULL, INVALID_DEVID);
}
100119f8:	bc10      	pop	{r4}
    md5->heap = heap;
100119fa:	2300      	movs	r3, #0
    md5->digest[3] = 0x10325476L;
100119fc:	e9c0 1215 	strd	r1, r2, [r0, #84]	@ 0x54
    md5->heap = heap;
10011a00:	65c3      	str	r3, [r0, #92]	@ 0x5c
    md5->buffLen = 0;
10011a02:	6003      	str	r3, [r0, #0]
10011a04:	6043      	str	r3, [r0, #4]
    md5->hiLen   = 0;
10011a06:	6083      	str	r3, [r0, #8]
    return wc_InitMd5_ex(md5, NULL, INVALID_DEVID);
10011a08:	4618      	mov	r0, r3
}
10011a0a:	4770      	bx	lr
        return BAD_FUNC_ARG;
10011a0c:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
}
10011a10:	4770      	bx	lr
10011a12:	bf00      	nop
10011a14:	efcdab89 	.word	0xefcdab89
10011a18:	67452301 	.word	0x67452301
10011a1c:	98badcfe 	.word	0x98badcfe
10011a20:	10325476 	.word	0x10325476

10011a24 <wc_Md5Free>:
#endif /* WOLFSSL_ASYNC_CRYPT */

#ifdef WOLFSSL_PIC32MZ_HASH
    wc_Md5Pic32Free(md5);
#endif
}
10011a24:	4770      	bx	lr
10011a26:	bf00      	nop

10011a28 <mxc_assert>:
};
const unsigned int num_leds = (sizeof(led_pin) / sizeof(mxc_gpio_cfg_t));

/******************************************************************************/
void mxc_assert(const char *expr, const char *file, int line)
{
10011a28:	b508      	push	{r3, lr}
10011a2a:	4603      	mov	r3, r0
    printf("MXC_ASSERT %s #%d: (%s)\n", file, line, expr);
10011a2c:	4801      	ldr	r0, [pc, #4]	@ (10011a34 <mxc_assert+0xc>)
10011a2e:	f004 fbf7 	bl	10016220 <printf>

    while (1) {}
10011a32:	e7fe      	b.n	10011a32 <mxc_assert+0xa>
10011a34:	10023648 	.word	0x10023648

10011a38 <GPIO0_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 0 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO0_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO0));
10011a38:	2000      	movs	r0, #0
10011a3a:	f000 bdcf 	b.w	100125dc <MXC_GPIO_Handler>
10011a3e:	bf00      	nop

10011a40 <GPIO1_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 1 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO1_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO1));
10011a40:	2001      	movs	r0, #1
10011a42:	f000 bdcb 	b.w	100125dc <MXC_GPIO_Handler>
10011a46:	bf00      	nop

10011a48 <Board_Init>:
}

/******************************************************************************/
int Board_Init(void)
{
10011a48:	b510      	push	{r4, lr}
#ifndef __riscv
    int err;

    // Enable GPIO
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
10011a4a:	2000      	movs	r0, #0
10011a4c:	f000 fb5c 	bl	10012108 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
10011a50:	2001      	movs	r0, #1
10011a52:	f000 fb59 	bl	10012108 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
10011a56:	2040      	movs	r0, #64	@ 0x40
10011a58:	f000 fb56 	bl	10012108 <MXC_SYS_ClockEnable>
/******************************************************************************/
int Console_Init(void)
{
    int err;

    if ((err = MXC_UART_Init(ConsoleUart, CONSOLE_BAUD, MXC_UART_IBRO_CLK)) != E_NO_ERROR) {
10011a5c:	4b10      	ldr	r3, [pc, #64]	@ (10011aa0 <Board_Init+0x58>)
10011a5e:	2202      	movs	r2, #2
10011a60:	6818      	ldr	r0, [r3, #0]
10011a62:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
10011a66:	f001 fd51 	bl	1001350c <MXC_UART_Init>
    if ((err = Console_Init()) < E_NO_ERROR) {
10011a6a:	1e04      	subs	r4, r0, #0
10011a6c:	db0c      	blt.n	10011a88 <Board_Init+0x40>
    if ((err = PB_Init()) != E_NO_ERROR) {
10011a6e:	f000 f8eb 	bl	10011c48 <PB_Init>
10011a72:	b958      	cbnz	r0, 10011a8c <Board_Init+0x44>
    if ((err = LED_Init()) != E_NO_ERROR) {
10011a74:	f000 f888 	bl	10011b88 <LED_Init>
10011a78:	4604      	mov	r4, r0
10011a7a:	b960      	cbnz	r0, 10011a96 <Board_Init+0x4e>
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
10011a7c:	4b09      	ldr	r3, [pc, #36]	@ (10011aa4 <Board_Init+0x5c>)
    MXC_Delay(200000);
10011a7e:	480a      	ldr	r0, [pc, #40]	@ (10011aa8 <Board_Init+0x60>)
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
10011a80:	2243      	movs	r2, #67	@ 0x43
10011a82:	60da      	str	r2, [r3, #12]
    MXC_Delay(200000);
10011a84:	f000 fabe 	bl	10012004 <MXC_Delay>
}
10011a88:	4620      	mov	r0, r4
10011a8a:	bd10      	pop	{r4, pc}
        MXC_ASSERT_FAIL();
10011a8c:	4907      	ldr	r1, [pc, #28]	@ (10011aac <Board_Init+0x64>)
10011a8e:	4808      	ldr	r0, [pc, #32]	@ (10011ab0 <Board_Init+0x68>)
10011a90:	226f      	movs	r2, #111	@ 0x6f
10011a92:	f7ff ffc9 	bl	10011a28 <mxc_assert>
        MXC_ASSERT_FAIL();
10011a96:	4905      	ldr	r1, [pc, #20]	@ (10011aac <Board_Init+0x64>)
10011a98:	4805      	ldr	r0, [pc, #20]	@ (10011ab0 <Board_Init+0x68>)
10011a9a:	2274      	movs	r2, #116	@ 0x74
10011a9c:	f7ff ffc4 	bl	10011a28 <mxc_assert>
10011aa0:	20000000 	.word	0x20000000
10011aa4:	40004400 	.word	0x40004400
10011aa8:	00030d40 	.word	0x00030d40
10011aac:	10023664 	.word	0x10023664
10011ab0:	100236ac 	.word	0x100236ac

10011ab4 <NMI_Handler>:
}

/******************************************************************************/
void NMI_Handler(void)
{
    __NOP();
10011ab4:	bf00      	nop
}
10011ab6:	4770      	bx	lr

10011ab8 <_close>:
    return -1;
}
int _close(int file)
{
    return -1;
}
10011ab8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10011abc:	4770      	bx	lr
10011abe:	bf00      	nop

10011ac0 <_isatty>:
int _isatty(int file)
10011ac0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10011ac4:	4770      	bx	lr
10011ac6:	bf00      	nop

10011ac8 <_lseek>:
    return -1;
}
int _lseek(int file, off_t offset, int whence)
{
    return -1;
}
10011ac8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10011acc:	4770      	bx	lr
10011ace:	bf00      	nop

10011ad0 <_fstat>:
int _fstat(int file, struct stat *st)
{
    return -1;
}
10011ad0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10011ad4:	4770      	bx	lr
10011ad6:	bf00      	nop

10011ad8 <_read>:
   fgetc for stdio */
#if defined(__ICCARM__) || defined(__GNUC__)

#if defined(__GNUC__) // GNUC _read function prototype
int _read(int file, char *ptr, int len)
{
10011ad8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    size_t n;
#endif /*  */

    int num = 0; // count of number received.

    switch (file) {
10011ada:	b9e0      	cbnz	r0, 10011b16 <_read+0x3e>
    case STDIN_FILENO:
        for (n = 0; n < len; n++) {
10011adc:	2a00      	cmp	r2, #0
10011ade:	dd19      	ble.n	10011b14 <_read+0x3c>
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
10011ae0:	4d10      	ldr	r5, [pc, #64]	@ (10011b24 <_read+0x4c>)
10011ae2:	460e      	mov	r6, r1
10011ae4:	188f      	adds	r7, r1, r2
        for (n = 0; n < len; n++) {
10011ae6:	460c      	mov	r4, r1
10011ae8:	e002      	b.n	10011af0 <_read+0x18>
10011aea:	42bb      	cmp	r3, r7
10011aec:	d00f      	beq.n	10011b0e <_read+0x36>
                num++;
                ptr++;

                break;
            } else {
                ptr++;
10011aee:	461c      	mov	r4, r3
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
10011af0:	4628      	mov	r0, r5
10011af2:	f001 fe03 	bl	100136fc <MXC_UART_ReadCharacter>
10011af6:	b2c1      	uxtb	r1, r0
10011af8:	7021      	strb	r1, [r4, #0]
            MXC_UART_WriteCharacter(MXC_UARTn, *ptr); // echo the byte.
10011afa:	4628      	mov	r0, r5
10011afc:	f001 fe00 	bl	10013700 <MXC_UART_WriteCharacter>
            if (*ptr == '\r') { // check for end of line.
10011b00:	7822      	ldrb	r2, [r4, #0]
10011b02:	2a0d      	cmp	r2, #13
                ptr++;
10011b04:	f104 0301 	add.w	r3, r4, #1
            if (*ptr == '\r') { // check for end of line.
10011b08:	d1ef      	bne.n	10011aea <_read+0x12>
                *ptr = '\n';
10011b0a:	230a      	movs	r3, #10
10011b0c:	7023      	strb	r3, [r4, #0]
                num++;
10011b0e:	f1c6 0601 	rsb	r6, r6, #1
10011b12:	19a0      	adds	r0, r4, r6
        errno = EBADF;
        return -1;
    }

    return num;
}
10011b14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        errno = EBADF;
10011b16:	f002 f8e1 	bl	10013cdc <__errno>
10011b1a:	2309      	movs	r3, #9
10011b1c:	6003      	str	r3, [r0, #0]
        return -1;
10011b1e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011b22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011b24:	40042000 	.word	0x40042000

10011b28 <_write>:

/* newlib/libc printf() will eventually call write() to get the data to the stdout */
#if defined(__GNUC__)
// GNUC _write function prototype
int _write(int file, char *ptr, int len)
{
10011b28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
int __write(int file, const unsigned char *ptr, size_t len)
{
    size_t n;
#endif /* __GNUC__ */

    switch (file) {
10011b2a:	1e43      	subs	r3, r0, #1
10011b2c:	2b01      	cmp	r3, #1
10011b2e:	d821      	bhi.n	10011b74 <_write+0x4c>
    case STDOUT_FILENO:
    case STDERR_FILENO:

        // This function should be as fast as possible
        // So we'll forgo the UART driver for now
        for (n = 0; n < len; n++) {
10011b30:	2a00      	cmp	r2, #0
10011b32:	4617      	mov	r7, r2
10011b34:	dd12      	ble.n	10011b5c <_write+0x34>
10011b36:	1e53      	subs	r3, r2, #1
            if (*ptr == '\n') {
                // Wait until there's room in the FIFO
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
10011b38:	4e12      	ldr	r6, [pc, #72]	@ (10011b84 <_write+0x5c>)
10011b3a:	1e4c      	subs	r4, r1, #1
10011b3c:	18cd      	adds	r5, r1, r3
            if (*ptr == '\n') {
10011b3e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
10011b42:	2b0a      	cmp	r3, #10
10011b44:	d00c      	beq.n	10011b60 <_write+0x38>

                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
            }

            // Wait until there's room in the FIFO
            while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
10011b46:	480f      	ldr	r0, [pc, #60]	@ (10011b84 <_write+0x5c>)
10011b48:	f001 fdde 	bl	10013708 <MXC_UART_GetTXFIFOAvailable>
10011b4c:	2800      	cmp	r0, #0
10011b4e:	d0fa      	beq.n	10011b46 <_write+0x1e>

            MXC_UART_WriteCharacter(MXC_UARTn, *ptr++);
10011b50:	7821      	ldrb	r1, [r4, #0]
10011b52:	4630      	mov	r0, r6
10011b54:	f001 fdd4 	bl	10013700 <MXC_UART_WriteCharacter>
        for (n = 0; n < len; n++) {
10011b58:	42ac      	cmp	r4, r5
10011b5a:	d1f0      	bne.n	10011b3e <_write+0x16>

        break;

    default:
        errno = EBADF;
        return -1;
10011b5c:	4638      	mov	r0, r7
    }

    return len;
}
10011b5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
10011b60:	4808      	ldr	r0, [pc, #32]	@ (10011b84 <_write+0x5c>)
10011b62:	f001 fdd1 	bl	10013708 <MXC_UART_GetTXFIFOAvailable>
10011b66:	2800      	cmp	r0, #0
10011b68:	d0fa      	beq.n	10011b60 <_write+0x38>
                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
10011b6a:	210d      	movs	r1, #13
10011b6c:	4630      	mov	r0, r6
10011b6e:	f001 fdc7 	bl	10013700 <MXC_UART_WriteCharacter>
10011b72:	e7e8      	b.n	10011b46 <_write+0x1e>
        errno = EBADF;
10011b74:	f002 f8b2 	bl	10013cdc <__errno>
10011b78:	2309      	movs	r3, #9
10011b7a:	6003      	str	r3, [r0, #0]
        return -1;
10011b7c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011b80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011b82:	bf00      	nop
10011b84:	40042000 	.word	0x40042000

10011b88 <LED_Init>:
#include "led.h"
#include "mxc_device.h"

/******************************************************************************/
int LED_Init(void)
{
10011b88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    /* setup GPIO for the LED */
    for (i = 0; i < num_leds; i++) {
10011b8a:	4b0d      	ldr	r3, [pc, #52]	@ (10011bc0 <LED_Init+0x38>)
10011b8c:	681f      	ldr	r7, [r3, #0]
10011b8e:	b1a7      	cbz	r7, 10011bba <LED_Init+0x32>
10011b90:	2500      	movs	r5, #0
10011b92:	4c0c      	ldr	r4, [pc, #48]	@ (10011bc4 <LED_Init+0x3c>)
    int retval = E_NO_ERROR;
10011b94:	462e      	mov	r6, r5
//******************************************************************************
void LED_Off(unsigned int idx)
{
    MXC_ASSERT(idx < num_leds);
#if (LED_ON == 0)
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
10011b96:	e9d4 0100 	ldrd	r0, r1, [r4]
10011b9a:	f000 fcf1 	bl	10012580 <MXC_GPIO_OutSet>
        if (MXC_GPIO_Config(&led_pin[i]) != E_NO_ERROR) {
10011b9e:	4620      	mov	r0, r4
10011ba0:	f000 fbe8 	bl	10012374 <MXC_GPIO_Config>
    for (i = 0; i < num_leds; i++) {
10011ba4:	3501      	adds	r5, #1
            retval = E_UNKNOWN;
10011ba6:	2800      	cmp	r0, #0
10011ba8:	bf18      	it	ne
10011baa:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_leds; i++) {
10011bae:	42af      	cmp	r7, r5
10011bb0:	f104 040c 	add.w	r4, r4, #12
10011bb4:	d1ef      	bne.n	10011b96 <LED_Init+0xe>
}
10011bb6:	4630      	mov	r0, r6
10011bb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
10011bba:	463e      	mov	r6, r7
}
10011bbc:	4630      	mov	r0, r6
10011bbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011bc0:	100236b4 	.word	0x100236b4
10011bc4:	100236b8 	.word	0x100236b8

10011bc8 <LED_On>:
    MXC_ASSERT(idx < num_leds);
10011bc8:	4b0b      	ldr	r3, [pc, #44]	@ (10011bf8 <LED_On+0x30>)
10011bca:	681b      	ldr	r3, [r3, #0]
10011bcc:	4283      	cmp	r3, r0
{
10011bce:	b510      	push	{r4, lr}
10011bd0:	4604      	mov	r4, r0
    MXC_ASSERT(idx < num_leds);
10011bd2:	d90b      	bls.n	10011bec <LED_On+0x24>
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
10011bd4:	4b09      	ldr	r3, [pc, #36]	@ (10011bfc <LED_On+0x34>)
10011bd6:	eb04 0444 	add.w	r4, r4, r4, lsl #1
10011bda:	eb03 0284 	add.w	r2, r3, r4, lsl #2
10011bde:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
10011be2:	6851      	ldr	r1, [r2, #4]
}
10011be4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
10011be8:	f000 bce0 	b.w	100125ac <MXC_GPIO_OutClr>
    MXC_ASSERT(idx < num_leds);
10011bec:	4904      	ldr	r1, [pc, #16]	@ (10011c00 <LED_On+0x38>)
10011bee:	4805      	ldr	r0, [pc, #20]	@ (10011c04 <LED_On+0x3c>)
10011bf0:	223b      	movs	r2, #59	@ 0x3b
10011bf2:	f7ff ff19 	bl	10011a28 <mxc_assert>
10011bf6:	e7ed      	b.n	10011bd4 <LED_On+0xc>
10011bf8:	100236b4 	.word	0x100236b4
10011bfc:	100236b8 	.word	0x100236b8
10011c00:	100236f8 	.word	0x100236f8
10011c04:	10023730 	.word	0x10023730

10011c08 <LED_Off>:
    MXC_ASSERT(idx < num_leds);
10011c08:	4b0b      	ldr	r3, [pc, #44]	@ (10011c38 <LED_Off+0x30>)
10011c0a:	681b      	ldr	r3, [r3, #0]
10011c0c:	4283      	cmp	r3, r0
{
10011c0e:	b510      	push	{r4, lr}
10011c10:	4604      	mov	r4, r0
    MXC_ASSERT(idx < num_leds);
10011c12:	d90b      	bls.n	10011c2c <LED_Off+0x24>
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
10011c14:	4b09      	ldr	r3, [pc, #36]	@ (10011c3c <LED_Off+0x34>)
10011c16:	eb04 0444 	add.w	r4, r4, r4, lsl #1
10011c1a:	eb03 0284 	add.w	r2, r3, r4, lsl #2
10011c1e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
10011c22:	6851      	ldr	r1, [r2, #4]
#else
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
#endif
}
10011c24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
10011c28:	f000 bcaa 	b.w	10012580 <MXC_GPIO_OutSet>
    MXC_ASSERT(idx < num_leds);
10011c2c:	4904      	ldr	r1, [pc, #16]	@ (10011c40 <LED_Off+0x38>)
10011c2e:	4805      	ldr	r0, [pc, #20]	@ (10011c44 <LED_Off+0x3c>)
10011c30:	2246      	movs	r2, #70	@ 0x46
10011c32:	f7ff fef9 	bl	10011a28 <mxc_assert>
10011c36:	e7ed      	b.n	10011c14 <LED_Off+0xc>
10011c38:	100236b4 	.word	0x100236b4
10011c3c:	100236b8 	.word	0x100236b8
10011c40:	100236f8 	.word	0x100236f8
10011c44:	10023730 	.word	0x10023730

10011c48 <PB_Init>:
#include "mxc_assert.h"
#include "pb.h"

/******************************************************************************/
int PB_Init(void)
{
10011c48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    // Enable pushbutton inputs
    for (i = 0; i < num_pbs; i++) {
10011c4a:	4b0b      	ldr	r3, [pc, #44]	@ (10011c78 <PB_Init+0x30>)
10011c4c:	681f      	ldr	r7, [r3, #0]
10011c4e:	b187      	cbz	r7, 10011c72 <PB_Init+0x2a>
10011c50:	2400      	movs	r4, #0
10011c52:	4d0a      	ldr	r5, [pc, #40]	@ (10011c7c <PB_Init+0x34>)
    int retval = E_NO_ERROR;
10011c54:	4626      	mov	r6, r4
        if (MXC_GPIO_Config(&pb_pin[i]) != E_NO_ERROR) {
10011c56:	4628      	mov	r0, r5
10011c58:	f000 fb8c 	bl	10012374 <MXC_GPIO_Config>
    for (i = 0; i < num_pbs; i++) {
10011c5c:	3401      	adds	r4, #1
            retval = E_UNKNOWN;
10011c5e:	2800      	cmp	r0, #0
10011c60:	bf18      	it	ne
10011c62:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_pbs; i++) {
10011c66:	42bc      	cmp	r4, r7
10011c68:	f105 050c 	add.w	r5, r5, #12
10011c6c:	d1f3      	bne.n	10011c56 <PB_Init+0xe>
        }
    }

    return retval;
}
10011c6e:	4630      	mov	r0, r6
10011c70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
10011c72:	463e      	mov	r6, r7
}
10011c74:	4630      	mov	r0, r6
10011c76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011c78:	100236dc 	.word	0x100236dc
10011c7c:	100236e0 	.word	0x100236e0

10011c80 <Reset_Handler>:
10011c80:	4847      	ldr	r0, [pc, #284]	@ (10011da0 <LPCMP_IRQHandler+0x2>)
10011c82:	4685      	mov	sp, r0
10011c84:	4847      	ldr	r0, [pc, #284]	@ (10011da4 <LPCMP_IRQHandler+0x6>)
10011c86:	4780      	blx	r0
10011c88:	b980      	cbnz	r0, 10011cac <.SKIPRAMINIT>
10011c8a:	4947      	ldr	r1, [pc, #284]	@ (10011da8 <LPCMP_IRQHandler+0xa>)
10011c8c:	4a47      	ldr	r2, [pc, #284]	@ (10011dac <LPCMP_IRQHandler+0xe>)
10011c8e:	4b48      	ldr	r3, [pc, #288]	@ (10011db0 <LPCMP_IRQHandler+0x12>)
10011c90:	1a9b      	subs	r3, r3, r2
10011c92:	dd03      	ble.n	10011c9c <Reset_Handler+0x1c>
10011c94:	3b04      	subs	r3, #4
10011c96:	58c8      	ldr	r0, [r1, r3]
10011c98:	50d0      	str	r0, [r2, r3]
10011c9a:	dcfb      	bgt.n	10011c94 <Reset_Handler+0x14>
10011c9c:	4945      	ldr	r1, [pc, #276]	@ (10011db4 <LPCMP_IRQHandler+0x16>)
10011c9e:	4a46      	ldr	r2, [pc, #280]	@ (10011db8 <LPCMP_IRQHandler+0x1a>)
10011ca0:	2000      	movs	r0, #0
10011ca2:	4291      	cmp	r1, r2
10011ca4:	bfbc      	itt	lt
10011ca6:	f841 0b04 	strlt.w	r0, [r1], #4
10011caa:	e7fa      	blt.n	10011ca2 <Reset_Handler+0x22>

10011cac <.SKIPRAMINIT>:
10011cac:	4843      	ldr	r0, [pc, #268]	@ (10011dbc <LPCMP_IRQHandler+0x1e>)
10011cae:	4780      	blx	r0
10011cb0:	4843      	ldr	r0, [pc, #268]	@ (10011dc0 <LPCMP_IRQHandler+0x22>)
10011cb2:	4780      	blx	r0
10011cb4:	4843      	ldr	r0, [pc, #268]	@ (10011dc4 <LPCMP_IRQHandler+0x26>)
10011cb6:	4780      	blx	r0

10011cb8 <.SPIN>:
10011cb8:	f7ff fffe 	bl	10011cb8 <.SPIN>
10011cbc:	e7fe      	b.n	10011cbc <.SPIN+0x4>

10011cbe <HardFault_Handler>:
10011cbe:	e7fe      	b.n	10011cbe <HardFault_Handler>

10011cc0 <MemManage_Handler>:
10011cc0:	e7fe      	b.n	10011cc0 <MemManage_Handler>

10011cc2 <BusFault_Handler>:
10011cc2:	e7fe      	b.n	10011cc2 <BusFault_Handler>

10011cc4 <UsageFault_Handler>:
10011cc4:	e7fe      	b.n	10011cc4 <UsageFault_Handler>

10011cc6 <SVC_Handler>:
10011cc6:	e7fe      	b.n	10011cc6 <SVC_Handler>

10011cc8 <DebugMon_Handler>:
10011cc8:	e7fe      	b.n	10011cc8 <DebugMon_Handler>

10011cca <PendSV_Handler>:
10011cca:	e7fe      	b.n	10011cca <PendSV_Handler>

10011ccc <SysTick_Handler>:
10011ccc:	e7fe      	b.n	10011ccc <SysTick_Handler>

10011cce <Default_Handler>:
10011cce:	e7fe      	b.n	10011cce <Default_Handler>

10011cd0 <PF_IRQHandler>:
10011cd0:	e7fe      	b.n	10011cd0 <PF_IRQHandler>

10011cd2 <WDT0_IRQHandler>:
10011cd2:	e7fe      	b.n	10011cd2 <WDT0_IRQHandler>

10011cd4 <RSV02_IRQHandler>:
10011cd4:	e7fe      	b.n	10011cd4 <RSV02_IRQHandler>

10011cd6 <RTC_IRQHandler>:
10011cd6:	e7fe      	b.n	10011cd6 <RTC_IRQHandler>

10011cd8 <TRNG_IRQHandler>:
10011cd8:	e7fe      	b.n	10011cd8 <TRNG_IRQHandler>

10011cda <TMR0_IRQHandler>:
10011cda:	e7fe      	b.n	10011cda <TMR0_IRQHandler>

10011cdc <TMR1_IRQHandler>:
10011cdc:	e7fe      	b.n	10011cdc <TMR1_IRQHandler>

10011cde <TMR2_IRQHandler>:
10011cde:	e7fe      	b.n	10011cde <TMR2_IRQHandler>

10011ce0 <TMR3_IRQHandler>:
10011ce0:	e7fe      	b.n	10011ce0 <TMR3_IRQHandler>

10011ce2 <TMR4_IRQHandler>:
10011ce2:	e7fe      	b.n	10011ce2 <TMR4_IRQHandler>

10011ce4 <TMR5_IRQHandler>:
10011ce4:	e7fe      	b.n	10011ce4 <TMR5_IRQHandler>

10011ce6 <RSV11_IRQHandler>:
10011ce6:	e7fe      	b.n	10011ce6 <RSV11_IRQHandler>

10011ce8 <RSV12_IRQHandler>:
10011ce8:	e7fe      	b.n	10011ce8 <RSV12_IRQHandler>

10011cea <I2C0_IRQHandler>:
10011cea:	e7fe      	b.n	10011cea <I2C0_IRQHandler>

10011cec <UART0_IRQHandler>:
10011cec:	e7fe      	b.n	10011cec <UART0_IRQHandler>

10011cee <UART1_IRQHandler>:
10011cee:	e7fe      	b.n	10011cee <UART1_IRQHandler>

10011cf0 <SPI1_IRQHandler>:
10011cf0:	e7fe      	b.n	10011cf0 <SPI1_IRQHandler>

10011cf2 <RSV17_IRQHandler>:
10011cf2:	e7fe      	b.n	10011cf2 <RSV17_IRQHandler>

10011cf4 <RSV18_IRQHandler>:
10011cf4:	e7fe      	b.n	10011cf4 <RSV18_IRQHandler>

10011cf6 <RSV19_IRQHandler>:
10011cf6:	e7fe      	b.n	10011cf6 <RSV19_IRQHandler>

10011cf8 <ADC_IRQHandler>:
10011cf8:	e7fe      	b.n	10011cf8 <ADC_IRQHandler>

10011cfa <RSV21_IRQHandler>:
10011cfa:	e7fe      	b.n	10011cfa <RSV21_IRQHandler>

10011cfc <RSV22_IRQHandler>:
10011cfc:	e7fe      	b.n	10011cfc <RSV22_IRQHandler>

10011cfe <FLC0_IRQHandler>:
10011cfe:	e7fe      	b.n	10011cfe <FLC0_IRQHandler>
10011d00:	e7fe      	b.n	10011d00 <FLC0_IRQHandler+0x2>
10011d02:	e7fe      	b.n	10011d02 <FLC0_IRQHandler+0x4>

10011d04 <GPIO2_IRQHandler>:
10011d04:	e7fe      	b.n	10011d04 <GPIO2_IRQHandler>

10011d06 <RSV27_IRQHandler>:
10011d06:	e7fe      	b.n	10011d06 <RSV27_IRQHandler>

10011d08 <DMA0_IRQHandler>:
10011d08:	e7fe      	b.n	10011d08 <DMA0_IRQHandler>

10011d0a <DMA1_IRQHandler>:
10011d0a:	e7fe      	b.n	10011d0a <DMA1_IRQHandler>

10011d0c <DMA2_IRQHandler>:
10011d0c:	e7fe      	b.n	10011d0c <DMA2_IRQHandler>

10011d0e <DMA3_IRQHandler>:
10011d0e:	e7fe      	b.n	10011d0e <DMA3_IRQHandler>

10011d10 <RSV32_IRQHandler>:
10011d10:	e7fe      	b.n	10011d10 <RSV32_IRQHandler>

10011d12 <RSV33_IRQHandler>:
10011d12:	e7fe      	b.n	10011d12 <RSV33_IRQHandler>

10011d14 <UART2_IRQHandler>:
10011d14:	e7fe      	b.n	10011d14 <UART2_IRQHandler>

10011d16 <RSV35_IRQHandler>:
10011d16:	e7fe      	b.n	10011d16 <RSV35_IRQHandler>

10011d18 <I2C1_IRQHandler>:
10011d18:	e7fe      	b.n	10011d18 <I2C1_IRQHandler>

10011d1a <RSV37_IRQHandler>:
10011d1a:	e7fe      	b.n	10011d1a <RSV37_IRQHandler>

10011d1c <RSV38_IRQHandler>:
10011d1c:	e7fe      	b.n	10011d1c <RSV38_IRQHandler>

10011d1e <RSV39_IRQHandler>:
10011d1e:	e7fe      	b.n	10011d1e <RSV39_IRQHandler>

10011d20 <RSV40_IRQHandler>:
10011d20:	e7fe      	b.n	10011d20 <RSV40_IRQHandler>

10011d22 <RSV41_IRQHandler>:
10011d22:	e7fe      	b.n	10011d22 <RSV41_IRQHandler>

10011d24 <RSV42_IRQHandler>:
10011d24:	e7fe      	b.n	10011d24 <RSV42_IRQHandler>

10011d26 <RSV43_IRQHandler>:
10011d26:	e7fe      	b.n	10011d26 <RSV43_IRQHandler>

10011d28 <RSV44_IRQHandler>:
10011d28:	e7fe      	b.n	10011d28 <RSV44_IRQHandler>

10011d2a <RSV45_IRQHandler>:
10011d2a:	e7fe      	b.n	10011d2a <RSV45_IRQHandler>

10011d2c <RSV46_IRQHandler>:
10011d2c:	e7fe      	b.n	10011d2c <RSV46_IRQHandler>

10011d2e <RSV47_IRQHandler>:
10011d2e:	e7fe      	b.n	10011d2e <RSV47_IRQHandler>

10011d30 <RSV48_IRQHandler>:
10011d30:	e7fe      	b.n	10011d30 <RSV48_IRQHandler>

10011d32 <RSV49_IRQHandler>:
10011d32:	e7fe      	b.n	10011d32 <RSV49_IRQHandler>

10011d34 <RSV50_IRQHandler>:
10011d34:	e7fe      	b.n	10011d34 <RSV50_IRQHandler>

10011d36 <RSV51_IRQHandler>:
10011d36:	e7fe      	b.n	10011d36 <RSV51_IRQHandler>

10011d38 <RSV52_IRQHandler>:
10011d38:	e7fe      	b.n	10011d38 <RSV52_IRQHandler>

10011d3a <WUT_IRQHandler>:
10011d3a:	e7fe      	b.n	10011d3a <WUT_IRQHandler>

10011d3c <GPIOWAKE_IRQHandler>:
10011d3c:	e7fe      	b.n	10011d3c <GPIOWAKE_IRQHandler>

10011d3e <RSV55_IRQHandler>:
10011d3e:	e7fe      	b.n	10011d3e <RSV55_IRQHandler>

10011d40 <SPI0_IRQHandler>:
10011d40:	e7fe      	b.n	10011d40 <SPI0_IRQHandler>

10011d42 <WDT1_IRQHandler>:
10011d42:	e7fe      	b.n	10011d42 <WDT1_IRQHandler>

10011d44 <RSV58_IRQHandler>:
10011d44:	e7fe      	b.n	10011d44 <RSV58_IRQHandler>

10011d46 <PT_IRQHandler>:
10011d46:	e7fe      	b.n	10011d46 <PT_IRQHandler>

10011d48 <RSV60_IRQHandler>:
10011d48:	e7fe      	b.n	10011d48 <RSV60_IRQHandler>

10011d4a <RSV61_IRQHandler>:
10011d4a:	e7fe      	b.n	10011d4a <RSV61_IRQHandler>

10011d4c <I2C2_IRQHandler>:
10011d4c:	e7fe      	b.n	10011d4c <I2C2_IRQHandler>

10011d4e <RISCV_IRQHandler>:
10011d4e:	e7fe      	b.n	10011d4e <RISCV_IRQHandler>

10011d50 <RSV64_IRQHandler>:
10011d50:	e7fe      	b.n	10011d50 <RSV64_IRQHandler>

10011d52 <RSV65_IRQHandler>:
10011d52:	e7fe      	b.n	10011d52 <RSV65_IRQHandler>

10011d54 <RSV66_IRQHandler>:
10011d54:	e7fe      	b.n	10011d54 <RSV66_IRQHandler>

10011d56 <OWM_IRQHandler>:
10011d56:	e7fe      	b.n	10011d56 <OWM_IRQHandler>

10011d58 <RSV68_IRQHandler>:
10011d58:	e7fe      	b.n	10011d58 <RSV68_IRQHandler>

10011d5a <RSV69_IRQHandler>:
10011d5a:	e7fe      	b.n	10011d5a <RSV69_IRQHandler>

10011d5c <RSV70_IRQHandler>:
10011d5c:	e7fe      	b.n	10011d5c <RSV70_IRQHandler>

10011d5e <RSV71_IRQHandler>:
10011d5e:	e7fe      	b.n	10011d5e <RSV71_IRQHandler>

10011d60 <RSV72_IRQHandler>:
10011d60:	e7fe      	b.n	10011d60 <RSV72_IRQHandler>

10011d62 <RSV73_IRQHandler>:
10011d62:	e7fe      	b.n	10011d62 <RSV73_IRQHandler>

10011d64 <RSV74_IRQHandler>:
10011d64:	e7fe      	b.n	10011d64 <RSV74_IRQHandler>

10011d66 <RSV75_IRQHandler>:
10011d66:	e7fe      	b.n	10011d66 <RSV75_IRQHandler>

10011d68 <RSV76_IRQHandler>:
10011d68:	e7fe      	b.n	10011d68 <RSV76_IRQHandler>

10011d6a <RSV77_IRQHandler>:
10011d6a:	e7fe      	b.n	10011d6a <RSV77_IRQHandler>

10011d6c <RSV78_IRQHandler>:
10011d6c:	e7fe      	b.n	10011d6c <RSV78_IRQHandler>

10011d6e <RSV79_IRQHandler>:
10011d6e:	e7fe      	b.n	10011d6e <RSV79_IRQHandler>

10011d70 <RSV80_IRQHandler>:
10011d70:	e7fe      	b.n	10011d70 <RSV80_IRQHandler>

10011d72 <RSV81_IRQHandler>:
10011d72:	e7fe      	b.n	10011d72 <RSV81_IRQHandler>

10011d74 <ECC_IRQHandler>:
10011d74:	e7fe      	b.n	10011d74 <ECC_IRQHandler>

10011d76 <DVS_IRQHandler>:
10011d76:	e7fe      	b.n	10011d76 <DVS_IRQHandler>

10011d78 <SIMO_IRQHandler>:
10011d78:	e7fe      	b.n	10011d78 <SIMO_IRQHandler>

10011d7a <RSV85_IRQHandler>:
10011d7a:	e7fe      	b.n	10011d7a <RSV85_IRQHandler>

10011d7c <RSV86_IRQHandler>:
10011d7c:	e7fe      	b.n	10011d7c <RSV86_IRQHandler>

10011d7e <RSV87_IRQHandler>:
10011d7e:	e7fe      	b.n	10011d7e <RSV87_IRQHandler>

10011d80 <UART3_IRQHandler>:
10011d80:	e7fe      	b.n	10011d80 <UART3_IRQHandler>

10011d82 <RSV89_IRQHandler>:
10011d82:	e7fe      	b.n	10011d82 <RSV89_IRQHandler>

10011d84 <RSV90_IRQHandler>:
10011d84:	e7fe      	b.n	10011d84 <RSV90_IRQHandler>

10011d86 <PCIF_IRQHandler>:
10011d86:	e7fe      	b.n	10011d86 <PCIF_IRQHandler>

10011d88 <RSV92_IRQHandler>:
10011d88:	e7fe      	b.n	10011d88 <RSV92_IRQHandler>

10011d8a <RSV93_IRQHandler>:
10011d8a:	e7fe      	b.n	10011d8a <RSV93_IRQHandler>

10011d8c <RSV94_IRQHandler>:
10011d8c:	e7fe      	b.n	10011d8c <RSV94_IRQHandler>

10011d8e <RSV95_IRQHandler>:
10011d8e:	e7fe      	b.n	10011d8e <RSV95_IRQHandler>

10011d90 <RSV96_IRQHandler>:
10011d90:	e7fe      	b.n	10011d90 <RSV96_IRQHandler>

10011d92 <AES_IRQHandler>:
10011d92:	e7fe      	b.n	10011d92 <AES_IRQHandler>

10011d94 <RSV98_IRQHandler>:
10011d94:	e7fe      	b.n	10011d94 <RSV98_IRQHandler>

10011d96 <I2S_IRQHandler>:
10011d96:	e7fe      	b.n	10011d96 <I2S_IRQHandler>

10011d98 <CNN_FIFO_IRQHandler>:
10011d98:	e7fe      	b.n	10011d98 <CNN_FIFO_IRQHandler>

10011d9a <CNN_IRQHandler>:
10011d9a:	e7fe      	b.n	10011d9a <CNN_IRQHandler>

10011d9c <RSV102_IRQHandler>:
10011d9c:	e7fe      	b.n	10011d9c <RSV102_IRQHandler>

10011d9e <LPCMP_IRQHandler>:
10011d9e:	e7fe      	b.n	10011d9e <LPCMP_IRQHandler>
10011da0:	20020000 	.word	0x20020000
10011da4:	10011e6d 	.word	0x10011e6d
10011da8:	1002a9d8 	.word	0x1002a9d8
10011dac:	20000000 	.word	0x20000000
10011db0:	20000bcc 	.word	0x20000bcc
10011db4:	20000c00 	.word	0x20000c00
10011db8:	20001768 	.word	0x20001768
10011dbc:	10011e71 	.word	0x10011e71
10011dc0:	10015db1 	.word	0x10015db1
10011dc4:	1000eab9 	.word	0x1000eab9

10011dc8 <_sbrk>:
extern unsigned int __HeapLimit;
caddr_t _sbrk(int incr)
{
    char *prev_heap_end;

    if (heap_end == 0) {
10011dc8:	4a0b      	ldr	r2, [pc, #44]	@ (10011df8 <_sbrk+0x30>)
{
10011dca:	b508      	push	{r3, lr}
10011dcc:	4603      	mov	r3, r0
    if (heap_end == 0) {
10011dce:	6810      	ldr	r0, [r2, #0]
10011dd0:	b128      	cbz	r0, 10011dde <_sbrk+0x16>
        heap_end = (caddr_t)&__HeapBase;
    }
    prev_heap_end = heap_end;

    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
10011dd2:	490a      	ldr	r1, [pc, #40]	@ (10011dfc <_sbrk+0x34>)
10011dd4:	4403      	add	r3, r0
10011dd6:	428b      	cmp	r3, r1
10011dd8:	d807      	bhi.n	10011dea <_sbrk+0x22>
        errno = ENOMEM;
        return (caddr_t)-1;
    }

    heap_end += incr;
10011dda:	6013      	str	r3, [r2, #0]

    return (caddr_t)prev_heap_end;
}
10011ddc:	bd08      	pop	{r3, pc}
        heap_end = (caddr_t)&__HeapBase;
10011dde:	4808      	ldr	r0, [pc, #32]	@ (10011e00 <_sbrk+0x38>)
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
10011de0:	4906      	ldr	r1, [pc, #24]	@ (10011dfc <_sbrk+0x34>)
        heap_end = (caddr_t)&__HeapBase;
10011de2:	6010      	str	r0, [r2, #0]
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
10011de4:	4403      	add	r3, r0
10011de6:	428b      	cmp	r3, r1
10011de8:	d9f7      	bls.n	10011dda <_sbrk+0x12>
        errno = ENOMEM;
10011dea:	f001 ff77 	bl	10013cdc <__errno>
10011dee:	230c      	movs	r3, #12
10011df0:	6003      	str	r3, [r0, #0]
        return (caddr_t)-1;
10011df2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011df6:	bd08      	pop	{r3, pc}
10011df8:	20000ca8 	.word	0x20000ca8
10011dfc:	2001f000 	.word	0x2001f000
10011e00:	20001770 	.word	0x20001770

10011e04 <SystemCoreClockUpdate>:
__weak void SystemCoreClockUpdate(void)
{
    uint32_t base_freq, div, clk_src;

    // Get the clock source and frequency
    clk_src = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_SEL);
10011e04:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
10011e08:	689a      	ldr	r2, [r3, #8]
10011e0a:	f402 6260 	and.w	r2, r2, #3584	@ 0xe00
    switch (clk_src) {
10011e0e:	f5b2 6f20 	cmp.w	r2, #2560	@ 0xa00
10011e12:	d020      	beq.n	10011e56 <SystemCoreClockUpdate+0x52>
10011e14:	d911      	bls.n	10011e3a <SystemCoreClockUpdate+0x36>
10011e16:	f5b2 6f40 	cmp.w	r2, #3072	@ 0xc00
10011e1a:	d017      	beq.n	10011e4c <SystemCoreClockUpdate+0x48>
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_INRO:
        base_freq = INRO_FREQ;
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_IPO:
        base_freq = IPO_FREQ;
10011e1c:	4b0f      	ldr	r3, [pc, #60]	@ (10011e5c <SystemCoreClockUpdate+0x58>)
10011e1e:	4910      	ldr	r1, [pc, #64]	@ (10011e60 <SystemCoreClockUpdate+0x5c>)
10011e20:	f5b2 6f60 	cmp.w	r2, #3584	@ 0xe00
10011e24:	bf18      	it	ne
10011e26:	460b      	movne	r3, r1
        // This code should never execute, however, initialize to safe value.
        base_freq = HIRC_FREQ;
        break;
    }

    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
10011e28:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000

    SystemCoreClock = base_freq >> div;
10011e2c:	490d      	ldr	r1, [pc, #52]	@ (10011e64 <SystemCoreClockUpdate+0x60>)
    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
10011e2e:	6892      	ldr	r2, [r2, #8]
10011e30:	f3c2 1282 	ubfx	r2, r2, #6, #3
    SystemCoreClock = base_freq >> div;
10011e34:	40d3      	lsrs	r3, r2
10011e36:	600b      	str	r3, [r1, #0]
}
10011e38:	4770      	bx	lr
    switch (clk_src) {
10011e3a:	b152      	cbz	r2, 10011e52 <SystemCoreClockUpdate+0x4e>
        base_freq = IPO_FREQ;
10011e3c:	4908      	ldr	r1, [pc, #32]	@ (10011e60 <SystemCoreClockUpdate+0x5c>)
10011e3e:	f247 5330 	movw	r3, #30000	@ 0x7530
10011e42:	f5b2 6fc0 	cmp.w	r2, #1536	@ 0x600
10011e46:	bf18      	it	ne
10011e48:	460b      	movne	r3, r1
10011e4a:	e7ed      	b.n	10011e28 <SystemCoreClockUpdate+0x24>
        base_freq = ERTCO_FREQ;
10011e4c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
10011e50:	e7ea      	b.n	10011e28 <SystemCoreClockUpdate+0x24>
        base_freq = ISO_FREQ;
10011e52:	4b05      	ldr	r3, [pc, #20]	@ (10011e68 <SystemCoreClockUpdate+0x64>)
10011e54:	e7e8      	b.n	10011e28 <SystemCoreClockUpdate+0x24>
        base_freq = IBRO_FREQ;
10011e56:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
10011e5a:	e7e5      	b.n	10011e28 <SystemCoreClockUpdate+0x24>
10011e5c:	047868c0 	.word	0x047868c0
10011e60:	05f5e100 	.word	0x05f5e100
10011e64:	20001768 	.word	0x20001768
10011e68:	03938700 	.word	0x03938700

10011e6c <PreInit>:
 */
__weak int PreInit(void)
{
    /* Do nothing */
    return 0;
}
10011e6c:	2000      	movs	r0, #0
10011e6e:	4770      	bx	lr

10011e70 <SystemInit>:
 * You may over-ride this function in your program by defining a custom 
 *  SystemInit(), but care should be taken to reproduce the initialization
 *  steps or a non-functional system may result.
 */
__weak void SystemInit(void)
{
10011e70:	b510      	push	{r4, lr}
    /* Configure the interrupt controller to use the application vector table in */
    /* the application space */
#if defined(__CC_ARM) || defined(__GNUC__)
    /* IAR sets the VTOR pointer incorrectly and causes stack corruption */
    SCB->VTOR = (uint32_t)__isr_vector;
10011e72:	4c0a      	ldr	r4, [pc, #40]	@ (10011e9c <SystemInit+0x2c>)
10011e74:	4b0a      	ldr	r3, [pc, #40]	@ (10011ea0 <SystemInit+0x30>)
10011e76:	60a3      	str	r3, [r4, #8]
#endif /* __CC_ARM || __GNUC__ */

    /* Enable instruction cache */
    MXC_ICC_Enable(MXC_ICC0);
10011e78:	480a      	ldr	r0, [pc, #40]	@ (10011ea4 <SystemInit+0x34>)
10011e7a:	f001 faed 	bl	10013458 <MXC_ICC_Enable>

    /* Enable FPU on Cortex-M4, which occupies coprocessor slots 10 & 11 */
    /* Grant full access, per "Table B3-24 CPACR bit assignments". */
    /* DDI0403D "ARMv7-M Architecture Reference Manual" */
    SCB->CPACR |= SCB_CPACR_CP10_Msk | SCB_CPACR_CP11_Msk;
10011e7e:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
10011e82:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
10011e86:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
10011e8a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
10011e8e:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();

    SystemCoreClockUpdate();
10011e92:	f7ff ffb7 	bl	10011e04 <SystemCoreClockUpdate>

    Board_Init();
10011e96:	f7ff fdd7 	bl	10011a48 <Board_Init>
}
10011e9a:	bd10      	pop	{r4, pc}
10011e9c:	e000ed00 	.word	0xe000ed00
10011ea0:	1000e000 	.word	0x1000e000
10011ea4:	4002a000 	.word	0x4002a000

10011ea8 <MXC_DelayInit>:
    }
}

/* ************************************************************************** */
static void MXC_DelayInit(uint32_t us)
{
10011ea8:	b538      	push	{r3, r4, r5, lr}
    uint32_t starttick, reload, ticks, lastticks;

    // Record the current tick value and clear the overflow flag
    starttick = SysTick->VAL;
10011eaa:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000

    // Save the state of control register (and clear the overflow flag)
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
10011eae:	4918      	ldr	r1, [pc, #96]	@ (10011f10 <MXC_DelayInit+0x68>)
    starttick = SysTick->VAL;
10011eb0:	699c      	ldr	r4, [r3, #24]
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
10011eb2:	691a      	ldr	r2, [r3, #16]
10011eb4:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
10011eb8:	600a      	str	r2, [r1, #0]

    // If the SysTick is not running, configure and start it
    if (!(SysTick->CTRL & SysTick_CTRL_ENABLE_Msk)) {
10011eba:	691a      	ldr	r2, [r3, #16]
10011ebc:	07d2      	lsls	r2, r2, #31
10011ebe:	d41f      	bmi.n	10011f00 <MXC_DelayInit+0x58>
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
10011ec0:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
10011ec4:	2205      	movs	r2, #5
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
10011ec6:	615c      	str	r4, [r3, #20]
        starttick = SysTick_VAL_CURRENT_Msk;
        reload = SysTick_LOAD_RELOAD_Msk + 1;
10011ec8:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
10011ecc:	619c      	str	r4, [r3, #24]
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
10011ece:	611a      	str	r2, [r3, #16]
    } else {
        reload = SysTick->LOAD + 1; // get the current reload value
    }

    // Calculate the total number of ticks to delay
    ticks = (uint32_t)(((uint64_t)us * (uint64_t)SystemCoreClock) / 1000000);
10011ed0:	4b10      	ldr	r3, [pc, #64]	@ (10011f14 <MXC_DelayInit+0x6c>)
10011ed2:	4a11      	ldr	r2, [pc, #68]	@ (10011f18 <MXC_DelayInit+0x70>)
10011ed4:	6819      	ldr	r1, [r3, #0]
10011ed6:	2300      	movs	r3, #0
10011ed8:	fba0 0101 	umull	r0, r1, r0, r1
10011edc:	f00e ff98 	bl	10020e10 <__aeabi_uldivmod>

    // How many overflows of the SysTick will occur
    overflows = ticks / reload;
10011ee0:	4b0e      	ldr	r3, [pc, #56]	@ (10011f1c <MXC_DelayInit+0x74>)
10011ee2:	fbb0 f2f5 	udiv	r2, r0, r5

    // How many remaining ticks after the last overflow
    lastticks = ticks % reload;
10011ee6:	fb05 0012 	mls	r0, r5, r2, r0

    // Check if there will be another overflow due to the current value of the SysTick
    if (lastticks >= starttick) {
10011eea:	4284      	cmp	r4, r0
    overflows = ticks / reload;
10011eec:	601a      	str	r2, [r3, #0]
    if (lastticks >= starttick) {
10011eee:	d80a      	bhi.n	10011f06 <MXC_DelayInit+0x5e>
        overflows++;
10011ef0:	681a      	ldr	r2, [r3, #0]
10011ef2:	3201      	adds	r2, #1
10011ef4:	601a      	str	r2, [r3, #0]
        endtick = reload - (lastticks - starttick);
10011ef6:	4425      	add	r5, r4
10011ef8:	4b09      	ldr	r3, [pc, #36]	@ (10011f20 <MXC_DelayInit+0x78>)
10011efa:	1a28      	subs	r0, r5, r0
10011efc:	6018      	str	r0, [r3, #0]
    } else {
        endtick = starttick - lastticks;
    }
}
10011efe:	bd38      	pop	{r3, r4, r5, pc}
        reload = SysTick->LOAD + 1; // get the current reload value
10011f00:	695d      	ldr	r5, [r3, #20]
10011f02:	3501      	adds	r5, #1
10011f04:	e7e4      	b.n	10011ed0 <MXC_DelayInit+0x28>
        endtick = starttick - lastticks;
10011f06:	4b06      	ldr	r3, [pc, #24]	@ (10011f20 <MXC_DelayInit+0x78>)
10011f08:	1a20      	subs	r0, r4, r0
10011f0a:	6018      	str	r0, [r3, #0]
}
10011f0c:	bd38      	pop	{r3, r4, r5, pc}
10011f0e:	bf00      	nop
10011f10:	20000cb0 	.word	0x20000cb0
10011f14:	20001768 	.word	0x20001768
10011f18:	000f4240 	.word	0x000f4240
10011f1c:	20000004 	.word	0x20000004
10011f20:	20000cb4 	.word	0x20000cb4

10011f24 <MXC_DelayAsync>:

/* ************************************************************************** */
int MXC_DelayAsync(uint32_t us, mxc_delay_complete_t callback)
{
10011f24:	b510      	push	{r4, lr}
    cbFunc = callback;

    // Check if timeout currently ongoing
    if (overflows > 0) {
10011f26:	4c0c      	ldr	r4, [pc, #48]	@ (10011f58 <MXC_DelayAsync+0x34>)
    cbFunc = callback;
10011f28:	4b0c      	ldr	r3, [pc, #48]	@ (10011f5c <MXC_DelayAsync+0x38>)
    if (overflows > 0) {
10011f2a:	6822      	ldr	r2, [r4, #0]
    cbFunc = callback;
10011f2c:	6019      	str	r1, [r3, #0]
    if (overflows > 0) {
10011f2e:	2a00      	cmp	r2, #0
10011f30:	dc0e      	bgt.n	10011f50 <MXC_DelayAsync+0x2c>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
10011f32:	b908      	cbnz	r0, 10011f38 <MXC_DelayAsync+0x14>
        return E_NO_ERROR;
10011f34:	2000      	movs	r0, #0
    if (overflows > 0) {
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
    }

    return E_NO_ERROR;
}
10011f36:	bd10      	pop	{r4, pc}
    MXC_DelayInit(us);
10011f38:	f7ff ffb6 	bl	10011ea8 <MXC_DelayInit>
    if (overflows > 0) {
10011f3c:	6823      	ldr	r3, [r4, #0]
10011f3e:	2b00      	cmp	r3, #0
10011f40:	ddf8      	ble.n	10011f34 <MXC_DelayAsync+0x10>
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
10011f42:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
10011f46:	6913      	ldr	r3, [r2, #16]
10011f48:	f043 0302 	orr.w	r3, r3, #2
10011f4c:	6113      	str	r3, [r2, #16]
10011f4e:	e7f1      	b.n	10011f34 <MXC_DelayAsync+0x10>
        return E_BUSY;
10011f50:	f06f 0005 	mvn.w	r0, #5
}
10011f54:	bd10      	pop	{r4, pc}
10011f56:	bf00      	nop
10011f58:	20000004 	.word	0x20000004
10011f5c:	20000cac 	.word	0x20000cac

10011f60 <MXC_DelayCheck>:

/* ************************************************************************** */
int MXC_DelayCheck(void)
{
10011f60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    // Check if timeout currently ongoing
    if (overflows < 0) {
10011f62:	4c17      	ldr	r4, [pc, #92]	@ (10011fc0 <MXC_DelayCheck+0x60>)
10011f64:	6823      	ldr	r3, [r4, #0]
10011f66:	2b00      	cmp	r3, #0
10011f68:	db1e      	blt.n	10011fa8 <MXC_DelayCheck+0x48>

        return E_NO_ERROR;
    }

    // Check the global values
    if ((overflows == 0) && (SysTick->VAL <= endtick)) {
10011f6a:	6826      	ldr	r6, [r4, #0]
10011f6c:	bb2e      	cbnz	r6, 10011fba <MXC_DelayCheck+0x5a>
10011f6e:	4b15      	ldr	r3, [pc, #84]	@ (10011fc4 <MXC_DelayCheck+0x64>)
10011f70:	f04f 25e0 	mov.w	r5, #3758153728	@ 0xe000e000
10011f74:	681b      	ldr	r3, [r3, #0]
10011f76:	69aa      	ldr	r2, [r5, #24]
10011f78:	429a      	cmp	r2, r3
10011f7a:	d81e      	bhi.n	10011fba <MXC_DelayCheck+0x5a>
}

/* ************************************************************************** */
void MXC_DelayAbort(void)
{
    if (cbFunc != NULL) {
10011f7c:	4f12      	ldr	r7, [pc, #72]	@ (10011fc8 <MXC_DelayCheck+0x68>)
10011f7e:	683b      	ldr	r3, [r7, #0]
10011f80:	b15b      	cbz	r3, 10011f9a <MXC_DelayCheck+0x3a>
        cbFunc(E_ABORT);
10011f82:	f06f 000f 	mvn.w	r0, #15
10011f86:	4798      	blx	r3
        cbFunc = NULL;
    }

    SysTick->CTRL = ctrl_save;
10011f88:	4b10      	ldr	r3, [pc, #64]	@ (10011fcc <MXC_DelayCheck+0x6c>)
        cbFunc = NULL;
10011f8a:	603e      	str	r6, [r7, #0]
    SysTick->CTRL = ctrl_save;
10011f8c:	681a      	ldr	r2, [r3, #0]
10011f8e:	612a      	str	r2, [r5, #16]
    overflows = -1;
10011f90:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10011f94:	6023      	str	r3, [r4, #0]
        return E_NO_ERROR;
10011f96:	2000      	movs	r0, #0
}
10011f98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    SysTick->CTRL = ctrl_save;
10011f9a:	4a0c      	ldr	r2, [pc, #48]	@ (10011fcc <MXC_DelayCheck+0x6c>)
    overflows = -1;
10011f9c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
10011fa0:	6812      	ldr	r2, [r2, #0]
10011fa2:	612a      	str	r2, [r5, #16]
    overflows = -1;
10011fa4:	6023      	str	r3, [r4, #0]
        if (cbFunc != NULL) {
10011fa6:	e7f6      	b.n	10011f96 <MXC_DelayCheck+0x36>
        if (cbFunc != NULL) {
10011fa8:	4c07      	ldr	r4, [pc, #28]	@ (10011fc8 <MXC_DelayCheck+0x68>)
10011faa:	6823      	ldr	r3, [r4, #0]
10011fac:	2b00      	cmp	r3, #0
10011fae:	d0f2      	beq.n	10011f96 <MXC_DelayCheck+0x36>
            cbFunc(E_NO_ERROR);
10011fb0:	2000      	movs	r0, #0
10011fb2:	4798      	blx	r3
            cbFunc = NULL;
10011fb4:	2300      	movs	r3, #0
10011fb6:	6023      	str	r3, [r4, #0]
10011fb8:	e7ed      	b.n	10011f96 <MXC_DelayCheck+0x36>
    return E_BUSY;
10011fba:	f06f 0005 	mvn.w	r0, #5
}
10011fbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011fc0:	20000004 	.word	0x20000004
10011fc4:	20000cb4 	.word	0x20000cb4
10011fc8:	20000cac 	.word	0x20000cac
10011fcc:	20000cb0 	.word	0x20000cb0

10011fd0 <MXC_DelayAbort>:
{
10011fd0:	b510      	push	{r4, lr}
    if (cbFunc != NULL) {
10011fd2:	4c09      	ldr	r4, [pc, #36]	@ (10011ff8 <MXC_DelayAbort+0x28>)
10011fd4:	6823      	ldr	r3, [r4, #0]
10011fd6:	b123      	cbz	r3, 10011fe2 <MXC_DelayAbort+0x12>
        cbFunc(E_ABORT);
10011fd8:	f06f 000f 	mvn.w	r0, #15
10011fdc:	4798      	blx	r3
        cbFunc = NULL;
10011fde:	2300      	movs	r3, #0
10011fe0:	6023      	str	r3, [r4, #0]
    SysTick->CTRL = ctrl_save;
10011fe2:	4a06      	ldr	r2, [pc, #24]	@ (10011ffc <MXC_DelayAbort+0x2c>)
    overflows = -1;
10011fe4:	4b06      	ldr	r3, [pc, #24]	@ (10012000 <MXC_DelayAbort+0x30>)
    SysTick->CTRL = ctrl_save;
10011fe6:	6810      	ldr	r0, [r2, #0]
10011fe8:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
    overflows = -1;
10011fec:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
10011ff0:	6108      	str	r0, [r1, #16]
    overflows = -1;
10011ff2:	601a      	str	r2, [r3, #0]
}
10011ff4:	bd10      	pop	{r4, pc}
10011ff6:	bf00      	nop
10011ff8:	20000cac 	.word	0x20000cac
10011ffc:	20000cb0 	.word	0x20000cb0
10012000:	20000004 	.word	0x20000004

10012004 <MXC_Delay>:

/* ************************************************************************** */
int MXC_Delay(uint32_t us)
{
10012004:	b538      	push	{r3, r4, r5, lr}
    // Check if timeout currently ongoing
    if (overflows > 0) {
10012006:	4c18      	ldr	r4, [pc, #96]	@ (10012068 <MXC_Delay+0x64>)
10012008:	6822      	ldr	r2, [r4, #0]
1001200a:	2a00      	cmp	r2, #0
1001200c:	dc29      	bgt.n	10012062 <MXC_Delay+0x5e>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
1001200e:	b908      	cbnz	r0, 10012014 <MXC_Delay+0x10>
        return E_NO_ERROR;
10012010:	2000      	movs	r0, #0
    // Wait for the counter value
    while (SysTick->VAL > endtick) {}

    MXC_DelayAbort();
    return E_NO_ERROR;
}
10012012:	bd38      	pop	{r3, r4, r5, pc}
    MXC_DelayInit(us);
10012014:	f7ff ff48 	bl	10011ea8 <MXC_DelayInit>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
10012018:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
    while (overflows > 0) {
1001201c:	e002      	b.n	10012024 <MXC_Delay+0x20>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
1001201e:	6913      	ldr	r3, [r2, #16]
10012020:	03db      	lsls	r3, r3, #15
10012022:	d41a      	bmi.n	1001205a <MXC_Delay+0x56>
    while (overflows > 0) {
10012024:	6823      	ldr	r3, [r4, #0]
10012026:	2b00      	cmp	r3, #0
10012028:	dcf9      	bgt.n	1001201e <MXC_Delay+0x1a>
    while (SysTick->VAL > endtick) {}
1001202a:	4b10      	ldr	r3, [pc, #64]	@ (1001206c <MXC_Delay+0x68>)
1001202c:	681a      	ldr	r2, [r3, #0]
1001202e:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
10012032:	698b      	ldr	r3, [r1, #24]
10012034:	4293      	cmp	r3, r2
10012036:	d8fc      	bhi.n	10012032 <MXC_Delay+0x2e>
    if (cbFunc != NULL) {
10012038:	4d0d      	ldr	r5, [pc, #52]	@ (10012070 <MXC_Delay+0x6c>)
1001203a:	682b      	ldr	r3, [r5, #0]
1001203c:	b123      	cbz	r3, 10012048 <MXC_Delay+0x44>
        cbFunc(E_ABORT);
1001203e:	f06f 000f 	mvn.w	r0, #15
10012042:	4798      	blx	r3
        cbFunc = NULL;
10012044:	2300      	movs	r3, #0
10012046:	602b      	str	r3, [r5, #0]
    SysTick->CTRL = ctrl_save;
10012048:	4b0a      	ldr	r3, [pc, #40]	@ (10012074 <MXC_Delay+0x70>)
1001204a:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
1001204e:	6819      	ldr	r1, [r3, #0]
10012050:	6111      	str	r1, [r2, #16]
    overflows = -1;
10012052:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10012056:	6023      	str	r3, [r4, #0]
}
10012058:	e7da      	b.n	10012010 <MXC_Delay+0xc>
            overflows--;
1001205a:	6823      	ldr	r3, [r4, #0]
1001205c:	3b01      	subs	r3, #1
1001205e:	6023      	str	r3, [r4, #0]
10012060:	e7e0      	b.n	10012024 <MXC_Delay+0x20>
        return E_BUSY;
10012062:	f06f 0005 	mvn.w	r0, #5
}
10012066:	bd38      	pop	{r3, r4, r5, pc}
10012068:	20000004 	.word	0x20000004
1001206c:	20000cb4 	.word	0x20000cb4
10012070:	20000cac 	.word	0x20000cac
10012074:	20000cb0 	.word	0x20000cb0

10012078 <MXC_NVIC_SetVector>:
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
    SCB->VTOR = (uint32_t)&ramVectorTable;
}

void MXC_NVIC_SetVector(IRQn_Type irqn, void (*irq_handler)(void))
{
10012078:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int index = irqn + 16; /* offset for externals */

    /* If not copied, do copy */
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
1001207a:	4e0f      	ldr	r6, [pc, #60]	@ (100120b8 <MXC_NVIC_SetVector+0x40>)
1001207c:	4b0f      	ldr	r3, [pc, #60]	@ (100120bc <MXC_NVIC_SetVector+0x44>)
1001207e:	68b2      	ldr	r2, [r6, #8]
10012080:	429a      	cmp	r2, r3
{
10012082:	4604      	mov	r4, r0
10012084:	460d      	mov	r5, r1
    int index = irqn + 16; /* offset for externals */
10012086:	f100 0710 	add.w	r7, r0, #16
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
1001208a:	d007      	beq.n	1001209c <MXC_NVIC_SetVector+0x24>
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
1001208c:	4618      	mov	r0, r3
1001208e:	490c      	ldr	r1, [pc, #48]	@ (100120c0 <MXC_NVIC_SetVector+0x48>)
10012090:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
10012094:	f004 fbbc 	bl	10016810 <memcpy>
10012098:	4603      	mov	r3, r0
    SCB->VTOR = (uint32_t)&ramVectorTable;
1001209a:	60b0      	str	r0, [r6, #8]
  if ((int32_t)(IRQn) >= 0)
1001209c:	2c00      	cmp	r4, #0
        NVIC_SetRAM();
    }

    ramVectorTable[index] = irq_handler;
1001209e:	f843 5027 	str.w	r5, [r3, r7, lsl #2]
100120a2:	db07      	blt.n	100120b4 <MXC_NVIC_SetVector+0x3c>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
100120a4:	4a07      	ldr	r2, [pc, #28]	@ (100120c4 <MXC_NVIC_SetVector+0x4c>)
100120a6:	0961      	lsrs	r1, r4, #5
100120a8:	2301      	movs	r3, #1
100120aa:	f004 041f 	and.w	r4, r4, #31
100120ae:	40a3      	lsls	r3, r4
100120b0:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
    NVIC_EnableIRQ(irqn);
}
100120b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100120b6:	bf00      	nop
100120b8:	e000ed00 	.word	0xe000ed00
100120bc:	20000e00 	.word	0x20000e00
100120c0:	1000e000 	.word	0x1000e000
100120c4:	e000e100 	.word	0xe000e100

100120c8 <MXC_SYS_ClockDisable>:

/* ************************************************************************** */
void MXC_SYS_ClockDisable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
100120c8:	283f      	cmp	r0, #63	@ 0x3f
100120ca:	d908      	bls.n	100120de <MXC_SYS_ClockDisable+0x16>
        clock -= 64;
        MXC_LPGCR->pclkdis |= (0x1 << clock);
100120cc:	4a0d      	ldr	r2, [pc, #52]	@ (10012104 <MXC_SYS_ClockDisable+0x3c>)
        clock -= 64;
100120ce:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis |= (0x1 << clock);
100120d0:	68d1      	ldr	r1, [r2, #12]
100120d2:	b2c0      	uxtb	r0, r0
100120d4:	2301      	movs	r3, #1
100120d6:	4083      	lsls	r3, r0
100120d8:	430b      	orrs	r3, r1
100120da:	60d3      	str	r3, [r2, #12]
100120dc:	4770      	bx	lr
    } else if (clock > 31) {
100120de:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 |= (0x1 << clock);
100120e0:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
    } else if (clock > 31) {
100120e4:	d907      	bls.n	100120f6 <MXC_SYS_ClockDisable+0x2e>
        clock -= 32;
100120e6:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 |= (0x1 << clock);
100120e8:	6c91      	ldr	r1, [r2, #72]	@ 0x48
100120ea:	b2c0      	uxtb	r0, r0
100120ec:	2301      	movs	r3, #1
100120ee:	4083      	lsls	r3, r0
100120f0:	430b      	orrs	r3, r1
100120f2:	6493      	str	r3, [r2, #72]	@ 0x48
100120f4:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 |= (0x1 << clock);
100120f6:	6a51      	ldr	r1, [r2, #36]	@ 0x24
100120f8:	2301      	movs	r3, #1
100120fa:	4083      	lsls	r3, r0
100120fc:	430b      	orrs	r3, r1
100120fe:	6253      	str	r3, [r2, #36]	@ 0x24
    }
}
10012100:	4770      	bx	lr
10012102:	bf00      	nop
10012104:	40080000 	.word	0x40080000

10012108 <MXC_SYS_ClockEnable>:

/* ************************************************************************** */
void MXC_SYS_ClockEnable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
10012108:	283f      	cmp	r0, #63	@ 0x3f
1001210a:	d909      	bls.n	10012120 <MXC_SYS_ClockEnable+0x18>
        clock -= 64;
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
1001210c:	490e      	ldr	r1, [pc, #56]	@ (10012148 <MXC_SYS_ClockEnable+0x40>)
        clock -= 64;
1001210e:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
10012110:	68cb      	ldr	r3, [r1, #12]
10012112:	b2c0      	uxtb	r0, r0
10012114:	2201      	movs	r2, #1
10012116:	4082      	lsls	r2, r0
10012118:	ea23 0302 	bic.w	r3, r3, r2
1001211c:	60cb      	str	r3, [r1, #12]
1001211e:	4770      	bx	lr
    } else if (clock > 31) {
10012120:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
10012122:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
    } else if (clock > 31) {
10012126:	d908      	bls.n	1001213a <MXC_SYS_ClockEnable+0x32>
        clock -= 32;
10012128:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
1001212a:	6c8b      	ldr	r3, [r1, #72]	@ 0x48
1001212c:	b2c0      	uxtb	r0, r0
1001212e:	2201      	movs	r2, #1
10012130:	4082      	lsls	r2, r0
10012132:	ea23 0302 	bic.w	r3, r3, r2
10012136:	648b      	str	r3, [r1, #72]	@ 0x48
10012138:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 &= ~(0x1 << clock);
1001213a:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
1001213c:	2201      	movs	r2, #1
1001213e:	4082      	lsls	r2, r0
10012140:	ea23 0302 	bic.w	r3, r3, r2
10012144:	624b      	str	r3, [r1, #36]	@ 0x24
    }
}
10012146:	4770      	bx	lr
10012148:	40080000 	.word	0x40080000

1001214c <MXC_SYS_ClockSourceEnable>:
    }
}

/******************************************************************************/
int MXC_SYS_ClockSourceEnable(mxc_sys_system_clock_t clock)
{
1001214c:	b510      	push	{r4, lr}
    switch (clock) {
1001214e:	2807      	cmp	r0, #7
10012150:	d80a      	bhi.n	10012168 <MXC_SYS_ClockSourceEnable+0x1c>
10012152:	e8df f000 	tbb	[pc, r0]
10012156:	090c      	.short	0x090c
10012158:	47332309 	.word	0x47332309
1001215c:	045b      	.short	0x045b

    default:
        return E_BAD_PARAM;
        break;
    }
}
1001215e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return MXC_GPIO_Config(&gpio_cfg_extclk);
10012162:	4836      	ldr	r0, [pc, #216]	@ (1001223c <MXC_SYS_ClockSourceEnable+0xf0>)
10012164:	f000 b906 	b.w	10012374 <MXC_GPIO_Config>
    switch (clock) {
10012168:	f06f 0002 	mvn.w	r0, #2
}
1001216c:	bd10      	pop	{r4, pc}
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
1001216e:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    // We do not have access to a system tick in the RV core.
    while (!(MXC_GCR->clkctrl & ready)) {}
    return E_NO_ERROR;
#else
    // Start timeout, wait for ready
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10012172:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
10012174:	68a3      	ldr	r3, [r4, #8]
10012176:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
1001217a:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1001217c:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
10012180:	f7ff fed0 	bl	10011f24 <MXC_DelayAsync>
10012184:	e003      	b.n	1001218e <MXC_SYS_ClockSourceEnable+0x42>
    do {
        if (MXC_GCR->clkctrl & ready) {
            MXC_DelayAbort();
            return E_NO_ERROR;
        }
    } while (MXC_DelayCheck() == E_BUSY);
10012186:	f7ff feeb 	bl	10011f60 <MXC_DelayCheck>
1001218a:	3006      	adds	r0, #6
1001218c:	d152      	bne.n	10012234 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1001218e:	68a3      	ldr	r3, [r4, #8]
10012190:	0159      	lsls	r1, r3, #5
10012192:	d5f8      	bpl.n	10012186 <MXC_SYS_ClockSourceEnable+0x3a>
            MXC_DelayAbort();
10012194:	f7ff ff1c 	bl	10011fd0 <MXC_DelayAbort>
            return E_NO_ERROR;
10012198:	2000      	movs	r0, #0
}
1001219a:	bd10      	pop	{r4, pc}
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1001219c:	2100      	movs	r1, #0
1001219e:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
100121a2:	f7ff febf 	bl	10011f24 <MXC_DelayAsync>
        if (MXC_GCR->clkctrl & ready) {
100121a6:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
100121aa:	e003      	b.n	100121b4 <MXC_SYS_ClockSourceEnable+0x68>
    } while (MXC_DelayCheck() == E_BUSY);
100121ac:	f7ff fed8 	bl	10011f60 <MXC_DelayCheck>
100121b0:	3006      	adds	r0, #6
100121b2:	d13f      	bne.n	10012234 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
100121b4:	68a3      	ldr	r3, [r4, #8]
100121b6:	009a      	lsls	r2, r3, #2
100121b8:	d4ec      	bmi.n	10012194 <MXC_SYS_ClockSourceEnable+0x48>
100121ba:	e7f7      	b.n	100121ac <MXC_SYS_ClockSourceEnable+0x60>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
100121bc:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100121c0:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
100121c2:	68a3      	ldr	r3, [r4, #8]
100121c4:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
100121c8:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100121ca:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
100121ce:	f7ff fea9 	bl	10011f24 <MXC_DelayAsync>
100121d2:	e003      	b.n	100121dc <MXC_SYS_ClockSourceEnable+0x90>
    } while (MXC_DelayCheck() == E_BUSY);
100121d4:	f7ff fec4 	bl	10011f60 <MXC_DelayCheck>
100121d8:	3006      	adds	r0, #6
100121da:	d12b      	bne.n	10012234 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
100121dc:	68a3      	ldr	r3, [r4, #8]
100121de:	011b      	lsls	r3, r3, #4
100121e0:	d5f8      	bpl.n	100121d4 <MXC_SYS_ClockSourceEnable+0x88>
100121e2:	e7d7      	b.n	10012194 <MXC_SYS_ClockSourceEnable+0x48>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
100121e4:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100121e8:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
100121ea:	68a3      	ldr	r3, [r4, #8]
100121ec:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
100121f0:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100121f2:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
100121f6:	f7ff fe95 	bl	10011f24 <MXC_DelayAsync>
100121fa:	e003      	b.n	10012204 <MXC_SYS_ClockSourceEnable+0xb8>
    } while (MXC_DelayCheck() == E_BUSY);
100121fc:	f7ff feb0 	bl	10011f60 <MXC_DelayCheck>
10012200:	3006      	adds	r0, #6
10012202:	d117      	bne.n	10012234 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
10012204:	68a3      	ldr	r3, [r4, #8]
10012206:	00d8      	lsls	r0, r3, #3
10012208:	d4c4      	bmi.n	10012194 <MXC_SYS_ClockSourceEnable+0x48>
1001220a:	e7f7      	b.n	100121fc <MXC_SYS_ClockSourceEnable+0xb0>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
1001220c:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10012210:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
10012212:	68a3      	ldr	r3, [r4, #8]
10012214:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
10012218:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1001221a:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1001221e:	f7ff fe81 	bl	10011f24 <MXC_DelayAsync>
10012222:	e003      	b.n	1001222c <MXC_SYS_ClockSourceEnable+0xe0>
    } while (MXC_DelayCheck() == E_BUSY);
10012224:	f7ff fe9c 	bl	10011f60 <MXC_DelayCheck>
10012228:	3006      	adds	r0, #6
1001222a:	d103      	bne.n	10012234 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1001222c:	68a3      	ldr	r3, [r4, #8]
1001222e:	019b      	lsls	r3, r3, #6
10012230:	d4b0      	bmi.n	10012194 <MXC_SYS_ClockSourceEnable+0x48>
10012232:	e7f7      	b.n	10012224 <MXC_SYS_ClockSourceEnable+0xd8>

    return E_TIME_OUT;
10012234:	f06f 0009 	mvn.w	r0, #9
}
10012238:	bd10      	pop	{r4, pc}
1001223a:	bf00      	nop
1001223c:	10023794 	.word	0x10023794

10012240 <MXC_SYS_Reset_Periph>:

/* ************************************************************************** */
void MXC_SYS_Reset_Periph(mxc_sys_reset_t reset)
{
    /* The mxc_sys_reset_t enum uses enum values that are the offset by 32 and 64 for the rst register. */
    if (reset > 63) {
10012240:	283f      	cmp	r0, #63	@ 0x3f
10012242:	d909      	bls.n	10012258 <MXC_SYS_Reset_Periph+0x18>
        reset -= 64;
10012244:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->rst = (0x1 << reset);
10012246:	490f      	ldr	r1, [pc, #60]	@ (10012284 <MXC_SYS_Reset_Periph+0x44>)
10012248:	b2c0      	uxtb	r0, r0
1001224a:	2201      	movs	r2, #1
1001224c:	4082      	lsls	r2, r0
1001224e:	608a      	str	r2, [r1, #8]
        while (MXC_LPGCR->rst & (0x1 << reset)) {}
10012250:	688b      	ldr	r3, [r1, #8]
10012252:	421a      	tst	r2, r3
10012254:	d1fc      	bne.n	10012250 <MXC_SYS_Reset_Periph+0x10>
10012256:	4770      	bx	lr
    } else if (reset > 31) {
10012258:	281f      	cmp	r0, #31
1001225a:	d90a      	bls.n	10012272 <MXC_SYS_Reset_Periph+0x32>
        reset -= 32;
1001225c:	3820      	subs	r0, #32
        MXC_GCR->rst1 = (0x1 << reset);
1001225e:	b2c0      	uxtb	r0, r0
10012260:	2201      	movs	r2, #1
10012262:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
10012266:	4082      	lsls	r2, r0
10012268:	644a      	str	r2, [r1, #68]	@ 0x44
        while (MXC_GCR->rst1 & (0x1 << reset)) {}
1001226a:	6c4b      	ldr	r3, [r1, #68]	@ 0x44
1001226c:	421a      	tst	r2, r3
1001226e:	d1fc      	bne.n	1001226a <MXC_SYS_Reset_Periph+0x2a>
10012270:	4770      	bx	lr
    } else {
        MXC_GCR->rst0 = (0x1 << reset);
10012272:	2201      	movs	r2, #1
10012274:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
10012278:	4082      	lsls	r2, r0
1001227a:	604a      	str	r2, [r1, #4]
        while (MXC_GCR->rst0 & (0x1 << reset)) {}
1001227c:	684b      	ldr	r3, [r1, #4]
1001227e:	421a      	tst	r2, r3
10012280:	d1fc      	bne.n	1001227c <MXC_SYS_Reset_Periph+0x3c>
    }
}
10012282:	4770      	bx	lr
10012284:	40080000 	.word	0x40080000

10012288 <MXC_FLC_Write32>:
    uint32_t addr, aligned;
    int err;
    mxc_flc_regs_t *flc = NULL;

    // Address checked if it is byte addressable
    if (address & 0x3) {
10012288:	0782      	lsls	r2, r0, #30
1001228a:	d133      	bne.n	100122f4 <MXC_FLC_Write32+0x6c>
    if ((addr >= MXC_FLASH_MEM_BASE) && (addr < (MXC_FLASH_MEM_BASE + MXC_FLASH_MEM_SIZE))) {
1001228c:	f100 4370 	add.w	r3, r0, #4026531840	@ 0xf0000000
10012290:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
10012294:	4684      	mov	ip, r0
10012296:	460a      	mov	r2, r1
10012298:	d329      	bcc.n	100122ee <MXC_FLC_Write32+0x66>
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
1001229a:	f1a0 5384 	sub.w	r3, r0, #276824064	@ 0x10800000
1001229e:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
100122a2:	d227      	bcs.n	100122f4 <MXC_FLC_Write32+0x6c>
        return E_BAD_PARAM;
    }

    // Align address to 128-bit word
    aligned = address & 0xfffffff0;
100122a4:	f020 030f 	bic.w	r3, r0, #15
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
100122a8:	f1a3 5384 	sub.w	r3, r3, #276824064	@ 0x10800000
100122ac:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
100122b0:	d220      	bcs.n	100122f4 <MXC_FLC_Write32+0x6c>
        *result = (addr & (MXC_INFO_MEM_SIZE - 1)) + MXC_FLASH_MEM_SIZE;
100122b2:	f643 73f0 	movw	r3, #16368	@ 0x3ff0
100122b6:	4003      	ands	r3, r0
100122b8:	f503 2300 	add.w	r3, r3, #524288	@ 0x80000
{
100122bc:	b500      	push	{lr}

    if ((err = MXC_FLC_ME17_GetPhysicalAddress(aligned, &addr)) < E_NO_ERROR) {
        return err;
    }

    err = MXC_FLC_RevA_Write32Using128((mxc_flc_reva_regs_t *)flc, address, data, addr);
100122be:	480f      	ldr	r0, [pc, #60]	@ (100122fc <MXC_FLC_Write32+0x74>)
{
100122c0:	b083      	sub	sp, #12
    err = MXC_FLC_RevA_Write32Using128((mxc_flc_reva_regs_t *)flc, address, data, addr);
100122c2:	4661      	mov	r1, ip
100122c4:	f018 fb20 	bl	1002a908 <__MXC_FLC_RevA_Write32Using128_veneer>
    MXC_GCR->sysctrl |= MXC_F_GCR_SYSCTRL_ICC0_FLUSH;
100122c8:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
100122cc:	6813      	ldr	r3, [r2, #0]
100122ce:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100122d2:	6013      	str	r3, [r2, #0]
    while (MXC_GCR->sysctrl & MXC_F_GCR_SYSCTRL_ICC0_FLUSH) {}
100122d4:	6813      	ldr	r3, [r2, #0]
100122d6:	065b      	lsls	r3, r3, #25
100122d8:	d4fc      	bmi.n	100122d4 <MXC_FLC_Write32+0x4c>
    line = *line_addr;
100122da:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
    line = *line_addr;
100122de:	4b08      	ldr	r3, [pc, #32]	@ (10012300 <MXC_FLC_Write32+0x78>)
    line = *line_addr;
100122e0:	6812      	ldr	r2, [r2, #0]
100122e2:	9201      	str	r2, [sp, #4]
    line = *line_addr;
100122e4:	681b      	ldr	r3, [r3, #0]
100122e6:	9301      	str	r3, [sp, #4]

    // Flush the cache
    MXC_FLC_ME17_Flash_Operation();

    return err;
}
100122e8:	b003      	add	sp, #12
100122ea:	f85d fb04 	ldr.w	pc, [sp], #4
        *result = addr & (MXC_FLASH_MEM_SIZE - 1);
100122ee:	4b05      	ldr	r3, [pc, #20]	@ (10012304 <MXC_FLC_Write32+0x7c>)
100122f0:	4003      	ands	r3, r0
100122f2:	e7e3      	b.n	100122bc <MXC_FLC_Write32+0x34>
        return E_BAD_PARAM;
100122f4:	f06f 0002 	mvn.w	r0, #2
}
100122f8:	4770      	bx	lr
100122fa:	bf00      	nop
100122fc:	40029000 	.word	0x40029000
10012300:	10002000 	.word	0x10002000
10012304:	0007fff0 	.word	0x0007fff0

10012308 <MXC_FLC_Write>:
}

//******************************************************************************
int MXC_FLC_Write(uint32_t address, uint32_t length, uint32_t *buffer)
{
    return MXC_FLC_Com_Write(address, length, buffer);
10012308:	f018 baf6 	b.w	1002a8f8 <__MXC_FLC_Com_Write_veneer>

1001230c <MXC_FLC_Read>:
}

//******************************************************************************
void MXC_FLC_Read(int address, void *buffer, int len)
{
    MXC_FLC_Com_Read(address, buffer, len);
1001230c:	f018 baf8 	b.w	1002a900 <__MXC_FLC_Com_Read_veneer>

10012310 <MXC_FLC_EnableInt>:
}

//******************************************************************************
int MXC_FLC_EnableInt(uint32_t flags)
{
    return MXC_FLC_RevA_EnableInt(flags);
10012310:	f000 b800 	b.w	10012314 <MXC_FLC_RevA_EnableInt>

10012314 <MXC_FLC_RevA_EnableInt>:
//******************************************************************************
int MXC_FLC_RevA_EnableInt(uint32_t mask)
{
    mask &= (MXC_F_FLC_REVA_INTR_DONEIE | MXC_F_FLC_REVA_INTR_AFIE);

    if (!mask) {
10012314:	f410 7340 	ands.w	r3, r0, #768	@ 0x300
10012318:	d006      	beq.n	10012328 <MXC_FLC_RevA_EnableInt+0x14>
        /* No bits set? Wasn't something we can enable. */
        return E_BAD_PARAM;
    }

    /* Apply enables and write back, preserving the flags */
    flc_int->intr |= mask;
1001231a:	4a05      	ldr	r2, [pc, #20]	@ (10012330 <MXC_FLC_RevA_EnableInt+0x1c>)
1001231c:	6811      	ldr	r1, [r2, #0]
1001231e:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
10012320:	4313      	orrs	r3, r2

    return E_NO_ERROR;
10012322:	2000      	movs	r0, #0
    flc_int->intr |= mask;
10012324:	624b      	str	r3, [r1, #36]	@ 0x24
    return E_NO_ERROR;
10012326:	4770      	bx	lr
        return E_BAD_PARAM;
10012328:	f06f 0002 	mvn.w	r0, #2
}
1001232c:	4770      	bx	lr
1001232e:	bf00      	nop
10012330:	20000008 	.word	0x20000008

10012334 <MXC_GPIO_Init>:
/* **** Globals **** */

/* **** Functions **** */
int MXC_GPIO_Init(uint32_t portmask)
{
    if (portmask & 0x1) {
10012334:	07c1      	lsls	r1, r0, #31
{
10012336:	b510      	push	{r4, lr}
10012338:	4604      	mov	r4, r0
    if (portmask & 0x1) {
1001233a:	d408      	bmi.n	1001234e <MXC_GPIO_Init+0x1a>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
    }

    if (portmask & 0x2) {
1001233c:	07a2      	lsls	r2, r4, #30
1001233e:	d40b      	bmi.n	10012358 <MXC_GPIO_Init+0x24>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
    }

    if (portmask & 0x4) {
10012340:	0763      	lsls	r3, r4, #29
10012342:	d40e      	bmi.n	10012362 <MXC_GPIO_Init+0x2e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
    }

    return MXC_GPIO_Common_Init(portmask);
10012344:	4620      	mov	r0, r4
}
10012346:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
1001234a:	f001 bbbd 	b.w	10013ac8 <MXC_GPIO_Common_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
1001234e:	2000      	movs	r0, #0
10012350:	f7ff feda 	bl	10012108 <MXC_SYS_ClockEnable>
    if (portmask & 0x2) {
10012354:	07a2      	lsls	r2, r4, #30
10012356:	d5f3      	bpl.n	10012340 <MXC_GPIO_Init+0xc>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
10012358:	2001      	movs	r0, #1
1001235a:	f7ff fed5 	bl	10012108 <MXC_SYS_ClockEnable>
    if (portmask & 0x4) {
1001235e:	0763      	lsls	r3, r4, #29
10012360:	d5f0      	bpl.n	10012344 <MXC_GPIO_Init+0x10>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
10012362:	2040      	movs	r0, #64	@ 0x40
10012364:	f7ff fed0 	bl	10012108 <MXC_SYS_ClockEnable>
    return MXC_GPIO_Common_Init(portmask);
10012368:	4620      	mov	r0, r4
}
1001236a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
1001236e:	f001 bbab 	b.w	10013ac8 <MXC_GPIO_Common_Init>
10012372:	bf00      	nop

10012374 <MXC_GPIO_Config>:

    return E_NO_ERROR;
}

int MXC_GPIO_Config(const mxc_gpio_cfg_t *cfg)
{
10012374:	b570      	push	{r4, r5, r6, lr}
    int port, error;
    mxc_gpio_regs_t *gpio = cfg->port;

    port = MXC_GPIO_GET_IDX(cfg->port);
10012376:	4b7f      	ldr	r3, [pc, #508]	@ (10012574 <MXC_GPIO_Config+0x200>)
    mxc_gpio_regs_t *gpio = cfg->port;
10012378:	6805      	ldr	r5, [r0, #0]
    port = MXC_GPIO_GET_IDX(cfg->port);
1001237a:	429d      	cmp	r5, r3
{
1001237c:	4604      	mov	r4, r0
    port = MXC_GPIO_GET_IDX(cfg->port);
1001237e:	d037      	beq.n	100123f0 <MXC_GPIO_Config+0x7c>
10012380:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012384:	429d      	cmp	r5, r3
10012386:	d020      	beq.n	100123ca <MXC_GPIO_Config+0x56>
10012388:	f503 23ee 	add.w	r3, r3, #487424	@ 0x77000
1001238c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
10012390:	429d      	cmp	r5, r3
10012392:	d07f      	beq.n	10012494 <MXC_GPIO_Config+0x120>
10012394:	4878      	ldr	r0, [pc, #480]	@ (10012578 <MXC_GPIO_Config+0x204>)
10012396:	1a28      	subs	r0, r5, r0
10012398:	fab0 f080 	clz	r0, r0
1001239c:	0940      	lsrs	r0, r0, #5
1001239e:	00c0      	lsls	r0, r0, #3

    MXC_GPIO_Init(1 << port);
100123a0:	f7ff ffc8 	bl	10012334 <MXC_GPIO_Init>

    if (cfg->port == MXC_GPIO3) {
100123a4:	4b74      	ldr	r3, [pc, #464]	@ (10012578 <MXC_GPIO_Config+0x204>)
100123a6:	6822      	ldr	r2, [r4, #0]
100123a8:	429a      	cmp	r2, r3
100123aa:	d015      	beq.n	100123d8 <MXC_GPIO_Config+0x64>
        default:
            return E_NOT_SUPPORTED;
        }
    } else {
        // Configure alternate function
        error = MXC_GPIO_RevA_SetAF((mxc_gpio_reva_regs_t *)gpio, cfg->func, cfg->mask);
100123ac:	6862      	ldr	r2, [r4, #4]
100123ae:	7a21      	ldrb	r1, [r4, #8]
100123b0:	4628      	mov	r0, r5
100123b2:	f000 f94b 	bl	1001264c <MXC_GPIO_RevA_SetAF>
        if (error != E_NO_ERROR) {
100123b6:	b9d0      	cbnz	r0, 100123ee <MXC_GPIO_Config+0x7a>
            return error;
        }

        // Configure the pad
        switch (cfg->pad) {
100123b8:	7a63      	ldrb	r3, [r4, #9]
100123ba:	2b04      	cmp	r3, #4
100123bc:	f200 80d7 	bhi.w	1001256e <MXC_GPIO_Config+0x1fa>
100123c0:	e8df f003 	tbb	[pc, r3]
100123c4:	2f3e4c5a 	.word	0x2f3e4c5a
100123c8:	18          	.byte	0x18
100123c9:	00          	.byte	0x00
100123ca:	2002      	movs	r0, #2
    MXC_GPIO_Init(1 << port);
100123cc:	f7ff ffb2 	bl	10012334 <MXC_GPIO_Init>
    if (cfg->port == MXC_GPIO3) {
100123d0:	4b69      	ldr	r3, [pc, #420]	@ (10012578 <MXC_GPIO_Config+0x204>)
100123d2:	6822      	ldr	r2, [r4, #0]
100123d4:	429a      	cmp	r2, r3
100123d6:	d1e9      	bne.n	100123ac <MXC_GPIO_Config+0x38>
        switch (cfg->func) {
100123d8:	7a23      	ldrb	r3, [r4, #8]
100123da:	2b01      	cmp	r3, #1
100123dc:	f000 80bb 	beq.w	10012556 <MXC_GPIO_Config+0x1e2>
100123e0:	2b02      	cmp	r3, #2
100123e2:	f000 80a5 	beq.w	10012530 <MXC_GPIO_Config+0x1bc>
100123e6:	2b00      	cmp	r3, #0
100123e8:	d056      	beq.n	10012498 <MXC_GPIO_Config+0x124>
            return E_NOT_SUPPORTED;
100123ea:	f06f 0010 	mvn.w	r0, #16
        }
    }

    // Configure the vssel
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
}
100123ee:	bd70      	pop	{r4, r5, r6, pc}
100123f0:	2001      	movs	r0, #1
100123f2:	e7d5      	b.n	100123a0 <MXC_GPIO_Config+0x2c>
            gpio->padctrl0 &= ~cfg->mask;
100123f4:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
100123f6:	6862      	ldr	r2, [r4, #4]
100123f8:	ea23 0302 	bic.w	r3, r3, r2
100123fc:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
100123fe:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
10012400:	4313      	orrs	r3, r2
10012402:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
10012404:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
10012408:	ea23 0302 	bic.w	r3, r3, r2
1001240c:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
}

/* ************************************************************************** */
int MXC_GPIO_SetVSSEL(mxc_gpio_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    if (port == MXC_GPIO3) {
10012410:	4b59      	ldr	r3, [pc, #356]	@ (10012578 <MXC_GPIO_Config+0x204>)
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
10012412:	7aa1      	ldrb	r1, [r4, #10]
    if (port == MXC_GPIO3) {
10012414:	429d      	cmp	r5, r3
10012416:	d039      	beq.n	1001248c <MXC_GPIO_Config+0x118>
        }

        return E_NO_ERROR;
    }

    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
10012418:	4628      	mov	r0, r5
}
1001241a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
1001241e:	f000 b8ff 	b.w	10012620 <MXC_GPIO_RevA_SetVSSEL>
            gpio->padctrl0 |= cfg->mask;
10012422:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
10012424:	6862      	ldr	r2, [r4, #4]
10012426:	4313      	orrs	r3, r2
10012428:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
1001242a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1001242c:	ea23 0302 	bic.w	r3, r3, r2
10012430:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
10012432:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
10012436:	ea23 0302 	bic.w	r3, r3, r2
1001243a:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1001243e:	e7e7      	b.n	10012410 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
10012440:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
10012442:	6862      	ldr	r2, [r4, #4]
10012444:	ea23 0302 	bic.w	r3, r3, r2
10012448:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
1001244a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1001244c:	4313      	orrs	r3, r2
1001244e:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
10012450:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
10012454:	4313      	orrs	r3, r2
10012456:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1001245a:	e7d9      	b.n	10012410 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 |= cfg->mask;
1001245c:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1001245e:	6862      	ldr	r2, [r4, #4]
10012460:	4313      	orrs	r3, r2
10012462:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
10012464:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
10012466:	ea23 0302 	bic.w	r3, r3, r2
1001246a:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
1001246c:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
10012470:	4313      	orrs	r3, r2
10012472:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
10012476:	e7cb      	b.n	10012410 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
10012478:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1001247a:	6862      	ldr	r2, [r4, #4]
1001247c:	ea23 0302 	bic.w	r3, r3, r2
10012480:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
10012482:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
10012484:	ea23 0302 	bic.w	r3, r3, r2
10012488:	666b      	str	r3, [r5, #100]	@ 0x64
            break;
1001248a:	e7c1      	b.n	10012410 <MXC_GPIO_Config+0x9c>
        if (vssel == MXC_GPIO_VSSEL_VDDIO) {
1001248c:	2900      	cmp	r1, #0
1001248e:	d0ac      	beq.n	100123ea <MXC_GPIO_Config+0x76>
        return E_NO_ERROR;
10012490:	2000      	movs	r0, #0
}
10012492:	bd70      	pop	{r4, r5, r6, pc}
10012494:	2004      	movs	r0, #4
10012496:	e783      	b.n	100123a0 <MXC_GPIO_Config+0x2c>
            MXC_MCR->gpio3_ctrl &= ~(P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask));
10012498:	6863      	ldr	r3, [r4, #4]
1001249a:	4938      	ldr	r1, [pc, #224]	@ (1001257c <MXC_GPIO_Config+0x208>)
1001249c:	0058      	lsls	r0, r3, #1
1001249e:	011a      	lsls	r2, r3, #4
100124a0:	6a0e      	ldr	r6, [r1, #32]
100124a2:	f000 0002 	and.w	r0, r0, #2
100124a6:	f002 0220 	and.w	r2, r2, #32
100124aa:	4302      	orrs	r2, r0
100124ac:	ea26 0202 	bic.w	r2, r6, r2
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
100124b0:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen &= ~(SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask));
100124b2:	688a      	ldr	r2, [r1, #8]
100124b4:	f3c3 0340 	ubfx	r3, r3, #1, #1
100124b8:	4303      	orrs	r3, r0
100124ba:	ea22 0303 	bic.w	r3, r2, r3
100124be:	608b      	str	r3, [r1, #8]
        switch (cfg->pad) {
100124c0:	7a63      	ldrb	r3, [r4, #9]
100124c2:	2b04      	cmp	r3, #4
100124c4:	d891      	bhi.n	100123ea <MXC_GPIO_Config+0x76>
100124c6:	e8df f003 	tbb	[pc, r3]
100124ca:	1b26      	.short	0x1b26
100124cc:	1b03      	.short	0x1b03
100124ce:	03          	.byte	0x03
100124cf:	00          	.byte	0x00
            MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask));
100124d0:	6862      	ldr	r2, [r4, #4]
100124d2:	492a      	ldr	r1, [pc, #168]	@ (1001257c <MXC_GPIO_Config+0x208>)
100124d4:	00d3      	lsls	r3, r2, #3
100124d6:	6a08      	ldr	r0, [r1, #32]
100124d8:	f003 0310 	and.w	r3, r3, #16
100124dc:	f002 0601 	and.w	r6, r2, #1
100124e0:	4333      	orrs	r3, r6
100124e2:	ea20 0303 	bic.w	r3, r0, r3
100124e6:	620b      	str	r3, [r1, #32]
            MXC_MCR->gpio3_ctrl &= ~(P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask));
100124e8:	0156      	lsls	r6, r2, #5
100124ea:	0093      	lsls	r3, r2, #2
100124ec:	6a08      	ldr	r0, [r1, #32]
100124ee:	f003 0304 	and.w	r3, r3, #4
100124f2:	f006 0640 	and.w	r6, r6, #64	@ 0x40
100124f6:	4333      	orrs	r3, r6
100124f8:	ea20 0303 	bic.w	r3, r0, r3
100124fc:	620b      	str	r3, [r1, #32]
            break;
100124fe:	e787      	b.n	10012410 <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask);
10012500:	491e      	ldr	r1, [pc, #120]	@ (1001257c <MXC_GPIO_Config+0x208>)
10012502:	6862      	ldr	r2, [r4, #4]
10012504:	6a0e      	ldr	r6, [r1, #32]
10012506:	00d3      	lsls	r3, r2, #3
10012508:	f002 0001 	and.w	r0, r2, #1
1001250c:	f003 0310 	and.w	r3, r3, #16
10012510:	4330      	orrs	r0, r6
10012512:	4303      	orrs	r3, r0
10012514:	e7e7      	b.n	100124e6 <MXC_GPIO_Config+0x172>
            MXC_MCR->gpio3_ctrl |= P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask);
10012516:	6862      	ldr	r2, [r4, #4]
10012518:	4818      	ldr	r0, [pc, #96]	@ (1001257c <MXC_GPIO_Config+0x208>)
1001251a:	0093      	lsls	r3, r2, #2
1001251c:	0151      	lsls	r1, r2, #5
1001251e:	6a06      	ldr	r6, [r0, #32]
10012520:	f003 0304 	and.w	r3, r3, #4
10012524:	f001 0140 	and.w	r1, r1, #64	@ 0x40
10012528:	430b      	orrs	r3, r1
1001252a:	4333      	orrs	r3, r6
1001252c:	6203      	str	r3, [r0, #32]
            break;
1001252e:	e76f      	b.n	10012410 <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
10012530:	6863      	ldr	r3, [r4, #4]
10012532:	4912      	ldr	r1, [pc, #72]	@ (1001257c <MXC_GPIO_Config+0x208>)
10012534:	0058      	lsls	r0, r3, #1
10012536:	011a      	lsls	r2, r3, #4
10012538:	6a0e      	ldr	r6, [r1, #32]
1001253a:	f000 0002 	and.w	r0, r0, #2
1001253e:	f002 0220 	and.w	r2, r2, #32
10012542:	4302      	orrs	r2, r0
10012544:	4332      	orrs	r2, r6
10012546:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen |= SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask);
10012548:	688a      	ldr	r2, [r1, #8]
1001254a:	f3c3 0340 	ubfx	r3, r3, #1, #1
1001254e:	4303      	orrs	r3, r0
10012550:	4313      	orrs	r3, r2
10012552:	608b      	str	r3, [r1, #8]
            break;
10012554:	e7b4      	b.n	100124c0 <MXC_GPIO_Config+0x14c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
10012556:	6863      	ldr	r3, [r4, #4]
10012558:	4908      	ldr	r1, [pc, #32]	@ (1001257c <MXC_GPIO_Config+0x208>)
1001255a:	0058      	lsls	r0, r3, #1
1001255c:	011a      	lsls	r2, r3, #4
1001255e:	6a0e      	ldr	r6, [r1, #32]
10012560:	f000 0002 	and.w	r0, r0, #2
10012564:	f002 0220 	and.w	r2, r2, #32
10012568:	4302      	orrs	r2, r0
1001256a:	4332      	orrs	r2, r6
1001256c:	e7a0      	b.n	100124b0 <MXC_GPIO_Config+0x13c>
        switch (cfg->pad) {
1001256e:	f06f 0002 	mvn.w	r0, #2
}
10012572:	bd70      	pop	{r4, r5, r6, pc}
10012574:	40008000 	.word	0x40008000
10012578:	40080600 	.word	0x40080600
1001257c:	40006c00 	.word	0x40006c00

10012580 <MXC_GPIO_OutSet>:
    if (port == MXC_GPIO3) {
10012580:	4a08      	ldr	r2, [pc, #32]	@ (100125a4 <MXC_GPIO_OutSet+0x24>)
10012582:	4290      	cmp	r0, r2
10012584:	d001      	beq.n	1001258a <MXC_GPIO_OutSet+0xa>
    MXC_GPIO_RevA_OutSet((mxc_gpio_reva_regs_t *)port, mask);
10012586:	f000 b843 	b.w	10012610 <MXC_GPIO_RevA_OutSet>
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1001258a:	4807      	ldr	r0, [pc, #28]	@ (100125a8 <MXC_GPIO_OutSet+0x28>)
{
1001258c:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1001258e:	6a04      	ldr	r4, [r0, #32]
10012590:	00ca      	lsls	r2, r1, #3
10012592:	f001 0101 	and.w	r1, r1, #1
10012596:	4321      	orrs	r1, r4
10012598:	f002 0310 	and.w	r3, r2, #16
1001259c:	430b      	orrs	r3, r1
}
1001259e:	bc10      	pop	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
100125a0:	6203      	str	r3, [r0, #32]
}
100125a2:	4770      	bx	lr
100125a4:	40080600 	.word	0x40080600
100125a8:	40006c00 	.word	0x40006c00

100125ac <MXC_GPIO_OutClr>:
    if (port == MXC_GPIO3) {
100125ac:	4a09      	ldr	r2, [pc, #36]	@ (100125d4 <MXC_GPIO_OutClr+0x28>)
100125ae:	4290      	cmp	r0, r2
100125b0:	d001      	beq.n	100125b6 <MXC_GPIO_OutClr+0xa>
    MXC_GPIO_RevA_OutClr((mxc_gpio_reva_regs_t *)port, mask);
100125b2:	f000 b82f 	b.w	10012614 <MXC_GPIO_RevA_OutClr>
{
100125b6:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(mask) | P31_DATA_OUT(mask));
100125b8:	4c07      	ldr	r4, [pc, #28]	@ (100125d8 <MXC_GPIO_OutClr+0x2c>)
100125ba:	00ca      	lsls	r2, r1, #3
100125bc:	6a20      	ldr	r0, [r4, #32]
100125be:	f002 0210 	and.w	r2, r2, #16
100125c2:	f001 0101 	and.w	r1, r1, #1
100125c6:	ea42 0301 	orr.w	r3, r2, r1
100125ca:	ea20 0303 	bic.w	r3, r0, r3
100125ce:	6223      	str	r3, [r4, #32]
}
100125d0:	bc10      	pop	{r4}
100125d2:	4770      	bx	lr
100125d4:	40080600 	.word	0x40080600
100125d8:	40006c00 	.word	0x40006c00

100125dc <MXC_GPIO_Handler>:
    MXC_GPIO_Common_Handler(port);
100125dc:	f001 ba86 	b.w	10013aec <MXC_GPIO_Common_Handler>

100125e0 <MXC_GPIO_ClearFlags>:
    if (port == MXC_GPIO3) {
100125e0:	4a03      	ldr	r2, [pc, #12]	@ (100125f0 <MXC_GPIO_ClearFlags+0x10>)
100125e2:	4290      	cmp	r0, r2
100125e4:	d001      	beq.n	100125ea <MXC_GPIO_ClearFlags+0xa>
    MXC_GPIO_RevA_ClearFlags((mxc_gpio_reva_regs_t *)port, flags);
100125e6:	f000 b817 	b.w	10012618 <MXC_GPIO_RevA_ClearFlags>
        MXC_PWRSEQ->lpwkst3 = flags;
100125ea:	4a02      	ldr	r2, [pc, #8]	@ (100125f4 <MXC_GPIO_ClearFlags+0x14>)
100125ec:	61d1      	str	r1, [r2, #28]
}
100125ee:	4770      	bx	lr
100125f0:	40080600 	.word	0x40080600
100125f4:	40006800 	.word	0x40006800

100125f8 <MXC_GPIO_GetFlags>:
    if (port == MXC_GPIO3) {
100125f8:	4b03      	ldr	r3, [pc, #12]	@ (10012608 <MXC_GPIO_GetFlags+0x10>)
100125fa:	4298      	cmp	r0, r3
100125fc:	d001      	beq.n	10012602 <MXC_GPIO_GetFlags+0xa>
    return MXC_GPIO_RevA_GetFlags((mxc_gpio_reva_regs_t *)port);
100125fe:	f000 b80d 	b.w	1001261c <MXC_GPIO_RevA_GetFlags>
        return MXC_PWRSEQ->lpwkst3;
10012602:	4b02      	ldr	r3, [pc, #8]	@ (1001260c <MXC_GPIO_GetFlags+0x14>)
10012604:	69d8      	ldr	r0, [r3, #28]
}
10012606:	4770      	bx	lr
10012608:	40080600 	.word	0x40080600
1001260c:	40006800 	.word	0x40006800

10012610 <MXC_GPIO_RevA_OutSet>:
    return (port->in & mask);
}

void MXC_GPIO_RevA_OutSet(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_set = mask;
10012610:	61c1      	str	r1, [r0, #28]
}
10012612:	4770      	bx	lr

10012614 <MXC_GPIO_RevA_OutClr>:

void MXC_GPIO_RevA_OutClr(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_clr = mask;
10012614:	6201      	str	r1, [r0, #32]
}
10012616:	4770      	bx	lr

10012618 <MXC_GPIO_RevA_ClearFlags>:
    port->inten_clr = mask;
}

void MXC_GPIO_RevA_ClearFlags(mxc_gpio_reva_regs_t *port, uint32_t flags)
{
    port->intfl_clr = flags;
10012618:	6481      	str	r1, [r0, #72]	@ 0x48
}
1001261a:	4770      	bx	lr

1001261c <MXC_GPIO_RevA_GetFlags>:

uint32_t MXC_GPIO_RevA_GetFlags(mxc_gpio_reva_regs_t *port)
{
    return port->intfl;
1001261c:	6c00      	ldr	r0, [r0, #64]	@ 0x40
}
1001261e:	4770      	bx	lr

10012620 <MXC_GPIO_RevA_SetVSSEL>:

int MXC_GPIO_RevA_SetVSSEL(mxc_gpio_reva_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    // Configure the vssel
    switch (vssel) {
10012620:	b159      	cbz	r1, 1001263a <MXC_GPIO_RevA_SetVSSEL+0x1a>
10012622:	2901      	cmp	r1, #1
10012624:	d106      	bne.n	10012634 <MXC_GPIO_RevA_SetVSSEL+0x14>
    case MXC_GPIO_VSSEL_VDDIO:
        port->vssel &= ~mask;
        break;

    case MXC_GPIO_VSSEL_VDDIOH:
        port->vssel |= mask;
10012626:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
1001262a:	4313      	orrs	r3, r2
1001262c:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
10012630:	2000      	movs	r0, #0
}
10012632:	4770      	bx	lr
    switch (vssel) {
10012634:	f06f 0002 	mvn.w	r0, #2
10012638:	4770      	bx	lr
        port->vssel &= ~mask;
1001263a:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
1001263e:	ea23 0302 	bic.w	r3, r3, r2
10012642:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0
    return E_NO_ERROR;
10012646:	2000      	movs	r0, #0
}
10012648:	4770      	bx	lr
1001264a:	bf00      	nop

1001264c <MXC_GPIO_RevA_SetAF>:

int MXC_GPIO_RevA_SetAF(mxc_gpio_reva_regs_t *port, mxc_gpio_func_t func, uint32_t mask)
{
    //This is required for new devices going forward.
    port->inen |= mask;
1001264c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
1001264e:	4313      	orrs	r3, r2
10012650:	6303      	str	r3, [r0, #48]	@ 0x30

    //Switch to I/O mode first
    port->en0_set = mask;
10012652:	6042      	str	r2, [r0, #4]

    switch (func) {
10012654:	2905      	cmp	r1, #5
10012656:	d82c      	bhi.n	100126b2 <MXC_GPIO_RevA_SetAF+0x66>
10012658:	e8df f001 	tbb	[pc, r1]
1001265c:	1f19120a 	.word	0x1f19120a
10012660:	0325      	.short	0x0325
        port->en1_clr = mask;
        port->en0_clr = mask;
        break;

    case MXC_GPIO_FUNC_ALT4:
        port->en3_clr = mask;
10012662:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
10012666:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_set = mask;
10012668:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
1001266a:	6082      	str	r2, [r0, #8]
#endif
    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
1001266c:	2000      	movs	r0, #0
1001266e:	4770      	bx	lr
        port->outen_clr = mask;
10012670:	6142      	str	r2, [r0, #20]
        port->en0_set = mask;
10012672:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
10012674:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
10012676:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
10012678:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
    return E_NO_ERROR;
1001267c:	2000      	movs	r0, #0
1001267e:	4770      	bx	lr
        port->outen_set = mask;
10012680:	6102      	str	r2, [r0, #16]
        port->en0_set = mask;
10012682:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
10012684:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
10012686:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
10012688:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        break;
1001268c:	e7ee      	b.n	1001266c <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1001268e:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
10012692:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_clr = mask;
10012694:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
10012696:	6082      	str	r2, [r0, #8]
        break;
10012698:	e7e8      	b.n	1001266c <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1001269a:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
1001269e:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_set = mask;
100126a0:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
100126a2:	6082      	str	r2, [r0, #8]
        break;
100126a4:	e7e2      	b.n	1001266c <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
100126a6:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
100126aa:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_clr = mask;
100126ac:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
100126ae:	6082      	str	r2, [r0, #8]
        break;
100126b0:	e7dc      	b.n	1001266c <MXC_GPIO_RevA_SetAF+0x20>
    switch (func) {
100126b2:	f06f 0002 	mvn.w	r0, #2
}
100126b6:	4770      	bx	lr

100126b8 <MXC_I2C_SetSlaveAddr>:
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
}

int MXC_I2C_SetSlaveAddr(mxc_i2c_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    return MXC_I2C_RevA_SetSlaveAddr((mxc_i2c_reva_regs_t *)i2c, slaveAddr, idx);
100126b8:	f000 b8fa 	b.w	100128b0 <MXC_I2C_RevA_SetSlaveAddr>

100126bc <MXC_I2C_Shutdown>:
}

int MXC_I2C_Shutdown(mxc_i2c_regs_t *i2c)
{
100126bc:	b508      	push	{r3, lr}
    // Configure GPIO for I2C
    if (i2c == MXC_I2C0) {
100126be:	4b11      	ldr	r3, [pc, #68]	@ (10012704 <MXC_I2C_Shutdown+0x48>)
100126c0:	4298      	cmp	r0, r3
100126c2:	d00d      	beq.n	100126e0 <MXC_I2C_Shutdown+0x24>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
    } else if (i2c == MXC_I2C1) {
100126c4:	4b10      	ldr	r3, [pc, #64]	@ (10012708 <MXC_I2C_Shutdown+0x4c>)
100126c6:	4298      	cmp	r0, r3
100126c8:	d011      	beq.n	100126ee <MXC_I2C_Shutdown+0x32>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
    } else if (i2c == MXC_I2C2) {
100126ca:	4b10      	ldr	r3, [pc, #64]	@ (1001270c <MXC_I2C_Shutdown+0x50>)
100126cc:	4298      	cmp	r0, r3
100126ce:	d115      	bne.n	100126fc <MXC_I2C_Shutdown+0x40>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C2);
100126d0:	2038      	movs	r0, #56	@ 0x38
100126d2:	f7ff fcf9 	bl	100120c8 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C2);
100126d6:	2034      	movs	r0, #52	@ 0x34
100126d8:	f7ff fdb2 	bl	10012240 <MXC_SYS_Reset_Periph>
    } else {
        return E_NO_DEVICE;
    }

    return E_NO_ERROR;
100126dc:	2000      	movs	r0, #0
}
100126de:	bd08      	pop	{r3, pc}
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
100126e0:	200d      	movs	r0, #13
100126e2:	f7ff fcf1 	bl	100120c8 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
100126e6:	2010      	movs	r0, #16
100126e8:	f7ff fdaa 	bl	10012240 <MXC_SYS_Reset_Periph>
100126ec:	e7f6      	b.n	100126dc <MXC_I2C_Shutdown+0x20>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
100126ee:	201c      	movs	r0, #28
100126f0:	f7ff fcea 	bl	100120c8 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
100126f4:	2020      	movs	r0, #32
100126f6:	f7ff fda3 	bl	10012240 <MXC_SYS_Reset_Periph>
100126fa:	e7ef      	b.n	100126dc <MXC_I2C_Shutdown+0x20>
        return E_NO_DEVICE;
100126fc:	f06f 0001 	mvn.w	r0, #1
}
10012700:	bd08      	pop	{r3, pc}
10012702:	bf00      	nop
10012704:	4001d000 	.word	0x4001d000
10012708:	4001e000 	.word	0x4001e000
1001270c:	4001f000 	.word	0x4001f000

10012710 <MXC_I2C_Init>:
    if (i2c == NULL) {
10012710:	b3c0      	cbz	r0, 10012784 <MXC_I2C_Init+0x74>
{
10012712:	b570      	push	{r4, r5, r6, lr}
10012714:	4604      	mov	r4, r0
    MXC_I2C_Shutdown(i2c); // Clear everything out
10012716:	460d      	mov	r5, r1
10012718:	4616      	mov	r6, r2
1001271a:	f7ff ffcf 	bl	100126bc <MXC_I2C_Shutdown>
    if (i2c == MXC_I2C0) {
1001271e:	4b1b      	ldr	r3, [pc, #108]	@ (1001278c <MXC_I2C_Init+0x7c>)
10012720:	429c      	cmp	r4, r3
10012722:	d012      	beq.n	1001274a <MXC_I2C_Init+0x3a>
    } else if (i2c == MXC_I2C1) {
10012724:	4b1a      	ldr	r3, [pc, #104]	@ (10012790 <MXC_I2C_Init+0x80>)
10012726:	429c      	cmp	r4, r3
10012728:	d01c      	beq.n	10012764 <MXC_I2C_Init+0x54>
    } else if (i2c == MXC_I2C2) {
1001272a:	4b1a      	ldr	r3, [pc, #104]	@ (10012794 <MXC_I2C_Init+0x84>)
1001272c:	429c      	cmp	r4, r3
1001272e:	d126      	bne.n	1001277e <MXC_I2C_Init+0x6e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C2);
10012730:	2038      	movs	r0, #56	@ 0x38
10012732:	f7ff fce9 	bl	10012108 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c2);
10012736:	4818      	ldr	r0, [pc, #96]	@ (10012798 <MXC_I2C_Init+0x88>)
10012738:	f7ff fe1c 	bl	10012374 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1001273c:	4632      	mov	r2, r6
1001273e:	4629      	mov	r1, r5
10012740:	4620      	mov	r0, r4
}
10012742:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10012746:	f000 b84d 	b.w	100127e4 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C0);
1001274a:	200d      	movs	r0, #13
1001274c:	f7ff fcdc 	bl	10012108 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c0);
10012750:	4812      	ldr	r0, [pc, #72]	@ (1001279c <MXC_I2C_Init+0x8c>)
10012752:	f7ff fe0f 	bl	10012374 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10012756:	4632      	mov	r2, r6
10012758:	4629      	mov	r1, r5
1001275a:	4620      	mov	r0, r4
}
1001275c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10012760:	f000 b840 	b.w	100127e4 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C1);
10012764:	201c      	movs	r0, #28
10012766:	f7ff fccf 	bl	10012108 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c1);
1001276a:	480d      	ldr	r0, [pc, #52]	@ (100127a0 <MXC_I2C_Init+0x90>)
1001276c:	f7ff fe02 	bl	10012374 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10012770:	4632      	mov	r2, r6
10012772:	4629      	mov	r1, r5
10012774:	4620      	mov	r0, r4
}
10012776:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1001277a:	f000 b833 	b.w	100127e4 <MXC_I2C_RevA_Init>
        return E_NO_DEVICE;
1001277e:	f06f 0001 	mvn.w	r0, #1
}
10012782:	bd70      	pop	{r4, r5, r6, pc}
        return E_NULL_PTR;
10012784:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10012788:	4770      	bx	lr
1001278a:	bf00      	nop
1001278c:	4001d000 	.word	0x4001d000
10012790:	4001e000 	.word	0x4001e000
10012794:	4001f000 	.word	0x4001f000
10012798:	10023770 	.word	0x10023770
1001279c:	10023788 	.word	0x10023788
100127a0:	1002377c 	.word	0x1002377c

100127a4 <MXC_I2C_SetFrequency>:
    return E_NO_ERROR;
}

int MXC_I2C_SetFrequency(mxc_i2c_regs_t *i2c, unsigned int hz)
{
    return MXC_I2C_RevA_SetFrequency((mxc_i2c_reva_regs_t *)i2c, hz);
100127a4:	f000 b89e 	b.w	100128e4 <MXC_I2C_RevA_SetFrequency>

100127a8 <MXC_I2C_GetFrequency>:
}

int MXC_I2C_GetFrequency(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetFrequency((mxc_i2c_reva_regs_t *)i2c);
100127a8:	f000 b8ec 	b.w	10012984 <MXC_I2C_RevA_GetFrequency>

100127ac <MXC_I2C_Start>:
/* ************************************************************************* */
/* Low-level functions                                                       */
/* ************************************************************************* */
int MXC_I2C_Start(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_Start((mxc_i2c_reva_regs_t *)i2c);
100127ac:	f000 b8fa 	b.w	100129a4 <MXC_I2C_RevA_Start>

100127b0 <MXC_I2C_Stop>:
}

int MXC_I2C_Stop(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_Stop((mxc_i2c_reva_regs_t *)i2c);
100127b0:	f000 b90c 	b.w	100129cc <MXC_I2C_RevA_Stop>

100127b4 <MXC_I2C_ReadRXFIFO>:
    return MXC_I2C_RevA_Read((mxc_i2c_reva_regs_t *)i2c, bytes, len, ack);
}

int MXC_I2C_ReadRXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_ReadRXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
100127b4:	f000 b918 	b.w	100129e8 <MXC_I2C_RevA_ReadRXFIFO>

100127b8 <MXC_I2C_WriteTXFIFO>:
    return MXC_I2C_RevA_GetRXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_WriteTXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_WriteTXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
100127b8:	f000 b934 	b.w	10012a24 <MXC_I2C_RevA_WriteTXFIFO>

100127bc <MXC_I2C_ClearRXFIFO>:
    return MXC_I2C_RevA_GetTXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
}

void MXC_I2C_ClearRXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearRXFIFO((mxc_i2c_reva_regs_t *)i2c);
100127bc:	f000 b94a 	b.w	10012a54 <MXC_I2C_RevA_ClearRXFIFO>

100127c0 <MXC_I2C_ClearTXFIFO>:
}

void MXC_I2C_ClearTXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearTXFIFO((mxc_i2c_reva_regs_t *)i2c);
100127c0:	f000 b950 	b.w	10012a64 <MXC_I2C_RevA_ClearTXFIFO>

100127c4 <MXC_I2C_ClearFlags>:
    return MXC_I2C_RevA_GetFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
}

void MXC_I2C_ClearFlags(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_ClearFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
100127c4:	f000 b956 	b.w	10012a74 <MXC_I2C_RevA_ClearFlags>

100127c8 <MXC_I2C_Recover>:
    return MXC_I2C_RevA_GetTimeout((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_Recover(mxc_i2c_regs_t *i2c, unsigned int retries)
{
    return MXC_I2C_RevA_Recover((mxc_i2c_reva_regs_t *)i2c, retries);
100127c8:	f000 b958 	b.w	10012a7c <MXC_I2C_RevA_Recover>

100127cc <MXC_I2C_MasterTransaction>:
/* Transaction level functions                                               */
/* ************************************************************************* */

int MXC_I2C_MasterTransaction(mxc_i2c_req_t *req)
{
    return MXC_I2C_RevA_MasterTransaction((mxc_i2c_reva_req_t *)req);
100127cc:	f000 b9c2 	b.w	10012b54 <MXC_I2C_RevA_MasterTransaction>

100127d0 <MXC_I2C_SetRXThreshold>:
        (mxc_i2c_reva_regs_t *)i2c, (mxc_i2c_reva_slave_handler_t)callback, interruptCheck);
}

int MXC_I2C_SetRXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetRXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
100127d0:	f000 ba90 	b.w	10012cf4 <MXC_I2C_RevA_SetRXThreshold>

100127d4 <MXC_I2C_SetTXThreshold>:
    return MXC_I2C_RevA_GetRXThreshold((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_SetTXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetTXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
100127d4:	f000 ba9e 	b.w	10012d14 <MXC_I2C_RevA_SetTXThreshold>

100127d8 <MXC_I2C_AsyncHandler>:
    MXC_I2C_RevA_AbortAsync((mxc_i2c_reva_regs_t *)i2c);
}

void MXC_I2C_AsyncHandler(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_AsyncHandler((mxc_i2c_reva_regs_t *)i2c, interruptCheck);
100127d8:	4b01      	ldr	r3, [pc, #4]	@ (100127e0 <MXC_I2C_AsyncHandler+0x8>)
100127da:	6819      	ldr	r1, [r3, #0]
100127dc:	f000 be08 	b.w	100133f0 <MXC_I2C_RevA_AsyncHandler>
100127e0:	2000000c 	.word	0x2000000c

100127e4 <MXC_I2C_RevA_Init>:

/* ************************************************************************* */
/* Control/Configuration functions                                           */
/* ************************************************************************* */
int MXC_I2C_RevA_Init(mxc_i2c_reva_regs_t *i2c, int masterMode, unsigned int slaveAddr)
{
100127e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int err;

    if (i2c == NULL) {
100127e6:	2800      	cmp	r0, #0
100127e8:	d057      	beq.n	1001289a <MXC_I2C_RevA_Init+0xb6>
        return E_NULL_PTR;
    }

    if ((err = MXC_I2C_Recover((mxc_i2c_regs_t *)i2c, 16)) != E_NO_ERROR) {
100127ea:	460f      	mov	r7, r1
100127ec:	2110      	movs	r1, #16
100127ee:	4615      	mov	r5, r2
100127f0:	4604      	mov	r4, r0
100127f2:	f7ff ffe9 	bl	100127c8 <MXC_I2C_Recover>
100127f6:	4606      	mov	r6, r0
100127f8:	b108      	cbz	r0, 100127fe <MXC_I2C_RevA_Init+0x1a>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
    }

    return E_NO_ERROR;
}
100127fa:	4630      	mov	r0, r6
100127fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
100127fe:	6823      	ldr	r3, [r4, #0]
10012800:	f043 0301 	orr.w	r3, r3, #1
10012804:	6023      	str	r3, [r4, #0]
    MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
10012806:	4620      	mov	r0, r4
10012808:	f7ff ffd8 	bl	100127bc <MXC_I2C_ClearRXFIFO>
    MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
1001280c:	4620      	mov	r0, r4
1001280e:	f7ff ffd7 	bl	100127c0 <MXC_I2C_ClearTXFIFO>
    MXC_I2C_SetTXThreshold((mxc_i2c_regs_t *)i2c, 2); // set TX threshold to 2 bytes
10012812:	2102      	movs	r1, #2
10012814:	4620      	mov	r0, r4
10012816:	f7ff ffdd 	bl	100127d4 <MXC_I2C_SetTXThreshold>
    MXC_I2C_SetRXThreshold((mxc_i2c_regs_t *)i2c, 6); // set RX threshold to 6 bytes
1001281a:	2106      	movs	r1, #6
1001281c:	4620      	mov	r0, r4
1001281e:	f7ff ffd7 	bl	100127d0 <MXC_I2C_SetRXThreshold>
    if (!masterMode) {
10012822:	b1df      	cbz	r7, 1001285c <MXC_I2C_RevA_Init+0x78>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
10012824:	6823      	ldr	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10012826:	4a1e      	ldr	r2, [pc, #120]	@ (100128a0 <MXC_I2C_RevA_Init+0xbc>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
10012828:	f043 0302 	orr.w	r3, r3, #2
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1001282c:	4294      	cmp	r4, r2
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
1001282e:	6023      	str	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10012830:	d02f      	beq.n	10012892 <MXC_I2C_RevA_Init+0xae>
10012832:	4b1c      	ldr	r3, [pc, #112]	@ (100128a4 <MXC_I2C_RevA_Init+0xc0>)
10012834:	429c      	cmp	r4, r3
10012836:	d00f      	beq.n	10012858 <MXC_I2C_RevA_Init+0x74>
10012838:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001283c:	429c      	cmp	r4, r3
1001283e:	bf14      	ite	ne
10012840:	f04f 34ff 	movne.w	r4, #4294967295	@ 0xffffffff
10012844:	2402      	moveq	r4, #2
10012846:	4b18      	ldr	r3, [pc, #96]	@ (100128a8 <MXC_I2C_RevA_Init+0xc4>)
10012848:	eb04 0444 	add.w	r4, r4, r4, lsl #1
1001284c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
10012850:	2201      	movs	r2, #1
10012852:	605a      	str	r2, [r3, #4]
}
10012854:	4630      	mov	r0, r6
10012856:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10012858:	2401      	movs	r4, #1
1001285a:	e7f4      	b.n	10012846 <MXC_I2C_RevA_Init+0x62>
        MXC_I2C_SetSlaveAddr((mxc_i2c_regs_t *)i2c, slaveAddr, 0);
1001285c:	463a      	mov	r2, r7
1001285e:	4629      	mov	r1, r5
10012860:	4620      	mov	r0, r4
10012862:	f7ff ff29 	bl	100126b8 <MXC_I2C_SetSlaveAddr>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
10012866:	4b0e      	ldr	r3, [pc, #56]	@ (100128a0 <MXC_I2C_RevA_Init+0xbc>)
10012868:	429c      	cmp	r4, r3
1001286a:	d009      	beq.n	10012880 <MXC_I2C_RevA_Init+0x9c>
1001286c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012870:	429c      	cmp	r4, r3
10012872:	d010      	beq.n	10012896 <MXC_I2C_RevA_Init+0xb2>
10012874:	4f0d      	ldr	r7, [pc, #52]	@ (100128ac <MXC_I2C_RevA_Init+0xc8>)
10012876:	42bc      	cmp	r4, r7
10012878:	bf14      	ite	ne
1001287a:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
1001287e:	2702      	moveq	r7, #2
10012880:	4b09      	ldr	r3, [pc, #36]	@ (100128a8 <MXC_I2C_RevA_Init+0xc4>)
10012882:	eb07 0147 	add.w	r1, r7, r7, lsl #1
10012886:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
1001288a:	2200      	movs	r2, #0
1001288c:	605a      	str	r2, [r3, #4]
}
1001288e:	4630      	mov	r0, r6
10012890:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10012892:	4634      	mov	r4, r6
10012894:	e7d7      	b.n	10012846 <MXC_I2C_RevA_Init+0x62>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
10012896:	2701      	movs	r7, #1
10012898:	e7f2      	b.n	10012880 <MXC_I2C_RevA_Init+0x9c>
        return E_NULL_PTR;
1001289a:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
1001289e:	e7ac      	b.n	100127fa <MXC_I2C_RevA_Init+0x16>
100128a0:	4001d000 	.word	0x4001d000
100128a4:	4001e000 	.word	0x4001e000
100128a8:	20001008 	.word	0x20001008
100128ac:	4001f000 	.word	0x4001f000

100128b0 <MXC_I2C_RevA_SetSlaveAddr>:

int MXC_I2C_RevA_SetSlaveAddr(mxc_i2c_reva_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    if (i2c == NULL) {
100128b0:	4603      	mov	r3, r0
100128b2:	b1a0      	cbz	r0, 100128de <MXC_I2C_RevA_SetSlaveAddr+0x2e>
        return E_NULL_PTR;
    }

    if (idx != 0) {
100128b4:	b96a      	cbnz	r2, 100128d2 <MXC_I2C_RevA_SetSlaveAddr+0x22>
        // Multiple slaves are not supported yet
        return E_NOT_SUPPORTED;
    }

    if (slaveAddr > MXC_F_I2C_REVA_SLAVE_ADDR) {
100128b6:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
100128ba:	d20d      	bcs.n	100128d8 <MXC_I2C_RevA_SetSlaveAddr+0x28>
        return E_BAD_PARAM;
    }

    i2c->slave = 0;

    if (slaveAddr > MXC_I2C_REVA_MAX_ADDR_WIDTH) {
100128bc:	297f      	cmp	r1, #127	@ 0x7f
    i2c->slave = 0;
100128be:	64c2      	str	r2, [r0, #76]	@ 0x4c
        // Set for 10bit addressing mode
        i2c->slave = MXC_F_I2C_REVA_SLAVE_EXT_ADDR_EN;
100128c0:	bf84      	itt	hi
100128c2:	f44f 4200 	movhi.w	r2, #32768	@ 0x8000
100128c6:	64c2      	strhi	r2, [r0, #76]	@ 0x4c
    }

    i2c->slave |= slaveAddr;
100128c8:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
100128ca:	430a      	orrs	r2, r1

    return E_NO_ERROR;
100128cc:	2000      	movs	r0, #0
    i2c->slave |= slaveAddr;
100128ce:	64da      	str	r2, [r3, #76]	@ 0x4c
    return E_NO_ERROR;
100128d0:	4770      	bx	lr
        return E_NOT_SUPPORTED;
100128d2:	f06f 0010 	mvn.w	r0, #16
100128d6:	4770      	bx	lr
        return E_BAD_PARAM;
100128d8:	f06f 0002 	mvn.w	r0, #2
}
100128dc:	4770      	bx	lr
        return E_NULL_PTR;
100128de:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100128e2:	4770      	bx	lr

100128e4 <MXC_I2C_RevA_SetFrequency>:

int MXC_I2C_RevA_SetFrequency(mxc_i2c_reva_regs_t *i2c, unsigned int hz)
{
    unsigned int ticksTotal, hiClks, lowClks;

    if (i2c == NULL) {
100128e4:	2800      	cmp	r0, #0
100128e6:	d03f      	beq.n	10012968 <MXC_I2C_RevA_SetFrequency+0x84>
{
100128e8:	b410      	push	{r4}
        return E_NULL_PTR;
    }

    if (hz > MXC_I2C_REVA_FASTPLUS_SPEED && hz <= MXC_I2C_REVA_HIGH_SPEED) {
100128ea:	4a21      	ldr	r2, [pc, #132]	@ (10012970 <MXC_I2C_RevA_SetFrequency+0x8c>)
100128ec:	f5a1 2374 	sub.w	r3, r1, #999424	@ 0xf4000
100128f0:	f46f 7410 	mvn.w	r4, #576	@ 0x240
100128f4:	4423      	add	r3, r4
100128f6:	4293      	cmp	r3, r2
100128f8:	d313      	bcc.n	10012922 <MXC_I2C_RevA_SetFrequency+0x3e>

        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;

        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz

    } else if (hz > MXC_I2C_REVA_HIGH_SPEED) {
100128fa:	4b1e      	ldr	r3, [pc, #120]	@ (10012974 <MXC_I2C_RevA_SetFrequency+0x90>)
100128fc:	4299      	cmp	r1, r3
100128fe:	d82f      	bhi.n	10012960 <MXC_I2C_RevA_SetFrequency+0x7c>
        ticksTotal = PeripheralClock / hz;
10012900:	4b1d      	ldr	r3, [pc, #116]	@ (10012978 <MXC_I2C_RevA_SetFrequency+0x94>)
        return E_BAD_PARAM;
    }

    // Calculate the period of SCL, 50% duty cycle
    ticksTotal = PeripheralClock / hz;
10012902:	681b      	ldr	r3, [r3, #0]
10012904:	085b      	lsrs	r3, r3, #1
10012906:	fbb3 f3f1 	udiv	r3, r3, r1
    hiClks = (ticksTotal >> 1) - 1;
1001290a:	085b      	lsrs	r3, r3, #1
    if (ticksTotal % 1) {
        hiClks++;
    }

    // Check for maximum/minimum supported speeds
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
1001290c:	1e9a      	subs	r2, r3, #2
1001290e:	f5b2 7fff 	cmp.w	r2, #510	@ 0x1fe
    hiClks = (ticksTotal >> 1) - 1;
10012912:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
10012916:	d823      	bhi.n	10012960 <MXC_I2C_RevA_SetFrequency+0x7c>
        return E_BAD_PARAM;
    }

    i2c->clklo = lowClks & MXC_F_I2C_REVA_CLKLO_LO;
10012918:	6343      	str	r3, [r0, #52]	@ 0x34
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;

    // Return the actual speed set, since it won't be exactly what's requested
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
}
1001291a:	bc10      	pop	{r4}
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;
1001291c:	6383      	str	r3, [r0, #56]	@ 0x38
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
1001291e:	f7ff bf43 	b.w	100127a8 <MXC_I2C_GetFrequency>
        ticksTotal = PeripheralClock / hz;
10012922:	4b15      	ldr	r3, [pc, #84]	@ (10012978 <MXC_I2C_RevA_SetFrequency+0x94>)
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10012924:	4c15      	ldr	r4, [pc, #84]	@ (1001297c <MXC_I2C_RevA_SetFrequency+0x98>)
        ticksTotal = PeripheralClock / hz;
10012926:	681b      	ldr	r3, [r3, #0]
10012928:	085b      	lsrs	r3, r3, #1
1001292a:	fbb3 f1f1 	udiv	r1, r3, r1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1001292e:	004a      	lsls	r2, r1, #1
        hsHiClks = ticksTotal / 3 - 1;
10012930:	fba4 c101 	umull	ip, r1, r4, r1
10012934:	0849      	lsrs	r1, r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10012936:	fba4 4202 	umull	r4, r2, r4, r2
        hsHiClks = ticksTotal / 3 - 1;
1001293a:	3901      	subs	r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1001293c:	0852      	lsrs	r2, r2, #1
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
1001293e:	290f      	cmp	r1, #15
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10012940:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
10012944:	dc0c      	bgt.n	10012960 <MXC_I2C_RevA_SetFrequency+0x7c>
10012946:	2a0f      	cmp	r2, #15
10012948:	dc0a      	bgt.n	10012960 <MXC_I2C_RevA_SetFrequency+0x7c>
        hsHiClks = (hsHiClks << MXC_F_I2C_REVA_HSCLK_HI_POS) & MXC_F_I2C_REVA_HSCLK_HI;
1001294a:	0209      	lsls	r1, r1, #8
1001294c:	b289      	uxth	r1, r1
        i2c->hsclk = (hsLowClks | hsHiClks);
1001294e:	b2d2      	uxtb	r2, r2
10012950:	430a      	orrs	r2, r1
10012952:	63c2      	str	r2, [r0, #60]	@ 0x3c
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
10012954:	6802      	ldr	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
10012956:	490a      	ldr	r1, [pc, #40]	@ (10012980 <MXC_I2C_RevA_SetFrequency+0x9c>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
10012958:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
1001295c:	6002      	str	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
1001295e:	e7d2      	b.n	10012906 <MXC_I2C_RevA_SetFrequency+0x22>
            return E_BAD_PARAM;
10012960:	f06f 0002 	mvn.w	r0, #2
}
10012964:	bc10      	pop	{r4}
10012966:	4770      	bx	lr
        return E_NULL_PTR;
10012968:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1001296c:	4770      	bx	lr
1001296e:	bf00      	nop
10012970:	00249f00 	.word	0x00249f00
10012974:	0033e140 	.word	0x0033e140
10012978:	20001768 	.word	0x20001768
1001297c:	aaaaaaab 	.word	0xaaaaaaab
10012980:	00061a80 	.word	0x00061a80

10012984 <MXC_I2C_RevA_GetFrequency>:
    unsigned int sclCycles = 0;

    // Calculate the speed based on what we've written into registers
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);

    return PeripheralClock / sclCycles;
10012984:	4906      	ldr	r1, [pc, #24]	@ (100129a0 <MXC_I2C_RevA_GetFrequency+0x1c>)
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
10012986:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10012988:	6b82      	ldr	r2, [r0, #56]	@ 0x38
    return PeripheralClock / sclCycles;
1001298a:	6808      	ldr	r0, [r1, #0]
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
1001298c:	f3c2 0208 	ubfx	r2, r2, #0, #9
10012990:	f3c3 0308 	ubfx	r3, r3, #0, #9
10012994:	4413      	add	r3, r2
    return PeripheralClock / sclCycles;
10012996:	0840      	lsrs	r0, r0, #1
}
10012998:	fbb0 f0f3 	udiv	r0, r0, r3
1001299c:	4770      	bx	lr
1001299e:	bf00      	nop
100129a0:	20001768 	.word	0x20001768

100129a4 <MXC_I2C_RevA_Start>:
/* ************************************************************************* */
/* Low-level functions                                                       */
/* ************************************************************************* */
int MXC_I2C_RevA_Start(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
100129a4:	b170      	cbz	r0, 100129c4 <MXC_I2C_RevA_Start+0x20>
        return E_NULL_PTR;
    }

    // If we have an incomplete transfer, we need to do a restart
    if (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_START) {
100129a6:	6b03      	ldr	r3, [r0, #48]	@ 0x30
100129a8:	f013 0f01 	tst.w	r3, #1
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
100129ac:	6b03      	ldr	r3, [r0, #48]	@ 0x30
    if (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_START) {
100129ae:	d104      	bne.n	100129ba <MXC_I2C_RevA_Start+0x16>
    } else {
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_START; // No check for start generation
100129b0:	f043 0301 	orr.w	r3, r3, #1
100129b4:	6303      	str	r3, [r0, #48]	@ 0x30
    }

    return E_NO_ERROR;
100129b6:	2000      	movs	r0, #0
100129b8:	4770      	bx	lr
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
100129ba:	f043 0302 	orr.w	r3, r3, #2
100129be:	6303      	str	r3, [r0, #48]	@ 0x30
    return E_NO_ERROR;
100129c0:	2000      	movs	r0, #0
100129c2:	4770      	bx	lr
        return E_NULL_PTR;
100129c4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
100129c8:	4770      	bx	lr
100129ca:	bf00      	nop

100129cc <MXC_I2C_RevA_Stop>:

int MXC_I2C_RevA_Stop(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
100129cc:	b148      	cbz	r0, 100129e2 <MXC_I2C_RevA_Stop+0x16>
        return E_NULL_PTR;
    }

    i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
100129ce:	6b03      	ldr	r3, [r0, #48]	@ 0x30
100129d0:	f043 0304 	orr.w	r3, r3, #4
100129d4:	6303      	str	r3, [r0, #48]	@ 0x30

    while (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_STOP) {}
100129d6:	6b03      	ldr	r3, [r0, #48]	@ 0x30
100129d8:	f013 0304 	ands.w	r3, r3, #4
100129dc:	d1fb      	bne.n	100129d6 <MXC_I2C_RevA_Stop+0xa>

    return E_NO_ERROR;
100129de:	4618      	mov	r0, r3
100129e0:	4770      	bx	lr
        return E_NULL_PTR;
100129e2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
100129e6:	4770      	bx	lr

100129e8 <MXC_I2C_RevA_ReadRXFIFO>:
int MXC_I2C_RevA_ReadRXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                            unsigned int len)
{
    unsigned read = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
100129e8:	b1c8      	cbz	r0, 10012a1e <MXC_I2C_RevA_ReadRXFIFO+0x36>
100129ea:	b1c1      	cbz	r1, 10012a1e <MXC_I2C_RevA_ReadRXFIFO+0x36>
        return E_NULL_PTR;
    }

    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
100129ec:	b1aa      	cbz	r2, 10012a1a <MXC_I2C_RevA_ReadRXFIFO+0x32>
{
100129ee:	b500      	push	{lr}
    unsigned read = 0;
100129f0:	2300      	movs	r3, #0
        bytes[read++] = i2c->fifo;
100129f2:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
100129f6:	e007      	b.n	10012a08 <MXC_I2C_RevA_ReadRXFIFO+0x20>
100129f8:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
100129fa:	3301      	adds	r3, #1
100129fc:	fa5f fc81 	uxtb.w	ip, r1
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10012a00:	429a      	cmp	r2, r3
        bytes[read++] = i2c->fifo;
10012a02:	f80e c003 	strb.w	ip, [lr, r3]
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10012a06:	d005      	beq.n	10012a14 <MXC_I2C_RevA_ReadRXFIFO+0x2c>
10012a08:	6841      	ldr	r1, [r0, #4]
10012a0a:	0789      	lsls	r1, r1, #30
10012a0c:	d5f4      	bpl.n	100129f8 <MXC_I2C_RevA_ReadRXFIFO+0x10>
    }

    return read;
10012a0e:	4618      	mov	r0, r3
}
10012a10:	f85d fb04 	ldr.w	pc, [sp], #4
    return read;
10012a14:	4610      	mov	r0, r2
}
10012a16:	f85d fb04 	ldr.w	pc, [sp], #4
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10012a1a:	4610      	mov	r0, r2
10012a1c:	4770      	bx	lr
        return E_NULL_PTR;
10012a1e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10012a22:	4770      	bx	lr

10012a24 <MXC_I2C_RevA_WriteTXFIFO>:
int MXC_I2C_RevA_WriteTXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                             unsigned int len)
{
    unsigned written = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
10012a24:	b198      	cbz	r0, 10012a4e <MXC_I2C_RevA_WriteTXFIFO+0x2a>
10012a26:	b191      	cbz	r1, 10012a4e <MXC_I2C_RevA_WriteTXFIFO+0x2a>
        return E_NULL_PTR;
    }

    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
10012a28:	b17a      	cbz	r2, 10012a4a <MXC_I2C_RevA_WriteTXFIFO+0x26>
    unsigned written = 0;
10012a2a:	2300      	movs	r3, #0
        i2c->fifo = bytes[written++];
10012a2c:	f101 3cff 	add.w	ip, r1, #4294967295	@ 0xffffffff
10012a30:	e006      	b.n	10012a40 <MXC_I2C_RevA_WriteTXFIFO+0x1c>
10012a32:	3301      	adds	r3, #1
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
10012a34:	429a      	cmp	r2, r3
        i2c->fifo = bytes[written++];
10012a36:	f81c 1003 	ldrb.w	r1, [ip, r3]
10012a3a:	b2c9      	uxtb	r1, r1
10012a3c:	62c1      	str	r1, [r0, #44]	@ 0x2c
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
10012a3e:	d004      	beq.n	10012a4a <MXC_I2C_RevA_WriteTXFIFO+0x26>
10012a40:	6841      	ldr	r1, [r0, #4]
10012a42:	06c9      	lsls	r1, r1, #27
10012a44:	d5f5      	bpl.n	10012a32 <MXC_I2C_RevA_WriteTXFIFO+0xe>
    }

    return written;
10012a46:	4618      	mov	r0, r3
10012a48:	4770      	bx	lr
10012a4a:	4610      	mov	r0, r2
10012a4c:	4770      	bx	lr
        return E_NULL_PTR;
10012a4e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10012a52:	4770      	bx	lr

10012a54 <MXC_I2C_RevA_ClearRXFIFO>:
           ((i2c->txctrl1 & MXC_F_I2C_REVA_TXCTRL1_LVL) >> MXC_F_I2C_REVA_TXCTRL1_LVL_POS);
}

void MXC_I2C_RevA_ClearRXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->rxctrl0 |= MXC_F_I2C_REVA_RXCTRL0_FLUSH;
10012a54:	69c3      	ldr	r3, [r0, #28]
10012a56:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10012a5a:	61c3      	str	r3, [r0, #28]

    while (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_FLUSH) {}
10012a5c:	69c3      	ldr	r3, [r0, #28]
10012a5e:	061b      	lsls	r3, r3, #24
10012a60:	d4fc      	bmi.n	10012a5c <MXC_I2C_RevA_ClearRXFIFO+0x8>
}
10012a62:	4770      	bx	lr

10012a64 <MXC_I2C_RevA_ClearTXFIFO>:

void MXC_I2C_RevA_ClearTXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->txctrl0 |= MXC_F_I2C_REVA_TXCTRL0_FLUSH;
10012a64:	6a43      	ldr	r3, [r0, #36]	@ 0x24
10012a66:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10012a6a:	6243      	str	r3, [r0, #36]	@ 0x24

    while (i2c->txctrl0 & MXC_F_I2C_REVA_TXCTRL0_FLUSH) {}
10012a6c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
10012a6e:	061b      	lsls	r3, r3, #24
10012a70:	d4fc      	bmi.n	10012a6c <MXC_I2C_RevA_ClearTXFIFO+0x8>
}
10012a72:	4770      	bx	lr

10012a74 <MXC_I2C_RevA_ClearFlags>:
    return E_NO_ERROR;
}

void MXC_I2C_RevA_ClearFlags(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->intfl0 = flags0;
10012a74:	6081      	str	r1, [r0, #8]
    i2c->intfl1 = flags1;
10012a76:	6102      	str	r2, [r0, #16]
}
10012a78:	4770      	bx	lr
10012a7a:	bf00      	nop

10012a7c <MXC_I2C_RevA_Recover>:
int MXC_I2C_RevA_Recover(mxc_i2c_reva_regs_t *i2c, unsigned int retries)
{
    int err;
    unsigned int i;

    if (i2c == NULL) {
10012a7c:	2800      	cmp	r0, #0
10012a7e:	d065      	beq.n	10012b4c <MXC_I2C_RevA_Recover+0xd0>
        return E_NULL_PTR;
    }

    err = E_COMM_ERR;

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
10012a80:	6803      	ldr	r3, [r0, #0]
10012a82:	f043 0301 	orr.w	r3, r3, #1
{
10012a86:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
10012a8a:	6003      	str	r3, [r0, #0]
    int swBit = i2c->ctrl & MXC_F_I2C_REVA_CTRL_BB_MODE;
10012a8c:	6807      	ldr	r7, [r0, #0]

    if (i2c == NULL) {
        return E_NULL_PTR;
    }

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_BB_MODE;
10012a8e:	6803      	ldr	r3, [r0, #0]
10012a90:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
10012a94:	460e      	mov	r6, r1
10012a96:	4604      	mov	r4, r0
10012a98:	f407 6780 	and.w	r7, r7, #1024	@ 0x400
10012a9c:	6003      	str	r3, [r0, #0]

    // Follow the procedure detailed in the header file
    // Delay 10uS between each step to give the line/slaves time to react
    for (i = 0; i < retries; i++) {
10012a9e:	2900      	cmp	r1, #0
10012aa0:	d043      	beq.n	10012b2a <MXC_I2C_RevA_Recover+0xae>
10012aa2:	2500      	movs	r5, #0
10012aa4:	e02b      	b.n	10012afe <MXC_I2C_RevA_Recover+0x82>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10012aa6:	f7ff faad 	bl	10012004 <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SDA_OUT;
10012aaa:	6823      	ldr	r3, [r4, #0]
10012aac:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10012ab0:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10012ab2:	200a      	movs	r0, #10
10012ab4:	f7ff faa6 	bl	10012004 <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
10012ab8:	6823      	ldr	r3, [r4, #0]
10012aba:	f413 7800 	ands.w	r8, r3, #512	@ 0x200
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10012abe:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
10012ac2:	d12b      	bne.n	10012b1c <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
10012ac4:	f7ff fa9e 	bl	10012004 <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SDA_OUT;
10012ac8:	6823      	ldr	r3, [r4, #0]
10012aca:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10012ace:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10012ad0:	200a      	movs	r0, #10
10012ad2:	f7ff fa97 	bl	10012004 <MXC_Delay>

        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
10012ad6:	6823      	ldr	r3, [r4, #0]
10012ad8:	059a      	lsls	r2, r3, #22
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10012ada:	f04f 000a 	mov.w	r0, #10
        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
10012ade:	d51d      	bpl.n	10012b1c <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
10012ae0:	f7ff fa90 	bl	10012004 <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT;
10012ae4:	6823      	ldr	r3, [r4, #0]
10012ae6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10012aea:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10012aec:	200a      	movs	r0, #10
10012aee:	f7ff fa89 	bl	10012004 <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10012af2:	6823      	ldr	r3, [r4, #0]
10012af4:	05db      	lsls	r3, r3, #23
10012af6:	d425      	bmi.n	10012b44 <MXC_I2C_RevA_Recover+0xc8>
    for (i = 0; i < retries; i++) {
10012af8:	3501      	adds	r5, #1
10012afa:	42ae      	cmp	r6, r5
10012afc:	d015      	beq.n	10012b2a <MXC_I2C_RevA_Recover+0xae>
        MXC_Delay(10);
10012afe:	200a      	movs	r0, #10
10012b00:	f7ff fa80 	bl	10012004 <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SCL_OUT;
10012b04:	6823      	ldr	r3, [r4, #0]
10012b06:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
10012b0a:	6023      	str	r3, [r4, #0]
        MXC_Delay(10);
10012b0c:	200a      	movs	r0, #10
10012b0e:	f7ff fa79 	bl	10012004 <MXC_Delay>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10012b12:	6823      	ldr	r3, [r4, #0]
10012b14:	05d9      	lsls	r1, r3, #23
        MXC_Delay(10);
10012b16:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10012b1a:	d5c4      	bpl.n	10012aa6 <MXC_I2C_RevA_Recover+0x2a>
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10012b1c:	6823      	ldr	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
10012b1e:	3501      	adds	r5, #1
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10012b20:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
    for (i = 0; i < retries; i++) {
10012b24:	42ae      	cmp	r6, r5
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10012b26:	6023      	str	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
10012b28:	d1e9      	bne.n	10012afe <MXC_I2C_RevA_Recover+0x82>
    err = E_COMM_ERR;
10012b2a:	f06f 0008 	mvn.w	r0, #8
            err = E_NO_ERROR; // We have control
            break;
        }
    }

    if (swBit == 0) {
10012b2e:	b91f      	cbnz	r7, 10012b38 <MXC_I2C_RevA_Recover+0xbc>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_BB_MODE;
10012b30:	6823      	ldr	r3, [r4, #0]
10012b32:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
10012b36:	6023      	str	r3, [r4, #0]
    }

    i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_EN;
10012b38:	6823      	ldr	r3, [r4, #0]
10012b3a:	f023 0301 	bic.w	r3, r3, #1
10012b3e:	6023      	str	r3, [r4, #0]

    return err;
}
10012b40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            err = E_NO_ERROR; // We have control
10012b44:	4640      	mov	r0, r8
    if (swBit == 0) {
10012b46:	2f00      	cmp	r7, #0
10012b48:	d1f6      	bne.n	10012b38 <MXC_I2C_RevA_Recover+0xbc>
10012b4a:	e7f1      	b.n	10012b30 <MXC_I2C_RevA_Recover+0xb4>
        return E_NULL_PTR;
10012b4c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10012b50:	4770      	bx	lr
10012b52:	bf00      	nop

10012b54 <MXC_I2C_RevA_MasterTransaction>:
/* ************************************************************************* */
/* Transaction level functions                                               */
/* ************************************************************************* */

int MXC_I2C_RevA_MasterTransaction(mxc_i2c_reva_req_t *req)
{
10012b54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    mxc_i2c_reva_regs_t *i2c = req->i2c; // Save off pointer for faster access
10012b58:	e9d0 4300 	ldrd	r4, r3, [r0]
    unsigned int written = 0;
    unsigned int read = 0;

    if (req->addr > MXC_I2C_REVA_MAX_ADDR_WIDTH) {
10012b5c:	2b7f      	cmp	r3, #127	@ 0x7f
10012b5e:	f200 80c3 	bhi.w	10012ce8 <MXC_I2C_RevA_MasterTransaction+0x194>
        return E_NOT_SUPPORTED;
    }

    if (MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c) < 0) {
10012b62:	4b63      	ldr	r3, [pc, #396]	@ (10012cf0 <MXC_I2C_RevA_MasterTransaction+0x19c>)
10012b64:	429c      	cmp	r4, r3
10012b66:	4605      	mov	r5, r0
10012b68:	d008      	beq.n	10012b7c <MXC_I2C_RevA_MasterTransaction+0x28>
10012b6a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012b6e:	429c      	cmp	r4, r3
10012b70:	d004      	beq.n	10012b7c <MXC_I2C_RevA_MasterTransaction+0x28>
10012b72:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012b76:	429c      	cmp	r4, r3
10012b78:	f040 80b0 	bne.w	10012cdc <MXC_I2C_RevA_MasterTransaction+0x188>
        return E_BAD_PARAM;
    }

    if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_MST_MODE)) {
10012b7c:	6823      	ldr	r3, [r4, #0]
10012b7e:	079e      	lsls	r6, r3, #30
10012b80:	f140 80af 	bpl.w	10012ce2 <MXC_I2C_RevA_MasterTransaction+0x18e>
    //  send addr w/ read bit
    //  read rx_len bytes acking all
    // stop or restart
    // return good or error

    MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c, MXC_I2C_REVA_INTFL0_MASK,
10012b84:	2207      	movs	r2, #7
10012b86:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
10012b8a:	4620      	mov	r0, r4
10012b8c:	f7ff fe1a 	bl	100127c4 <MXC_I2C_ClearFlags>
                       MXC_I2C_REVA_INTFL1_MASK); // Clear all I2C Interrupts
    MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
10012b90:	4620      	mov	r0, r4
10012b92:	f7ff fe15 	bl	100127c0 <MXC_I2C_ClearTXFIFO>
    MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
10012b96:	4620      	mov	r0, r4
10012b98:	f7ff fe10 	bl	100127bc <MXC_I2C_ClearRXFIFO>
    i2c->inten0 = 0;
    i2c->inten1 = 0;

    if ((req->rx_len == 0) || (req->tx_len != 0)) {
10012b9c:	696a      	ldr	r2, [r5, #20]
    i2c->inten0 = 0;
10012b9e:	2300      	movs	r3, #0
10012ba0:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10012ba2:	6163      	str	r3, [r4, #20]
    if ((req->rx_len == 0) || (req->tx_len != 0)) {
10012ba4:	bb42      	cbnz	r2, 10012bf8 <MXC_I2C_RevA_MasterTransaction+0xa4>
10012ba6:	68ea      	ldr	r2, [r5, #12]
        // Load the slave address with write bit set
        i2c->fifo = (req->addr << 1) & ~0x1;
10012ba8:	686b      	ldr	r3, [r5, #4]
10012baa:	005b      	lsls	r3, r3, #1
10012bac:	62e3      	str	r3, [r4, #44]	@ 0x2c
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_START;
10012bae:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012bb0:	f043 0301 	orr.w	r3, r3, #1
10012bb4:	2600      	movs	r6, #0
10012bb6:	6323      	str	r3, [r4, #48]	@ 0x30

    while (req->tx_len > written) {
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
                                           req->tx_len - written);
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10012bb8:	2720      	movs	r7, #32
10012bba:	e004      	b.n	10012bc6 <MXC_I2C_RevA_MasterTransaction+0x72>
        }

        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012bbc:	68a3      	ldr	r3, [r4, #8]
10012bbe:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
10012bc2:	d111      	bne.n	10012be8 <MXC_I2C_RevA_MasterTransaction+0x94>
    while (req->tx_len > written) {
10012bc4:	68ea      	ldr	r2, [r5, #12]
10012bc6:	4296      	cmp	r6, r2
10012bc8:	d219      	bcs.n	10012bfe <MXC_I2C_RevA_MasterTransaction+0xaa>
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
10012bca:	68a3      	ldr	r3, [r4, #8]
10012bcc:	0698      	lsls	r0, r3, #26
10012bce:	d5f5      	bpl.n	10012bbc <MXC_I2C_RevA_MasterTransaction+0x68>
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
10012bd0:	68a9      	ldr	r1, [r5, #8]
10012bd2:	1b92      	subs	r2, r2, r6
10012bd4:	4431      	add	r1, r6
10012bd6:	4620      	mov	r0, r4
10012bd8:	f7ff fdee 	bl	100127b8 <MXC_I2C_WriteTXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10012bdc:	60a7      	str	r7, [r4, #8]
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012bde:	68a3      	ldr	r3, [r4, #8]
10012be0:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
10012be4:	4406      	add	r6, r0
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012be6:	d0ed      	beq.n	10012bc4 <MXC_I2C_RevA_MasterTransaction+0x70>
            req->tx_len = written;
10012be8:	60ee      	str	r6, [r5, #12]
            MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012bea:	4620      	mov	r0, r4
10012bec:	f7ff fde0 	bl	100127b0 <MXC_I2C_Stop>
            return E_COMM_ERR;
10012bf0:	f06f 0008 	mvn.w	r0, #8
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
        return E_COMM_ERR;
    }

    return E_NO_ERROR;
}
10012bf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((req->rx_len == 0) || (req->tx_len != 0)) {
10012bf8:	68ea      	ldr	r2, [r5, #12]
10012bfa:	2a00      	cmp	r2, #0
10012bfc:	d1d4      	bne.n	10012ba8 <MXC_I2C_RevA_MasterTransaction+0x54>
    MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c,
10012bfe:	2200      	movs	r2, #0
10012c00:	2111      	movs	r1, #17
10012c02:	4620      	mov	r0, r4
10012c04:	f7ff fdde 	bl	100127c4 <MXC_I2C_ClearFlags>
    if (req->rx_len != 0) {
10012c08:	696b      	ldr	r3, [r5, #20]
10012c0a:	2b00      	cmp	r3, #0
10012c0c:	d04a      	beq.n	10012ca4 <MXC_I2C_RevA_MasterTransaction+0x150>
        if (req->rx_len > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
10012c0e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
            i2c->rxctrl1 = 0;
10012c12:	bf88      	it	hi
10012c14:	2300      	movhi	r3, #0
            i2c->rxctrl1 = req->rx_len; // 0 for 256, otherwise number of bytes to read
10012c16:	6223      	str	r3, [r4, #32]
        MXC_I2C_Start((mxc_i2c_regs_t *)i2c); // Start or Restart as needed
10012c18:	4620      	mov	r0, r4
10012c1a:	f7ff fdc7 	bl	100127ac <MXC_I2C_Start>
        while (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_RESTART) {}
10012c1e:	6b26      	ldr	r6, [r4, #48]	@ 0x30
10012c20:	f016 0602 	ands.w	r6, r6, #2
10012c24:	d1fb      	bne.n	10012c1e <MXC_I2C_RevA_MasterTransaction+0xca>
        i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10012c26:	686b      	ldr	r3, [r5, #4]
    while (req->rx_len > read) {
10012c28:	696a      	ldr	r2, [r5, #20]
        i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10012c2a:	005b      	lsls	r3, r3, #1
10012c2c:	f043 0301 	orr.w	r3, r3, #1
10012c30:	62e3      	str	r3, [r4, #44]	@ 0x2c
    while (req->rx_len > read) {
10012c32:	2a00      	cmp	r2, #0
10012c34:	d036      	beq.n	10012ca4 <MXC_I2C_RevA_MasterTransaction+0x150>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10012c36:	2710      	movs	r7, #16
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
10012c38:	f04f 0801 	mov.w	r8, #1
10012c3c:	e01d      	b.n	10012c7a <MXC_I2C_RevA_MasterTransaction+0x126>
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012c3e:	68a3      	ldr	r3, [r4, #8]
10012c40:	f413 43fe 	ands.w	r3, r3, #32512	@ 0x7f00
10012c44:	d129      	bne.n	10012c9a <MXC_I2C_RevA_MasterTransaction+0x146>
        if ((i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE) && (req->rx_len < read)) {
10012c46:	68a1      	ldr	r1, [r4, #8]
10012c48:	696a      	ldr	r2, [r5, #20]
10012c4a:	07c9      	lsls	r1, r1, #31
10012c4c:	d513      	bpl.n	10012c76 <MXC_I2C_RevA_MasterTransaction+0x122>
10012c4e:	4296      	cmp	r6, r2
            if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
10012c50:	eba2 0106 	sub.w	r1, r2, r6
        if ((i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE) && (req->rx_len < read)) {
10012c54:	d90f      	bls.n	10012c76 <MXC_I2C_RevA_MasterTransaction+0x122>
            if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
10012c56:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
                i2c->rxctrl1 = 0;
10012c5a:	bf8c      	ite	hi
10012c5c:	6223      	strhi	r3, [r4, #32]
                i2c->rxctrl1 = (req->rx_len - read); // 0 for 256, otherwise number of bytes to read
10012c5e:	6221      	strls	r1, [r4, #32]
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10012c60:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012c62:	f043 0302 	orr.w	r3, r3, #2
10012c66:	6323      	str	r3, [r4, #48]	@ 0x30
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10012c68:	686b      	ldr	r3, [r5, #4]
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
10012c6a:	f8c4 8008 	str.w	r8, [r4, #8]
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10012c6e:	005b      	lsls	r3, r3, #1
10012c70:	f043 0301 	orr.w	r3, r3, #1
10012c74:	62e3      	str	r3, [r4, #44]	@ 0x2c
    while (req->rx_len > read) {
10012c76:	4296      	cmp	r6, r2
10012c78:	d214      	bcs.n	10012ca4 <MXC_I2C_RevA_MasterTransaction+0x150>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
10012c7a:	68a3      	ldr	r3, [r4, #8]
10012c7c:	f013 0f11 	tst.w	r3, #17
10012c80:	d0dd      	beq.n	10012c3e <MXC_I2C_RevA_MasterTransaction+0xea>
                MXC_I2C_ReadRXFIFO((mxc_i2c_regs_t *)i2c, &req->rx_buf[read], req->rx_len - read);
10012c82:	6929      	ldr	r1, [r5, #16]
10012c84:	1b92      	subs	r2, r2, r6
10012c86:	4431      	add	r1, r6
10012c88:	4620      	mov	r0, r4
10012c8a:	f7ff fd93 	bl	100127b4 <MXC_I2C_ReadRXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10012c8e:	60a7      	str	r7, [r4, #8]
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012c90:	68a3      	ldr	r3, [r4, #8]
10012c92:	f413 43fe 	ands.w	r3, r3, #32512	@ 0x7f00
            read +=
10012c96:	4406      	add	r6, r0
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012c98:	d0d5      	beq.n	10012c46 <MXC_I2C_RevA_MasterTransaction+0xf2>
            req->rx_len = read;
10012c9a:	616e      	str	r6, [r5, #20]
            MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012c9c:	4620      	mov	r0, r4
10012c9e:	f7ff fd87 	bl	100127b0 <MXC_I2C_Stop>
            return E_COMM_ERR;
10012ca2:	e7a5      	b.n	10012bf0 <MXC_I2C_RevA_MasterTransaction+0x9c>
    if (req->restart) {
10012ca4:	69ab      	ldr	r3, [r5, #24]
10012ca6:	b173      	cbz	r3, 10012cc6 <MXC_I2C_RevA_MasterTransaction+0x172>
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10012ca8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012caa:	f043 0302 	orr.w	r3, r3, #2
10012cae:	6323      	str	r3, [r4, #48]	@ 0x30
    while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {}
10012cb0:	68a3      	ldr	r3, [r4, #8]
10012cb2:	07db      	lsls	r3, r3, #31
10012cb4:	d5fc      	bpl.n	10012cb0 <MXC_I2C_RevA_MasterTransaction+0x15c>
    i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE | MXC_F_I2C_REVA_INTFL0_STOP;
10012cb6:	2341      	movs	r3, #65	@ 0x41
10012cb8:	60a3      	str	r3, [r4, #8]
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012cba:	68a0      	ldr	r0, [r4, #8]
10012cbc:	f410 40fe 	ands.w	r0, r0, #32512	@ 0x7f00
10012cc0:	d196      	bne.n	10012bf0 <MXC_I2C_RevA_MasterTransaction+0x9c>
}
10012cc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
10012cc6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012cc8:	f043 0304 	orr.w	r3, r3, #4
10012ccc:	6323      	str	r3, [r4, #48]	@ 0x30
        while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_STOP)) {}
10012cce:	68a3      	ldr	r3, [r4, #8]
10012cd0:	065a      	lsls	r2, r3, #25
10012cd2:	d5fc      	bpl.n	10012cce <MXC_I2C_RevA_MasterTransaction+0x17a>
    while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {}
10012cd4:	68a3      	ldr	r3, [r4, #8]
10012cd6:	07db      	lsls	r3, r3, #31
10012cd8:	d5ea      	bpl.n	10012cb0 <MXC_I2C_RevA_MasterTransaction+0x15c>
10012cda:	e7ec      	b.n	10012cb6 <MXC_I2C_RevA_MasterTransaction+0x162>
        return E_BAD_PARAM;
10012cdc:	f06f 0002 	mvn.w	r0, #2
10012ce0:	e7ef      	b.n	10012cc2 <MXC_I2C_RevA_MasterTransaction+0x16e>
        return E_BAD_STATE;
10012ce2:	f06f 0006 	mvn.w	r0, #6
10012ce6:	e7ec      	b.n	10012cc2 <MXC_I2C_RevA_MasterTransaction+0x16e>
        return E_NOT_SUPPORTED;
10012ce8:	f06f 0010 	mvn.w	r0, #16
10012cec:	e7e9      	b.n	10012cc2 <MXC_I2C_RevA_MasterTransaction+0x16e>
10012cee:	bf00      	nop
10012cf0:	4001d000 	.word	0x4001d000

10012cf4 <MXC_I2C_RevA_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_SetRXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int rxFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH) >>
10012cf4:	6982      	ldr	r2, [r0, #24]
10012cf6:	b2d2      	uxtb	r2, r2
                             MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH_POS;

    if (numBytes > rxFIFOlen) {
10012cf8:	428a      	cmp	r2, r1
{
10012cfa:	4603      	mov	r3, r0
    if (numBytes > rxFIFOlen) {
10012cfc:	d307      	bcc.n	10012d0e <MXC_I2C_RevA_SetRXThreshold+0x1a>
        return E_BAD_PARAM;
    }

    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
10012cfe:	69c2      	ldr	r2, [r0, #28]
10012d00:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
10012d04:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
10012d08:	2000      	movs	r0, #0
    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
10012d0a:	61d9      	str	r1, [r3, #28]
    return E_NO_ERROR;
10012d0c:	4770      	bx	lr
        return E_BAD_PARAM;
10012d0e:	f06f 0002 	mvn.w	r0, #2
}
10012d12:	4770      	bx	lr

10012d14 <MXC_I2C_RevA_SetTXThreshold>:
    return (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_THD_LVL) >> MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS;
}

int MXC_I2C_RevA_SetTXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int txFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH) >>
10012d14:	6982      	ldr	r2, [r0, #24]
10012d16:	f3c2 2207 	ubfx	r2, r2, #8, #8
                             MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH_POS;

    if (numBytes > txFIFOlen) {
10012d1a:	428a      	cmp	r2, r1
{
10012d1c:	4603      	mov	r3, r0
    if (numBytes > txFIFOlen) {
10012d1e:	d307      	bcc.n	10012d30 <MXC_I2C_RevA_SetTXThreshold+0x1c>
        return E_BAD_PARAM;
    }

    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
10012d20:	6a42      	ldr	r2, [r0, #36]	@ 0x24
10012d22:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
10012d26:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_TXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
10012d2a:	2000      	movs	r0, #0
    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
10012d2c:	6259      	str	r1, [r3, #36]	@ 0x24
    return E_NO_ERROR;
10012d2e:	4770      	bx	lr
        return E_BAD_PARAM;
10012d30:	f06f 0002 	mvn.w	r0, #2
}
10012d34:	4770      	bx	lr
10012d36:	bf00      	nop

10012d38 <MXC_I2C_RevA_MasterAsyncHandler>:
    MXC_I2C_RevA_AsyncCallback(i2c, E_ABORT);
    MXC_I2C_RevA_AsyncStop(i2c);
}

void MXC_I2C_RevA_MasterAsyncHandler(int i2cNum)
{
10012d38:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    unsigned int written = AsyncWritten[i2cNum];
10012d3c:	f8df a298 	ldr.w	sl, [pc, #664]	@ 10012fd8 <MXC_I2C_RevA_MasterAsyncHandler+0x2a0>
    unsigned int read = AsyncRead[i2cNum];
10012d40:	f8df 9298 	ldr.w	r9, [pc, #664]	@ 10012fdc <MXC_I2C_RevA_MasterAsyncHandler+0x2a4>
    unsigned int written = AsyncWritten[i2cNum];
10012d44:	f85a 6020 	ldr.w	r6, [sl, r0, lsl #2]
    unsigned int read = AsyncRead[i2cNum];
10012d48:	f859 8020 	ldr.w	r8, [r9, r0, lsl #2]
{
10012d4c:	4605      	mov	r5, r0
    mxc_i2c_reva_regs_t *i2c = (mxc_i2c_reva_regs_t *)MXC_I2C_GET_BASE(i2cNum);
10012d4e:	b320      	cbz	r0, 10012d9a <MXC_I2C_RevA_MasterAsyncHandler+0x62>
10012d50:	2801      	cmp	r0, #1
10012d52:	f000 809c 	beq.w	10012e8e <MXC_I2C_RevA_MasterAsyncHandler+0x156>
10012d56:	4ca2      	ldr	r4, [pc, #648]	@ (10012fe0 <MXC_I2C_RevA_MasterAsyncHandler+0x2a8>)
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012d58:	f8df b288 	ldr.w	fp, [pc, #648]	@ 10012fe4 <MXC_I2C_RevA_MasterAsyncHandler+0x2ac>
    mxc_i2c_reva_regs_t *i2c = (mxc_i2c_reva_regs_t *)MXC_I2C_GET_BASE(i2cNum);
10012d5c:	2802      	cmp	r0, #2
10012d5e:	bf0c      	ite	eq
10012d60:	4623      	moveq	r3, r4
10012d62:	2300      	movne	r3, #0
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012d64:	f85b 7020 	ldr.w	r7, [fp, r0, lsl #2]

    /* Check for errors */
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012d68:	689b      	ldr	r3, [r3, #8]
10012d6a:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
10012d6e:	f040 80b2 	bne.w	10012ed6 <MXC_I2C_RevA_MasterAsyncHandler+0x19e>

        return;
    }

    /* Write data to the TX FIFO */
    if (req->tx_len > written) {
10012d72:	68fa      	ldr	r2, [r7, #12]
10012d74:	42b2      	cmp	r2, r6
10012d76:	4611      	mov	r1, r2
10012d78:	d82f      	bhi.n	10012dda <MXC_I2C_RevA_MasterAsyncHandler+0xa2>
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_DONE);
        }
    }

    /* Read data in the RX FIFO */
    if (req->rx_len > read) {
10012d7a:	697b      	ldr	r3, [r7, #20]
10012d7c:	4543      	cmp	r3, r8
10012d7e:	d946      	bls.n	10012e0e <MXC_I2C_RevA_MasterAsyncHandler+0xd6>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
10012d80:	68a1      	ldr	r1, [r4, #8]
10012d82:	f011 0f11 	tst.w	r1, #17
10012d86:	d137      	bne.n	10012df8 <MXC_I2C_RevA_MasterAsyncHandler+0xc0>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
        }
    }

    /* Done writing, still reading */
    if ((req->tx_len == written) && (req->rx_len - read) &&
10012d88:	42b2      	cmp	r2, r6
10012d8a:	f000 80eb 	beq.w	10012f64 <MXC_I2C_RevA_MasterAsyncHandler+0x22c>

        /* Clear the async state */
        MXC_I2C_RevA_AsyncStop(i2c);

    } else {
        AsyncWritten[i2cNum] = written;
10012d8e:	f84a 6025 	str.w	r6, [sl, r5, lsl #2]
        AsyncRead[i2cNum] = read;
10012d92:	f849 8025 	str.w	r8, [r9, r5, lsl #2]
    }
}
10012d96:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012d9a:	4c93      	ldr	r4, [pc, #588]	@ (10012fe8 <MXC_I2C_RevA_MasterAsyncHandler+0x2b0>)
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012d9c:	f8df b244 	ldr.w	fp, [pc, #580]	@ 10012fe4 <MXC_I2C_RevA_MasterAsyncHandler+0x2ac>
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012da0:	68a3      	ldr	r3, [r4, #8]
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012da2:	f8db 7000 	ldr.w	r7, [fp]
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012da6:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
10012daa:	d0e2      	beq.n	10012d72 <MXC_I2C_RevA_MasterAsyncHandler+0x3a>
        i2c->intfl0 = i2c->intfl0;
10012dac:	68a3      	ldr	r3, [r4, #8]
10012dae:	60a3      	str	r3, [r4, #8]
        i2c->intfl1 = i2c->intfl1;
10012db0:	6923      	ldr	r3, [r4, #16]
10012db2:	6123      	str	r3, [r4, #16]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012db4:	4620      	mov	r0, r4
        i2c->inten0 = 0;
10012db6:	60e5      	str	r5, [r4, #12]
        i2c->inten1 = 0;
10012db8:	6165      	str	r5, [r4, #20]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012dba:	f7ff fcf9 	bl	100127b0 <MXC_I2C_Stop>
    mxc_i2c_reva_req_t *req =
10012dbe:	f8db 0000 	ldr.w	r0, [fp]
    if (req->callback != NULL) {
10012dc2:	69c3      	ldr	r3, [r0, #28]
10012dc4:	b113      	cbz	r3, 10012dcc <MXC_I2C_RevA_MasterAsyncHandler+0x94>
        req->callback(req, retVal);
10012dc6:	f06f 0108 	mvn.w	r1, #8
10012dca:	4798      	blx	r3
    i2c->inten0 = 0;
10012dcc:	60e5      	str	r5, [r4, #12]
    i2c->inten1 = 0;
10012dce:	6165      	str	r5, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012dd0:	68a3      	ldr	r3, [r4, #8]
10012dd2:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012dd4:	6923      	ldr	r3, [r4, #16]
10012dd6:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012dd8:	e096      	b.n	10012f08 <MXC_I2C_RevA_MasterAsyncHandler+0x1d0>
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
10012dda:	68a3      	ldr	r3, [r4, #8]
10012ddc:	0699      	lsls	r1, r3, #26
10012dde:	f100 8098 	bmi.w	10012f12 <MXC_I2C_RevA_MasterAsyncHandler+0x1da>
            i2c->inten0 |= MXC_F_I2C_REVA_INTEN0_TX_THD;
10012de2:	68e3      	ldr	r3, [r4, #12]
10012de4:	f043 0320 	orr.w	r3, r3, #32
10012de8:	60e3      	str	r3, [r4, #12]
        if ((req->tx_len == written) && (req->rx_len)) {
10012dea:	697b      	ldr	r3, [r7, #20]
    if (req->rx_len > read) {
10012dec:	4598      	cmp	r8, r3
10012dee:	d2ce      	bcs.n	10012d8e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
10012df0:	68a1      	ldr	r1, [r4, #8]
10012df2:	f011 0f11 	tst.w	r1, #17
10012df6:	d0c7      	beq.n	10012d88 <MXC_I2C_RevA_MasterAsyncHandler+0x50>
                MXC_I2C_ReadRXFIFO((mxc_i2c_regs_t *)i2c, &req->rx_buf[read], req->rx_len - read);
10012df8:	6939      	ldr	r1, [r7, #16]
10012dfa:	eba3 0208 	sub.w	r2, r3, r8
10012dfe:	4441      	add	r1, r8
10012e00:	4620      	mov	r0, r4
10012e02:	f7ff fcd7 	bl	100127b4 <MXC_I2C_ReadRXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10012e06:	2310      	movs	r3, #16
    if ((req->tx_len == written) && (req->rx_len - read) &&
10012e08:	68f9      	ldr	r1, [r7, #12]
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10012e0a:	60a3      	str	r3, [r4, #8]
            read +=
10012e0c:	4480      	add	r8, r0
    if ((req->tx_len == written) && (req->rx_len - read) &&
10012e0e:	42b1      	cmp	r1, r6
10012e10:	d1bd      	bne.n	10012d8e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
10012e12:	697b      	ldr	r3, [r7, #20]
10012e14:	4543      	cmp	r3, r8
10012e16:	f040 80a5 	bne.w	10012f64 <MXC_I2C_RevA_MasterAsyncHandler+0x22c>
        i2c->inten0 = 0;
10012e1a:	2300      	movs	r3, #0
10012e1c:	60e3      	str	r3, [r4, #12]
        i2c->inten1 = 0;
10012e1e:	6163      	str	r3, [r4, #20]
        i2c->intfl0 = i2c->intfl0;
10012e20:	68a3      	ldr	r3, [r4, #8]
10012e22:	60a3      	str	r3, [r4, #8]
        if (req->restart) {
10012e24:	69bb      	ldr	r3, [r7, #24]
        i2c->intfl1 = i2c->intfl1;
10012e26:	6922      	ldr	r2, [r4, #16]
10012e28:	6122      	str	r2, [r4, #16]
        if (req->restart) {
10012e2a:	2b00      	cmp	r3, #0
10012e2c:	f040 80b3 	bne.w	10012f96 <MXC_I2C_RevA_MasterAsyncHandler+0x25e>
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
10012e30:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012e32:	f043 0304 	orr.w	r3, r3, #4
10012e36:	6323      	str	r3, [r4, #48]	@ 0x30
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012e38:	68a3      	ldr	r3, [r4, #8]
10012e3a:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
        (mxc_i2c_reva_req_t *)AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)];
10012e3e:	4b6a      	ldr	r3, [pc, #424]	@ (10012fe8 <MXC_I2C_RevA_MasterAsyncHandler+0x2b0>)
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012e40:	f000 80bc 	beq.w	10012fbc <MXC_I2C_RevA_MasterAsyncHandler+0x284>
        (mxc_i2c_reva_req_t *)AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)];
10012e44:	429c      	cmp	r4, r3
10012e46:	f000 80da 	beq.w	10012ffe <MXC_I2C_RevA_MasterAsyncHandler+0x2c6>
10012e4a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012e4e:	429c      	cmp	r4, r3
10012e50:	f000 8105 	beq.w	1001305e <MXC_I2C_RevA_MasterAsyncHandler+0x326>
    mxc_i2c_reva_req_t *req =
10012e54:	f8db 0008 	ldr.w	r0, [fp, #8]
    if (req->callback != NULL) {
10012e58:	69c3      	ldr	r3, [r0, #28]
10012e5a:	2b00      	cmp	r3, #0
10012e5c:	f000 80e3 	beq.w	10013026 <MXC_I2C_RevA_MasterAsyncHandler+0x2ee>
        req->callback(req, retVal);
10012e60:	f06f 0108 	mvn.w	r1, #8
10012e64:	4798      	blx	r3
    i2c->inten0 = 0;
10012e66:	2300      	movs	r3, #0
10012e68:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10012e6a:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012e6c:	68a3      	ldr	r3, [r4, #8]
10012e6e:	60a3      	str	r3, [r4, #8]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012e70:	4b5d      	ldr	r3, [pc, #372]	@ (10012fe8 <MXC_I2C_RevA_MasterAsyncHandler+0x2b0>)
    i2c->intfl1 = i2c->intfl1;
10012e72:	6922      	ldr	r2, [r4, #16]
10012e74:	6122      	str	r2, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012e76:	429c      	cmp	r4, r3
10012e78:	f000 80cd 	beq.w	10013016 <MXC_I2C_RevA_MasterAsyncHandler+0x2de>
10012e7c:	4b5b      	ldr	r3, [pc, #364]	@ (10012fec <MXC_I2C_RevA_MasterAsyncHandler+0x2b4>)
10012e7e:	429c      	cmp	r4, r3
10012e80:	f000 80e4 	beq.w	1001304c <MXC_I2C_RevA_MasterAsyncHandler+0x314>
10012e84:	2202      	movs	r2, #2
10012e86:	2300      	movs	r3, #0
10012e88:	f84b 3022 	str.w	r3, [fp, r2, lsl #2]
}
10012e8c:	e783      	b.n	10012d96 <MXC_I2C_RevA_MasterAsyncHandler+0x5e>
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012e8e:	4c57      	ldr	r4, [pc, #348]	@ (10012fec <MXC_I2C_RevA_MasterAsyncHandler+0x2b4>)
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012e90:	f8df b150 	ldr.w	fp, [pc, #336]	@ 10012fe4 <MXC_I2C_RevA_MasterAsyncHandler+0x2ac>
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012e94:	68a3      	ldr	r3, [r4, #8]
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012e96:	f8db 7004 	ldr.w	r7, [fp, #4]
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012e9a:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
10012e9e:	f43f af68 	beq.w	10012d72 <MXC_I2C_RevA_MasterAsyncHandler+0x3a>
        i2c->intfl0 = i2c->intfl0;
10012ea2:	68a3      	ldr	r3, [r4, #8]
10012ea4:	60a3      	str	r3, [r4, #8]
        i2c->intfl1 = i2c->intfl1;
10012ea6:	6923      	ldr	r3, [r4, #16]
10012ea8:	6123      	str	r3, [r4, #16]
        i2c->inten0 = 0;
10012eaa:	2600      	movs	r6, #0
10012eac:	60e6      	str	r6, [r4, #12]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012eae:	4620      	mov	r0, r4
        i2c->inten1 = 0;
10012eb0:	6166      	str	r6, [r4, #20]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012eb2:	f7ff fc7d 	bl	100127b0 <MXC_I2C_Stop>
    mxc_i2c_reva_req_t *req =
10012eb6:	f8db 0004 	ldr.w	r0, [fp, #4]
    if (req->callback != NULL) {
10012eba:	69c3      	ldr	r3, [r0, #28]
10012ebc:	2b00      	cmp	r3, #0
10012ebe:	f000 80c7 	beq.w	10013050 <MXC_I2C_RevA_MasterAsyncHandler+0x318>
        req->callback(req, retVal);
10012ec2:	f06f 0108 	mvn.w	r1, #8
10012ec6:	4798      	blx	r3
    i2c->inten0 = 0;
10012ec8:	60e6      	str	r6, [r4, #12]
    i2c->inten1 = 0;
10012eca:	6166      	str	r6, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012ecc:	68a3      	ldr	r3, [r4, #8]
10012ece:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012ed0:	6923      	ldr	r3, [r4, #16]
10012ed2:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012ed4:	e018      	b.n	10012f08 <MXC_I2C_RevA_MasterAsyncHandler+0x1d0>
        i2c->intfl0 = i2c->intfl0;
10012ed6:	68a3      	ldr	r3, [r4, #8]
10012ed8:	60a3      	str	r3, [r4, #8]
        i2c->intfl1 = i2c->intfl1;
10012eda:	6923      	ldr	r3, [r4, #16]
10012edc:	6123      	str	r3, [r4, #16]
        i2c->inten0 = 0;
10012ede:	2500      	movs	r5, #0
10012ee0:	60e5      	str	r5, [r4, #12]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012ee2:	4620      	mov	r0, r4
        i2c->inten1 = 0;
10012ee4:	6165      	str	r5, [r4, #20]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012ee6:	f7ff fc63 	bl	100127b0 <MXC_I2C_Stop>
    mxc_i2c_reva_req_t *req =
10012eea:	f8db 0008 	ldr.w	r0, [fp, #8]
    if (req->callback != NULL) {
10012eee:	69c3      	ldr	r3, [r0, #28]
10012ef0:	2b00      	cmp	r3, #0
10012ef2:	d07d      	beq.n	10012ff0 <MXC_I2C_RevA_MasterAsyncHandler+0x2b8>
        req->callback(req, retVal);
10012ef4:	f06f 0108 	mvn.w	r1, #8
10012ef8:	4798      	blx	r3
    i2c->inten0 = 0;
10012efa:	60e5      	str	r5, [r4, #12]
    i2c->inten1 = 0;
10012efc:	6165      	str	r5, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012efe:	68a3      	ldr	r3, [r4, #8]
10012f00:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012f02:	6923      	ldr	r3, [r4, #16]
10012f04:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012f06:	2502      	movs	r5, #2
10012f08:	2300      	movs	r3, #0
10012f0a:	f84b 3025 	str.w	r3, [fp, r5, lsl #2]
}
10012f0e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
10012f12:	68b9      	ldr	r1, [r7, #8]
10012f14:	1b92      	subs	r2, r2, r6
10012f16:	4431      	add	r1, r6
10012f18:	4620      	mov	r0, r4
10012f1a:	f7ff fc4d 	bl	100127b8 <MXC_I2C_WriteTXFIFO>
        if (written < req->tx_len) {
10012f1e:	68fa      	ldr	r2, [r7, #12]
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
10012f20:	4406      	add	r6, r0
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10012f22:	2320      	movs	r3, #32
        if (written < req->tx_len) {
10012f24:	42b2      	cmp	r2, r6
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10012f26:	60a3      	str	r3, [r4, #8]
        if (written < req->tx_len) {
10012f28:	f63f af5b 	bhi.w	10012de2 <MXC_I2C_RevA_MasterAsyncHandler+0xaa>
            i2c->inten0 &= ~(MXC_F_I2C_REVA_INTEN0_TX_THD);
10012f2c:	68e3      	ldr	r3, [r4, #12]
10012f2e:	f023 0320 	bic.w	r3, r3, #32
10012f32:	60e3      	str	r3, [r4, #12]
        if ((req->tx_len == written) && (req->rx_len)) {
10012f34:	697b      	ldr	r3, [r7, #20]
10012f36:	f47f af59 	bne.w	10012dec <MXC_I2C_RevA_MasterAsyncHandler+0xb4>
10012f3a:	2b00      	cmp	r3, #0
10012f3c:	f43f af6a 	beq.w	10012e14 <MXC_I2C_RevA_MasterAsyncHandler+0xdc>
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10012f40:	6b22      	ldr	r2, [r4, #48]	@ 0x30
10012f42:	f042 0202 	orr.w	r2, r2, #2
10012f46:	6322      	str	r2, [r4, #48]	@ 0x30
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
10012f48:	2201      	movs	r2, #1
10012f4a:	60a2      	str	r2, [r4, #8]
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_DONE);
10012f4c:	68e2      	ldr	r2, [r4, #12]
    if (req->rx_len > read) {
10012f4e:	4598      	cmp	r8, r3
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_DONE);
10012f50:	f042 0201 	orr.w	r2, r2, #1
10012f54:	60e2      	str	r2, [r4, #12]
    if (req->rx_len > read) {
10012f56:	f4bf af5d 	bcs.w	10012e14 <MXC_I2C_RevA_MasterAsyncHandler+0xdc>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
10012f5a:	68a2      	ldr	r2, [r4, #8]
10012f5c:	f012 0f11 	tst.w	r2, #17
10012f60:	f47f af4a 	bne.w	10012df8 <MXC_I2C_RevA_MasterAsyncHandler+0xc0>
        (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {
10012f64:	68a2      	ldr	r2, [r4, #8]
    if ((req->tx_len == written) && (req->rx_len - read) &&
10012f66:	07d2      	lsls	r2, r2, #31
10012f68:	f57f af11 	bpl.w	10012d8e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
10012f6c:	2201      	movs	r2, #1
10012f6e:	60a2      	str	r2, [r4, #8]
        if (read == 0) {
10012f70:	f1b8 0f00 	cmp.w	r8, #0
10012f74:	d114      	bne.n	10012fa0 <MXC_I2C_RevA_MasterAsyncHandler+0x268>
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10012f76:	687a      	ldr	r2, [r7, #4]
10012f78:	0052      	lsls	r2, r2, #1
        if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
10012f7a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10012f7e:	f042 0201 	orr.w	r2, r2, #1
10012f82:	62e2      	str	r2, [r4, #44]	@ 0x2c
            i2c->rxctrl1 = 0;
10012f84:	bf8c      	ite	hi
10012f86:	f8c4 8020 	strhi.w	r8, [r4, #32]
            i2c->rxctrl1 = (req->rx_len - read); // 0 for 256, otherwise number of bytes to read
10012f8a:	6223      	strls	r3, [r4, #32]
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_RX_THD | MXC_F_I2C_REVA_INTEN0_DONE);
10012f8c:	68e3      	ldr	r3, [r4, #12]
10012f8e:	f043 0311 	orr.w	r3, r3, #17
10012f92:	60e3      	str	r3, [r4, #12]
10012f94:	e6fb      	b.n	10012d8e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10012f96:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012f98:	f043 0302 	orr.w	r3, r3, #2
10012f9c:	6323      	str	r3, [r4, #48]	@ 0x30
10012f9e:	e74b      	b.n	10012e38 <MXC_I2C_RevA_MasterAsyncHandler+0x100>
        if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
10012fa0:	eba3 0208 	sub.w	r2, r3, r8
10012fa4:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
            i2c->rxctrl1 = 0;
10012fa8:	bf88      	it	hi
10012faa:	2200      	movhi	r2, #0
        if (read < req->rx_len) {
10012fac:	4598      	cmp	r8, r3
            i2c->rxctrl1 = (req->rx_len - read); // 0 for 256, otherwise number of bytes to read
10012fae:	6222      	str	r2, [r4, #32]
        if (read < req->rx_len) {
10012fb0:	d3ec      	bcc.n	10012f8c <MXC_I2C_RevA_MasterAsyncHandler+0x254>
            i2c->inten0 &= ~(MXC_F_I2C_REVA_INTEN0_RX_THD | MXC_F_I2C_REVA_INTEN0_DONE);
10012fb2:	68e3      	ldr	r3, [r4, #12]
10012fb4:	f023 0311 	bic.w	r3, r3, #17
10012fb8:	60e3      	str	r3, [r4, #12]
10012fba:	e6e8      	b.n	10012d8e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
        (mxc_i2c_reva_req_t *)AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)];
10012fbc:	429c      	cmp	r4, r3
10012fbe:	d02c      	beq.n	1001301a <MXC_I2C_RevA_MasterAsyncHandler+0x2e2>
10012fc0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012fc4:	429c      	cmp	r4, r3
10012fc6:	d036      	beq.n	10013036 <MXC_I2C_RevA_MasterAsyncHandler+0x2fe>
    mxc_i2c_reva_req_t *req =
10012fc8:	f8db 0008 	ldr.w	r0, [fp, #8]
    if (req->callback != NULL) {
10012fcc:	69c3      	ldr	r3, [r0, #28]
10012fce:	b353      	cbz	r3, 10013026 <MXC_I2C_RevA_MasterAsyncHandler+0x2ee>
        req->callback(req, retVal);
10012fd0:	2100      	movs	r1, #0
10012fd2:	4798      	blx	r3
10012fd4:	e747      	b.n	10012e66 <MXC_I2C_RevA_MasterAsyncHandler+0x12e>
10012fd6:	bf00      	nop
10012fd8:	20000fec 	.word	0x20000fec
10012fdc:	20000fe0 	.word	0x20000fe0
10012fe0:	4001f000 	.word	0x4001f000
10012fe4:	20000ff8 	.word	0x20000ff8
10012fe8:	4001d000 	.word	0x4001d000
10012fec:	4001e000 	.word	0x4001e000
    i2c->inten0 = 0;
10012ff0:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10012ff2:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012ff4:	68a3      	ldr	r3, [r4, #8]
10012ff6:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012ff8:	6923      	ldr	r3, [r4, #16]
10012ffa:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012ffc:	e783      	b.n	10012f06 <MXC_I2C_RevA_MasterAsyncHandler+0x1ce>
    mxc_i2c_reva_req_t *req =
10012ffe:	f8db 0000 	ldr.w	r0, [fp]
    if (req->callback != NULL) {
10013002:	69c3      	ldr	r3, [r0, #28]
10013004:	2b00      	cmp	r3, #0
10013006:	f47f af2b 	bne.w	10012e60 <MXC_I2C_RevA_MasterAsyncHandler+0x128>
    i2c->inten0 = 0;
1001300a:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
1001300c:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
1001300e:	68a3      	ldr	r3, [r4, #8]
10013010:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10013012:	6923      	ldr	r3, [r4, #16]
10013014:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013016:	2200      	movs	r2, #0
10013018:	e735      	b.n	10012e86 <MXC_I2C_RevA_MasterAsyncHandler+0x14e>
    mxc_i2c_reva_req_t *req =
1001301a:	f8db 0000 	ldr.w	r0, [fp]
    if (req->callback != NULL) {
1001301e:	69c3      	ldr	r3, [r0, #28]
10013020:	2b00      	cmp	r3, #0
10013022:	d1d5      	bne.n	10012fd0 <MXC_I2C_RevA_MasterAsyncHandler+0x298>
10013024:	e7f1      	b.n	1001300a <MXC_I2C_RevA_MasterAsyncHandler+0x2d2>
    i2c->inten0 = 0;
10013026:	4a11      	ldr	r2, [pc, #68]	@ (1001306c <MXC_I2C_RevA_MasterAsyncHandler+0x334>)
10013028:	60d3      	str	r3, [r2, #12]
    i2c->inten1 = 0;
1001302a:	6153      	str	r3, [r2, #20]
    i2c->intfl0 = i2c->intfl0;
1001302c:	6893      	ldr	r3, [r2, #8]
1001302e:	6093      	str	r3, [r2, #8]
    i2c->intfl1 = i2c->intfl1;
10013030:	6913      	ldr	r3, [r2, #16]
10013032:	6113      	str	r3, [r2, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013034:	e726      	b.n	10012e84 <MXC_I2C_RevA_MasterAsyncHandler+0x14c>
    mxc_i2c_reva_req_t *req =
10013036:	f8db 0004 	ldr.w	r0, [fp, #4]
    if (req->callback != NULL) {
1001303a:	69c3      	ldr	r3, [r0, #28]
1001303c:	2b00      	cmp	r3, #0
1001303e:	d1c7      	bne.n	10012fd0 <MXC_I2C_RevA_MasterAsyncHandler+0x298>
    i2c->inten0 = 0;
10013040:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10013042:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10013044:	68a3      	ldr	r3, [r4, #8]
10013046:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10013048:	6923      	ldr	r3, [r4, #16]
1001304a:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001304c:	2201      	movs	r2, #1
1001304e:	e71a      	b.n	10012e86 <MXC_I2C_RevA_MasterAsyncHandler+0x14e>
    i2c->inten0 = 0;
10013050:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10013052:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10013054:	68a3      	ldr	r3, [r4, #8]
10013056:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10013058:	6923      	ldr	r3, [r4, #16]
1001305a:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001305c:	e754      	b.n	10012f08 <MXC_I2C_RevA_MasterAsyncHandler+0x1d0>
    mxc_i2c_reva_req_t *req =
1001305e:	f8db 0004 	ldr.w	r0, [fp, #4]
    if (req->callback != NULL) {
10013062:	69c3      	ldr	r3, [r0, #28]
10013064:	2b00      	cmp	r3, #0
10013066:	f47f aefb 	bne.w	10012e60 <MXC_I2C_RevA_MasterAsyncHandler+0x128>
1001306a:	e7e9      	b.n	10013040 <MXC_I2C_RevA_MasterAsyncHandler+0x308>
1001306c:	4001f000 	.word	0x4001f000

10013070 <MXC_I2C_RevA_SlaveAsyncHandler>:

void MXC_I2C_RevA_SlaveAsyncHandler(mxc_i2c_reva_regs_t *i2c, mxc_i2c_reva_slave_handler_t callback,
                                    uint32_t *int_en, int *retVal)
{
10013070:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10013074:	4615      	mov	r5, r2
10013076:	460e      	mov	r6, r1
    // I2C_EVT_RX_THRESH
    // I2C_EVT_TX_THRESH
    // I2C_EVT_TRANS_COMP
    // I2C_EVT_UNDERFLOW
    // I2C_EVT_OVERFLOW
    if (!(int_en[0] & (MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH | MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH |
10013078:	6812      	ldr	r2, [r2, #0]
1001307a:	49b2      	ldr	r1, [pc, #712]	@ (10013344 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d4>)
    uint32_t tFlags = i2c->intfl0;
1001307c:	f8d0 9008 	ldr.w	r9, [r0, #8]
    *retVal = E_NO_ERROR;
10013080:	2700      	movs	r7, #0
    if (!(int_en[0] & (MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH | MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH |
10013082:	4011      	ands	r1, r2
    *retVal = E_NO_ERROR;
10013084:	601f      	str	r7, [r3, #0]
{
10013086:	4604      	mov	r4, r0
    uint32_t readFlag = i2c->ctrl & MXC_F_I2C_REVA_CTRL_READ;
10013088:	6807      	ldr	r7, [r0, #0]
{
1001308a:	4698      	mov	r8, r3
    if (!(int_en[0] & (MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH | MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH |
1001308c:	2900      	cmp	r1, #0
1001308e:	d15a      	bne.n	10013146 <MXC_I2C_RevA_SlaveAsyncHandler+0xd6>
                       MXC_F_I2C_REVA_INTFL0_ADDR_MATCH))) {
        // The STOPERR/STARTERR interrupt that's enabled here could fire before we are addressed
        // (fires anytime a stop/start is detected out of sequence).
        if (tFlags & MXC_I2C_REVA_ERROR) {
10013090:	f419 4ffe 	tst.w	r9, #32512	@ 0x7f00
10013094:	f040 80cf 	bne.w	10013236 <MXC_I2C_RevA_SlaveAsyncHandler+0x1c6>
            int_en[0] = 0;
            int_en[1] = 0;
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
        }

        if (int_en[0] & MXC_F_I2C_REVA_INTFL0_RX_THD || int_en[1] & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10013098:	06d3      	lsls	r3, r2, #27
1001309a:	f140 81a4 	bpl.w	100133e6 <MXC_I2C_RevA_SlaveAsyncHandler+0x376>
            if (tFlags & MXC_F_I2C_REVA_INTFL0_RX_THD) {
1001309e:	f019 0f10 	tst.w	r9, #16
100130a2:	f000 8148 	beq.w	10013336 <MXC_I2C_RevA_SlaveAsyncHandler+0x2c6>
                if (callback != NULL) {
100130a6:	2e00      	cmp	r6, #0
100130a8:	f000 815c 	beq.w	10013364 <MXC_I2C_RevA_SlaveAsyncHandler+0x2f4>
                    callback(i2c, MXC_I2C_REVA_EVT_RX_THRESH, NULL);
100130ac:	2200      	movs	r2, #0
100130ae:	2102      	movs	r1, #2
100130b0:	4620      	mov	r0, r4
100130b2:	47b0      	blx	r6
                }

                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
100130b4:	2310      	movs	r3, #16
100130b6:	60a3      	str	r3, [r4, #8]
            }

            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_RX_OV) {
100130b8:	6923      	ldr	r3, [r4, #16]
100130ba:	07da      	lsls	r2, r3, #31
100130bc:	d505      	bpl.n	100130ca <MXC_I2C_RevA_SlaveAsyncHandler+0x5a>
                if (callback != NULL) {
                    callback(i2c, MXC_I2C_REVA_EVT_OVERFLOW, NULL);
100130be:	2200      	movs	r2, #0
100130c0:	2106      	movs	r1, #6
100130c2:	4620      	mov	r0, r4
100130c4:	47b0      	blx	r6
                }

                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_RX_OV;
100130c6:	2301      	movs	r3, #1
100130c8:	6123      	str	r3, [r4, #16]
100130ca:	682a      	ldr	r2, [r5, #0]
            }
        }

        if (int_en[0] & (MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) ||
100130cc:	f248 0320 	movw	r3, #32800	@ 0x8020
100130d0:	4213      	tst	r3, r2
100130d2:	f000 80df 	beq.w	10013294 <MXC_I2C_RevA_SlaveAsyncHandler+0x224>
            int_en[1] & MXC_F_I2C_REVA_INTFL1_TX_UN) {
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_THD) {
100130d6:	f019 0f20 	tst.w	r9, #32
                }

                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
            }

            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
100130da:	f409 4a00 	and.w	sl, r9, #32768	@ 0x8000
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_THD) {
100130de:	f000 80fc 	beq.w	100132da <MXC_I2C_RevA_SlaveAsyncHandler+0x26a>
                if (callback != NULL) {
100130e2:	2e00      	cmp	r6, #0
100130e4:	f000 8145 	beq.w	10013372 <MXC_I2C_RevA_SlaveAsyncHandler+0x302>
                    callback(i2c, MXC_I2C_REVA_EVT_TX_THRESH, NULL);
100130e8:	2103      	movs	r1, #3
100130ea:	2200      	movs	r2, #0
100130ec:	4620      	mov	r0, r4
100130ee:	47b0      	blx	r6
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
100130f0:	2320      	movs	r3, #32
100130f2:	60a3      	str	r3, [r4, #8]
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_TX_UN) {
100130f4:	6923      	ldr	r3, [r4, #16]
100130f6:	0799      	lsls	r1, r3, #30
100130f8:	f100 80f5 	bmi.w	100132e6 <MXC_I2C_RevA_SlaveAsyncHandler+0x276>
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
100130fc:	f1ba 0f00 	cmp.w	sl, #0
10013100:	f040 80fa 	bne.w	100132f8 <MXC_I2C_RevA_SlaveAsyncHandler+0x288>
                int_en[1] = 0;
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
            }
        }

        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
10013104:	f019 0f40 	tst.w	r9, #64	@ 0x40
10013108:	f000 8168 	beq.w	100133dc <MXC_I2C_RevA_SlaveAsyncHandler+0x36c>
            *retVal = E_NO_ERROR;
1001310c:	f8c8 a000 	str.w	sl, [r8]

            if (callback != NULL) {
                callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
10013110:	4642      	mov	r2, r8
10013112:	2104      	movs	r1, #4
10013114:	4620      	mov	r0, r4
10013116:	47b0      	blx	r6
            }

            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_STOP;
            int_en[0] = 0;
            int_en[1] = 0;
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013118:	4a8b      	ldr	r2, [pc, #556]	@ (10013348 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
            int_en[0] = 0;
1001311a:	2300      	movs	r3, #0
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_STOP;
1001311c:	2140      	movs	r1, #64	@ 0x40
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001311e:	4294      	cmp	r4, r2
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_STOP;
10013120:	60a1      	str	r1, [r4, #8]
            int_en[0] = 0;
10013122:	602b      	str	r3, [r5, #0]
10013124:	606b      	str	r3, [r5, #4]
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013126:	d00a      	beq.n	1001313e <MXC_I2C_RevA_SlaveAsyncHandler+0xce>
10013128:	4b88      	ldr	r3, [pc, #544]	@ (1001334c <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
1001312a:	429c      	cmp	r4, r3
1001312c:	f000 8131 	beq.w	10013392 <MXC_I2C_RevA_SlaveAsyncHandler+0x322>
10013130:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013134:	429c      	cmp	r4, r3
10013136:	bf0c      	ite	eq
10013138:	2302      	moveq	r3, #2
1001313a:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
1001313e:	4a84      	ldr	r2, [pc, #528]	@ (10013350 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
10013140:	2100      	movs	r1, #0
10013142:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        }
    }

    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
10013146:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
1001314a:	d011      	beq.n	10013170 <MXC_I2C_RevA_SlaveAsyncHandler+0x100>
        if (callback != NULL) {
1001314c:	b11e      	cbz	r6, 10013156 <MXC_I2C_RevA_SlaveAsyncHandler+0xe6>
            callback(i2c, MXC_I2C_REVA_EVT_MASTER_WR, NULL);
1001314e:	2200      	movs	r2, #0
10013150:	4611      	mov	r1, r2
10013152:	4620      	mov	r0, r4
10013154:	47b0      	blx	r6
        }

        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH;
10013156:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
1001315a:	60a3      	str	r3, [r4, #8]
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
1001315c:	2308      	movs	r3, #8
1001315e:	60a3      	str	r3, [r4, #8]
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
10013160:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
10013164:	60a3      	str	r3, [r4, #8]

        int_en[0] = MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE | MXC_I2C_REVA_ERROR;
10013166:	f647 7311 	movw	r3, #32529	@ 0x7f11
1001316a:	602b      	str	r3, [r5, #0]
1001316c:	2301      	movs	r3, #1
1001316e:	606b      	str	r3, [r5, #4]
        int_en[1] = MXC_F_I2C_REVA_INTFL1_RX_OV;
    }

    if (tFlags & MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH) {
10013170:	f419 0f00 	tst.w	r9, #8388608	@ 0x800000
10013174:	d00e      	beq.n	10013194 <MXC_I2C_RevA_SlaveAsyncHandler+0x124>
        if (callback != NULL) {
10013176:	b11e      	cbz	r6, 10013180 <MXC_I2C_RevA_SlaveAsyncHandler+0x110>
            callback(i2c, MXC_I2C_REVA_EVT_MASTER_RD, NULL);
10013178:	2200      	movs	r2, #0
1001317a:	2101      	movs	r1, #1
1001317c:	4620      	mov	r0, r4
1001317e:	47b0      	blx	r6
        }

        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH;
10013180:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
10013184:	60a3      	str	r3, [r4, #8]
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
10013186:	2308      	movs	r3, #8
10013188:	60a3      	str	r3, [r4, #8]
        int_en[0] = MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT |
1001318a:	f64f 7320 	movw	r3, #65312	@ 0xff20
1001318e:	602b      	str	r3, [r5, #0]
10013190:	2302      	movs	r3, #2
10013192:	606b      	str	r3, [r5, #4]
                    MXC_I2C_REVA_ERROR;
        int_en[1] = MXC_F_I2C_REVA_INTFL1_TX_UN;
    }

    if (tFlags & MXC_F_I2C_REVA_INTFL0_ADDR_MATCH) {
10013194:	f019 0f08 	tst.w	r9, #8
10013198:	d017      	beq.n	100131ca <MXC_I2C_RevA_SlaveAsyncHandler+0x15a>
        if (readFlag & MXC_F_I2C_REVA_CTRL_READ) {
1001319a:	f417 6200 	ands.w	r2, r7, #2048	@ 0x800
1001319e:	f000 808c 	beq.w	100132ba <MXC_I2C_RevA_SlaveAsyncHandler+0x24a>
            if (callback != NULL) {
100131a2:	b11e      	cbz	r6, 100131ac <MXC_I2C_RevA_SlaveAsyncHandler+0x13c>
                callback(i2c, MXC_I2C_REVA_EVT_MASTER_RD, NULL);
100131a4:	2200      	movs	r2, #0
100131a6:	2101      	movs	r1, #1
100131a8:	4620      	mov	r0, r4
100131aa:	47b0      	blx	r6
            }

            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH;
100131ac:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
100131b0:	2308      	movs	r3, #8
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH;
100131b2:	60a2      	str	r2, [r4, #8]
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
100131b4:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
100131b8:	60a3      	str	r3, [r4, #8]

            int_en[0] = MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT |
100131ba:	f64f 7220 	movw	r2, #65312	@ 0xff20
100131be:	2302      	movs	r3, #2
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
100131c0:	60a1      	str	r1, [r4, #8]
            int_en[0] = MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT |
100131c2:	602a      	str	r2, [r5, #0]
100131c4:	606b      	str	r3, [r5, #4]
        MXC_I2C_RevA_ClearRXFIFO(i2c);
        int_en[0] = 0;
        int_en[1] = 0;
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
    }
}
100131c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    } else if (tFlags & MXC_I2C_REVA_ERROR) {
100131ca:	f419 4ffe 	tst.w	r9, #32512	@ 0x7f00
100131ce:	d0fa      	beq.n	100131c6 <MXC_I2C_RevA_SlaveAsyncHandler+0x156>
        *retVal = E_COMM_ERR;
100131d0:	f06f 0308 	mvn.w	r3, #8
100131d4:	f8c8 3000 	str.w	r3, [r8]
        if (callback != NULL) {
100131d8:	b11e      	cbz	r6, 100131e2 <MXC_I2C_RevA_SlaveAsyncHandler+0x172>
            callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
100131da:	4642      	mov	r2, r8
100131dc:	2104      	movs	r1, #4
100131de:	4620      	mov	r0, r4
100131e0:	47b0      	blx	r6
    i2c->intfl1 = flags1;
100131e2:	2307      	movs	r3, #7
    i2c->intfl0 = flags0;
100131e4:	f06f 427f 	mvn.w	r2, #4278190080	@ 0xff000000
100131e8:	60a2      	str	r2, [r4, #8]
    i2c->intfl1 = flags1;
100131ea:	6123      	str	r3, [r4, #16]
    i2c->txctrl0 |= MXC_F_I2C_REVA_TXCTRL0_FLUSH;
100131ec:	6a63      	ldr	r3, [r4, #36]	@ 0x24
100131ee:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
100131f2:	6263      	str	r3, [r4, #36]	@ 0x24
    while (i2c->txctrl0 & MXC_F_I2C_REVA_TXCTRL0_FLUSH) {}
100131f4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
100131f6:	061b      	lsls	r3, r3, #24
100131f8:	d4fc      	bmi.n	100131f4 <MXC_I2C_RevA_SlaveAsyncHandler+0x184>
    i2c->rxctrl0 |= MXC_F_I2C_REVA_RXCTRL0_FLUSH;
100131fa:	69e3      	ldr	r3, [r4, #28]
100131fc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10013200:	61e3      	str	r3, [r4, #28]
    while (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_FLUSH) {}
10013202:	69e3      	ldr	r3, [r4, #28]
10013204:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
10013208:	d1fb      	bne.n	10013202 <MXC_I2C_RevA_SlaveAsyncHandler+0x192>
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001320a:	4a4f      	ldr	r2, [pc, #316]	@ (10013348 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
        int_en[0] = 0;
1001320c:	602b      	str	r3, [r5, #0]
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001320e:	4294      	cmp	r4, r2
        int_en[0] = 0;
10013210:	606b      	str	r3, [r5, #4]
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013212:	d00a      	beq.n	1001322a <MXC_I2C_RevA_SlaveAsyncHandler+0x1ba>
10013214:	4b4d      	ldr	r3, [pc, #308]	@ (1001334c <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
10013216:	429c      	cmp	r4, r3
10013218:	f000 80bf 	beq.w	1001339a <MXC_I2C_RevA_SlaveAsyncHandler+0x32a>
1001321c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013220:	429c      	cmp	r4, r3
10013222:	bf14      	ite	ne
10013224:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
10013228:	2302      	moveq	r3, #2
1001322a:	4a49      	ldr	r2, [pc, #292]	@ (10013350 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
1001322c:	2100      	movs	r1, #0
1001322e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
10013232:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            *retVal = E_COMM_ERR;
10013236:	f06f 0308 	mvn.w	r3, #8
1001323a:	f8c8 3000 	str.w	r3, [r8]
            if (callback != NULL) {
1001323e:	b116      	cbz	r6, 10013246 <MXC_I2C_RevA_SlaveAsyncHandler+0x1d6>
                callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
10013240:	4642      	mov	r2, r8
10013242:	2104      	movs	r1, #4
10013244:	47b0      	blx	r6
            MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c, MXC_I2C_REVA_INTFL0_MASK,
10013246:	2207      	movs	r2, #7
10013248:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
1001324c:	4620      	mov	r0, r4
1001324e:	f7ff fab9 	bl	100127c4 <MXC_I2C_ClearFlags>
            MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
10013252:	4620      	mov	r0, r4
10013254:	f7ff fab4 	bl	100127c0 <MXC_I2C_ClearTXFIFO>
            MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
10013258:	4620      	mov	r0, r4
1001325a:	f7ff faaf 	bl	100127bc <MXC_I2C_ClearRXFIFO>
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001325e:	4a3a      	ldr	r2, [pc, #232]	@ (10013348 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
            int_en[0] = 0;
10013260:	2300      	movs	r3, #0
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013262:	4294      	cmp	r4, r2
            int_en[0] = 0;
10013264:	602b      	str	r3, [r5, #0]
10013266:	606b      	str	r3, [r5, #4]
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013268:	d00a      	beq.n	10013280 <MXC_I2C_RevA_SlaveAsyncHandler+0x210>
1001326a:	4b38      	ldr	r3, [pc, #224]	@ (1001334c <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
1001326c:	429c      	cmp	r4, r3
1001326e:	f000 8092 	beq.w	10013396 <MXC_I2C_RevA_SlaveAsyncHandler+0x326>
10013272:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013276:	429c      	cmp	r4, r3
10013278:	bf0c      	ite	eq
1001327a:	2302      	moveq	r3, #2
1001327c:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
10013280:	4a33      	ldr	r2, [pc, #204]	@ (10013350 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
10013282:	2100      	movs	r1, #0
10013284:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        if (int_en[0] & MXC_F_I2C_REVA_INTFL0_RX_THD || int_en[1] & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10013288:	682a      	ldr	r2, [r5, #0]
        if (int_en[0] & (MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) ||
1001328a:	f248 0320 	movw	r3, #32800	@ 0x8020
1001328e:	4213      	tst	r3, r2
10013290:	f47f af21 	bne.w	100130d6 <MXC_I2C_RevA_SlaveAsyncHandler+0x66>
            int_en[1] & MXC_F_I2C_REVA_INTFL1_TX_UN) {
10013294:	686b      	ldr	r3, [r5, #4]
        if (int_en[0] & (MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) ||
10013296:	0798      	lsls	r0, r3, #30
10013298:	f53f af1d 	bmi.w	100130d6 <MXC_I2C_RevA_SlaveAsyncHandler+0x66>
        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
1001329c:	f019 0f40 	tst.w	r9, #64	@ 0x40
100132a0:	f43f af51 	beq.w	10013146 <MXC_I2C_RevA_SlaveAsyncHandler+0xd6>
            *retVal = E_NO_ERROR;
100132a4:	2300      	movs	r3, #0
100132a6:	f8c8 3000 	str.w	r3, [r8]
            if (callback != NULL) {
100132aa:	2e00      	cmp	r6, #0
100132ac:	f43f af34 	beq.w	10013118 <MXC_I2C_RevA_SlaveAsyncHandler+0xa8>
                callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
100132b0:	4642      	mov	r2, r8
100132b2:	2104      	movs	r1, #4
100132b4:	4620      	mov	r0, r4
100132b6:	47b0      	blx	r6
100132b8:	e72e      	b.n	10013118 <MXC_I2C_RevA_SlaveAsyncHandler+0xa8>
            if (callback != NULL) {
100132ba:	b116      	cbz	r6, 100132c2 <MXC_I2C_RevA_SlaveAsyncHandler+0x252>
                callback(i2c, MXC_I2C_REVA_EVT_MASTER_WR, NULL);
100132bc:	4611      	mov	r1, r2
100132be:	4620      	mov	r0, r4
100132c0:	47b0      	blx	r6
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
100132c2:	2308      	movs	r3, #8
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH;
100132c4:	f44f 0100 	mov.w	r1, #8388608	@ 0x800000
100132c8:	60a1      	str	r1, [r4, #8]
            int_en[0] = MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE |
100132ca:	f647 7211 	movw	r2, #32529	@ 0x7f11
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
100132ce:	60a3      	str	r3, [r4, #8]
            int_en[0] = MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE |
100132d0:	2301      	movs	r3, #1
100132d2:	602a      	str	r2, [r5, #0]
100132d4:	606b      	str	r3, [r5, #4]
}
100132d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_TX_UN) {
100132da:	6923      	ldr	r3, [r4, #16]
100132dc:	f013 0302 	ands.w	r3, r3, #2
100132e0:	d038      	beq.n	10013354 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e4>
                if (callback != NULL) {
100132e2:	2e00      	cmp	r6, #0
100132e4:	d05b      	beq.n	1001339e <MXC_I2C_RevA_SlaveAsyncHandler+0x32e>
                    callback(i2c, MXC_I2C_REVA_EVT_UNDERFLOW, NULL);
100132e6:	2200      	movs	r2, #0
100132e8:	2105      	movs	r1, #5
100132ea:	4620      	mov	r0, r4
100132ec:	47b0      	blx	r6
                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
100132ee:	2302      	movs	r3, #2
100132f0:	6123      	str	r3, [r4, #16]
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
100132f2:	f1ba 0f00 	cmp.w	sl, #0
100132f6:	d0d1      	beq.n	1001329c <MXC_I2C_RevA_SlaveAsyncHandler+0x22c>
                *retVal = E_NO_ERROR;
100132f8:	2300      	movs	r3, #0
100132fa:	f8c8 3000 	str.w	r3, [r8]
                    callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
100132fe:	4642      	mov	r2, r8
10013300:	2104      	movs	r1, #4
10013302:	4620      	mov	r0, r4
10013304:	47b0      	blx	r6
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013306:	4a10      	ldr	r2, [pc, #64]	@ (10013348 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
                int_en[0] = 0;
10013308:	2300      	movs	r3, #0
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
1001330a:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001330e:	4294      	cmp	r4, r2
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
10013310:	60a1      	str	r1, [r4, #8]
                int_en[0] = 0;
10013312:	602b      	str	r3, [r5, #0]
10013314:	606b      	str	r3, [r5, #4]
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013316:	d009      	beq.n	1001332c <MXC_I2C_RevA_SlaveAsyncHandler+0x2bc>
10013318:	4b0c      	ldr	r3, [pc, #48]	@ (1001334c <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
1001331a:	429c      	cmp	r4, r3
1001331c:	d059      	beq.n	100133d2 <MXC_I2C_RevA_SlaveAsyncHandler+0x362>
1001331e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013322:	429c      	cmp	r4, r3
10013324:	bf0c      	ite	eq
10013326:	2302      	moveq	r3, #2
10013328:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
1001332c:	4a08      	ldr	r2, [pc, #32]	@ (10013350 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
1001332e:	2100      	movs	r1, #0
10013330:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
10013334:	e7b2      	b.n	1001329c <MXC_I2C_RevA_SlaveAsyncHandler+0x22c>
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10013336:	6923      	ldr	r3, [r4, #16]
10013338:	07db      	lsls	r3, r3, #31
1001333a:	d5a6      	bpl.n	1001328a <MXC_I2C_RevA_SlaveAsyncHandler+0x21a>
                if (callback != NULL) {
1001333c:	2e00      	cmp	r6, #0
1001333e:	f47f aebe 	bne.w	100130be <MXC_I2C_RevA_SlaveAsyncHandler+0x4e>
10013342:	e6c0      	b.n	100130c6 <MXC_I2C_RevA_SlaveAsyncHandler+0x56>
10013344:	00c00008 	.word	0x00c00008
10013348:	4001d000 	.word	0x4001d000
1001334c:	4001e000 	.word	0x4001e000
10013350:	20000ff8 	.word	0x20000ff8
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
10013354:	f1ba 0f00 	cmp.w	sl, #0
10013358:	d0a0      	beq.n	1001329c <MXC_I2C_RevA_SlaveAsyncHandler+0x22c>
                *retVal = E_NO_ERROR;
1001335a:	f8c8 3000 	str.w	r3, [r8]
                if (callback != NULL) {
1001335e:	2e00      	cmp	r6, #0
10013360:	d0d1      	beq.n	10013306 <MXC_I2C_RevA_SlaveAsyncHandler+0x296>
10013362:	e7cc      	b.n	100132fe <MXC_I2C_RevA_SlaveAsyncHandler+0x28e>
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10013364:	2310      	movs	r3, #16
10013366:	60a3      	str	r3, [r4, #8]
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10013368:	6923      	ldr	r3, [r4, #16]
1001336a:	07d9      	lsls	r1, r3, #31
1001336c:	f53f aeab 	bmi.w	100130c6 <MXC_I2C_RevA_SlaveAsyncHandler+0x56>
10013370:	e6ab      	b.n	100130ca <MXC_I2C_RevA_SlaveAsyncHandler+0x5a>
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10013372:	2320      	movs	r3, #32
10013374:	60a3      	str	r3, [r4, #8]
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_TX_UN) {
10013376:	6923      	ldr	r3, [r4, #16]
10013378:	079a      	lsls	r2, r3, #30
1001337a:	d421      	bmi.n	100133c0 <MXC_I2C_RevA_SlaveAsyncHandler+0x350>
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
1001337c:	f1ba 0f00 	cmp.w	sl, #0
10013380:	d123      	bne.n	100133ca <MXC_I2C_RevA_SlaveAsyncHandler+0x35a>
        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
10013382:	f019 0f40 	tst.w	r9, #64	@ 0x40
10013386:	d126      	bne.n	100133d6 <MXC_I2C_RevA_SlaveAsyncHandler+0x366>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
10013388:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
1001338c:	f47f aee3 	bne.w	10013156 <MXC_I2C_RevA_SlaveAsyncHandler+0xe6>
10013390:	e6ee      	b.n	10013170 <MXC_I2C_RevA_SlaveAsyncHandler+0x100>
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013392:	2301      	movs	r3, #1
10013394:	e6d3      	b.n	1001313e <MXC_I2C_RevA_SlaveAsyncHandler+0xce>
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013396:	2301      	movs	r3, #1
10013398:	e772      	b.n	10013280 <MXC_I2C_RevA_SlaveAsyncHandler+0x210>
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001339a:	2301      	movs	r3, #1
1001339c:	e745      	b.n	1001322a <MXC_I2C_RevA_SlaveAsyncHandler+0x1ba>
                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
1001339e:	2302      	movs	r3, #2
100133a0:	6123      	str	r3, [r4, #16]
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
100133a2:	f1ba 0f00 	cmp.w	sl, #0
100133a6:	d110      	bne.n	100133ca <MXC_I2C_RevA_SlaveAsyncHandler+0x35a>
        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
100133a8:	f019 0f40 	tst.w	r9, #64	@ 0x40
100133ac:	d113      	bne.n	100133d6 <MXC_I2C_RevA_SlaveAsyncHandler+0x366>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
100133ae:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
100133b2:	f47f aed0 	bne.w	10013156 <MXC_I2C_RevA_SlaveAsyncHandler+0xe6>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH) {
100133b6:	f419 0f00 	tst.w	r9, #8388608	@ 0x800000
100133ba:	f47f aee1 	bne.w	10013180 <MXC_I2C_RevA_SlaveAsyncHandler+0x110>
100133be:	e6e9      	b.n	10013194 <MXC_I2C_RevA_SlaveAsyncHandler+0x124>
                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
100133c0:	2302      	movs	r3, #2
100133c2:	6123      	str	r3, [r4, #16]
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
100133c4:	f1ba 0f00 	cmp.w	sl, #0
100133c8:	d0db      	beq.n	10013382 <MXC_I2C_RevA_SlaveAsyncHandler+0x312>
                *retVal = E_NO_ERROR;
100133ca:	2300      	movs	r3, #0
100133cc:	f8c8 3000 	str.w	r3, [r8]
                if (callback != NULL) {
100133d0:	e799      	b.n	10013306 <MXC_I2C_RevA_SlaveAsyncHandler+0x296>
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100133d2:	2301      	movs	r3, #1
100133d4:	e7aa      	b.n	1001332c <MXC_I2C_RevA_SlaveAsyncHandler+0x2bc>
            *retVal = E_NO_ERROR;
100133d6:	f8c8 6000 	str.w	r6, [r8]
            if (callback != NULL) {
100133da:	e69d      	b.n	10013118 <MXC_I2C_RevA_SlaveAsyncHandler+0xa8>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
100133dc:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
100133e0:	f47f aeb5 	bne.w	1001314e <MXC_I2C_RevA_SlaveAsyncHandler+0xde>
100133e4:	e6c4      	b.n	10013170 <MXC_I2C_RevA_SlaveAsyncHandler+0x100>
        if (int_en[0] & MXC_F_I2C_REVA_INTFL0_RX_THD || int_en[1] & MXC_F_I2C_REVA_INTFL1_RX_OV) {
100133e6:	686b      	ldr	r3, [r5, #4]
100133e8:	07d8      	lsls	r0, r3, #31
100133ea:	f53f ae58 	bmi.w	1001309e <MXC_I2C_RevA_SlaveAsyncHandler+0x2e>
100133ee:	e74c      	b.n	1001328a <MXC_I2C_RevA_SlaveAsyncHandler+0x21a>

100133f0 <MXC_I2C_RevA_AsyncHandler>:

void MXC_I2C_RevA_AsyncHandler(mxc_i2c_reva_regs_t *i2c, uint32_t interruptCheck)
{
100133f0:	b530      	push	{r4, r5, lr}
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
100133f2:	4b17      	ldr	r3, [pc, #92]	@ (10013450 <MXC_I2C_RevA_AsyncHandler+0x60>)
100133f4:	4298      	cmp	r0, r3
{
100133f6:	b085      	sub	sp, #20
100133f8:	4604      	mov	r4, r0
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
100133fa:	d024      	beq.n	10013446 <MXC_I2C_RevA_AsyncHandler+0x56>
100133fc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013400:	4298      	cmp	r0, r3
10013402:	d005      	beq.n	10013410 <MXC_I2C_RevA_AsyncHandler+0x20>
10013404:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013408:	4298      	cmp	r0, r3
1001340a:	d01e      	beq.n	1001344a <MXC_I2C_RevA_AsyncHandler+0x5a>
        MXC_I2C_RevA_SlaveAsyncHandler(i2c, callback, int_en, &slaveRetVal);

        i2c->inten0 = int_en[0];
        i2c->inten1 = int_en[1];
    }
}
1001340c:	b005      	add	sp, #20
1001340e:	bd30      	pop	{r4, r5, pc}
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
10013410:	2001      	movs	r0, #1
    if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_MST_MODE) {
10013412:	6823      	ldr	r3, [r4, #0]
10013414:	079b      	lsls	r3, r3, #30
10013416:	d504      	bpl.n	10013422 <MXC_I2C_RevA_AsyncHandler+0x32>
}
10013418:	b005      	add	sp, #20
1001341a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        MXC_I2C_RevA_MasterAsyncHandler(i2cNum);
1001341e:	f7ff bc8b 	b.w	10012d38 <MXC_I2C_RevA_MasterAsyncHandler>
        int_en[0] = i2c->inten0;
10013422:	68e5      	ldr	r5, [r4, #12]
        mxc_i2c_reva_slave_handler_t callback = (mxc_i2c_reva_slave_handler_t)AsyncRequests[i2cNum];
10013424:	4b0b      	ldr	r3, [pc, #44]	@ (10013454 <MXC_I2C_RevA_AsyncHandler+0x64>)
        int_en[1] = i2c->inten1;
10013426:	6962      	ldr	r2, [r4, #20]
        MXC_I2C_RevA_SlaveAsyncHandler(i2c, callback, int_en, &slaveRetVal);
10013428:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
        int_en[1] = i2c->inten1;
1001342c:	e9cd 5202 	strd	r5, r2, [sp, #8]
        MXC_I2C_RevA_SlaveAsyncHandler(i2c, callback, int_en, &slaveRetVal);
10013430:	ab01      	add	r3, sp, #4
10013432:	aa02      	add	r2, sp, #8
10013434:	4620      	mov	r0, r4
10013436:	f7ff fe1b 	bl	10013070 <MXC_I2C_RevA_SlaveAsyncHandler>
        i2c->inten1 = int_en[1];
1001343a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        i2c->inten0 = int_en[0];
1001343e:	60e2      	str	r2, [r4, #12]
        i2c->inten1 = int_en[1];
10013440:	6163      	str	r3, [r4, #20]
}
10013442:	b005      	add	sp, #20
10013444:	bd30      	pop	{r4, r5, pc}
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
10013446:	2000      	movs	r0, #0
10013448:	e7e3      	b.n	10013412 <MXC_I2C_RevA_AsyncHandler+0x22>
1001344a:	2002      	movs	r0, #2
1001344c:	e7e1      	b.n	10013412 <MXC_I2C_RevA_AsyncHandler+0x22>
1001344e:	bf00      	nop
10013450:	4001d000 	.word	0x4001d000
10013454:	20000ff8 	.word	0x20000ff8

10013458 <MXC_ICC_Enable>:
    return MXC_ICC_RevA_ID((mxc_icc_reva_regs_t *)icc, cid);
}

void MXC_ICC_Enable(mxc_icc_regs_t *icc)
{
    MXC_ICC_RevA_Enable((mxc_icc_reva_regs_t *)icc);
10013458:	f000 b802 	b.w	10013460 <MXC_ICC_RevA_Enable>

1001345c <MXC_ICC_Disable>:
}

void MXC_ICC_Disable(mxc_icc_regs_t *icc)
{
    MXC_ICC_RevA_Disable((mxc_icc_reva_regs_t *)icc);
1001345c:	f000 b818 	b.w	10013490 <MXC_ICC_RevA_Disable>

10013460 <MXC_ICC_RevA_Enable>:
}

void MXC_ICC_RevA_Enable(mxc_icc_reva_regs_t *icc)
{
    // Invalidate cache and wait until ready
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
10013460:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
10013464:	2201      	movs	r2, #1
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
10013466:	f023 0301 	bic.w	r3, r3, #1
1001346a:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
1001346e:	f8c0 2700 	str.w	r2, [r0, #1792]	@ 0x700
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
10013472:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100

    while (!(MXC_ICC_Ready(icc))) {}
10013476:	03da      	lsls	r2, r3, #15
10013478:	d5fb      	bpl.n	10013472 <MXC_ICC_RevA_Enable+0x12>

    // Enable Cache
    icc->ctrl |= MXC_F_ICC_REVA_CTRL_EN;
1001347a:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
1001347e:	f043 0301 	orr.w	r3, r3, #1
10013482:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
10013486:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    while (!(MXC_ICC_Ready(icc))) {}
1001348a:	03db      	lsls	r3, r3, #15
1001348c:	d5fb      	bpl.n	10013486 <MXC_ICC_RevA_Enable+0x26>
}
1001348e:	4770      	bx	lr

10013490 <MXC_ICC_RevA_Disable>:

void MXC_ICC_RevA_Disable(mxc_icc_reva_regs_t *icc)
{
    // Disable Cache
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
10013490:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
10013494:	f023 0301 	bic.w	r3, r3, #1
10013498:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
}
1001349c:	4770      	bx	lr
1001349e:	bf00      	nop

100134a0 <MXC_UART_Shutdown>:

    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
}

int MXC_UART_Shutdown(mxc_uart_regs_t *uart)
{
100134a0:	b508      	push	{r3, lr}
    switch (MXC_UART_GET_IDX(uart)) {
100134a2:	4b16      	ldr	r3, [pc, #88]	@ (100134fc <MXC_UART_Shutdown+0x5c>)
100134a4:	4298      	cmp	r0, r3
100134a6:	d010      	beq.n	100134ca <MXC_UART_Shutdown+0x2a>
100134a8:	4b15      	ldr	r3, [pc, #84]	@ (10013500 <MXC_UART_Shutdown+0x60>)
100134aa:	4298      	cmp	r0, r3
100134ac:	d014      	beq.n	100134d8 <MXC_UART_Shutdown+0x38>
100134ae:	4b15      	ldr	r3, [pc, #84]	@ (10013504 <MXC_UART_Shutdown+0x64>)
100134b0:	4298      	cmp	r0, r3
100134b2:	d018      	beq.n	100134e6 <MXC_UART_Shutdown+0x46>
100134b4:	4b14      	ldr	r3, [pc, #80]	@ (10013508 <MXC_UART_Shutdown+0x68>)
100134b6:	4298      	cmp	r0, r3
100134b8:	d11c      	bne.n	100134f4 <MXC_UART_Shutdown+0x54>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
        break;

    case 3:
        MXC_SYS_Reset_Periph(MXC_SYS_RESET_UART3);
100134ba:	2044      	movs	r0, #68	@ 0x44
100134bc:	f7fe fec0 	bl	10012240 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART3);
100134c0:	2044      	movs	r0, #68	@ 0x44
100134c2:	f7fe fe01 	bl	100120c8 <MXC_SYS_ClockDisable>

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
100134c6:	2000      	movs	r0, #0
}
100134c8:	bd08      	pop	{r3, pc}
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART0);
100134ca:	200b      	movs	r0, #11
100134cc:	f7fe feb8 	bl	10012240 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART0);
100134d0:	2009      	movs	r0, #9
100134d2:	f7fe fdf9 	bl	100120c8 <MXC_SYS_ClockDisable>
        break;
100134d6:	e7f6      	b.n	100134c6 <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART1);
100134d8:	200c      	movs	r0, #12
100134da:	f7fe feb1 	bl	10012240 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART1);
100134de:	200a      	movs	r0, #10
100134e0:	f7fe fdf2 	bl	100120c8 <MXC_SYS_ClockDisable>
        break;
100134e4:	e7ef      	b.n	100134c6 <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
100134e6:	201c      	movs	r0, #28
100134e8:	f7fe feaa 	bl	10012240 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
100134ec:	2021      	movs	r0, #33	@ 0x21
100134ee:	f7fe fdeb 	bl	100120c8 <MXC_SYS_ClockDisable>
        break;
100134f2:	e7e8      	b.n	100134c6 <MXC_UART_Shutdown+0x26>
        return E_BAD_PARAM;
100134f4:	f06f 0002 	mvn.w	r0, #2
}
100134f8:	bd08      	pop	{r3, pc}
100134fa:	bf00      	nop
100134fc:	40042000 	.word	0x40042000
10013500:	40043000 	.word	0x40043000
10013504:	40044000 	.word	0x40044000
10013508:	40081400 	.word	0x40081400

1001350c <MXC_UART_Init>:
{
1001350c:	b570      	push	{r4, r5, r6, lr}
1001350e:	4604      	mov	r4, r0
10013510:	460e      	mov	r6, r1
10013512:	4615      	mov	r5, r2
    retval = MXC_UART_Shutdown(uart);
10013514:	f7ff ffc4 	bl	100134a0 <MXC_UART_Shutdown>
    if (retval) {
10013518:	bba8      	cbnz	r0, 10013586 <MXC_UART_Init+0x7a>
    switch (clock) {
1001351a:	2d02      	cmp	r5, #2
1001351c:	d02d      	beq.n	1001357a <MXC_UART_Init+0x6e>
1001351e:	2d04      	cmp	r5, #4
10013520:	d018      	beq.n	10013554 <MXC_UART_Init+0x48>
    switch (MXC_UART_GET_IDX(uart)) {
10013522:	4b20      	ldr	r3, [pc, #128]	@ (100135a4 <MXC_UART_Init+0x98>)
10013524:	429c      	cmp	r4, r3
10013526:	d01b      	beq.n	10013560 <MXC_UART_Init+0x54>
10013528:	4b1f      	ldr	r3, [pc, #124]	@ (100135a8 <MXC_UART_Init+0x9c>)
1001352a:	429c      	cmp	r4, r3
1001352c:	d02c      	beq.n	10013588 <MXC_UART_Init+0x7c>
1001352e:	4b1f      	ldr	r3, [pc, #124]	@ (100135ac <MXC_UART_Init+0xa0>)
10013530:	429c      	cmp	r4, r3
10013532:	d030      	beq.n	10013596 <MXC_UART_Init+0x8a>
10013534:	4b1e      	ldr	r3, [pc, #120]	@ (100135b0 <MXC_UART_Init+0xa4>)
10013536:	429c      	cmp	r4, r3
10013538:	d123      	bne.n	10013582 <MXC_UART_Init+0x76>
        MXC_GPIO_Config(&gpio_cfg_uart3);
1001353a:	481e      	ldr	r0, [pc, #120]	@ (100135b4 <MXC_UART_Init+0xa8>)
1001353c:	f7fe ff1a 	bl	10012374 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART3);
10013540:	2044      	movs	r0, #68	@ 0x44
10013542:	f7fe fde1 	bl	10012108 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
10013546:	462a      	mov	r2, r5
10013548:	4631      	mov	r1, r6
1001354a:	4620      	mov	r0, r4
}
1001354c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
10013550:	f000 b8f8 	b.w	10013744 <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_ERTCO);
10013554:	2006      	movs	r0, #6
10013556:	f7fe fdf9 	bl	1001214c <MXC_SYS_ClockSourceEnable>
    switch (MXC_UART_GET_IDX(uart)) {
1001355a:	4b12      	ldr	r3, [pc, #72]	@ (100135a4 <MXC_UART_Init+0x98>)
1001355c:	429c      	cmp	r4, r3
1001355e:	d1e3      	bne.n	10013528 <MXC_UART_Init+0x1c>
        MXC_GPIO_Config(&gpio_cfg_uart0);
10013560:	4815      	ldr	r0, [pc, #84]	@ (100135b8 <MXC_UART_Init+0xac>)
10013562:	f7fe ff07 	bl	10012374 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART0);
10013566:	2009      	movs	r0, #9
10013568:	f7fe fdce 	bl	10012108 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
1001356c:	462a      	mov	r2, r5
1001356e:	4631      	mov	r1, r6
10013570:	4620      	mov	r0, r4
}
10013572:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
10013576:	f000 b8e5 	b.w	10013744 <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_IBRO);
1001357a:	2005      	movs	r0, #5
1001357c:	f7fe fde6 	bl	1001214c <MXC_SYS_ClockSourceEnable>
        break;
10013580:	e7cf      	b.n	10013522 <MXC_UART_Init+0x16>
        return E_BAD_PARAM;
10013582:	f06f 0002 	mvn.w	r0, #2
}
10013586:	bd70      	pop	{r4, r5, r6, pc}
        MXC_GPIO_Config(&gpio_cfg_uart1);
10013588:	480c      	ldr	r0, [pc, #48]	@ (100135bc <MXC_UART_Init+0xb0>)
1001358a:	f7fe fef3 	bl	10012374 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART1);
1001358e:	200a      	movs	r0, #10
10013590:	f7fe fdba 	bl	10012108 <MXC_SYS_ClockEnable>
        break;
10013594:	e7d7      	b.n	10013546 <MXC_UART_Init+0x3a>
        MXC_GPIO_Config(&gpio_cfg_uart2);
10013596:	480a      	ldr	r0, [pc, #40]	@ (100135c0 <MXC_UART_Init+0xb4>)
10013598:	f7fe feec 	bl	10012374 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART2);
1001359c:	2021      	movs	r0, #33	@ 0x21
1001359e:	f7fe fdb3 	bl	10012108 <MXC_SYS_ClockEnable>
        break;
100135a2:	e7d0      	b.n	10013546 <MXC_UART_Init+0x3a>
100135a4:	40042000 	.word	0x40042000
100135a8:	40043000 	.word	0x40043000
100135ac:	40044000 	.word	0x40044000
100135b0:	40081400 	.word	0x40081400
100135b4:	10023740 	.word	0x10023740
100135b8:	10023764 	.word	0x10023764
100135bc:	10023758 	.word	0x10023758
100135c0:	1002374c 	.word	0x1002374c

100135c4 <MXC_UART_SetFrequency>:
}

int MXC_UART_SetFrequency(mxc_uart_regs_t *uart, unsigned int baud, mxc_uart_clock_t clock)
{
    int frequency, clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX(uart) < 0) {
100135c4:	4b31      	ldr	r3, [pc, #196]	@ (1001368c <MXC_UART_SetFrequency+0xc8>)
100135c6:	4298      	cmp	r0, r3
{
100135c8:	b510      	push	{r4, lr}
100135ca:	4604      	mov	r4, r0
    if (MXC_UART_GET_IDX(uart) < 0) {
100135cc:	d015      	beq.n	100135fa <MXC_UART_SetFrequency+0x36>
100135ce:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100135d2:	4298      	cmp	r0, r3
100135d4:	d011      	beq.n	100135fa <MXC_UART_SetFrequency+0x36>
100135d6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100135da:	4298      	cmp	r0, r3
100135dc:	d00d      	beq.n	100135fa <MXC_UART_SetFrequency+0x36>
100135de:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
100135e2:	4298      	cmp	r0, r3
100135e4:	d106      	bne.n	100135f4 <MXC_UART_SetFrequency+0x30>
    }

    // check if the uart is LPUART
    if (uart == MXC_UART3) {
        // OSR default value
        uart->osr = 5;
100135e6:	2305      	movs	r3, #5

        switch (clock) {
100135e8:	2a02      	cmp	r2, #2
        uart->osr = 5;
100135ea:	6143      	str	r3, [r0, #20]
        switch (clock) {
100135ec:	d014      	beq.n	10013618 <MXC_UART_SetFrequency+0x54>
100135ee:	2a04      	cmp	r2, #4
100135f0:	d032      	beq.n	10013658 <MXC_UART_SetFrequency+0x94>
100135f2:	b18a      	cbz	r2, 10013618 <MXC_UART_SetFrequency+0x54>
        return E_BAD_PARAM;
100135f4:	f06f 0002 	mvn.w	r0, #2
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
    }

    return frequency;
}
100135f8:	bd10      	pop	{r4, pc}
        if (clock == MXC_UART_ERTCO_CLK) {
100135fa:	2a04      	cmp	r2, #4
100135fc:	d0fa      	beq.n	100135f4 <MXC_UART_SetFrequency+0x30>
        frequency = MXC_UART_RevB_SetFrequency((mxc_uart_revb_regs_t *)uart, baud, clock);
100135fe:	4620      	mov	r0, r4
10013600:	f000 f8d8 	bl	100137b4 <MXC_UART_RevB_SetFrequency>
    if (frequency > 0) {
10013604:	2800      	cmp	r0, #0
10013606:	ddf7      	ble.n	100135f8 <MXC_UART_SetFrequency+0x34>
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
10013608:	6823      	ldr	r3, [r4, #0]
1001360a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
1001360e:	6023      	str	r3, [r4, #0]
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
10013610:	6823      	ldr	r3, [r4, #0]
10013612:	031b      	lsls	r3, r3, #12
10013614:	d5fc      	bpl.n	10013610 <MXC_UART_SetFrequency+0x4c>
}
10013616:	bd10      	pop	{r4, pc}
            clkDiv = ((IBRO_FREQ) / baud);
10013618:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
1001361c:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((IBRO_FREQ) % baud);
10013620:	fb01 f203 	mul.w	r2, r1, r3
10013624:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        if (!clkDiv || mod > (baud / 2)) {
10013628:	b113      	cbz	r3, 10013630 <MXC_UART_SetFrequency+0x6c>
1001362a:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
1001362e:	d900      	bls.n	10013632 <MXC_UART_SetFrequency+0x6e>
            clkDiv++;
10013630:	3301      	adds	r3, #1
        uart->clkdiv = clkDiv;
10013632:	4a17      	ldr	r2, [pc, #92]	@ (10013690 <MXC_UART_SetFrequency+0xcc>)
10013634:	6113      	str	r3, [r2, #16]
        return E_BAD_PARAM;
    }

    // check if UARt is LP UART
    if (uart == MXC_UART3) {
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
10013636:	6810      	ldr	r0, [r2, #0]
10013638:	f400 3040 	and.w	r0, r0, #196608	@ 0x30000
1001363c:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
10013640:	d005      	beq.n	1001364e <MXC_UART_SetFrequency+0x8a>
            periphClock = ERTCO_FREQ * 2;
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
10013642:	6813      	ldr	r3, [r2, #0]
10013644:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
10013648:	d1d4      	bne.n	100135f4 <MXC_UART_SetFrequency+0x30>
1001364a:	f44f 00e1 	mov.w	r0, #7372800	@ 0x708000
                   MXC_S_UART_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
            periphClock = IBRO_FREQ;
        } else {
            return E_BAD_PARAM;
        }
        return (periphClock / uart->clkdiv);
1001364e:	4b10      	ldr	r3, [pc, #64]	@ (10013690 <MXC_UART_SetFrequency+0xcc>)
10013650:	691b      	ldr	r3, [r3, #16]
10013652:	fbb0 f0f3 	udiv	r0, r0, r3
10013656:	e7d5      	b.n	10013604 <MXC_UART_SetFrequency+0x40>
            uart->ctrl |= MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK;
10013658:	6803      	ldr	r3, [r0, #0]
1001365a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
1001365e:	6003      	str	r3, [r0, #0]
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
10013660:	6803      	ldr	r3, [r0, #0]
            if (baud > 2400) {
10013662:	f5b1 6f16 	cmp.w	r1, #2400	@ 0x960
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
10013666:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
1001366a:	6003      	str	r3, [r0, #0]
            if (baud > 2400) {
1001366c:	d90a      	bls.n	10013684 <MXC_UART_SetFrequency+0xc0>
                uart->osr = 0;
1001366e:	2300      	movs	r3, #0
10013670:	6143      	str	r3, [r0, #20]
            clkDiv = ((ERTCO_FREQ * 2) / baud);
10013672:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
10013676:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((ERTCO_FREQ * 2) % baud);
1001367a:	fb01 f203 	mul.w	r2, r1, r3
1001367e:	f5c2 3280 	rsb	r2, r2, #65536	@ 0x10000
10013682:	e7d1      	b.n	10013628 <MXC_UART_SetFrequency+0x64>
                uart->osr = 1;
10013684:	2301      	movs	r3, #1
10013686:	6143      	str	r3, [r0, #20]
10013688:	e7f3      	b.n	10013672 <MXC_UART_SetFrequency+0xae>
1001368a:	bf00      	nop
1001368c:	40042000 	.word	0x40042000
10013690:	40081400 	.word	0x40081400

10013694 <MXC_UART_GetFrequency>:
    if (MXC_UART_GET_IDX(uart) < 0) {
10013694:	4b12      	ldr	r3, [pc, #72]	@ (100136e0 <MXC_UART_GetFrequency+0x4c>)
10013696:	4298      	cmp	r0, r3
10013698:	d01c      	beq.n	100136d4 <MXC_UART_GetFrequency+0x40>
1001369a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001369e:	4298      	cmp	r0, r3
100136a0:	d018      	beq.n	100136d4 <MXC_UART_GetFrequency+0x40>
100136a2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100136a6:	4298      	cmp	r0, r3
100136a8:	d014      	beq.n	100136d4 <MXC_UART_GetFrequency+0x40>
100136aa:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
100136ae:	4298      	cmp	r0, r3
100136b0:	d112      	bne.n	100136d8 <MXC_UART_GetFrequency+0x44>
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
100136b2:	6803      	ldr	r3, [r0, #0]
100136b4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
100136b8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
100136bc:	d005      	beq.n	100136ca <MXC_UART_GetFrequency+0x36>
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
100136be:	6803      	ldr	r3, [r0, #0]
100136c0:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
100136c4:	d108      	bne.n	100136d8 <MXC_UART_GetFrequency+0x44>
100136c6:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        return (periphClock / uart->clkdiv);
100136ca:	4a06      	ldr	r2, [pc, #24]	@ (100136e4 <MXC_UART_GetFrequency+0x50>)
100136cc:	6910      	ldr	r0, [r2, #16]
100136ce:	fbb3 f0f0 	udiv	r0, r3, r0
100136d2:	4770      	bx	lr
    } else {
        return MXC_UART_RevB_GetFrequency((mxc_uart_revb_regs_t *)uart);
100136d4:	f000 b8ba 	b.w	1001384c <MXC_UART_RevB_GetFrequency>
        return E_BAD_PARAM;
100136d8:	f06f 0002 	mvn.w	r0, #2
    }
}
100136dc:	4770      	bx	lr
100136de:	bf00      	nop
100136e0:	40042000 	.word	0x40042000
100136e4:	40081400 	.word	0x40081400

100136e8 <MXC_UART_SetDataSize>:

int MXC_UART_SetDataSize(mxc_uart_regs_t *uart, int dataSize)
{
    return MXC_UART_RevB_SetDataSize((mxc_uart_revb_regs_t *)uart, dataSize);
100136e8:	f000 b8f0 	b.w	100138cc <MXC_UART_RevB_SetDataSize>

100136ec <MXC_UART_SetStopBits>:
}

int MXC_UART_SetStopBits(mxc_uart_regs_t *uart, mxc_uart_stop_t stopBits)
{
    return MXC_UART_RevB_SetStopBits((mxc_uart_revb_regs_t *)uart, stopBits);
100136ec:	f000 b90e 	b.w	1001390c <MXC_UART_RevB_SetStopBits>

100136f0 <MXC_UART_SetParity>:
}

int MXC_UART_SetParity(mxc_uart_regs_t *uart, mxc_uart_parity_t parity)
{
    return MXC_UART_RevB_SetParity((mxc_uart_revb_regs_t *)uart, parity);
100136f0:	f000 b930 	b.w	10013954 <MXC_UART_RevB_SetParity>

100136f4 <MXC_UART_ReadCharacterRaw>:
    return MXC_UART_RevB_AbortTransmission((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_ReadCharacterRaw(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_ReadCharacterRaw((mxc_uart_revb_regs_t *)uart);
100136f4:	f000 b984 	b.w	10013a00 <MXC_UART_RevB_ReadCharacterRaw>

100136f8 <MXC_UART_WriteCharacterRaw>:
}

int MXC_UART_WriteCharacterRaw(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_RevB_WriteCharacterRaw((mxc_uart_revb_regs_t *)uart, character);
100136f8:	f000 b99e 	b.w	10013a38 <MXC_UART_RevB_WriteCharacterRaw>

100136fc <MXC_UART_ReadCharacter>:
}

int MXC_UART_ReadCharacter(mxc_uart_regs_t *uart)
{
    return MXC_UART_Common_ReadCharacter(uart);
100136fc:	f000 b808 	b.w	10013710 <MXC_UART_Common_ReadCharacter>

10013700 <MXC_UART_WriteCharacter>:
}

int MXC_UART_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_Common_WriteCharacter(uart, character);
10013700:	f000 b812 	b.w	10013728 <MXC_UART_Common_WriteCharacter>

10013704 <MXC_UART_GetRXFIFOAvailable>:
    return MXC_UART_RevB_ReadRXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetRXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetRXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
10013704:	f000 b9b6 	b.w	10013a74 <MXC_UART_RevB_GetRXFIFOAvailable>

10013708 <MXC_UART_GetTXFIFOAvailable>:
    return MXC_UART_RevB_WriteTXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetTXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetTXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
10013708:	f000 b9b8 	b.w	10013a7c <MXC_UART_RevB_GetTXFIFOAvailable>

1001370c <MXC_UART_SetRXThreshold>:
    return MXC_UART_RevB_ClearTXFIFO((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_SetRXThreshold(mxc_uart_regs_t *uart, unsigned int numBytes)
{
    return MXC_UART_RevB_SetRXThreshold((mxc_uart_revb_regs_t *)uart, numBytes);
1001370c:	f000 b9bc 	b.w	10013a88 <MXC_UART_RevB_SetRXThreshold>

10013710 <MXC_UART_Common_ReadCharacter>:

#include "uart_common.h"
#include "uart.h"

int MXC_UART_Common_ReadCharacter(mxc_uart_regs_t *uart)
{
10013710:	b510      	push	{r4, lr}
10013712:	4604      	mov	r4, r0
    // Wait until FIFO has a character ready.
    while (MXC_UART_GetRXFIFOAvailable(uart) < 1) {}
10013714:	4620      	mov	r0, r4
10013716:	f7ff fff5 	bl	10013704 <MXC_UART_GetRXFIFOAvailable>
1001371a:	2800      	cmp	r0, #0
1001371c:	d0fa      	beq.n	10013714 <MXC_UART_Common_ReadCharacter+0x4>

    // Read the character using the non-blocking function.
    return MXC_UART_ReadCharacterRaw(uart);
1001371e:	4620      	mov	r0, r4
}
10013720:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_UART_ReadCharacterRaw(uart);
10013724:	f7ff bfe6 	b.w	100136f4 <MXC_UART_ReadCharacterRaw>

10013728 <MXC_UART_Common_WriteCharacter>:

int MXC_UART_Common_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
10013728:	b538      	push	{r3, r4, r5, lr}
1001372a:	4604      	mov	r4, r0
1001372c:	460d      	mov	r5, r1
    // Wait until FIFO has space for the character.
    while (MXC_UART_GetTXFIFOAvailable(uart) < 1) {}
1001372e:	4620      	mov	r0, r4
10013730:	f7ff ffea 	bl	10013708 <MXC_UART_GetTXFIFOAvailable>
10013734:	2800      	cmp	r0, #0
10013736:	d0fa      	beq.n	1001372e <MXC_UART_Common_WriteCharacter+0x6>

    // Write the character using the non-blocking function.
    return MXC_UART_WriteCharacterRaw(uart, character);
10013738:	4629      	mov	r1, r5
1001373a:	4620      	mov	r0, r4
}
1001373c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    return MXC_UART_WriteCharacterRaw(uart, character);
10013740:	f7ff bfda 	b.w	100136f8 <MXC_UART_WriteCharacterRaw>

10013744 <MXC_UART_RevB_Init>:
/* ************************************************************************* */
int MXC_UART_RevB_Init(mxc_uart_revb_regs_t *uart, unsigned int baud, mxc_uart_revb_clock_t clock)
{
    int err;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013744:	4b1a      	ldr	r3, [pc, #104]	@ (100137b0 <MXC_UART_RevB_Init+0x6c>)
10013746:	4298      	cmp	r0, r3
{
10013748:	b570      	push	{r4, r5, r6, lr}
1001374a:	4604      	mov	r4, r0
1001374c:	460d      	mov	r5, r1
1001374e:	4616      	mov	r6, r2
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013750:	d00b      	beq.n	1001376a <MXC_UART_RevB_Init+0x26>
10013752:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013756:	4298      	cmp	r0, r3
10013758:	d007      	beq.n	1001376a <MXC_UART_RevB_Init+0x26>
1001375a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001375e:	4298      	cmp	r0, r3
10013760:	d003      	beq.n	1001376a <MXC_UART_RevB_Init+0x26>
10013762:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10013766:	4298      	cmp	r0, r3
10013768:	d11f      	bne.n	100137aa <MXC_UART_RevB_Init+0x66>
        return E_BAD_PARAM;
    }

    // Initialize UART
    if ((err = MXC_UART_SetRXThreshold((mxc_uart_regs_t *)uart, 1)) !=
1001376a:	2101      	movs	r1, #1
1001376c:	4620      	mov	r0, r4
1001376e:	f7ff ffcd 	bl	1001370c <MXC_UART_SetRXThreshold>
10013772:	b100      	cbz	r0, 10013776 <MXC_UART_RevB_Init+0x32>
        E_NO_ERROR) {
        return err;
    }

    return E_NO_ERROR;
}
10013774:	bd70      	pop	{r4, r5, r6, pc}
    if ((err = MXC_UART_SetDataSize((mxc_uart_regs_t *)uart, 8)) !=
10013776:	2108      	movs	r1, #8
10013778:	4620      	mov	r0, r4
1001377a:	f7ff ffb5 	bl	100136e8 <MXC_UART_SetDataSize>
1001377e:	2800      	cmp	r0, #0
10013780:	d1f8      	bne.n	10013774 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetParity((mxc_uart_regs_t *)uart, MXC_UART_PARITY_DISABLE)) !=
10013782:	4601      	mov	r1, r0
10013784:	4620      	mov	r0, r4
10013786:	f7ff ffb3 	bl	100136f0 <MXC_UART_SetParity>
1001378a:	2800      	cmp	r0, #0
1001378c:	d1f2      	bne.n	10013774 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetStopBits((mxc_uart_regs_t *)uart, MXC_UART_STOP_1)) != E_NO_ERROR) {
1001378e:	4601      	mov	r1, r0
10013790:	4620      	mov	r0, r4
10013792:	f7ff ffab 	bl	100136ec <MXC_UART_SetStopBits>
10013796:	2800      	cmp	r0, #0
10013798:	d1ec      	bne.n	10013774 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetFrequency((mxc_uart_regs_t *)uart, baud, (mxc_uart_clock_t)clock)) <
1001379a:	4632      	mov	r2, r6
1001379c:	4629      	mov	r1, r5
1001379e:	4620      	mov	r0, r4
100137a0:	f7ff ff10 	bl	100135c4 <MXC_UART_SetFrequency>
100137a4:	ea00 70e0 	and.w	r0, r0, r0, asr #31
}
100137a8:	bd70      	pop	{r4, r5, r6, pc}
        return E_BAD_PARAM;
100137aa:	f06f 0002 	mvn.w	r0, #2
}
100137ae:	bd70      	pop	{r4, r5, r6, pc}
100137b0:	40042000 	.word	0x40042000

100137b4 <MXC_UART_RevB_SetFrequency>:

int MXC_UART_RevB_SetFrequency(mxc_uart_revb_regs_t *uart, unsigned int baud,
                               mxc_uart_revb_clock_t clock)
{
    unsigned clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100137b4:	4b22      	ldr	r3, [pc, #136]	@ (10013840 <MXC_UART_RevB_SetFrequency+0x8c>)
100137b6:	4298      	cmp	r0, r3
100137b8:	d00b      	beq.n	100137d2 <MXC_UART_RevB_SetFrequency+0x1e>
100137ba:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100137be:	4298      	cmp	r0, r3
100137c0:	d007      	beq.n	100137d2 <MXC_UART_RevB_SetFrequency+0x1e>
100137c2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100137c6:	4298      	cmp	r0, r3
100137c8:	d003      	beq.n	100137d2 <MXC_UART_RevB_SetFrequency+0x1e>
100137ca:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
100137ce:	4298      	cmp	r0, r3
100137d0:	d132      	bne.n	10013838 <MXC_UART_RevB_SetFrequency+0x84>
        return E_BAD_PARAM;
    }

    // OSR default value
    uart->osr = 5;
100137d2:	2305      	movs	r3, #5

    switch (clock) {
100137d4:	2a01      	cmp	r2, #1
{
100137d6:	b410      	push	{r4}
    uart->osr = 5;
100137d8:	6143      	str	r3, [r0, #20]
    switch (clock) {
100137da:	d023      	beq.n	10013824 <MXC_UART_RevB_SetFrequency+0x70>
100137dc:	2a02      	cmp	r2, #2
100137de:	d014      	beq.n	1001380a <MXC_UART_RevB_SetFrequency+0x56>
100137e0:	b11a      	cbz	r2, 100137ea <MXC_UART_RevB_SetFrequency+0x36>
    if (!clkDiv || mod > (baud / 2)) {
        clkDiv++;
    }
    uart->clkdiv = clkDiv;
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
}
100137e2:	f06f 0002 	mvn.w	r0, #2
100137e6:	bc10      	pop	{r4}
100137e8:	4770      	bx	lr
        clkDiv = (PeripheralClock / baud);
100137ea:	4b16      	ldr	r3, [pc, #88]	@ (10013844 <MXC_UART_RevB_SetFrequency+0x90>)
100137ec:	681a      	ldr	r2, [r3, #0]
100137ee:	0852      	lsrs	r2, r2, #1
100137f0:	fbb2 f3f1 	udiv	r3, r2, r1
        mod = (PeripheralClock % baud);
100137f4:	fb01 2213 	mls	r2, r1, r3, r2
    if (!clkDiv || mod > (baud / 2)) {
100137f8:	b113      	cbz	r3, 10013800 <MXC_UART_RevB_SetFrequency+0x4c>
100137fa:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
100137fe:	d900      	bls.n	10013802 <MXC_UART_RevB_SetFrequency+0x4e>
        clkDiv++;
10013800:	3301      	adds	r3, #1
}
10013802:	bc10      	pop	{r4}
    uart->clkdiv = clkDiv;
10013804:	6103      	str	r3, [r0, #16]
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
10013806:	f7ff bf45 	b.w	10013694 <MXC_UART_GetFrequency>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
1001380a:	6804      	ldr	r4, [r0, #0]
        clkDiv = (IBRO_FREQ / baud);
1001380c:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
10013810:	f444 3400 	orr.w	r4, r4, #131072	@ 0x20000
        clkDiv = (IBRO_FREQ / baud);
10013814:	fbb3 f3f1 	udiv	r3, r3, r1
        mod = (IBRO_FREQ % baud);
10013818:	fb01 f203 	mul.w	r2, r1, r3
1001381c:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
10013820:	6004      	str	r4, [r0, #0]
        break;
10013822:	e7e9      	b.n	100137f8 <MXC_UART_RevB_SetFrequency+0x44>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
10013824:	6804      	ldr	r4, [r0, #0]
        clkDiv = UART_EXTCLK_FREQ / baud;
10013826:	4a08      	ldr	r2, [pc, #32]	@ (10013848 <MXC_UART_RevB_SetFrequency+0x94>)
10013828:	fbb2 f3f1 	udiv	r3, r2, r1
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
1001382c:	f444 3480 	orr.w	r4, r4, #65536	@ 0x10000
10013830:	6004      	str	r4, [r0, #0]
        mod = UART_EXTCLK_FREQ % baud;
10013832:	fb01 2213 	mls	r2, r1, r3, r2
        break;
10013836:	e7df      	b.n	100137f8 <MXC_UART_RevB_SetFrequency+0x44>
}
10013838:	f06f 0002 	mvn.w	r0, #2
1001383c:	4770      	bx	lr
1001383e:	bf00      	nop
10013840:	40042000 	.word	0x40042000
10013844:	20001768 	.word	0x20001768
10013848:	047868c0 	.word	0x047868c0

1001384c <MXC_UART_RevB_GetFrequency>:

int MXC_UART_RevB_GetFrequency(mxc_uart_revb_regs_t *uart)
{
    int periphClock = 0;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1001384c:	4b1c      	ldr	r3, [pc, #112]	@ (100138c0 <MXC_UART_RevB_GetFrequency+0x74>)
1001384e:	4298      	cmp	r0, r3
10013850:	d00b      	beq.n	1001386a <MXC_UART_RevB_GetFrequency+0x1e>
10013852:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013856:	4298      	cmp	r0, r3
10013858:	d007      	beq.n	1001386a <MXC_UART_RevB_GetFrequency+0x1e>
1001385a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001385e:	4298      	cmp	r0, r3
10013860:	d003      	beq.n	1001386a <MXC_UART_RevB_GetFrequency+0x1e>
10013862:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10013866:	4298      	cmp	r0, r3
10013868:	d122      	bne.n	100138b0 <MXC_UART_RevB_GetFrequency+0x64>
        return E_BAD_PARAM;
    }

    if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
1001386a:	6803      	ldr	r3, [r0, #0]
1001386c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
10013870:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
10013874:	d017      	beq.n	100138a6 <MXC_UART_RevB_GetFrequency+0x5a>
        MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
        periphClock = UART_EXTCLK_FREQ;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
10013876:	6803      	ldr	r3, [r0, #0]
10013878:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
1001387c:	d00c      	beq.n	10013898 <MXC_UART_RevB_GetFrequency+0x4c>
               MXC_S_UART_REVB_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
        periphClock = PeripheralClock;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2) {
1001387e:	6803      	ldr	r3, [r0, #0]
10013880:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
10013884:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
10013888:	bf08      	it	eq
1001388a:	f44f 03e1 	moveq.w	r3, #7372800	@ 0x708000
1001388e:	d112      	bne.n	100138b6 <MXC_UART_RevB_GetFrequency+0x6a>
#endif
    } else {
        return E_BAD_PARAM;
    }

    return (periphClock / uart->clkdiv);
10013890:	6900      	ldr	r0, [r0, #16]
10013892:	fbb3 f0f0 	udiv	r0, r3, r0
10013896:	4770      	bx	lr
        periphClock = PeripheralClock;
10013898:	4b0a      	ldr	r3, [pc, #40]	@ (100138c4 <MXC_UART_RevB_GetFrequency+0x78>)
    return (periphClock / uart->clkdiv);
1001389a:	6900      	ldr	r0, [r0, #16]
        periphClock = PeripheralClock;
1001389c:	681b      	ldr	r3, [r3, #0]
1001389e:	085b      	lsrs	r3, r3, #1
    return (periphClock / uart->clkdiv);
100138a0:	fbb3 f0f0 	udiv	r0, r3, r0
100138a4:	4770      	bx	lr
100138a6:	4b08      	ldr	r3, [pc, #32]	@ (100138c8 <MXC_UART_RevB_GetFrequency+0x7c>)
100138a8:	6900      	ldr	r0, [r0, #16]
100138aa:	fbb3 f0f0 	udiv	r0, r3, r0
100138ae:	4770      	bx	lr
        return E_BAD_PARAM;
100138b0:	f06f 0002 	mvn.w	r0, #2
}
100138b4:	4770      	bx	lr
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK3) {
100138b6:	6803      	ldr	r3, [r0, #0]
        return E_BAD_PARAM;
100138b8:	f06f 0002 	mvn.w	r0, #2
        return E_BAD_PARAM;
100138bc:	4770      	bx	lr
100138be:	bf00      	nop
100138c0:	40042000 	.word	0x40042000
100138c4:	20001768 	.word	0x20001768
100138c8:	047868c0 	.word	0x047868c0

100138cc <MXC_UART_RevB_SetDataSize>:

int MXC_UART_RevB_SetDataSize(mxc_uart_revb_regs_t *uart, int dataSize)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100138cc:	4a0e      	ldr	r2, [pc, #56]	@ (10013908 <MXC_UART_RevB_SetDataSize+0x3c>)
100138ce:	4290      	cmp	r0, r2
{
100138d0:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100138d2:	d00b      	beq.n	100138ec <MXC_UART_RevB_SetDataSize+0x20>
100138d4:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
100138d8:	4290      	cmp	r0, r2
100138da:	d007      	beq.n	100138ec <MXC_UART_RevB_SetDataSize+0x20>
100138dc:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
100138e0:	4290      	cmp	r0, r2
100138e2:	d003      	beq.n	100138ec <MXC_UART_RevB_SetDataSize+0x20>
100138e4:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
100138e8:	4290      	cmp	r0, r2
100138ea:	d10a      	bne.n	10013902 <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    if (dataSize < 5 || dataSize > 8) {
100138ec:	3905      	subs	r1, #5
100138ee:	2903      	cmp	r1, #3
100138f0:	d807      	bhi.n	10013902 <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    dataSize = (dataSize - 5) << MXC_F_UART_REVB_CTRL_CHAR_SIZE_POS;

    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
100138f2:	681a      	ldr	r2, [r3, #0]
100138f4:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
100138f8:	ea42 2281 	orr.w	r2, r2, r1, lsl #10

    return E_NO_ERROR;
100138fc:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
100138fe:	601a      	str	r2, [r3, #0]
    return E_NO_ERROR;
10013900:	4770      	bx	lr
        return E_BAD_PARAM;
10013902:	f06f 0002 	mvn.w	r0, #2
}
10013906:	4770      	bx	lr
10013908:	40042000 	.word	0x40042000

1001390c <MXC_UART_RevB_SetStopBits>:

int MXC_UART_RevB_SetStopBits(mxc_uart_revb_regs_t *uart, mxc_uart_stop_t stopBits)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1001390c:	4b10      	ldr	r3, [pc, #64]	@ (10013950 <MXC_UART_RevB_SetStopBits+0x44>)
1001390e:	4298      	cmp	r0, r3
10013910:	d00b      	beq.n	1001392a <MXC_UART_RevB_SetStopBits+0x1e>
10013912:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013916:	4298      	cmp	r0, r3
10013918:	d007      	beq.n	1001392a <MXC_UART_RevB_SetStopBits+0x1e>
1001391a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001391e:	4298      	cmp	r0, r3
10013920:	d003      	beq.n	1001392a <MXC_UART_RevB_SetStopBits+0x1e>
10013922:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10013926:	4298      	cmp	r0, r3
10013928:	d108      	bne.n	1001393c <MXC_UART_RevB_SetStopBits+0x30>
        return E_BAD_PARAM;
    }

    switch (stopBits) {
1001392a:	b151      	cbz	r1, 10013942 <MXC_UART_RevB_SetStopBits+0x36>
1001392c:	2901      	cmp	r1, #1
1001392e:	d105      	bne.n	1001393c <MXC_UART_RevB_SetStopBits+0x30>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
                     0 << MXC_F_UART_REVB_CTRL_STOPBITS_POS);
        break;

    case MXC_UART_STOP_2:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
10013930:	6803      	ldr	r3, [r0, #0]
10013932:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
10013936:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
10013938:	2000      	movs	r0, #0
1001393a:	4770      	bx	lr
1001393c:	f06f 0002 	mvn.w	r0, #2
}
10013940:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
10013942:	6803      	ldr	r3, [r0, #0]
10013944:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
10013948:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
1001394a:	2000      	movs	r0, #0
1001394c:	4770      	bx	lr
1001394e:	bf00      	nop
10013950:	40042000 	.word	0x40042000

10013954 <MXC_UART_RevB_SetParity>:

int MXC_UART_RevB_SetParity(mxc_uart_revb_regs_t *uart, mxc_uart_parity_t parity)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013954:	4b29      	ldr	r3, [pc, #164]	@ (100139fc <MXC_UART_RevB_SetParity+0xa8>)
10013956:	4298      	cmp	r0, r3
10013958:	d00b      	beq.n	10013972 <MXC_UART_RevB_SetParity+0x1e>
1001395a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001395e:	4298      	cmp	r0, r3
10013960:	d007      	beq.n	10013972 <MXC_UART_RevB_SetParity+0x1e>
10013962:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013966:	4298      	cmp	r0, r3
10013968:	d003      	beq.n	10013972 <MXC_UART_RevB_SetParity+0x1e>
1001396a:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1001396e:	4298      	cmp	r0, r3
10013970:	d141      	bne.n	100139f6 <MXC_UART_RevB_SetParity+0xa2>
        return E_BAD_PARAM;
    }

    switch (parity) {
10013972:	2904      	cmp	r1, #4
10013974:	d83f      	bhi.n	100139f6 <MXC_UART_RevB_SetParity+0xa2>
10013976:	e8df f001 	tbb	[pc, r1]
1001397a:	1711      	.short	0x1711
1001397c:	3124      	.short	0x3124
1001397e:	03          	.byte	0x03
1001397f:	00          	.byte	0x00
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
        break;

    case MXC_UART_PARITY_ODD_1:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10013980:	6803      	ldr	r3, [r0, #0]
10013982:	f043 0310 	orr.w	r3, r3, #16
10013986:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10013988:	6803      	ldr	r3, [r0, #0]
1001398a:	f043 0320 	orr.w	r3, r3, #32
1001398e:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10013990:	6803      	ldr	r3, [r0, #0]
10013992:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013996:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
10013998:	2000      	movs	r0, #0
1001399a:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 0 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1001399c:	6803      	ldr	r3, [r0, #0]
1001399e:	f023 0310 	bic.w	r3, r3, #16
100139a2:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
100139a4:	2000      	movs	r0, #0
100139a6:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
100139a8:	6803      	ldr	r3, [r0, #0]
100139aa:	f043 0310 	orr.w	r3, r3, #16
100139ae:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
100139b0:	6803      	ldr	r3, [r0, #0]
100139b2:	f023 0320 	bic.w	r3, r3, #32
100139b6:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
100139b8:	6803      	ldr	r3, [r0, #0]
100139ba:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
100139be:	6003      	str	r3, [r0, #0]
        break;
100139c0:	e7ea      	b.n	10013998 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
100139c2:	6803      	ldr	r3, [r0, #0]
100139c4:	f043 0310 	orr.w	r3, r3, #16
100139c8:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
100139ca:	6803      	ldr	r3, [r0, #0]
100139cc:	f023 0320 	bic.w	r3, r3, #32
100139d0:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
100139d2:	6803      	ldr	r3, [r0, #0]
100139d4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100139d8:	6003      	str	r3, [r0, #0]
        break;
100139da:	e7dd      	b.n	10013998 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
100139dc:	6803      	ldr	r3, [r0, #0]
100139de:	f043 0310 	orr.w	r3, r3, #16
100139e2:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
100139e4:	6803      	ldr	r3, [r0, #0]
100139e6:	f043 0320 	orr.w	r3, r3, #32
100139ea:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
100139ec:	6803      	ldr	r3, [r0, #0]
100139ee:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
100139f2:	6003      	str	r3, [r0, #0]
        break;
100139f4:	e7d0      	b.n	10013998 <MXC_UART_RevB_SetParity+0x44>
    switch (parity) {
100139f6:	f06f 0002 	mvn.w	r0, #2
}
100139fa:	4770      	bx	lr
100139fc:	40042000 	.word	0x40042000

10013a00 <MXC_UART_RevB_ReadCharacterRaw>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_ReadCharacterRaw(mxc_uart_revb_regs_t *uart)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013a00:	4b0c      	ldr	r3, [pc, #48]	@ (10013a34 <MXC_UART_RevB_ReadCharacterRaw+0x34>)
10013a02:	4298      	cmp	r0, r3
10013a04:	d00b      	beq.n	10013a1e <MXC_UART_RevB_ReadCharacterRaw+0x1e>
10013a06:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013a0a:	4298      	cmp	r0, r3
10013a0c:	d007      	beq.n	10013a1e <MXC_UART_RevB_ReadCharacterRaw+0x1e>
10013a0e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013a12:	4298      	cmp	r0, r3
10013a14:	d003      	beq.n	10013a1e <MXC_UART_RevB_ReadCharacterRaw+0x1e>
10013a16:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10013a1a:	4298      	cmp	r0, r3
10013a1c:	d104      	bne.n	10013a28 <MXC_UART_RevB_ReadCharacterRaw+0x28>
        return E_BAD_PARAM;
    }

    if (uart->status & MXC_F_UART_REVB_STATUS_RX_EM) {
10013a1e:	6843      	ldr	r3, [r0, #4]
10013a20:	06db      	lsls	r3, r3, #27
10013a22:	d404      	bmi.n	10013a2e <MXC_UART_RevB_ReadCharacterRaw+0x2e>
        return E_UNDERFLOW;
    }

    return uart->fifo;
10013a24:	6a00      	ldr	r0, [r0, #32]
10013a26:	4770      	bx	lr
        return E_BAD_PARAM;
10013a28:	f06f 0002 	mvn.w	r0, #2
10013a2c:	4770      	bx	lr
        return E_UNDERFLOW;
10013a2e:	f06f 000c 	mvn.w	r0, #12
}
10013a32:	4770      	bx	lr
10013a34:	40042000 	.word	0x40042000

10013a38 <MXC_UART_RevB_WriteCharacterRaw>:

int MXC_UART_RevB_WriteCharacterRaw(mxc_uart_revb_regs_t *uart, uint8_t character)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013a38:	4a0d      	ldr	r2, [pc, #52]	@ (10013a70 <MXC_UART_RevB_WriteCharacterRaw+0x38>)
10013a3a:	4290      	cmp	r0, r2
{
10013a3c:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013a3e:	d00b      	beq.n	10013a58 <MXC_UART_RevB_WriteCharacterRaw+0x20>
10013a40:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10013a44:	4290      	cmp	r0, r2
10013a46:	d007      	beq.n	10013a58 <MXC_UART_RevB_WriteCharacterRaw+0x20>
10013a48:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10013a4c:	4290      	cmp	r0, r2
10013a4e:	d003      	beq.n	10013a58 <MXC_UART_RevB_WriteCharacterRaw+0x20>
10013a50:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
10013a54:	4290      	cmp	r0, r2
10013a56:	d105      	bne.n	10013a64 <MXC_UART_RevB_WriteCharacterRaw+0x2c>
        return E_BAD_PARAM;
    }

    // Require the TX FIFO to be empty, so that we write out the expected character
    // Return error if the FIFO is full
    if (uart->status & MXC_F_UART_REVB_STATUS_TX_FULL) {
10013a58:	6858      	ldr	r0, [r3, #4]
10013a5a:	f010 0080 	ands.w	r0, r0, #128	@ 0x80
10013a5e:	d104      	bne.n	10013a6a <MXC_UART_RevB_WriteCharacterRaw+0x32>
        return E_OVERFLOW;
    }

    uart->fifo = character;
10013a60:	6219      	str	r1, [r3, #32]

    return E_NO_ERROR;
10013a62:	4770      	bx	lr
        return E_BAD_PARAM;
10013a64:	f06f 0002 	mvn.w	r0, #2
10013a68:	4770      	bx	lr
        return E_OVERFLOW;
10013a6a:	f06f 000b 	mvn.w	r0, #11
}
10013a6e:	4770      	bx	lr
10013a70:	40042000 	.word	0x40042000

10013a74 <MXC_UART_RevB_GetRXFIFOAvailable>:
    return read;
}

unsigned int MXC_UART_RevB_GetRXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    return (uart->status & MXC_F_UART_REVB_STATUS_RX_LVL) >> MXC_F_UART_REVB_STATUS_RX_LVL_POS;
10013a74:	6840      	ldr	r0, [r0, #4]
}
10013a76:	f3c0 2003 	ubfx	r0, r0, #8, #4
10013a7a:	4770      	bx	lr

10013a7c <MXC_UART_RevB_GetTXFIFOAvailable>:
    return written;
}

unsigned int MXC_UART_RevB_GetTXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    int txCnt = (uart->status & MXC_F_UART_REVB_STATUS_TX_LVL) >> MXC_F_UART_REVB_STATUS_TX_LVL_POS;
10013a7c:	6840      	ldr	r0, [r0, #4]
10013a7e:	f3c0 3003 	ubfx	r0, r0, #12, #4
    return MXC_UART_FIFO_DEPTH - txCnt;
}
10013a82:	f1c0 0008 	rsb	r0, r0, #8
10013a86:	4770      	bx	lr

10013a88 <MXC_UART_RevB_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_SetRXThreshold(mxc_uart_revb_regs_t *uart, unsigned int numBytes)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013a88:	4a0e      	ldr	r2, [pc, #56]	@ (10013ac4 <MXC_UART_RevB_SetRXThreshold+0x3c>)
10013a8a:	4290      	cmp	r0, r2
{
10013a8c:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013a8e:	d00b      	beq.n	10013aa8 <MXC_UART_RevB_SetRXThreshold+0x20>
10013a90:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10013a94:	4290      	cmp	r0, r2
10013a96:	d007      	beq.n	10013aa8 <MXC_UART_RevB_SetRXThreshold+0x20>
10013a98:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10013a9c:	4290      	cmp	r0, r2
10013a9e:	d003      	beq.n	10013aa8 <MXC_UART_RevB_SetRXThreshold+0x20>
10013aa0:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
10013aa4:	4290      	cmp	r0, r2
10013aa6:	d109      	bne.n	10013abc <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    if (numBytes < 1 || numBytes > MXC_UART_FIFO_DEPTH) {
10013aa8:	1e4a      	subs	r2, r1, #1
10013aaa:	2a07      	cmp	r2, #7
10013aac:	d806      	bhi.n	10013abc <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    numBytes <<= MXC_F_UART_REVB_CTRL_RX_THD_VAL_POS;
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
10013aae:	681a      	ldr	r2, [r3, #0]
10013ab0:	f022 020f 	bic.w	r2, r2, #15
10013ab4:	4311      	orrs	r1, r2

    return E_NO_ERROR;
10013ab6:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
10013ab8:	6019      	str	r1, [r3, #0]
    return E_NO_ERROR;
10013aba:	4770      	bx	lr
        return E_BAD_PARAM;
10013abc:	f06f 0002 	mvn.w	r0, #2
}
10013ac0:	4770      	bx	lr
10013ac2:	bf00      	nop
10013ac4:	40042000 	.word	0x40042000

10013ac8 <MXC_GPIO_Common_Init>:
static void *cbparam[MXC_CFG_GPIO_INSTANCES][MXC_CFG_GPIO_PINS_PORT];
static uint8_t initialized = 0;

/* **** Functions **** */
int MXC_GPIO_Common_Init(uint32_t portmask)
{
10013ac8:	b510      	push	{r4, lr}
    if (!initialized) {
10013aca:	4c06      	ldr	r4, [pc, #24]	@ (10013ae4 <MXC_GPIO_Common_Init+0x1c>)
10013acc:	7821      	ldrb	r1, [r4, #0]
10013ace:	b931      	cbnz	r1, 10013ade <MXC_GPIO_Common_Init+0x16>
        int i, j;

        for (i = 0; i < MXC_CFG_GPIO_INSTANCES; i++) {
            // Initialize call back arrays
            for (j = 0; j < MXC_CFG_GPIO_PINS_PORT; j++) {
                callback[i][j] = NULL;
10013ad0:	4805      	ldr	r0, [pc, #20]	@ (10013ae8 <MXC_GPIO_Common_Init+0x20>)
10013ad2:	f44f 7200 	mov.w	r2, #512	@ 0x200
10013ad6:	f002 f919 	bl	10015d0c <memset>
            }
        }

        initialized = 1;
10013ada:	2301      	movs	r3, #1
10013adc:	7023      	strb	r3, [r4, #0]
    }

    return E_NO_ERROR;
}
10013ade:	2000      	movs	r0, #0
10013ae0:	bd10      	pop	{r4, pc}
10013ae2:	bf00      	nop
10013ae4:	20001050 	.word	0x20001050
10013ae8:	20001254 	.word	0x20001254

10013aec <MXC_GPIO_Common_Handler>:
void MXC_GPIO_Common_Handler(unsigned int port)
{
    uint32_t stat;
    unsigned int pin;

    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
10013aec:	2803      	cmp	r0, #3
{
10013aee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10013af0:	4607      	mov	r7, r0
    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
10013af2:	d81d      	bhi.n	10013b30 <MXC_GPIO_Common_Handler+0x44>

    mxc_gpio_regs_t *gpio = MXC_GPIO_GET_GPIO(port);
10013af4:	bb18      	cbnz	r0, 10013b3e <MXC_GPIO_Common_Handler+0x52>
10013af6:	4d14      	ldr	r5, [pc, #80]	@ (10013b48 <MXC_GPIO_Common_Handler+0x5c>)

    stat = MXC_GPIO_GetFlags(gpio);
10013af8:	4628      	mov	r0, r5
10013afa:	f7fe fd7d 	bl	100125f8 <MXC_GPIO_GetFlags>
10013afe:	4604      	mov	r4, r0
    MXC_GPIO_ClearFlags(gpio, stat);
10013b00:	4601      	mov	r1, r0
10013b02:	4628      	mov	r0, r5
10013b04:	f7fe fd6c 	bl	100125e0 <MXC_GPIO_ClearFlags>

    pin = 0;

    while (stat) {
10013b08:	b18c      	cbz	r4, 10013b2e <MXC_GPIO_Common_Handler+0x42>
10013b0a:	4e10      	ldr	r6, [pc, #64]	@ (10013b4c <MXC_GPIO_Common_Handler+0x60>)
10013b0c:	4d10      	ldr	r5, [pc, #64]	@ (10013b50 <MXC_GPIO_Common_Handler+0x64>)
10013b0e:	eb06 16c7 	add.w	r6, r6, r7, lsl #7
10013b12:	eb05 15c7 	add.w	r5, r5, r7, lsl #7
        if (stat & 1) {
10013b16:	07e3      	lsls	r3, r4, #31
10013b18:	d503      	bpl.n	10013b22 <MXC_GPIO_Common_Handler+0x36>
            if (callback[port][pin]) {
10013b1a:	682b      	ldr	r3, [r5, #0]
10013b1c:	b10b      	cbz	r3, 10013b22 <MXC_GPIO_Common_Handler+0x36>
                callback[port][pin](cbparam[port][pin]);
10013b1e:	6830      	ldr	r0, [r6, #0]
10013b20:	4798      	blx	r3
    while (stat) {
10013b22:	0864      	lsrs	r4, r4, #1
10013b24:	f106 0604 	add.w	r6, r6, #4
10013b28:	f105 0504 	add.w	r5, r5, #4
10013b2c:	d1f3      	bne.n	10013b16 <MXC_GPIO_Common_Handler+0x2a>
        }

        pin++;
        stat >>= 1;
    }
}
10013b2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
10013b30:	4908      	ldr	r1, [pc, #32]	@ (10013b54 <MXC_GPIO_Common_Handler+0x68>)
10013b32:	4809      	ldr	r0, [pc, #36]	@ (10013b58 <MXC_GPIO_Common_Handler+0x6c>)
10013b34:	225a      	movs	r2, #90	@ 0x5a
10013b36:	f7fd ff77 	bl	10011a28 <mxc_assert>
10013b3a:	2500      	movs	r5, #0
10013b3c:	e7dc      	b.n	10013af8 <MXC_GPIO_Common_Handler+0xc>
10013b3e:	4b07      	ldr	r3, [pc, #28]	@ (10013b5c <MXC_GPIO_Common_Handler+0x70>)
10013b40:	1e42      	subs	r2, r0, #1
10013b42:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
10013b46:	e7d7      	b.n	10013af8 <MXC_GPIO_Common_Handler+0xc>
10013b48:	40008000 	.word	0x40008000
10013b4c:	20001054 	.word	0x20001054
10013b50:	20001254 	.word	0x20001254
10013b54:	100237a0 	.word	0x100237a0
10013b58:	100237f0 	.word	0x100237f0
10013b5c:	10023810 	.word	0x10023810

10013b60 <strncpy>:
10013b60:	ea40 0301 	orr.w	r3, r0, r1
10013b64:	079b      	lsls	r3, r3, #30
10013b66:	b510      	push	{r4, lr}
10013b68:	d101      	bne.n	10013b6e <strncpy+0xe>
10013b6a:	2a03      	cmp	r2, #3
10013b6c:	d817      	bhi.n	10013b9e <strncpy+0x3e>
10013b6e:	4684      	mov	ip, r0
10013b70:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
10013b74:	e007      	b.n	10013b86 <strncpy+0x26>
10013b76:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
10013b7a:	f803 1b01 	strb.w	r1, [r3], #1
10013b7e:	1e54      	subs	r4, r2, #1
10013b80:	b129      	cbz	r1, 10013b8e <strncpy+0x2e>
10013b82:	469c      	mov	ip, r3
10013b84:	4622      	mov	r2, r4
10013b86:	4663      	mov	r3, ip
10013b88:	2a00      	cmp	r2, #0
10013b8a:	d1f4      	bne.n	10013b76 <strncpy+0x16>
10013b8c:	bd10      	pop	{r4, pc}
10013b8e:	4494      	add	ip, r2
10013b90:	2c00      	cmp	r4, #0
10013b92:	d0fb      	beq.n	10013b8c <strncpy+0x2c>
10013b94:	f803 1b01 	strb.w	r1, [r3], #1
10013b98:	4563      	cmp	r3, ip
10013b9a:	d1fb      	bne.n	10013b94 <strncpy+0x34>
10013b9c:	bd10      	pop	{r4, pc}
10013b9e:	468e      	mov	lr, r1
10013ba0:	4684      	mov	ip, r0
10013ba2:	f8de 4000 	ldr.w	r4, [lr]
10013ba6:	f1a4 3301 	sub.w	r3, r4, #16843009	@ 0x1010101
10013baa:	ea23 0304 	bic.w	r3, r3, r4
10013bae:	f013 3f80 	tst.w	r3, #2155905152	@ 0x80808080
10013bb2:	4671      	mov	r1, lr
10013bb4:	f10e 0e04 	add.w	lr, lr, #4
10013bb8:	d1da      	bne.n	10013b70 <strncpy+0x10>
10013bba:	3a04      	subs	r2, #4
10013bbc:	2a03      	cmp	r2, #3
10013bbe:	f84c 4b04 	str.w	r4, [ip], #4
10013bc2:	d8ee      	bhi.n	10013ba2 <strncpy+0x42>
10013bc4:	4671      	mov	r1, lr
10013bc6:	e7d3      	b.n	10013b70 <strncpy+0x10>

10013bc8 <sscanf>:
10013bc8:	b40e      	push	{r1, r2, r3}
10013bca:	b530      	push	{r4, r5, lr}
10013bcc:	b09c      	sub	sp, #112	@ 0x70
10013bce:	ac1f      	add	r4, sp, #124	@ 0x7c
10013bd0:	f44f 7201 	mov.w	r2, #516	@ 0x204
10013bd4:	f854 5b04 	ldr.w	r5, [r4], #4
10013bd8:	f8ad 2014 	strh.w	r2, [sp, #20]
10013bdc:	9002      	str	r0, [sp, #8]
10013bde:	9006      	str	r0, [sp, #24]
10013be0:	f002 fece 	bl	10016980 <strlen>
10013be4:	9003      	str	r0, [sp, #12]
10013be6:	9007      	str	r0, [sp, #28]
10013be8:	480a      	ldr	r0, [pc, #40]	@ (10013c14 <sscanf+0x4c>)
10013bea:	490b      	ldr	r1, [pc, #44]	@ (10013c18 <sscanf+0x50>)
10013bec:	910a      	str	r1, [sp, #40]	@ 0x28
10013bee:	2300      	movs	r3, #0
10013bf0:	f64f 7cff 	movw	ip, #65535	@ 0xffff
10013bf4:	930e      	str	r3, [sp, #56]	@ 0x38
10013bf6:	9313      	str	r3, [sp, #76]	@ 0x4c
10013bf8:	462a      	mov	r2, r5
10013bfa:	4623      	mov	r3, r4
10013bfc:	a902      	add	r1, sp, #8
10013bfe:	6800      	ldr	r0, [r0, #0]
10013c00:	f8ad c016 	strh.w	ip, [sp, #22]
10013c04:	9401      	str	r4, [sp, #4]
10013c06:	f000 f86f 	bl	10013ce8 <__ssvfscanf_r>
10013c0a:	b01c      	add	sp, #112	@ 0x70
10013c0c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
10013c10:	b003      	add	sp, #12
10013c12:	4770      	bx	lr
10013c14:	20000590 	.word	0x20000590
10013c18:	10013c41 	.word	0x10013c41

10013c1c <__sread>:
10013c1c:	b510      	push	{r4, lr}
10013c1e:	460c      	mov	r4, r1
10013c20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10013c24:	f005 f98e 	bl	10018f44 <_read_r>
10013c28:	2800      	cmp	r0, #0
10013c2a:	db03      	blt.n	10013c34 <__sread+0x18>
10013c2c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
10013c2e:	4403      	add	r3, r0
10013c30:	6523      	str	r3, [r4, #80]	@ 0x50
10013c32:	bd10      	pop	{r4, pc}
10013c34:	89a3      	ldrh	r3, [r4, #12]
10013c36:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
10013c3a:	81a3      	strh	r3, [r4, #12]
10013c3c:	bd10      	pop	{r4, pc}
10013c3e:	bf00      	nop

10013c40 <__seofread>:
10013c40:	2000      	movs	r0, #0
10013c42:	4770      	bx	lr

10013c44 <__swrite>:
10013c44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10013c48:	460c      	mov	r4, r1
10013c4a:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
10013c4e:	461f      	mov	r7, r3
10013c50:	05cb      	lsls	r3, r1, #23
10013c52:	4605      	mov	r5, r0
10013c54:	4616      	mov	r6, r2
10013c56:	d40b      	bmi.n	10013c70 <__swrite+0x2c>
10013c58:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
10013c5c:	81a1      	strh	r1, [r4, #12]
10013c5e:	463b      	mov	r3, r7
10013c60:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10013c64:	4632      	mov	r2, r6
10013c66:	4628      	mov	r0, r5
10013c68:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
10013c6c:	f000 b820 	b.w	10013cb0 <_write_r>
10013c70:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10013c74:	2302      	movs	r3, #2
10013c76:	2200      	movs	r2, #0
10013c78:	f005 f94e 	bl	10018f18 <_lseek_r>
10013c7c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
10013c80:	e7ea      	b.n	10013c58 <__swrite+0x14>
10013c82:	bf00      	nop

10013c84 <__sseek>:
10013c84:	b510      	push	{r4, lr}
10013c86:	460c      	mov	r4, r1
10013c88:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10013c8c:	f005 f944 	bl	10018f18 <_lseek_r>
10013c90:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013c94:	1c42      	adds	r2, r0, #1
10013c96:	bf0e      	itee	eq
10013c98:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
10013c9c:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
10013ca0:	6520      	strne	r0, [r4, #80]	@ 0x50
10013ca2:	81a3      	strh	r3, [r4, #12]
10013ca4:	bd10      	pop	{r4, pc}
10013ca6:	bf00      	nop

10013ca8 <__sclose>:
10013ca8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10013cac:	f002 bbd8 	b.w	10016460 <_close_r>

10013cb0 <_write_r>:
10013cb0:	b538      	push	{r3, r4, r5, lr}
10013cb2:	460c      	mov	r4, r1
10013cb4:	4d08      	ldr	r5, [pc, #32]	@ (10013cd8 <_write_r+0x28>)
10013cb6:	4684      	mov	ip, r0
10013cb8:	4611      	mov	r1, r2
10013cba:	4620      	mov	r0, r4
10013cbc:	461a      	mov	r2, r3
10013cbe:	2300      	movs	r3, #0
10013cc0:	602b      	str	r3, [r5, #0]
10013cc2:	4664      	mov	r4, ip
10013cc4:	f7fd ff30 	bl	10011b28 <_write>
10013cc8:	1c43      	adds	r3, r0, #1
10013cca:	d000      	beq.n	10013cce <_write_r+0x1e>
10013ccc:	bd38      	pop	{r3, r4, r5, pc}
10013cce:	682b      	ldr	r3, [r5, #0]
10013cd0:	2b00      	cmp	r3, #0
10013cd2:	d0fb      	beq.n	10013ccc <_write_r+0x1c>
10013cd4:	6023      	str	r3, [r4, #0]
10013cd6:	bd38      	pop	{r3, r4, r5, pc}
10013cd8:	20001498 	.word	0x20001498

10013cdc <__errno>:
10013cdc:	4b01      	ldr	r3, [pc, #4]	@ (10013ce4 <__errno+0x8>)
10013cde:	6818      	ldr	r0, [r3, #0]
10013ce0:	4770      	bx	lr
10013ce2:	bf00      	nop
10013ce4:	20000590 	.word	0x20000590

10013ce8 <__ssvfscanf_r>:
10013ce8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10013cec:	f5ad 7d37 	sub.w	sp, sp, #732	@ 0x2dc
10013cf0:	468a      	mov	sl, r1
10013cf2:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
10013cf6:	af02      	add	r7, sp, #8
10013cf8:	048c      	lsls	r4, r1, #18
10013cfa:	64f8      	str	r0, [r7, #76]	@ 0x4c
10013cfc:	4615      	mov	r5, r2
10013cfe:	637b      	str	r3, [r7, #52]	@ 0x34
10013d00:	d409      	bmi.n	10013d16 <__ssvfscanf_r+0x2e>
10013d02:	f8da 3064 	ldr.w	r3, [sl, #100]	@ 0x64
10013d06:	f441 5100 	orr.w	r1, r1, #8192	@ 0x2000
10013d0a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
10013d0e:	f8aa 100c 	strh.w	r1, [sl, #12]
10013d12:	f8ca 3064 	str.w	r3, [sl, #100]	@ 0x64
10013d16:	2300      	movs	r3, #0
10013d18:	461c      	mov	r4, r3
10013d1a:	2208      	movs	r2, #8
10013d1c:	4619      	mov	r1, r3
10013d1e:	f107 0058 	add.w	r0, r7, #88	@ 0x58
10013d22:	62bb      	str	r3, [r7, #40]	@ 0x28
10013d24:	46a1      	mov	r9, r4
10013d26:	f001 fff1 	bl	10015d0c <memset>
10013d2a:	46a8      	mov	r8, r5
10013d2c:	63fc      	str	r4, [r7, #60]	@ 0x3c
10013d2e:	627c      	str	r4, [r7, #36]	@ 0x24
10013d30:	63bc      	str	r4, [r7, #56]	@ 0x38
10013d32:	643c      	str	r4, [r7, #64]	@ 0x40
10013d34:	4b83      	ldr	r3, [pc, #524]	@ (10013f44 <__ssvfscanf_r+0x25c>)
10013d36:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
10013d3a:	f002 f87d 	bl	10015e38 <__locale_mb_cur_max>
10013d3e:	f107 0258 	add.w	r2, r7, #88	@ 0x58
10013d42:	9200      	str	r2, [sp, #0]
10013d44:	4603      	mov	r3, r0
10013d46:	4642      	mov	r2, r8
10013d48:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10013d4a:	f107 0154 	add.w	r1, r7, #84	@ 0x54
10013d4e:	47a0      	blx	r4
10013d50:	2800      	cmp	r0, #0
10013d52:	db4c      	blt.n	10013dee <__ssvfscanf_r+0x106>
10013d54:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
10013d56:	4480      	add	r8, r0
10013d58:	4606      	mov	r6, r0
10013d5a:	2b00      	cmp	r3, #0
10013d5c:	f000 85a8 	beq.w	100148b0 <__ssvfscanf_r+0xbc8>
10013d60:	2801      	cmp	r0, #1
10013d62:	d053      	beq.n	10013e0c <__ssvfscanf_r+0x124>
10013d64:	2b25      	cmp	r3, #37	@ 0x25
10013d66:	d05a      	beq.n	10013e1e <__ssvfscanf_r+0x136>
10013d68:	2800      	cmp	r0, #0
10013d6a:	d0e3      	beq.n	10013d34 <__ssvfscanf_r+0x4c>
10013d6c:	f8da 3004 	ldr.w	r3, [sl, #4]
10013d70:	461a      	mov	r2, r3
10013d72:	eba8 0606 	sub.w	r6, r8, r6
10013d76:	3801      	subs	r0, #1
10013d78:	2a00      	cmp	r2, #0
10013d7a:	eb06 0400 	add.w	r4, r6, r0
10013d7e:	f106 35ff 	add.w	r5, r6, #4294967295	@ 0xffffffff
10013d82:	dd17      	ble.n	10013db4 <__ssvfscanf_r+0xcc>
10013d84:	f8da 3000 	ldr.w	r3, [sl]
10013d88:	786a      	ldrb	r2, [r5, #1]
10013d8a:	7818      	ldrb	r0, [r3, #0]
10013d8c:	4290      	cmp	r0, r2
10013d8e:	f103 0301 	add.w	r3, r3, #1
10013d92:	f105 0101 	add.w	r1, r5, #1
10013d96:	f040 858b 	bne.w	100148b0 <__ssvfscanf_r+0xbc8>
10013d9a:	f8da 2004 	ldr.w	r2, [sl, #4]
10013d9e:	f8ca 3000 	str.w	r3, [sl]
10013da2:	3a01      	subs	r2, #1
10013da4:	428c      	cmp	r4, r1
10013da6:	f8ca 2004 	str.w	r2, [sl, #4]
10013daa:	f000 809b 	beq.w	10013ee4 <__ssvfscanf_r+0x1fc>
10013dae:	2a00      	cmp	r2, #0
10013db0:	460d      	mov	r5, r1
10013db2:	dce7      	bgt.n	10013d84 <__ssvfscanf_r+0x9c>
10013db4:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10013db6:	4651      	mov	r1, sl
10013db8:	f005 fc40 	bl	1001963c <__ssrefill_r>
10013dbc:	2800      	cmp	r0, #0
10013dbe:	d0e1      	beq.n	10013d84 <__ssvfscanf_r+0x9c>
10013dc0:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10013dc2:	2b00      	cmp	r3, #0
10013dc4:	f001 81e3 	beq.w	1001518e <__ssvfscanf_r+0x14a6>
10013dc8:	f8ba 300c 	ldrh.w	r3, [sl, #12]
10013dcc:	f013 0f40 	tst.w	r3, #64	@ 0x40
10013dd0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10013dd2:	f041 81dd 	bne.w	10015190 <__ssvfscanf_r+0x14a8>
10013dd6:	b123      	cbz	r3, 10013de2 <__ssvfscanf_r+0xfa>
10013dd8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10013dda:	6818      	ldr	r0, [r3, #0]
10013ddc:	b108      	cbz	r0, 10013de2 <__ssvfscanf_r+0xfa>
10013dde:	f001 fc1f 	bl	10015620 <free>
10013de2:	6c38      	ldr	r0, [r7, #64]	@ 0x40
10013de4:	f507 7735 	add.w	r7, r7, #724	@ 0x2d4
10013de8:	46bd      	mov	sp, r7
10013dea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10013dee:	f64f 73fd 	movw	r3, #65533	@ 0xfffd
10013df2:	2208      	movs	r2, #8
10013df4:	2100      	movs	r1, #0
10013df6:	f107 0058 	add.w	r0, r7, #88	@ 0x58
10013dfa:	657b      	str	r3, [r7, #84]	@ 0x54
10013dfc:	f001 ff86 	bl	10015d0c <memset>
10013e00:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
10013e02:	f108 0801 	add.w	r8, r8, #1
10013e06:	2b00      	cmp	r3, #0
10013e08:	f000 8552 	beq.w	100148b0 <__ssvfscanf_r+0xbc8>
10013e0c:	4a4e      	ldr	r2, [pc, #312]	@ (10013f48 <__ssvfscanf_r+0x260>)
10013e0e:	5cd2      	ldrb	r2, [r2, r3]
10013e10:	0710      	lsls	r0, r2, #28
10013e12:	f100 855b 	bmi.w	100148cc <__ssvfscanf_r+0xbe4>
10013e16:	2601      	movs	r6, #1
10013e18:	2b25      	cmp	r3, #37	@ 0x25
10013e1a:	4630      	mov	r0, r6
10013e1c:	d1a6      	bne.n	10013d6c <__ssvfscanf_r+0x84>
10013e1e:	2400      	movs	r4, #0
10013e20:	f898 2000 	ldrb.w	r2, [r8]
10013e24:	4625      	mov	r5, r4
10013e26:	f1a2 0325 	sub.w	r3, r2, #37	@ 0x25
10013e2a:	f108 0101 	add.w	r1, r8, #1
10013e2e:	2b55      	cmp	r3, #85	@ 0x55
10013e30:	f200 8649 	bhi.w	10014ac6 <__ssvfscanf_r+0xdde>
10013e34:	e8df f013 	tbh	[pc, r3, lsl #1]
10013e38:	0647073d 	.word	0x0647073d
10013e3c:	06470647 	.word	0x06470647
10013e40:	07340647 	.word	0x07340647
10013e44:	06470647 	.word	0x06470647
10013e48:	06470647 	.word	0x06470647
10013e4c:	064d0647 	.word	0x064d0647
10013e50:	064d064d 	.word	0x064d064d
10013e54:	064d064d 	.word	0x064d064d
10013e58:	064d064d 	.word	0x064d064d
10013e5c:	064d064d 	.word	0x064d064d
10013e60:	0647064d 	.word	0x0647064d
10013e64:	06470647 	.word	0x06470647
10013e68:	06470647 	.word	0x06470647
10013e6c:	06470647 	.word	0x06470647
10013e70:	06470658 	.word	0x06470658
10013e74:	04f4006b 	.word	0x04f4006b
10013e78:	06580658 	.word	0x06580658
10013e7c:	06470658 	.word	0x06470658
10013e80:	06470647 	.word	0x06470647
10013e84:	00620647 	.word	0x00620647
10013e88:	06470647 	.word	0x06470647
10013e8c:	064704ff 	.word	0x064704ff
10013e90:	06470647 	.word	0x06470647
10013e94:	064704b5 	.word	0x064704b5
10013e98:	06470647 	.word	0x06470647
10013e9c:	06980647 	.word	0x06980647
10013ea0:	06470647 	.word	0x06470647
10013ea4:	064706d9 	.word	0x064706d9
10013ea8:	06470647 	.word	0x06470647
10013eac:	06470647 	.word	0x06470647
10013eb0:	06470658 	.word	0x06470658
10013eb4:	04f6006d 	.word	0x04f6006d
10013eb8:	06580658 	.word	0x06580658
10013ebc:	06ed0658 	.word	0x06ed0658
10013ec0:	006206e4 	.word	0x006206e4
10013ec4:	071e0647 	.word	0x071e0647
10013ec8:	06fd070f 	.word	0x06fd070f
10013ecc:	06fa0501 	.word	0x06fa0501
10013ed0:	06470647 	.word	0x06470647
10013ed4:	005b04b7 	.word	0x005b04b7
10013ed8:	0647072b 	.word	0x0647072b
10013edc:	06980647 	.word	0x06980647
10013ee0:	005b0647 	.word	0x005b0647
10013ee4:	3502      	adds	r5, #2
10013ee6:	444d      	add	r5, r9
10013ee8:	eba5 0906 	sub.w	r9, r5, r6
10013eec:	e722      	b.n	10013d34 <__ssvfscanf_r+0x4c>
10013eee:	0723      	lsls	r3, r4, #28
10013ef0:	f040 84de 	bne.w	100148b0 <__ssvfscanf_r+0xbc8>
10013ef4:	f898 2001 	ldrb.w	r2, [r8, #1]
10013ef8:	4688      	mov	r8, r1
10013efa:	e794      	b.n	10013e26 <__ssvfscanf_r+0x13e>
10013efc:	0722      	lsls	r2, r4, #28
10013efe:	f040 84d7 	bne.w	100148b0 <__ssvfscanf_r+0xbc8>
10013f02:	f898 2001 	ldrb.w	r2, [r8, #1]
10013f06:	f044 0402 	orr.w	r4, r4, #2
10013f0a:	4688      	mov	r8, r1
10013f0c:	e78b      	b.n	10013e26 <__ssvfscanf_r+0x13e>
10013f0e:	f044 0401 	orr.w	r4, r4, #1
10013f12:	f044 0440 	orr.w	r4, r4, #64	@ 0x40
10013f16:	4688      	mov	r8, r1
10013f18:	f04f 0b00 	mov.w	fp, #0
10013f1c:	f8da 3004 	ldr.w	r3, [sl, #4]
10013f20:	2b00      	cmp	r3, #0
10013f22:	f340 8448 	ble.w	100147b6 <__ssvfscanf_r+0xace>
10013f26:	0660      	lsls	r0, r4, #25
10013f28:	f140 844f 	bpl.w	100147ca <__ssvfscanf_r+0xae2>
10013f2c:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
10013f30:	2b03      	cmp	r3, #3
10013f32:	f200 8793 	bhi.w	10014e5c <__ssvfscanf_r+0x1174>
10013f36:	e8df f013 	tbh	[pc, r3, lsl #1]
10013f3a:	02b1      	.short	0x02b1
10013f3c:	014801f4 	.word	0x014801f4
10013f40:	0009      	.short	0x0009
10013f42:	bf00      	nop
10013f44:	20000424 	.word	0x20000424
10013f48:	1002388d 	.word	0x1002388d
10013f4c:	f444 63f0 	orr.w	r3, r4, #1920	@ 0x780
10013f50:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10013f52:	64bb      	str	r3, [r7, #72]	@ 0x48
10013f54:	f001 ff76 	bl	10015e44 <_localeconv_r>
10013f58:	6803      	ldr	r3, [r0, #0]
10013f5a:	61fb      	str	r3, [r7, #28]
10013f5c:	1e6b      	subs	r3, r5, #1
10013f5e:	f5b3 7fae 	cmp.w	r3, #348	@ 0x15c
10013f62:	f04f 0400 	mov.w	r4, #0
10013f66:	bf88      	it	hi
10013f68:	f46f 70ae 	mvnhi.w	r0, #348	@ 0x15c
10013f6c:	e9c7 4404 	strd	r4, r4, [r7, #16]
10013f70:	bf88      	it	hi
10013f72:	eb05 0c00 	addhi.w	ip, r5, r0
10013f76:	f507 73b8 	add.w	r3, r7, #368	@ 0x170
10013f7a:	bf94      	ite	ls
10013f7c:	f04f 0c00 	movls.w	ip, #0
10013f80:	f240 155d 	movwhi	r5, #349	@ 0x15d
10013f84:	62fb      	str	r3, [r7, #44]	@ 0x2c
10013f86:	647c      	str	r4, [r7, #68]	@ 0x44
10013f88:	633c      	str	r4, [r7, #48]	@ 0x30
10013f8a:	61bc      	str	r4, [r7, #24]
10013f8c:	469b      	mov	fp, r3
10013f8e:	f8c7 c00c 	str.w	ip, [r7, #12]
10013f92:	f8c7 8020 	str.w	r8, [r7, #32]
10013f96:	f8da 1000 	ldr.w	r1, [sl]
10013f9a:	780a      	ldrb	r2, [r1, #0]
10013f9c:	f1a2 032b 	sub.w	r3, r2, #43	@ 0x2b
10013fa0:	2b4e      	cmp	r3, #78	@ 0x4e
10013fa2:	d850      	bhi.n	10014046 <__ssvfscanf_r+0x35e>
10013fa4:	e8df f013 	tbh	[pc, r3, lsl #1]
10013fa8:	004f03b7 	.word	0x004f03b7
10013fac:	004f03b7 	.word	0x004f03b7
10013fb0:	0099004f 	.word	0x0099004f
10013fb4:	009d009d 	.word	0x009d009d
10013fb8:	009d009d 	.word	0x009d009d
10013fbc:	009d009d 	.word	0x009d009d
10013fc0:	009d009d 	.word	0x009d009d
10013fc4:	004f009d 	.word	0x004f009d
10013fc8:	004f004f 	.word	0x004f004f
10013fcc:	004f004f 	.word	0x004f004f
10013fd0:	004f004f 	.word	0x004f004f
10013fd4:	033b03ac 	.word	0x033b03ac
10013fd8:	033b033b 	.word	0x033b033b
10013fdc:	03d003d9 	.word	0x03d003d9
10013fe0:	004f004f 	.word	0x004f004f
10013fe4:	004f03bf 	.word	0x004f03bf
10013fe8:	004f004f 	.word	0x004f004f
10013fec:	0393004f 	.word	0x0393004f
10013ff0:	0372004f 	.word	0x0372004f
10013ff4:	004f004f 	.word	0x004f004f
10013ff8:	036d004f 	.word	0x036d004f
10013ffc:	004f004f 	.word	0x004f004f
10014000:	0356004f 	.word	0x0356004f
10014004:	004f03a7 	.word	0x004f03a7
10014008:	004f004f 	.word	0x004f004f
1001400c:	004f004f 	.word	0x004f004f
10014010:	004f004f 	.word	0x004f004f
10014014:	033b03ac 	.word	0x033b03ac
10014018:	033b033b 	.word	0x033b033b
1001401c:	03d003d9 	.word	0x03d003d9
10014020:	004f004f 	.word	0x004f004f
10014024:	004f03bf 	.word	0x004f03bf
10014028:	004f004f 	.word	0x004f004f
1001402c:	0393004f 	.word	0x0393004f
10014030:	0372004f 	.word	0x0372004f
10014034:	004f004f 	.word	0x004f004f
10014038:	036d004f 	.word	0x036d004f
1001403c:	004f004f 	.word	0x004f004f
10014040:	0356004f 	.word	0x0356004f
10014044:	03a7      	.short	0x03a7
10014046:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10014048:	059e      	lsls	r6, r3, #22
1001404a:	d568      	bpl.n	1001411e <__ssvfscanf_r+0x436>
1001404c:	f8d7 801c 	ldr.w	r8, [r7, #28]
10014050:	f898 3000 	ldrb.w	r3, [r8]
10014054:	4293      	cmp	r3, r2
10014056:	d162      	bne.n	1001411e <__ssvfscanf_r+0x436>
10014058:	e9c7 5401 	strd	r5, r4, [r7, #4]
1001405c:	2600      	movs	r6, #0
1001405e:	4655      	mov	r5, sl
10014060:	e006      	b.n	10014070 <__ssvfscanf_r+0x388>
10014062:	6029      	str	r1, [r5, #0]
10014064:	f891 e000 	ldrb.w	lr, [r1]
10014068:	f898 0000 	ldrb.w	r0, [r8]
1001406c:	4586      	cmp	lr, r0
1001406e:	d11b      	bne.n	100140a8 <__ssvfscanf_r+0x3c0>
10014070:	f818 0f01 	ldrb.w	r0, [r8, #1]!
10014074:	46b2      	mov	sl, r6
10014076:	464c      	mov	r4, r9
10014078:	3101      	adds	r1, #1
1001407a:	3601      	adds	r6, #1
1001407c:	f109 0901 	add.w	r9, r9, #1
10014080:	2800      	cmp	r0, #0
10014082:	f000 8693 	beq.w	10014dac <__ssvfscanf_r+0x10c4>
10014086:	6868      	ldr	r0, [r5, #4]
10014088:	3801      	subs	r0, #1
1001408a:	2800      	cmp	r0, #0
1001408c:	6068      	str	r0, [r5, #4]
1001408e:	dce8      	bgt.n	10014062 <__ssvfscanf_r+0x37a>
10014090:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10014092:	4629      	mov	r1, r5
10014094:	f005 fad2 	bl	1001963c <__ssrefill_r>
10014098:	b930      	cbnz	r0, 100140a8 <__ssvfscanf_r+0x3c0>
1001409a:	6829      	ldr	r1, [r5, #0]
1001409c:	f898 0000 	ldrb.w	r0, [r8]
100140a0:	f891 e000 	ldrb.w	lr, [r1]
100140a4:	4586      	cmp	lr, r0
100140a6:	d0e3      	beq.n	10014070 <__ssvfscanf_r+0x388>
100140a8:	4652      	mov	r2, sl
100140aa:	46aa      	mov	sl, r5
100140ac:	e9d7 5807 	ldrd	r5, r8, [r7, #28]
100140b0:	4623      	mov	r3, r4
100140b2:	442e      	add	r6, r5
100140b4:	68bc      	ldr	r4, [r7, #8]
100140b6:	623c      	str	r4, [r7, #32]
100140b8:	4634      	mov	r4, r6
100140ba:	6cfe      	ldr	r6, [r7, #76]	@ 0x4c
100140bc:	61fa      	str	r2, [r7, #28]
100140be:	4699      	mov	r9, r3
100140c0:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
100140c4:	4652      	mov	r2, sl
100140c6:	4630      	mov	r0, r6
100140c8:	f005 fa7c 	bl	100195c4 <_sungetc_r>
100140cc:	42ac      	cmp	r4, r5
100140ce:	d1f7      	bne.n	100140c0 <__ssvfscanf_r+0x3d8>
100140d0:	69fa      	ldr	r2, [r7, #28]
100140d2:	6a3c      	ldr	r4, [r7, #32]
100140d4:	eba9 0902 	sub.w	r9, r9, r2
100140d8:	e023      	b.n	10014122 <__ssvfscanf_r+0x43a>
100140da:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100140dc:	05d9      	lsls	r1, r3, #23
100140de:	f100 854e 	bmi.w	10014b7e <__ssvfscanf_r+0xe96>
100140e2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
100140e4:	191b      	adds	r3, r3, r4
100140e6:	d11a      	bne.n	1001411e <__ssvfscanf_r+0x436>
100140e8:	461c      	mov	r4, r3
100140ea:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100140ec:	f423 73c0 	bic.w	r3, r3, #384	@ 0x180
100140f0:	e9c7 4311 	strd	r4, r3, [r7, #68]	@ 0x44
100140f4:	f80b 2b01 	strb.w	r2, [fp], #1
100140f8:	3d01      	subs	r5, #1
100140fa:	f8da 3004 	ldr.w	r3, [sl, #4]
100140fe:	3b01      	subs	r3, #1
10014100:	2b00      	cmp	r3, #0
10014102:	f109 0901 	add.w	r9, r9, #1
10014106:	f8ca 3004 	str.w	r3, [sl, #4]
1001410a:	f340 83d4 	ble.w	100148b6 <__ssvfscanf_r+0xbce>
1001410e:	f8da 3000 	ldr.w	r3, [sl]
10014112:	3301      	adds	r3, #1
10014114:	f8ca 3000 	str.w	r3, [sl]
10014118:	2d00      	cmp	r5, #0
1001411a:	f47f af3c 	bne.w	10013f96 <__ssvfscanf_r+0x2ae>
1001411e:	f8d7 8020 	ldr.w	r8, [r7, #32]
10014122:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10014124:	2b00      	cmp	r3, #0
10014126:	f040 8337 	bne.w	10014798 <__ssvfscanf_r+0xab0>
1001412a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001412c:	3b01      	subs	r3, #1
1001412e:	2b01      	cmp	r3, #1
10014130:	f240 83b1 	bls.w	10014896 <__ssvfscanf_r+0xbae>
10014134:	1e63      	subs	r3, r4, #1
10014136:	2b06      	cmp	r3, #6
10014138:	f240 864f 	bls.w	10014dda <__ssvfscanf_r+0x10f2>
1001413c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001413e:	05d8      	lsls	r0, r3, #23
10014140:	d51c      	bpl.n	1001417c <__ssvfscanf_r+0x494>
10014142:	0559      	lsls	r1, r3, #21
10014144:	f101 8127 	bmi.w	10015396 <__ssvfscanf_r+0x16ae>
10014148:	f81b 1c01 	ldrb.w	r1, [fp, #-1]
1001414c:	2965      	cmp	r1, #101	@ 0x65
1001414e:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
10014152:	f109 34ff 	add.w	r4, r9, #4294967295	@ 0xffffffff
10014156:	d00b      	beq.n	10014170 <__ssvfscanf_r+0x488>
10014158:	2945      	cmp	r1, #69	@ 0x45
1001415a:	d009      	beq.n	10014170 <__ssvfscanf_r+0x488>
1001415c:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001415e:	4652      	mov	r2, sl
10014160:	f005 fa30 	bl	100195c4 <_sungetc_r>
10014164:	f81b 1c02 	ldrb.w	r1, [fp, #-2]
10014168:	f1a9 0402 	sub.w	r4, r9, #2
1001416c:	f1ab 0302 	sub.w	r3, fp, #2
10014170:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10014172:	4652      	mov	r2, sl
10014174:	46a1      	mov	r9, r4
10014176:	469b      	mov	fp, r3
10014178:	f005 fa24 	bl	100195c4 <_sungetc_r>
1001417c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001417e:	f013 0210 	ands.w	r2, r3, #16
10014182:	f47f add7 	bne.w	10013d34 <__ssvfscanf_r+0x4c>
10014186:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
1001418a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
1001418e:	f88b 2000 	strb.w	r2, [fp]
10014192:	f000 850f 	beq.w	10014bb4 <__ssvfscanf_r+0xecc>
10014196:	697b      	ldr	r3, [r7, #20]
10014198:	2b00      	cmp	r3, #0
1001419a:	f041 8023 	bne.w	100151e4 <__ssvfscanf_r+0x14fc>
1001419e:	2200      	movs	r2, #0
100141a0:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
100141a2:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100141a4:	f003 fe2e 	bl	10017e04 <_strtod_r>
100141a8:	6cba      	ldr	r2, [r7, #72]	@ 0x48
100141aa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100141ac:	07d2      	lsls	r2, r2, #31
100141ae:	4605      	mov	r5, r0
100141b0:	460e      	mov	r6, r1
100141b2:	f103 0404 	add.w	r4, r3, #4
100141b6:	f140 8629 	bpl.w	10014e0c <__ssvfscanf_r+0x1124>
100141ba:	681b      	ldr	r3, [r3, #0]
100141bc:	e9c3 5600 	strd	r5, r6, [r3]
100141c0:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
100141c2:	637c      	str	r4, [r7, #52]	@ 0x34
100141c4:	3301      	adds	r3, #1
100141c6:	643b      	str	r3, [r7, #64]	@ 0x40
100141c8:	e5b4      	b.n	10013d34 <__ssvfscanf_r+0x4c>
100141ca:	1e6b      	subs	r3, r5, #1
100141cc:	f5b3 7fae 	cmp.w	r3, #348	@ 0x15c
100141d0:	bf88      	it	hi
100141d2:	f46f 72ae 	mvnhi.w	r2, #348	@ 0x15c
100141d6:	f507 73b8 	add.w	r3, r7, #368	@ 0x170
100141da:	bf8c      	ite	hi
100141dc:	18a9      	addhi	r1, r5, r2
100141de:	2100      	movls	r1, #0
100141e0:	62fb      	str	r3, [r7, #44]	@ 0x2c
100141e2:	461e      	mov	r6, r3
100141e4:	6bba      	ldr	r2, [r7, #56]	@ 0x38
100141e6:	6479      	str	r1, [r7, #68]	@ 0x44
100141e8:	4653      	mov	r3, sl
100141ea:	f444 6458 	orr.w	r4, r4, #3456	@ 0xd80
100141ee:	46ca      	mov	sl, r9
100141f0:	bf88      	it	hi
100141f2:	f240 155d 	movwhi	r5, #349	@ 0x15d
100141f6:	f04f 0b00 	mov.w	fp, #0
100141fa:	4699      	mov	r9, r3
100141fc:	f8d9 0000 	ldr.w	r0, [r9]
10014200:	f890 c000 	ldrb.w	ip, [r0]
10014204:	f1ac 032b 	sub.w	r3, ip, #43	@ 0x2b
10014208:	2b4d      	cmp	r3, #77	@ 0x4d
1001420a:	d862      	bhi.n	100142d2 <__ssvfscanf_r+0x5ea>
1001420c:	e8df f013 	tbh	[pc, r3, lsl #1]
10014210:	006102b5 	.word	0x006102b5
10014214:	006102b5 	.word	0x006102b5
10014218:	031e0061 	.word	0x031e0061
1001421c:	02150215 	.word	0x02150215
10014220:	02150215 	.word	0x02150215
10014224:	02150215 	.word	0x02150215
10014228:	02bb0215 	.word	0x02bb0215
1001422c:	006102bb 	.word	0x006102bb
10014230:	00610061 	.word	0x00610061
10014234:	00610061 	.word	0x00610061
10014238:	00610061 	.word	0x00610061
1001423c:	004e004e 	.word	0x004e004e
10014240:	004e004e 	.word	0x004e004e
10014244:	004e004e 	.word	0x004e004e
10014248:	00610061 	.word	0x00610061
1001424c:	00610061 	.word	0x00610061
10014250:	00610061 	.word	0x00610061
10014254:	00610061 	.word	0x00610061
10014258:	00610061 	.word	0x00610061
1001425c:	00610061 	.word	0x00610061
10014260:	00610061 	.word	0x00610061
10014264:	00610061 	.word	0x00610061
10014268:	02a90061 	.word	0x02a90061
1001426c:	00610061 	.word	0x00610061
10014270:	00610061 	.word	0x00610061
10014274:	00610061 	.word	0x00610061
10014278:	00610061 	.word	0x00610061
1001427c:	004e004e 	.word	0x004e004e
10014280:	004e004e 	.word	0x004e004e
10014284:	004e004e 	.word	0x004e004e
10014288:	00610061 	.word	0x00610061
1001428c:	00610061 	.word	0x00610061
10014290:	00610061 	.word	0x00610061
10014294:	00610061 	.word	0x00610061
10014298:	00610061 	.word	0x00610061
1001429c:	00610061 	.word	0x00610061
100142a0:	00610061 	.word	0x00610061
100142a4:	00610061 	.word	0x00610061
100142a8:	02a90061 	.word	0x02a90061
100142ac:	2a0a      	cmp	r2, #10
100142ae:	dd10      	ble.n	100142d2 <__ssvfscanf_r+0x5ea>
100142b0:	f424 6438 	bic.w	r4, r4, #2944	@ 0xb80
100142b4:	f806 cb01 	strb.w	ip, [r6], #1
100142b8:	f8d9 3004 	ldr.w	r3, [r9, #4]
100142bc:	3b01      	subs	r3, #1
100142be:	2b00      	cmp	r3, #0
100142c0:	f8c9 3004 	str.w	r3, [r9, #4]
100142c4:	f340 82dd 	ble.w	10014882 <__ssvfscanf_r+0xb9a>
100142c8:	3001      	adds	r0, #1
100142ca:	f8c9 0000 	str.w	r0, [r9]
100142ce:	3d01      	subs	r5, #1
100142d0:	d194      	bne.n	100141fc <__ssvfscanf_r+0x514>
100142d2:	464b      	mov	r3, r9
100142d4:	05e0      	lsls	r0, r4, #23
100142d6:	46d1      	mov	r9, sl
100142d8:	63ba      	str	r2, [r7, #56]	@ 0x38
100142da:	469a      	mov	sl, r3
100142dc:	d507      	bpl.n	100142ee <__ssvfscanf_r+0x606>
100142de:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
100142e0:	429e      	cmp	r6, r3
100142e2:	f200 8479 	bhi.w	10014bd8 <__ssvfscanf_r+0xef0>
100142e6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
100142e8:	429e      	cmp	r6, r3
100142ea:	f000 82e1 	beq.w	100148b0 <__ssvfscanf_r+0xbc8>
100142ee:	f014 0210 	ands.w	r2, r4, #16
100142f2:	d111      	bne.n	10014318 <__ssvfscanf_r+0x630>
100142f4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
100142f6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
100142f8:	6abd      	ldr	r5, [r7, #40]	@ 0x28
100142fa:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100142fc:	7032      	strb	r2, [r6, #0]
100142fe:	47a8      	blx	r5
10014300:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10014302:	06a1      	lsls	r1, r4, #26
10014304:	f103 0504 	add.w	r5, r3, #4
10014308:	f140 844c 	bpl.w	10014ba4 <__ssvfscanf_r+0xebc>
1001430c:	681b      	ldr	r3, [r3, #0]
1001430e:	6018      	str	r0, [r3, #0]
10014310:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10014312:	637d      	str	r5, [r7, #52]	@ 0x34
10014314:	3301      	adds	r3, #1
10014316:	643b      	str	r3, [r7, #64]	@ 0x40
10014318:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001431a:	1af6      	subs	r6, r6, r3
1001431c:	445e      	add	r6, fp
1001431e:	44b1      	add	r9, r6
10014320:	e508      	b.n	10013d34 <__ssvfscanf_r+0x4c>
10014322:	2d00      	cmp	r5, #0
10014324:	bf08      	it	eq
10014326:	f04f 35ff 	moveq.w	r5, #4294967295	@ 0xffffffff
1001432a:	07e0      	lsls	r0, r4, #31
1001432c:	f004 0310 	and.w	r3, r4, #16
10014330:	f140 82eb 	bpl.w	1001490a <__ssvfscanf_r+0xc22>
10014334:	2b00      	cmp	r3, #0
10014336:	f040 84bf 	bne.w	10014cb8 <__ssvfscanf_r+0xfd0>
1001433a:	6b7e      	ldr	r6, [r7, #52]	@ 0x34
1001433c:	0621      	lsls	r1, r4, #24
1001433e:	f856 2b04 	ldr.w	r2, [r6], #4
10014342:	64ba      	str	r2, [r7, #72]	@ 0x48
10014344:	f140 875d 	bpl.w	10015202 <__ssvfscanf_r+0x151a>
10014348:	647b      	str	r3, [r7, #68]	@ 0x44
1001434a:	2a00      	cmp	r2, #0
1001434c:	f000 82b0 	beq.w	100148b0 <__ssvfscanf_r+0xbc8>
10014350:	2080      	movs	r0, #128	@ 0x80
10014352:	f001 f95d 	bl	10015610 <malloc>
10014356:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10014358:	4602      	mov	r2, r0
1001435a:	2800      	cmp	r0, #0
1001435c:	f000 8717 	beq.w	1001518e <__ssvfscanf_r+0x14a6>
10014360:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10014362:	6008      	str	r0, [r1, #0]
10014364:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
10014366:	88c4      	ldrh	r4, [r0, #6]
10014368:	8881      	ldrh	r1, [r0, #4]
1001436a:	428c      	cmp	r4, r1
1001436c:	f080 8607 	bcs.w	10014f7e <__ssvfscanf_r+0x1296>
10014370:	6800      	ldr	r0, [r0, #0]
10014372:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10014374:	f840 1024 	str.w	r1, [r0, r4, lsl #2]
10014378:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
1001437a:	637e      	str	r6, [r7, #52]	@ 0x34
1001437c:	3401      	adds	r4, #1
1001437e:	80cc      	strh	r4, [r1, #6]
10014380:	4696      	mov	lr, r2
10014382:	f04f 0c20 	mov.w	ip, #32
10014386:	f8da 1000 	ldr.w	r1, [sl]
1001438a:	4eaf      	ldr	r6, [pc, #700]	@ (10014648 <__ssvfscanf_r+0x960>)
1001438c:	7809      	ldrb	r1, [r1, #0]
1001438e:	f816 b001 	ldrb.w	fp, [r6, r1]
10014392:	f01b 0b08 	ands.w	fp, fp, #8
10014396:	d170      	bne.n	1001447a <__ssvfscanf_r+0x792>
10014398:	f8c7 801c 	str.w	r8, [r7, #28]
1001439c:	623e      	str	r6, [r7, #32]
1001439e:	f8c7 e030 	str.w	lr, [r7, #48]	@ 0x30
100143a2:	462e      	mov	r6, r5
100143a4:	f8c7 c044 	str.w	ip, [r7, #68]	@ 0x44
100143a8:	4698      	mov	r8, r3
100143aa:	4615      	mov	r5, r2
100143ac:	f001 fd44 	bl	10015e38 <__locale_mb_cur_max>
100143b0:	4558      	cmp	r0, fp
100143b2:	f43f ad05 	beq.w	10013dc0 <__ssvfscanf_r+0xd8>
100143b6:	e9da 3200 	ldrd	r3, r2, [sl]
100143ba:	f507 71b8 	add.w	r1, r7, #368	@ 0x170
100143be:	4608      	mov	r0, r1
100143c0:	62f9      	str	r1, [r7, #44]	@ 0x2c
100143c2:	f813 1b01 	ldrb.w	r1, [r3], #1
100143c6:	f800 100b 	strb.w	r1, [r0, fp]
100143ca:	3a01      	subs	r2, #1
100143cc:	e9ca 3200 	strd	r3, r2, [sl]
100143d0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
100143d2:	2b03      	cmp	r3, #3
100143d4:	f10b 0b01 	add.w	fp, fp, #1
100143d8:	f107 0468 	add.w	r4, r7, #104	@ 0x68
100143dc:	d102      	bne.n	100143e4 <__ssvfscanf_r+0x6fc>
100143de:	6823      	ldr	r3, [r4, #0]
100143e0:	2b04      	cmp	r3, #4
100143e2:	d004      	beq.n	100143ee <__ssvfscanf_r+0x706>
100143e4:	2208      	movs	r2, #8
100143e6:	2100      	movs	r1, #0
100143e8:	4620      	mov	r0, r4
100143ea:	f001 fc8f 	bl	10015d0c <memset>
100143ee:	9400      	str	r4, [sp, #0]
100143f0:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
100143f2:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100143f4:	465b      	mov	r3, fp
100143f6:	4629      	mov	r1, r5
100143f8:	f001 fbde 	bl	10015bb8 <_mbrtowc_r>
100143fc:	1c42      	adds	r2, r0, #1
100143fe:	6278      	str	r0, [r7, #36]	@ 0x24
10014400:	f43f acde 	beq.w	10013dc0 <__ssvfscanf_r+0xd8>
10014404:	2800      	cmp	r0, #0
10014406:	f000 860c 	beq.w	10015022 <__ssvfscanf_r+0x133a>
1001440a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1001440c:	3302      	adds	r3, #2
1001440e:	d01e      	beq.n	1001444e <__ssvfscanf_r+0x766>
10014410:	6828      	ldr	r0, [r5, #0]
10014412:	f004 fdad 	bl	10018f70 <iswspace>
10014416:	2800      	cmp	r0, #0
10014418:	f040 877a 	bne.w	10015310 <__ssvfscanf_r+0x1628>
1001441c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1001441e:	2b03      	cmp	r3, #3
10014420:	44d9      	add	r9, fp
10014422:	d102      	bne.n	1001442a <__ssvfscanf_r+0x742>
10014424:	6823      	ldr	r3, [r4, #0]
10014426:	2b04      	cmp	r3, #4
10014428:	d000      	beq.n	1001442c <__ssvfscanf_r+0x744>
1001442a:	3e01      	subs	r6, #1
1001442c:	f1b8 0f00 	cmp.w	r8, #0
10014430:	f040 86e3 	bne.w	100151fa <__ssvfscanf_r+0x1512>
10014434:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10014436:	3504      	adds	r5, #4
10014438:	2b00      	cmp	r3, #0
1001443a:	f000 86de 	beq.w	100151fa <__ssvfscanf_r+0x1512>
1001443e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10014440:	1aec      	subs	r4, r5, r3
10014442:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10014444:	ebb3 0fa4 	cmp.w	r3, r4, asr #2
10014448:	f240 8794 	bls.w	10015374 <__ssvfscanf_r+0x168c>
1001444c:	46c3      	mov	fp, r8
1001444e:	f8da 3004 	ldr.w	r3, [sl, #4]
10014452:	2b00      	cmp	r3, #0
10014454:	f340 8728 	ble.w	100152a8 <__ssvfscanf_r+0x15c0>
10014458:	f8da 3000 	ldr.w	r3, [sl]
1001445c:	6a3a      	ldr	r2, [r7, #32]
1001445e:	781b      	ldrb	r3, [r3, #0]
10014460:	5cd3      	ldrb	r3, [r2, r3]
10014462:	0718      	lsls	r0, r3, #28
10014464:	d401      	bmi.n	1001446a <__ssvfscanf_r+0x782>
10014466:	2e00      	cmp	r6, #0
10014468:	d1a0      	bne.n	100143ac <__ssvfscanf_r+0x6c4>
1001446a:	4643      	mov	r3, r8
1001446c:	f8d7 e030 	ldr.w	lr, [r7, #48]	@ 0x30
10014470:	f8d7 c044 	ldr.w	ip, [r7, #68]	@ 0x44
10014474:	f8d7 801c 	ldr.w	r8, [r7, #28]
10014478:	462a      	mov	r2, r5
1001447a:	2b00      	cmp	r3, #0
1001447c:	f47f ac5a 	bne.w	10013d34 <__ssvfscanf_r+0x4c>
10014480:	6013      	str	r3, [r2, #0]
10014482:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10014484:	b133      	cbz	r3, 10014494 <__ssvfscanf_r+0x7ac>
10014486:	eba2 020e 	sub.w	r2, r2, lr
1001448a:	1093      	asrs	r3, r2, #2
1001448c:	3301      	adds	r3, #1
1001448e:	459c      	cmp	ip, r3
10014490:	f200 8611 	bhi.w	100150b6 <__ssvfscanf_r+0x13ce>
10014494:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10014496:	3301      	adds	r3, #1
10014498:	643b      	str	r3, [r7, #64]	@ 0x40
1001449a:	e44b      	b.n	10013d34 <__ssvfscanf_r+0x4c>
1001449c:	2d00      	cmp	r5, #0
1001449e:	bf08      	it	eq
100144a0:	f04f 35ff 	moveq.w	r5, #4294967295	@ 0xffffffff
100144a4:	07e6      	lsls	r6, r4, #31
100144a6:	f004 0210 	and.w	r2, r4, #16
100144aa:	f140 829d 	bpl.w	100149e8 <__ssvfscanf_r+0xd00>
100144ae:	2a00      	cmp	r2, #0
100144b0:	f040 843e 	bne.w	10014d30 <__ssvfscanf_r+0x1048>
100144b4:	6b79      	ldr	r1, [r7, #52]	@ 0x34
100144b6:	0624      	lsls	r4, r4, #24
100144b8:	f851 3b04 	ldr.w	r3, [r1], #4
100144bc:	637b      	str	r3, [r7, #52]	@ 0x34
100144be:	6239      	str	r1, [r7, #32]
100144c0:	f140 86aa 	bpl.w	10015218 <__ssvfscanf_r+0x1530>
100144c4:	64ba      	str	r2, [r7, #72]	@ 0x48
100144c6:	2b00      	cmp	r3, #0
100144c8:	f000 81f2 	beq.w	100148b0 <__ssvfscanf_r+0xbc8>
100144cc:	2080      	movs	r0, #128	@ 0x80
100144ce:	f001 f89f 	bl	10015610 <malloc>
100144d2:	6cba      	ldr	r2, [r7, #72]	@ 0x48
100144d4:	4683      	mov	fp, r0
100144d6:	2800      	cmp	r0, #0
100144d8:	f000 8659 	beq.w	1001518e <__ssvfscanf_r+0x14a6>
100144dc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100144de:	6018      	str	r0, [r3, #0]
100144e0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
100144e2:	88dc      	ldrh	r4, [r3, #6]
100144e4:	8899      	ldrh	r1, [r3, #4]
100144e6:	428c      	cmp	r4, r1
100144e8:	f080 8535 	bcs.w	10014f56 <__ssvfscanf_r+0x126e>
100144ec:	6818      	ldr	r0, [r3, #0]
100144ee:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100144f0:	f840 3024 	str.w	r3, [r0, r4, lsl #2]
100144f4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
100144f6:	f8c7 b030 	str.w	fp, [r7, #48]	@ 0x30
100144fa:	3401      	adds	r4, #1
100144fc:	80dc      	strh	r4, [r3, #6]
100144fe:	2320      	movs	r3, #32
10014500:	62fb      	str	r3, [r7, #44]	@ 0x2c
10014502:	6a7c      	ldr	r4, [r7, #36]	@ 0x24
10014504:	f8c7 801c 	str.w	r8, [r7, #28]
10014508:	2600      	movs	r6, #0
1001450a:	647a      	str	r2, [r7, #68]	@ 0x44
1001450c:	46a8      	mov	r8, r5
1001450e:	f001 fc93 	bl	10015e38 <__locale_mb_cur_max>
10014512:	42b0      	cmp	r0, r6
10014514:	f43f ac54 	beq.w	10013dc0 <__ssvfscanf_r+0xd8>
10014518:	e9da 3200 	ldrd	r3, r2, [sl]
1001451c:	f507 70b8 	add.w	r0, r7, #368	@ 0x170
10014520:	f813 1b01 	ldrb.w	r1, [r3], #1
10014524:	5581      	strb	r1, [r0, r6]
10014526:	3a01      	subs	r2, #1
10014528:	2c03      	cmp	r4, #3
1001452a:	e9ca 3200 	strd	r3, r2, [sl]
1001452e:	f106 0601 	add.w	r6, r6, #1
10014532:	f107 0560 	add.w	r5, r7, #96	@ 0x60
10014536:	d102      	bne.n	1001453e <__ssvfscanf_r+0x856>
10014538:	682b      	ldr	r3, [r5, #0]
1001453a:	2b04      	cmp	r3, #4
1001453c:	d004      	beq.n	10014548 <__ssvfscanf_r+0x860>
1001453e:	2208      	movs	r2, #8
10014540:	2100      	movs	r1, #0
10014542:	4628      	mov	r0, r5
10014544:	f001 fbe2 	bl	10015d0c <memset>
10014548:	9500      	str	r5, [sp, #0]
1001454a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001454c:	4633      	mov	r3, r6
1001454e:	f507 72b8 	add.w	r2, r7, #368	@ 0x170
10014552:	4659      	mov	r1, fp
10014554:	f001 fb30 	bl	10015bb8 <_mbrtowc_r>
10014558:	4604      	mov	r4, r0
1001455a:	1c60      	adds	r0, r4, #1
1001455c:	f43f ac30 	beq.w	10013dc0 <__ssvfscanf_r+0xd8>
10014560:	2c00      	cmp	r4, #0
10014562:	f040 83f2 	bne.w	10014d4a <__ssvfscanf_r+0x1062>
10014566:	f8cb 4000 	str.w	r4, [fp]
1001456a:	4623      	mov	r3, r4
1001456c:	2208      	movs	r2, #8
1001456e:	2100      	movs	r1, #0
10014570:	f107 0068 	add.w	r0, r7, #104	@ 0x68
10014574:	64bb      	str	r3, [r7, #72]	@ 0x48
10014576:	f001 fbc9 	bl	10015d0c <memset>
1001457a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001457c:	461a      	mov	r2, r3
1001457e:	4b33      	ldr	r3, [pc, #204]	@ (1001464c <__ssvfscanf_r+0x964>)
10014580:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
10014584:	64bb      	str	r3, [r7, #72]	@ 0x48
10014586:	e9d7 c012 	ldrd	ip, r0, [r7, #72]	@ 0x48
1001458a:	f107 0368 	add.w	r3, r7, #104	@ 0x68
1001458e:	f107 0150 	add.w	r1, r7, #80	@ 0x50
10014592:	47e0      	blx	ip
10014594:	2801      	cmp	r0, #1
10014596:	bf0c      	ite	eq
10014598:	f897 3050 	ldrbeq.w	r3, [r7, #80]	@ 0x50
1001459c:	2300      	movne	r3, #0
1001459e:	f107 0270 	add.w	r2, r7, #112	@ 0x70
100145a2:	5cd3      	ldrb	r3, [r2, r3]
100145a4:	2b00      	cmp	r3, #0
100145a6:	f000 863e 	beq.w	10015226 <__ssvfscanf_r+0x153e>
100145aa:	2c03      	cmp	r4, #3
100145ac:	44b1      	add	r9, r6
100145ae:	f000 83d5 	beq.w	10014d5c <__ssvfscanf_r+0x1074>
100145b2:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
100145b6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
100145b8:	2b00      	cmp	r3, #0
100145ba:	f040 83c4 	bne.w	10014d46 <__ssvfscanf_r+0x105e>
100145be:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100145c0:	f10b 0b04 	add.w	fp, fp, #4
100145c4:	2b00      	cmp	r3, #0
100145c6:	f000 83be 	beq.w	10014d46 <__ssvfscanf_r+0x105e>
100145ca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
100145cc:	ebab 0503 	sub.w	r5, fp, r3
100145d0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
100145d2:	ebb3 0fa5 	cmp.w	r3, r5, asr #2
100145d6:	f240 83d8 	bls.w	10014d8a <__ssvfscanf_r+0x10a2>
100145da:	6c7e      	ldr	r6, [r7, #68]	@ 0x44
100145dc:	f8da 3004 	ldr.w	r3, [sl, #4]
100145e0:	2b00      	cmp	r3, #0
100145e2:	f340 82a3 	ble.w	10014b2c <__ssvfscanf_r+0xe44>
100145e6:	f1b8 0f00 	cmp.w	r8, #0
100145ea:	d190      	bne.n	1001450e <__ssvfscanf_r+0x826>
100145ec:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
100145ee:	f8d7 801c 	ldr.w	r8, [r7, #28]
100145f2:	627c      	str	r4, [r7, #36]	@ 0x24
100145f4:	b97a      	cbnz	r2, 10014616 <__ssvfscanf_r+0x92e>
100145f6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100145f8:	f8cb 2000 	str.w	r2, [fp]
100145fc:	b143      	cbz	r3, 10014610 <__ssvfscanf_r+0x928>
100145fe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10014600:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
10014602:	ebab 0303 	sub.w	r3, fp, r3
10014606:	109a      	asrs	r2, r3, #2
10014608:	3201      	adds	r2, #1
1001460a:	4291      	cmp	r1, r2
1001460c:	f200 86a7 	bhi.w	1001535e <__ssvfscanf_r+0x1676>
10014610:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10014612:	3301      	adds	r3, #1
10014614:	643b      	str	r3, [r7, #64]	@ 0x40
10014616:	6a3b      	ldr	r3, [r7, #32]
10014618:	637b      	str	r3, [r7, #52]	@ 0x34
1001461a:	f7ff bb8b 	b.w	10013d34 <__ssvfscanf_r+0x4c>
1001461e:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10014620:	050e      	lsls	r6, r1, #20
10014622:	f57f ad7c 	bpl.w	1001411e <__ssvfscanf_r+0x436>
10014626:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10014628:	191b      	adds	r3, r3, r4
1001462a:	f47f ad78 	bne.w	1001411e <__ssvfscanf_r+0x436>
1001462e:	461c      	mov	r4, r3
10014630:	f421 73c0 	bic.w	r3, r1, #384	@ 0x180
10014634:	e9c7 4311 	strd	r4, r3, [r7, #68]	@ 0x44
10014638:	e55c      	b.n	100140f4 <__ssvfscanf_r+0x40c>
1001463a:	4b05      	ldr	r3, [pc, #20]	@ (10014650 <__ssvfscanf_r+0x968>)
1001463c:	f424 6438 	bic.w	r4, r4, #2944	@ 0xb80
10014640:	f933 2012 	ldrsh.w	r2, [r3, r2, lsl #1]
10014644:	e636      	b.n	100142b4 <__ssvfscanf_r+0x5cc>
10014646:	bf00      	nop
10014648:	1002388d 	.word	0x1002388d
1001464c:	20000424 	.word	0x20000424
10014650:	10023824 	.word	0x10023824
10014654:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10014656:	f401 6318 	and.w	r3, r1, #2432	@ 0x980
1001465a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
1001465e:	f47f ad5e 	bne.w	1001411e <__ssvfscanf_r+0x436>
10014662:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10014664:	2b01      	cmp	r3, #1
10014666:	f47f ad5a 	bne.w	1001411e <__ssvfscanf_r+0x436>
1001466a:	f421 7380 	bic.w	r3, r1, #256	@ 0x100
1001466e:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
10014672:	64bb      	str	r3, [r7, #72]	@ 0x48
10014674:	2330      	movs	r3, #48	@ 0x30
10014676:	f80b 3b01 	strb.w	r3, [fp], #1
1001467a:	2300      	movs	r3, #0
1001467c:	3d01      	subs	r5, #1
1001467e:	633b      	str	r3, [r7, #48]	@ 0x30
10014680:	e538      	b.n	100140f4 <__ssvfscanf_r+0x40c>
10014682:	2c06      	cmp	r4, #6
10014684:	f47f ad4b 	bne.w	1001411e <__ssvfscanf_r+0x436>
10014688:	2407      	movs	r4, #7
1001468a:	e533      	b.n	100140f4 <__ssvfscanf_r+0x40c>
1001468c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001468e:	051e      	lsls	r6, r3, #20
10014690:	f57f ad45 	bpl.w	1001411e <__ssvfscanf_r+0x436>
10014694:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10014696:	f401 63a0 	and.w	r3, r1, #1280	@ 0x500
1001469a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
1001469e:	d005      	beq.n	100146ac <__ssvfscanf_r+0x9c4>
100146a0:	0549      	lsls	r1, r1, #21
100146a2:	f57f ad3c 	bpl.w	1001411e <__ssvfscanf_r+0x436>
100146a6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
100146a8:	2b00      	cmp	r3, #0
100146aa:	d048      	beq.n	1001473e <__ssvfscanf_r+0xa56>
100146ac:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100146ae:	059b      	lsls	r3, r3, #22
100146b0:	d404      	bmi.n	100146bc <__ssvfscanf_r+0x9d4>
100146b2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
100146b4:	69b9      	ldr	r1, [r7, #24]
100146b6:	1a5b      	subs	r3, r3, r1
100146b8:	e9c7 b304 	strd	fp, r3, [r7, #16]
100146bc:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100146be:	f423 6378 	bic.w	r3, r3, #3968	@ 0xf80
100146c2:	f443 73c0 	orr.w	r3, r3, #384	@ 0x180
100146c6:	64bb      	str	r3, [r7, #72]	@ 0x48
100146c8:	2300      	movs	r3, #0
100146ca:	633b      	str	r3, [r7, #48]	@ 0x30
100146cc:	e512      	b.n	100140f4 <__ssvfscanf_r+0x40c>
100146ce:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
100146d0:	2b00      	cmp	r3, #0
100146d2:	f040 821d 	bne.w	10014b10 <__ssvfscanf_r+0xe28>
100146d6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
100146d8:	b933      	cbnz	r3, 100146e8 <__ssvfscanf_r+0xa00>
100146da:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100146dc:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
100146e0:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
100146e4:	f000 8606 	beq.w	100152f4 <__ssvfscanf_r+0x160c>
100146e8:	2c01      	cmp	r4, #1
100146ea:	f000 820d 	beq.w	10014b08 <__ssvfscanf_r+0xe20>
100146ee:	2c04      	cmp	r4, #4
100146f0:	f000 820a 	beq.w	10014b08 <__ssvfscanf_r+0xe20>
100146f4:	e513      	b.n	1001411e <__ssvfscanf_r+0x436>
100146f6:	2c07      	cmp	r4, #7
100146f8:	f47f ad11 	bne.w	1001411e <__ssvfscanf_r+0x436>
100146fc:	2408      	movs	r4, #8
100146fe:	e4f9      	b.n	100140f4 <__ssvfscanf_r+0x40c>
10014700:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10014702:	0519      	lsls	r1, r3, #20
10014704:	f100 820c 	bmi.w	10014b20 <__ssvfscanf_r+0xe38>
10014708:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001470a:	2b01      	cmp	r3, #1
1001470c:	f47f ad07 	bne.w	1001411e <__ssvfscanf_r+0x436>
10014710:	2302      	movs	r3, #2
10014712:	647b      	str	r3, [r7, #68]	@ 0x44
10014714:	e4ee      	b.n	100140f4 <__ssvfscanf_r+0x40c>
10014716:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10014718:	0618      	lsls	r0, r3, #24
1001471a:	f57f ad00 	bpl.w	1001411e <__ssvfscanf_r+0x436>
1001471e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10014722:	64bb      	str	r3, [r7, #72]	@ 0x48
10014724:	e4e6      	b.n	100140f4 <__ssvfscanf_r+0x40c>
10014726:	2c00      	cmp	r4, #0
10014728:	f040 81e9 	bne.w	10014afe <__ssvfscanf_r+0xe16>
1001472c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001472e:	bb8b      	cbnz	r3, 10014794 <__ssvfscanf_r+0xaac>
10014730:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10014732:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
10014736:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
1001473a:	f000 85cd 	beq.w	100152d8 <__ssvfscanf_r+0x15f0>
1001473e:	2300      	movs	r3, #0
10014740:	f8d7 8020 	ldr.w	r8, [r7, #32]
10014744:	633b      	str	r3, [r7, #48]	@ 0x30
10014746:	e4f0      	b.n	1001412a <__ssvfscanf_r+0x442>
10014748:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001474a:	051b      	lsls	r3, r3, #20
1001474c:	f100 81d1 	bmi.w	10014af2 <__ssvfscanf_r+0xe0a>
10014750:	2c02      	cmp	r4, #2
10014752:	f47f ace4 	bne.w	1001411e <__ssvfscanf_r+0x436>
10014756:	2403      	movs	r4, #3
10014758:	e4cc      	b.n	100140f4 <__ssvfscanf_r+0x40c>
1001475a:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001475c:	0508      	lsls	r0, r1, #20
1001475e:	d599      	bpl.n	10014694 <__ssvfscanf_r+0x9ac>
10014760:	e761      	b.n	10014626 <__ssvfscanf_r+0x93e>
10014762:	f404 63c0 	and.w	r3, r4, #1536	@ 0x600
10014766:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
1001476a:	f47f adb2 	bne.w	100142d2 <__ssvfscanf_r+0x5ea>
1001476e:	f424 7400 	bic.w	r4, r4, #512	@ 0x200
10014772:	f444 64a0 	orr.w	r4, r4, #1280	@ 0x500
10014776:	2210      	movs	r2, #16
10014778:	e59c      	b.n	100142b4 <__ssvfscanf_r+0x5cc>
1001477a:	0623      	lsls	r3, r4, #24
1001477c:	f57f ada9 	bpl.w	100142d2 <__ssvfscanf_r+0x5ea>
10014780:	f024 0480 	bic.w	r4, r4, #128	@ 0x80
10014784:	e596      	b.n	100142b4 <__ssvfscanf_r+0x5cc>
10014786:	4b94      	ldr	r3, [pc, #592]	@ (100149d8 <__ssvfscanf_r+0xcf0>)
10014788:	f933 2012 	ldrsh.w	r2, [r3, r2, lsl #1]
1001478c:	2a08      	cmp	r2, #8
1001478e:	f73f ad8f 	bgt.w	100142b0 <__ssvfscanf_r+0x5c8>
10014792:	e59e      	b.n	100142d2 <__ssvfscanf_r+0x5ea>
10014794:	f8d7 8020 	ldr.w	r8, [r7, #32]
10014798:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001479a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
1001479e:	64bb      	str	r3, [r7, #72]	@ 0x48
100147a0:	e4c3      	b.n	1001412a <__ssvfscanf_r+0x442>
100147a2:	f044 0401 	orr.w	r4, r4, #1
100147a6:	f8da 3004 	ldr.w	r3, [sl, #4]
100147aa:	2b00      	cmp	r3, #0
100147ac:	4688      	mov	r8, r1
100147ae:	f04f 0b02 	mov.w	fp, #2
100147b2:	f73f abb8 	bgt.w	10013f26 <__ssvfscanf_r+0x23e>
100147b6:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100147b8:	4651      	mov	r1, sl
100147ba:	f004 ff3f 	bl	1001963c <__ssrefill_r>
100147be:	2800      	cmp	r0, #0
100147c0:	f47f aafe 	bne.w	10013dc0 <__ssvfscanf_r+0xd8>
100147c4:	0660      	lsls	r0, r4, #25
100147c6:	f53f abb1 	bmi.w	10013f2c <__ssvfscanf_r+0x244>
100147ca:	f8da 2000 	ldr.w	r2, [sl]
100147ce:	4e83      	ldr	r6, [pc, #524]	@ (100149dc <__ssvfscanf_r+0xcf4>)
100147d0:	7813      	ldrb	r3, [r2, #0]
100147d2:	5cf3      	ldrb	r3, [r6, r3]
100147d4:	0719      	lsls	r1, r3, #28
100147d6:	f57f aba9 	bpl.w	10013f2c <__ssvfscanf_r+0x244>
100147da:	4633      	mov	r3, r6
100147dc:	4656      	mov	r6, sl
100147de:	469a      	mov	sl, r3
100147e0:	e005      	b.n	100147ee <__ssvfscanf_r+0xb06>
100147e2:	6032      	str	r2, [r6, #0]
100147e4:	7813      	ldrb	r3, [r2, #0]
100147e6:	f81a 3003 	ldrb.w	r3, [sl, r3]
100147ea:	071b      	lsls	r3, r3, #28
100147ec:	d515      	bpl.n	1001481a <__ssvfscanf_r+0xb32>
100147ee:	6873      	ldr	r3, [r6, #4]
100147f0:	3b01      	subs	r3, #1
100147f2:	2b00      	cmp	r3, #0
100147f4:	f109 0901 	add.w	r9, r9, #1
100147f8:	6073      	str	r3, [r6, #4]
100147fa:	f102 0201 	add.w	r2, r2, #1
100147fe:	dcf0      	bgt.n	100147e2 <__ssvfscanf_r+0xafa>
10014800:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10014802:	4631      	mov	r1, r6
10014804:	f004 ff1a 	bl	1001963c <__ssrefill_r>
10014808:	2800      	cmp	r0, #0
1001480a:	f040 82e3 	bne.w	10014dd4 <__ssvfscanf_r+0x10ec>
1001480e:	6832      	ldr	r2, [r6, #0]
10014810:	7813      	ldrb	r3, [r2, #0]
10014812:	f81a 3003 	ldrb.w	r3, [sl, r3]
10014816:	071b      	lsls	r3, r3, #28
10014818:	d4e9      	bmi.n	100147ee <__ssvfscanf_r+0xb06>
1001481a:	46b2      	mov	sl, r6
1001481c:	f7ff bb86 	b.w	10013f2c <__ssvfscanf_r+0x244>
10014820:	f044 0401 	orr.w	r4, r4, #1
10014824:	4b6e      	ldr	r3, [pc, #440]	@ (100149e0 <__ssvfscanf_r+0xcf8>)
10014826:	62bb      	str	r3, [r7, #40]	@ 0x28
10014828:	230a      	movs	r3, #10
1001482a:	4688      	mov	r8, r1
1001482c:	63bb      	str	r3, [r7, #56]	@ 0x38
1001482e:	f04f 0b03 	mov.w	fp, #3
10014832:	f7ff bb73 	b.w	10013f1c <__ssvfscanf_r+0x234>
10014836:	f044 0401 	orr.w	r4, r4, #1
1001483a:	4b6a      	ldr	r3, [pc, #424]	@ (100149e4 <__ssvfscanf_r+0xcfc>)
1001483c:	62bb      	str	r3, [r7, #40]	@ 0x28
1001483e:	2308      	movs	r3, #8
10014840:	4688      	mov	r8, r1
10014842:	63bb      	str	r3, [r7, #56]	@ 0x38
10014844:	f04f 0b03 	mov.w	fp, #3
10014848:	f7ff bb68 	b.w	10013f1c <__ssvfscanf_r+0x234>
1001484c:	0523      	lsls	r3, r4, #20
1001484e:	f57f ad31 	bpl.w	100142b4 <__ssvfscanf_r+0x5cc>
10014852:	b912      	cbnz	r2, 1001485a <__ssvfscanf_r+0xb72>
10014854:	f444 7400 	orr.w	r4, r4, #512	@ 0x200
10014858:	2208      	movs	r2, #8
1001485a:	0561      	lsls	r1, r4, #21
1001485c:	f100 819e 	bmi.w	10014b9c <__ssvfscanf_r+0xeb4>
10014860:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10014862:	f424 7460 	bic.w	r4, r4, #896	@ 0x380
10014866:	b113      	cbz	r3, 1001486e <__ssvfscanf_r+0xb86>
10014868:	3b01      	subs	r3, #1
1001486a:	647b      	str	r3, [r7, #68]	@ 0x44
1001486c:	3501      	adds	r5, #1
1001486e:	f8d9 3004 	ldr.w	r3, [r9, #4]
10014872:	3b01      	subs	r3, #1
10014874:	2b00      	cmp	r3, #0
10014876:	f10b 0b01 	add.w	fp, fp, #1
1001487a:	f8c9 3004 	str.w	r3, [r9, #4]
1001487e:	f73f ad23 	bgt.w	100142c8 <__ssvfscanf_r+0x5e0>
10014882:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10014884:	64ba      	str	r2, [r7, #72]	@ 0x48
10014886:	4649      	mov	r1, r9
10014888:	f004 fed8 	bl	1001963c <__ssrefill_r>
1001488c:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001488e:	2800      	cmp	r0, #0
10014890:	f43f ad1d 	beq.w	100142ce <__ssvfscanf_r+0x5e6>
10014894:	e51d      	b.n	100142d2 <__ssvfscanf_r+0x5ea>
10014896:	6afd      	ldr	r5, [r7, #44]	@ 0x2c
10014898:	45ab      	cmp	fp, r5
1001489a:	f240 8114 	bls.w	10014ac6 <__ssvfscanf_r+0xdde>
1001489e:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
100148a0:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
100148a4:	4652      	mov	r2, sl
100148a6:	4620      	mov	r0, r4
100148a8:	f004 fe8c 	bl	100195c4 <_sungetc_r>
100148ac:	45ab      	cmp	fp, r5
100148ae:	d1f7      	bne.n	100148a0 <__ssvfscanf_r+0xbb8>
100148b0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
100148b2:	f7ff ba90 	b.w	10013dd6 <__ssvfscanf_r+0xee>
100148b6:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100148b8:	4651      	mov	r1, sl
100148ba:	f004 febf 	bl	1001963c <__ssrefill_r>
100148be:	2800      	cmp	r0, #0
100148c0:	f47f ac2d 	bne.w	1001411e <__ssvfscanf_r+0x436>
100148c4:	2d00      	cmp	r5, #0
100148c6:	f47f ab66 	bne.w	10013f96 <__ssvfscanf_r+0x2ae>
100148ca:	e428      	b.n	1001411e <__ssvfscanf_r+0x436>
100148cc:	f8da 2004 	ldr.w	r2, [sl, #4]
100148d0:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
100148d2:	e010      	b.n	100148f6 <__ssvfscanf_r+0xc0e>
100148d4:	f8da 3000 	ldr.w	r3, [sl]
100148d8:	4940      	ldr	r1, [pc, #256]	@ (100149dc <__ssvfscanf_r+0xcf4>)
100148da:	781a      	ldrb	r2, [r3, #0]
100148dc:	5c8a      	ldrb	r2, [r1, r2]
100148de:	0711      	lsls	r1, r2, #28
100148e0:	f103 0301 	add.w	r3, r3, #1
100148e4:	f57f aa26 	bpl.w	10013d34 <__ssvfscanf_r+0x4c>
100148e8:	f8da 2004 	ldr.w	r2, [sl, #4]
100148ec:	3a01      	subs	r2, #1
100148ee:	e9ca 3200 	strd	r3, r2, [sl]
100148f2:	f109 0901 	add.w	r9, r9, #1
100148f6:	2a00      	cmp	r2, #0
100148f8:	dcec      	bgt.n	100148d4 <__ssvfscanf_r+0xbec>
100148fa:	4651      	mov	r1, sl
100148fc:	4620      	mov	r0, r4
100148fe:	f004 fe9d 	bl	1001963c <__ssrefill_r>
10014902:	2800      	cmp	r0, #0
10014904:	d0e6      	beq.n	100148d4 <__ssvfscanf_r+0xbec>
10014906:	f7ff ba15 	b.w	10013d34 <__ssvfscanf_r+0x4c>
1001490a:	2b00      	cmp	r3, #0
1001490c:	f040 8395 	bne.w	1001503a <__ssvfscanf_r+0x1352>
10014910:	f8d7 b034 	ldr.w	fp, [r7, #52]	@ 0x34
10014914:	f014 0280 	ands.w	r2, r4, #128	@ 0x80
10014918:	f85b 6b04 	ldr.w	r6, [fp], #4
1001491c:	64be      	str	r6, [r7, #72]	@ 0x48
1001491e:	f000 8446 	beq.w	100151ae <__ssvfscanf_r+0x14c6>
10014922:	2e00      	cmp	r6, #0
10014924:	d0c4      	beq.n	100148b0 <__ssvfscanf_r+0xbc8>
10014926:	2020      	movs	r0, #32
10014928:	f000 fe72 	bl	10015610 <malloc>
1001492c:	4604      	mov	r4, r0
1001492e:	2800      	cmp	r0, #0
10014930:	f000 842d 	beq.w	1001518e <__ssvfscanf_r+0x14a6>
10014934:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10014936:	6030      	str	r0, [r6, #0]
10014938:	889a      	ldrh	r2, [r3, #4]
1001493a:	88de      	ldrh	r6, [r3, #6]
1001493c:	4296      	cmp	r6, r2
1001493e:	f080 8273 	bcs.w	10014e28 <__ssvfscanf_r+0x1140>
10014942:	6818      	ldr	r0, [r3, #0]
10014944:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10014946:	f840 3026 	str.w	r3, [r0, r6, lsl #2]
1001494a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001494c:	3601      	adds	r6, #1
1001494e:	80de      	strh	r6, [r3, #6]
10014950:	2320      	movs	r3, #32
10014952:	647b      	str	r3, [r7, #68]	@ 0x44
10014954:	f8da 0000 	ldr.w	r0, [sl]
10014958:	4e20      	ldr	r6, [pc, #128]	@ (100149dc <__ssvfscanf_r+0xcf4>)
1001495a:	7802      	ldrb	r2, [r0, #0]
1001495c:	5cb2      	ldrb	r2, [r6, r2]
1001495e:	0713      	lsls	r3, r2, #28
10014960:	f100 82e4 	bmi.w	10014f2c <__ssvfscanf_r+0x1244>
10014964:	4643      	mov	r3, r8
10014966:	4622      	mov	r2, r4
10014968:	46b0      	mov	r8, r6
1001496a:	4626      	mov	r6, r4
1001496c:	f8da 1004 	ldr.w	r1, [sl, #4]
10014970:	3901      	subs	r1, #1
10014972:	f8ca 1004 	str.w	r1, [sl, #4]
10014976:	1c41      	adds	r1, r0, #1
10014978:	f8ca 1000 	str.w	r1, [sl]
1001497c:	4634      	mov	r4, r6
1001497e:	7801      	ldrb	r1, [r0, #0]
10014980:	f804 1b01 	strb.w	r1, [r4], #1
10014984:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10014986:	b121      	cbz	r1, 10014992 <__ssvfscanf_r+0xcaa>
10014988:	6c79      	ldr	r1, [r7, #68]	@ 0x44
1001498a:	1aa6      	subs	r6, r4, r2
1001498c:	428e      	cmp	r6, r1
1001498e:	f080 8419 	bcs.w	100151c4 <__ssvfscanf_r+0x14dc>
10014992:	3d01      	subs	r5, #1
10014994:	d00c      	beq.n	100149b0 <__ssvfscanf_r+0xcc8>
10014996:	f8da 1004 	ldr.w	r1, [sl, #4]
1001499a:	2900      	cmp	r1, #0
1001499c:	4626      	mov	r6, r4
1001499e:	f340 8462 	ble.w	10015266 <__ssvfscanf_r+0x157e>
100149a2:	f8da 0000 	ldr.w	r0, [sl]
100149a6:	7801      	ldrb	r1, [r0, #0]
100149a8:	f818 1001 	ldrb.w	r1, [r8, r1]
100149ac:	0709      	lsls	r1, r1, #28
100149ae:	d5dd      	bpl.n	1001496c <__ssvfscanf_r+0xc84>
100149b0:	1aa2      	subs	r2, r4, r2
100149b2:	4698      	mov	r8, r3
100149b4:	4491      	add	r9, r2
100149b6:	1c51      	adds	r1, r2, #1
100149b8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100149ba:	2200      	movs	r2, #0
100149bc:	7022      	strb	r2, [r4, #0]
100149be:	b11b      	cbz	r3, 100149c8 <__ssvfscanf_r+0xce0>
100149c0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
100149c2:	428b      	cmp	r3, r1
100149c4:	f200 8445 	bhi.w	10015252 <__ssvfscanf_r+0x156a>
100149c8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
100149ca:	f8c7 b034 	str.w	fp, [r7, #52]	@ 0x34
100149ce:	3301      	adds	r3, #1
100149d0:	643b      	str	r3, [r7, #64]	@ 0x40
100149d2:	f7ff b9af 	b.w	10013d34 <__ssvfscanf_r+0x4c>
100149d6:	bf00      	nop
100149d8:	10023824 	.word	0x10023824
100149dc:	1002388d 	.word	0x1002388d
100149e0:	100181fd 	.word	0x100181fd
100149e4:	1001894d 	.word	0x1001894d
100149e8:	2a00      	cmp	r2, #0
100149ea:	f040 816e 	bne.w	10014cca <__ssvfscanf_r+0xfe2>
100149ee:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100149f0:	f014 0480 	ands.w	r4, r4, #128	@ 0x80
100149f4:	f853 bb04 	ldr.w	fp, [r3], #4
100149f8:	64bb      	str	r3, [r7, #72]	@ 0x48
100149fa:	f000 8409 	beq.w	10015210 <__ssvfscanf_r+0x1528>
100149fe:	f1bb 0f00 	cmp.w	fp, #0
10014a02:	f43f af55 	beq.w	100148b0 <__ssvfscanf_r+0xbc8>
10014a06:	2020      	movs	r0, #32
10014a08:	f000 fe02 	bl	10015610 <malloc>
10014a0c:	4606      	mov	r6, r0
10014a0e:	2800      	cmp	r0, #0
10014a10:	f000 83bd 	beq.w	1001518e <__ssvfscanf_r+0x14a6>
10014a14:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
10014a16:	f8cb 0000 	str.w	r0, [fp]
10014a1a:	88d4      	ldrh	r4, [r2, #6]
10014a1c:	8893      	ldrh	r3, [r2, #4]
10014a1e:	429c      	cmp	r4, r3
10014a20:	f080 8286 	bcs.w	10014f30 <__ssvfscanf_r+0x1248>
10014a24:	6810      	ldr	r0, [r2, #0]
10014a26:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10014a28:	f840 b024 	str.w	fp, [r0, r4, lsl #2]
10014a2c:	3401      	adds	r4, #1
10014a2e:	80dc      	strh	r4, [r3, #6]
10014a30:	2320      	movs	r3, #32
10014a32:	f8da 1000 	ldr.w	r1, [sl]
10014a36:	f107 0270 	add.w	r2, r7, #112	@ 0x70
10014a3a:	7808      	ldrb	r0, [r1, #0]
10014a3c:	5c10      	ldrb	r0, [r2, r0]
10014a3e:	2800      	cmp	r0, #0
10014a40:	f43f af36 	beq.w	100148b0 <__ssvfscanf_r+0xbc8>
10014a44:	f8c7 9044 	str.w	r9, [r7, #68]	@ 0x44
10014a48:	f8c7 8034 	str.w	r8, [r7, #52]	@ 0x34
10014a4c:	46d9      	mov	r9, fp
10014a4e:	4634      	mov	r4, r6
10014a50:	4698      	mov	r8, r3
10014a52:	4693      	mov	fp, r2
10014a54:	f8da 0004 	ldr.w	r0, [sl, #4]
10014a58:	1c4b      	adds	r3, r1, #1
10014a5a:	3801      	subs	r0, #1
10014a5c:	e9ca 3000 	strd	r3, r0, [sl]
10014a60:	4630      	mov	r0, r6
10014a62:	7809      	ldrb	r1, [r1, #0]
10014a64:	f800 1b01 	strb.w	r1, [r0], #1
10014a68:	f1b9 0f00 	cmp.w	r9, #0
10014a6c:	d002      	beq.n	10014a74 <__ssvfscanf_r+0xd8c>
10014a6e:	1b06      	subs	r6, r0, r4
10014a70:	4546      	cmp	r6, r8
10014a72:	d26b      	bcs.n	10014b4c <__ssvfscanf_r+0xe64>
10014a74:	4606      	mov	r6, r0
10014a76:	3d01      	subs	r5, #1
10014a78:	d00b      	beq.n	10014a92 <__ssvfscanf_r+0xdaa>
10014a7a:	f8da 1004 	ldr.w	r1, [sl, #4]
10014a7e:	2900      	cmp	r1, #0
10014a80:	f340 8171 	ble.w	10014d66 <__ssvfscanf_r+0x107e>
10014a84:	f8da 1000 	ldr.w	r1, [sl]
10014a88:	7808      	ldrb	r0, [r1, #0]
10014a8a:	f81b 0000 	ldrb.w	r0, [fp, r0]
10014a8e:	2800      	cmp	r0, #0
10014a90:	d1e0      	bne.n	10014a54 <__ssvfscanf_r+0xd6c>
10014a92:	1b34      	subs	r4, r6, r4
10014a94:	46cb      	mov	fp, r9
10014a96:	4643      	mov	r3, r8
10014a98:	f8d7 9044 	ldr.w	r9, [r7, #68]	@ 0x44
10014a9c:	f8d7 8034 	ldr.w	r8, [r7, #52]	@ 0x34
10014aa0:	f43f af06 	beq.w	100148b0 <__ssvfscanf_r+0xbc8>
10014aa4:	2200      	movs	r2, #0
10014aa6:	7032      	strb	r2, [r6, #0]
10014aa8:	f1bb 0f00 	cmp.w	fp, #0
10014aac:	d003      	beq.n	10014ab6 <__ssvfscanf_r+0xdce>
10014aae:	1c61      	adds	r1, r4, #1
10014ab0:	428b      	cmp	r3, r1
10014ab2:	f200 83e5 	bhi.w	10015280 <__ssvfscanf_r+0x1598>
10014ab6:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10014ab8:	3301      	adds	r3, #1
10014aba:	643b      	str	r3, [r7, #64]	@ 0x40
10014abc:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10014abe:	637b      	str	r3, [r7, #52]	@ 0x34
10014ac0:	44a1      	add	r9, r4
10014ac2:	f7ff b937 	b.w	10013d34 <__ssvfscanf_r+0x4c>
10014ac6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10014ac8:	2b00      	cmp	r3, #0
10014aca:	f47f a986 	bne.w	10013dda <__ssvfscanf_r+0xf2>
10014ace:	f7ff b988 	b.w	10013de2 <__ssvfscanf_r+0xfa>
10014ad2:	f014 0f8f 	tst.w	r4, #143	@ 0x8f
10014ad6:	f47f aeeb 	bne.w	100148b0 <__ssvfscanf_r+0xbc8>
10014ada:	eb05 0585 	add.w	r5, r5, r5, lsl #2
10014ade:	eb02 0545 	add.w	r5, r2, r5, lsl #1
10014ae2:	3d30      	subs	r5, #48	@ 0x30
10014ae4:	f7ff ba06 	b.w	10013ef4 <__ssvfscanf_r+0x20c>
10014ae8:	4688      	mov	r8, r1
10014aea:	f04f 0b04 	mov.w	fp, #4
10014aee:	f7ff ba15 	b.w	10013f1c <__ssvfscanf_r+0x234>
10014af2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10014af4:	191b      	adds	r3, r3, r4
10014af6:	f47f ae2b 	bne.w	10014750 <__ssvfscanf_r+0xa68>
10014afa:	f7ff baf5 	b.w	100140e8 <__ssvfscanf_r+0x400>
10014afe:	2c03      	cmp	r4, #3
10014b00:	d002      	beq.n	10014b08 <__ssvfscanf_r+0xe20>
10014b02:	2c05      	cmp	r4, #5
10014b04:	f47f ab0b 	bne.w	1001411e <__ssvfscanf_r+0x436>
10014b08:	3401      	adds	r4, #1
10014b0a:	b2e4      	uxtb	r4, r4
10014b0c:	f7ff baf2 	b.w	100140f4 <__ssvfscanf_r+0x40c>
10014b10:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10014b12:	2b02      	cmp	r3, #2
10014b14:	f47f ade8 	bne.w	100146e8 <__ssvfscanf_r+0xa00>
10014b18:	2303      	movs	r3, #3
10014b1a:	647b      	str	r3, [r7, #68]	@ 0x44
10014b1c:	f7ff baea 	b.w	100140f4 <__ssvfscanf_r+0x40c>
10014b20:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10014b22:	191b      	adds	r3, r3, r4
10014b24:	f47f adf0 	bne.w	10014708 <__ssvfscanf_r+0xa20>
10014b28:	f7ff bade 	b.w	100140e8 <__ssvfscanf_r+0x400>
10014b2c:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10014b2e:	4651      	mov	r1, sl
10014b30:	f004 fd84 	bl	1001963c <__ssrefill_r>
10014b34:	2800      	cmp	r0, #0
10014b36:	f43f ad56 	beq.w	100145e6 <__ssvfscanf_r+0x8fe>
10014b3a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
10014b3c:	f8d7 801c 	ldr.w	r8, [r7, #28]
10014b40:	627c      	str	r4, [r7, #36]	@ 0x24
10014b42:	2e00      	cmp	r6, #0
10014b44:	f43f ad56 	beq.w	100145f4 <__ssvfscanf_r+0x90c>
10014b48:	f7ff b93a 	b.w	10013dc0 <__ssvfscanf_r+0xd8>
10014b4c:	ea4f 0848 	mov.w	r8, r8, lsl #1
10014b50:	4620      	mov	r0, r4
10014b52:	4641      	mov	r1, r8
10014b54:	f001 fc78 	bl	10016448 <realloc>
10014b58:	4604      	mov	r4, r0
10014b5a:	2800      	cmp	r0, #0
10014b5c:	f000 8317 	beq.w	1001518e <__ssvfscanf_r+0x14a6>
10014b60:	4406      	add	r6, r0
10014b62:	f8c9 0000 	str.w	r0, [r9]
10014b66:	e786      	b.n	10014a76 <__ssvfscanf_r+0xd8e>
10014b68:	f444 7400 	orr.w	r4, r4, #512	@ 0x200
10014b6c:	4bb8      	ldr	r3, [pc, #736]	@ (10014e50 <__ssvfscanf_r+0x1168>)
10014b6e:	62bb      	str	r3, [r7, #40]	@ 0x28
10014b70:	2310      	movs	r3, #16
10014b72:	4688      	mov	r8, r1
10014b74:	63bb      	str	r3, [r7, #56]	@ 0x38
10014b76:	f04f 0b03 	mov.w	fp, #3
10014b7a:	f7ff b9cf 	b.w	10013f1c <__ssvfscanf_r+0x234>
10014b7e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10014b82:	64bb      	str	r3, [r7, #72]	@ 0x48
10014b84:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10014b86:	3301      	adds	r3, #1
10014b88:	633b      	str	r3, [r7, #48]	@ 0x30
10014b8a:	68fb      	ldr	r3, [r7, #12]
10014b8c:	2b00      	cmp	r3, #0
10014b8e:	f43f aab3 	beq.w	100140f8 <__ssvfscanf_r+0x410>
10014b92:	68fb      	ldr	r3, [r7, #12]
10014b94:	3b01      	subs	r3, #1
10014b96:	60fb      	str	r3, [r7, #12]
10014b98:	f7ff baaf 	b.w	100140fa <__ssvfscanf_r+0x412>
10014b9c:	f424 64b0 	bic.w	r4, r4, #1408	@ 0x580
10014ba0:	f7ff bb88 	b.w	100142b4 <__ssvfscanf_r+0x5cc>
10014ba4:	0722      	lsls	r2, r4, #28
10014ba6:	f140 8213 	bpl.w	10014fd0 <__ssvfscanf_r+0x12e8>
10014baa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10014bac:	681b      	ldr	r3, [r3, #0]
10014bae:	7018      	strb	r0, [r3, #0]
10014bb0:	f7ff bbae 	b.w	10014310 <__ssvfscanf_r+0x628>
10014bb4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
10014bb6:	69bb      	ldr	r3, [r7, #24]
10014bb8:	429a      	cmp	r2, r3
10014bba:	f43f aaf0 	beq.w	1001419e <__ssvfscanf_r+0x4b6>
10014bbe:	1a9a      	subs	r2, r3, r2
10014bc0:	f207 23c3 	addw	r3, r7, #707	@ 0x2c3
10014bc4:	459b      	cmp	fp, r3
10014bc6:	bf28      	it	cs
10014bc8:	f207 2bc2 	addwcs	fp, r7, #706	@ 0x2c2
10014bcc:	49a1      	ldr	r1, [pc, #644]	@ (10014e54 <__ssvfscanf_r+0x116c>)
10014bce:	4658      	mov	r0, fp
10014bd0:	f004 f9e6 	bl	10018fa0 <sprintf>
10014bd4:	f7ff bae3 	b.w	1001419e <__ssvfscanf_r+0x4b6>
10014bd8:	f816 1c01 	ldrb.w	r1, [r6, #-1]
10014bdc:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10014bde:	4652      	mov	r2, sl
10014be0:	3e01      	subs	r6, #1
10014be2:	f004 fcef 	bl	100195c4 <_sungetc_r>
10014be6:	f7ff bb7e 	b.w	100142e6 <__ssvfscanf_r+0x5fe>
10014bea:	f107 0070 	add.w	r0, r7, #112	@ 0x70
10014bee:	f001 ff33 	bl	10016a58 <__sccl>
10014bf2:	f044 0440 	orr.w	r4, r4, #64	@ 0x40
10014bf6:	4680      	mov	r8, r0
10014bf8:	f04f 0b01 	mov.w	fp, #1
10014bfc:	f7ff b98e 	b.w	10013f1c <__ssvfscanf_r+0x234>
10014c00:	4b95      	ldr	r3, [pc, #596]	@ (10014e58 <__ssvfscanf_r+0x1170>)
10014c02:	62bb      	str	r3, [r7, #40]	@ 0x28
10014c04:	2300      	movs	r3, #0
10014c06:	4688      	mov	r8, r1
10014c08:	63bb      	str	r3, [r7, #56]	@ 0x38
10014c0a:	f04f 0b03 	mov.w	fp, #3
10014c0e:	f7ff b985 	b.w	10013f1c <__ssvfscanf_r+0x234>
10014c12:	0723      	lsls	r3, r4, #28
10014c14:	f47f ae4c 	bne.w	100148b0 <__ssvfscanf_r+0xbc8>
10014c18:	f898 2001 	ldrb.w	r2, [r8, #1]
10014c1c:	2a68      	cmp	r2, #104	@ 0x68
10014c1e:	f000 81cf 	beq.w	10014fc0 <__ssvfscanf_r+0x12d8>
10014c22:	f044 0404 	orr.w	r4, r4, #4
10014c26:	4688      	mov	r8, r1
10014c28:	f7ff b8fd 	b.w	10013e26 <__ssvfscanf_r+0x13e>
10014c2c:	f444 7408 	orr.w	r4, r4, #544	@ 0x220
10014c30:	e79c      	b.n	10014b6c <__ssvfscanf_r+0xe84>
10014c32:	06e5      	lsls	r5, r4, #27
10014c34:	f100 80f5 	bmi.w	10014e22 <__ssvfscanf_r+0x113a>
10014c38:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10014c3a:	0720      	lsls	r0, r4, #28
10014c3c:	f853 2b04 	ldr.w	r2, [r3], #4
10014c40:	f100 81f8 	bmi.w	10015034 <__ssvfscanf_r+0x134c>
10014c44:	0766      	lsls	r6, r4, #29
10014c46:	f140 8325 	bpl.w	10015294 <__ssvfscanf_r+0x15ac>
10014c4a:	f8a2 9000 	strh.w	r9, [r2]
10014c4e:	637b      	str	r3, [r7, #52]	@ 0x34
10014c50:	4688      	mov	r8, r1
10014c52:	f7ff b86f 	b.w	10013d34 <__ssvfscanf_r+0x4c>
10014c56:	f014 038f 	ands.w	r3, r4, #143	@ 0x8f
10014c5a:	f47f ae29 	bne.w	100148b0 <__ssvfscanf_r+0xbc8>
10014c5e:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
10014c60:	2a00      	cmp	r2, #0
10014c62:	f000 82a9 	beq.w	100151b8 <__ssvfscanf_r+0x14d0>
10014c66:	f898 2001 	ldrb.w	r2, [r8, #1]
10014c6a:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
10014c6e:	4688      	mov	r8, r1
10014c70:	f7ff b8d9 	b.w	10013e26 <__ssvfscanf_r+0x13e>
10014c74:	0722      	lsls	r2, r4, #28
10014c76:	f47f ae1b 	bne.w	100148b0 <__ssvfscanf_r+0xbc8>
10014c7a:	f898 2001 	ldrb.w	r2, [r8, #1]
10014c7e:	2a6c      	cmp	r2, #108	@ 0x6c
10014c80:	f000 8196 	beq.w	10014fb0 <__ssvfscanf_r+0x12c8>
10014c84:	f044 0401 	orr.w	r4, r4, #1
10014c88:	4688      	mov	r8, r1
10014c8a:	f7ff b8cc 	b.w	10013e26 <__ssvfscanf_r+0x13e>
10014c8e:	4b70      	ldr	r3, [pc, #448]	@ (10014e50 <__ssvfscanf_r+0x1168>)
10014c90:	62bb      	str	r3, [r7, #40]	@ 0x28
10014c92:	230a      	movs	r3, #10
10014c94:	4688      	mov	r8, r1
10014c96:	63bb      	str	r3, [r7, #56]	@ 0x38
10014c98:	f04f 0b03 	mov.w	fp, #3
10014c9c:	f7ff b93e 	b.w	10013f1c <__ssvfscanf_r+0x234>
10014ca0:	4325      	orrs	r5, r4
10014ca2:	f47f ae05 	bne.w	100148b0 <__ssvfscanf_r+0xbc8>
10014ca6:	f898 2001 	ldrb.w	r2, [r8, #1]
10014caa:	2410      	movs	r4, #16
10014cac:	4688      	mov	r8, r1
10014cae:	f7ff b8ba 	b.w	10013e26 <__ssvfscanf_r+0x13e>
10014cb2:	4688      	mov	r8, r1
10014cb4:	f7ff b858 	b.w	10013d68 <__ssvfscanf_r+0x80>
10014cb8:	f04f 0c00 	mov.w	ip, #0
10014cbc:	46e6      	mov	lr, ip
10014cbe:	f8c7 c048 	str.w	ip, [r7, #72]	@ 0x48
10014cc2:	f107 0254 	add.w	r2, r7, #84	@ 0x54
10014cc6:	f7ff bb5e 	b.w	10014386 <__ssvfscanf_r+0x69e>
10014cca:	f8da 3000 	ldr.w	r3, [sl]
10014cce:	f107 0270 	add.w	r2, r7, #112	@ 0x70
10014cd2:	7819      	ldrb	r1, [r3, #0]
10014cd4:	5c51      	ldrb	r1, [r2, r1]
10014cd6:	2900      	cmp	r1, #0
10014cd8:	f43f aef5 	beq.w	10014ac6 <__ssvfscanf_r+0xdde>
10014cdc:	3301      	adds	r3, #1
10014cde:	f8ca 3000 	str.w	r3, [sl]
10014ce2:	f8da 3004 	ldr.w	r3, [sl, #4]
10014ce6:	2d01      	cmp	r5, #1
10014ce8:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
10014cec:	f8ca 3004 	str.w	r3, [sl, #4]
10014cf0:	d01b      	beq.n	10014d2a <__ssvfscanf_r+0x1042>
10014cf2:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
10014cf4:	4616      	mov	r6, r2
10014cf6:	e010      	b.n	10014d1a <__ssvfscanf_r+0x1032>
10014cf8:	f8da 3000 	ldr.w	r3, [sl]
10014cfc:	781a      	ldrb	r2, [r3, #0]
10014cfe:	5cb2      	ldrb	r2, [r6, r2]
10014d00:	3301      	adds	r3, #1
10014d02:	b192      	cbz	r2, 10014d2a <__ssvfscanf_r+0x1042>
10014d04:	f8ca 3000 	str.w	r3, [sl]
10014d08:	f8da 3004 	ldr.w	r3, [sl, #4]
10014d0c:	f10b 0b01 	add.w	fp, fp, #1
10014d10:	3b01      	subs	r3, #1
10014d12:	455d      	cmp	r5, fp
10014d14:	f8ca 3004 	str.w	r3, [sl, #4]
10014d18:	d007      	beq.n	10014d2a <__ssvfscanf_r+0x1042>
10014d1a:	2b00      	cmp	r3, #0
10014d1c:	dcec      	bgt.n	10014cf8 <__ssvfscanf_r+0x1010>
10014d1e:	4651      	mov	r1, sl
10014d20:	4620      	mov	r0, r4
10014d22:	f004 fc8b 	bl	1001963c <__ssrefill_r>
10014d26:	2800      	cmp	r0, #0
10014d28:	d0e6      	beq.n	10014cf8 <__ssvfscanf_r+0x1010>
10014d2a:	44d9      	add	r9, fp
10014d2c:	f7ff b802 	b.w	10013d34 <__ssvfscanf_r+0x4c>
10014d30:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10014d32:	623b      	str	r3, [r7, #32]
10014d34:	2300      	movs	r3, #0
10014d36:	e9c7 330b 	strd	r3, r3, [r7, #44]	@ 0x2c
10014d3a:	637b      	str	r3, [r7, #52]	@ 0x34
10014d3c:	f107 0354 	add.w	r3, r7, #84	@ 0x54
10014d40:	469b      	mov	fp, r3
10014d42:	f7ff bbde 	b.w	10014502 <__ssvfscanf_r+0x81a>
10014d46:	2600      	movs	r6, #0
10014d48:	e448      	b.n	100145dc <__ssvfscanf_r+0x8f4>
10014d4a:	1ca1      	adds	r1, r4, #2
10014d4c:	f43f ac46 	beq.w	100145dc <__ssvfscanf_r+0x8f4>
10014d50:	f8db 3000 	ldr.w	r3, [fp]
10014d54:	1c5a      	adds	r2, r3, #1
10014d56:	f47f ac09 	bne.w	1001456c <__ssvfscanf_r+0x884>
10014d5a:	e420      	b.n	1001459e <__ssvfscanf_r+0x8b6>
10014d5c:	682b      	ldr	r3, [r5, #0]
10014d5e:	2b04      	cmp	r3, #4
10014d60:	f47f ac27 	bne.w	100145b2 <__ssvfscanf_r+0x8ca>
10014d64:	e427      	b.n	100145b6 <__ssvfscanf_r+0x8ce>
10014d66:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10014d68:	4651      	mov	r1, sl
10014d6a:	f004 fc67 	bl	1001963c <__ssrefill_r>
10014d6e:	2800      	cmp	r0, #0
10014d70:	f43f ae88 	beq.w	10014a84 <__ssvfscanf_r+0xd9c>
10014d74:	42a6      	cmp	r6, r4
10014d76:	46cb      	mov	fp, r9
10014d78:	4643      	mov	r3, r8
10014d7a:	f8d7 9044 	ldr.w	r9, [r7, #68]	@ 0x44
10014d7e:	f8d7 8034 	ldr.w	r8, [r7, #52]	@ 0x34
10014d82:	f43f a81d 	beq.w	10013dc0 <__ssvfscanf_r+0xd8>
10014d86:	1b34      	subs	r4, r6, r4
10014d88:	e68c      	b.n	10014aa4 <__ssvfscanf_r+0xdbc>
10014d8a:	6b38      	ldr	r0, [r7, #48]	@ 0x30
10014d8c:	00d9      	lsls	r1, r3, #3
10014d8e:	461e      	mov	r6, r3
10014d90:	f001 fb5a 	bl	10016448 <realloc>
10014d94:	6338      	str	r0, [r7, #48]	@ 0x30
10014d96:	2800      	cmp	r0, #0
10014d98:	f000 81f9 	beq.w	1001518e <__ssvfscanf_r+0x14a6>
10014d9c:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
10014d9e:	0073      	lsls	r3, r6, #1
10014da0:	eb00 0b05 	add.w	fp, r0, r5
10014da4:	6c7e      	ldr	r6, [r7, #68]	@ 0x44
10014da6:	6010      	str	r0, [r2, #0]
10014da8:	62fb      	str	r3, [r7, #44]	@ 0x2c
10014daa:	e417      	b.n	100145dc <__ssvfscanf_r+0x8f4>
10014dac:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10014dae:	f421 7120 	bic.w	r1, r1, #640	@ 0x280
10014db2:	4623      	mov	r3, r4
10014db4:	4658      	mov	r0, fp
10014db6:	64b9      	str	r1, [r7, #72]	@ 0x48
10014db8:	4632      	mov	r2, r6
10014dba:	69f9      	ldr	r1, [r7, #28]
10014dbc:	68bc      	ldr	r4, [r7, #8]
10014dbe:	4699      	mov	r9, r3
10014dc0:	46aa      	mov	sl, r5
10014dc2:	687d      	ldr	r5, [r7, #4]
10014dc4:	f004 f90c 	bl	10018fe0 <stpncpy>
10014dc8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10014dca:	61bb      	str	r3, [r7, #24]
10014dcc:	3d01      	subs	r5, #1
10014dce:	4683      	mov	fp, r0
10014dd0:	f7ff b993 	b.w	100140fa <__ssvfscanf_r+0x412>
10014dd4:	46b2      	mov	sl, r6
10014dd6:	f7fe bff3 	b.w	10013dc0 <__ssvfscanf_r+0xd8>
10014dda:	2c02      	cmp	r4, #2
10014ddc:	f240 82ea 	bls.w	100153b4 <__ssvfscanf_r+0x16cc>
10014de0:	2c03      	cmp	r4, #3
10014de2:	f43f a9ab 	beq.w	1001413c <__ssvfscanf_r+0x454>
10014de6:	3c04      	subs	r4, #4
10014de8:	b2e5      	uxtb	r5, r4
10014dea:	43ec      	mvns	r4, r5
10014dec:	6cfe      	ldr	r6, [r7, #76]	@ 0x4c
10014dee:	445c      	add	r4, fp
10014df0:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
10014df4:	4652      	mov	r2, sl
10014df6:	4630      	mov	r0, r6
10014df8:	f004 fbe4 	bl	100195c4 <_sungetc_r>
10014dfc:	455c      	cmp	r4, fp
10014dfe:	d1f7      	bne.n	10014df0 <__ssvfscanf_r+0x1108>
10014e00:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
10014e04:	eba9 0905 	sub.w	r9, r9, r5
10014e08:	f7ff b998 	b.w	1001413c <__ssvfscanf_r+0x454>
10014e0c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10014e0e:	f8d3 b000 	ldr.w	fp, [r3]
10014e12:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10014e14:	079a      	lsls	r2, r3, #30
10014e16:	f140 80f5 	bpl.w	10015004 <__ssvfscanf_r+0x131c>
10014e1a:	e9cb 5600 	strd	r5, r6, [fp]
10014e1e:	f7ff b9cf 	b.w	100141c0 <__ssvfscanf_r+0x4d8>
10014e22:	4688      	mov	r8, r1
10014e24:	f7fe bf86 	b.w	10013d34 <__ssvfscanf_r+0x4c>
10014e28:	f64f 71f6 	movw	r1, #65526	@ 0xfff6
10014e2c:	428a      	cmp	r2, r1
10014e2e:	d864      	bhi.n	10014efa <__ssvfscanf_r+0x1212>
10014e30:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10014e32:	3208      	adds	r2, #8
10014e34:	b292      	uxth	r2, r2
10014e36:	6818      	ldr	r0, [r3, #0]
10014e38:	647a      	str	r2, [r7, #68]	@ 0x44
10014e3a:	0091      	lsls	r1, r2, #2
10014e3c:	f001 fb04 	bl	10016448 <realloc>
10014e40:	2800      	cmp	r0, #0
10014e42:	d05a      	beq.n	10014efa <__ssvfscanf_r+0x1212>
10014e44:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10014e46:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
10014e48:	809a      	strh	r2, [r3, #4]
10014e4a:	6018      	str	r0, [r3, #0]
10014e4c:	e57a      	b.n	10014944 <__ssvfscanf_r+0xc5c>
10014e4e:	bf00      	nop
10014e50:	1001894d 	.word	0x1001894d
10014e54:	1002381c 	.word	0x1002381c
10014e58:	100181fd 	.word	0x100181fd
10014e5c:	f004 0310 	and.w	r3, r4, #16
10014e60:	2d01      	cmp	r5, #1
10014e62:	bf38      	it	cc
10014e64:	2501      	movcc	r5, #1
10014e66:	461a      	mov	r2, r3
10014e68:	64bb      	str	r3, [r7, #72]	@ 0x48
10014e6a:	f014 0301 	ands.w	r3, r4, #1
10014e6e:	f040 812d 	bne.w	100150cc <__ssvfscanf_r+0x13e4>
10014e72:	6cba      	ldr	r2, [r7, #72]	@ 0x48
10014e74:	2a00      	cmp	r2, #0
10014e76:	f040 82b5 	bne.w	100153e4 <__ssvfscanf_r+0x16fc>
10014e7a:	f8d7 b034 	ldr.w	fp, [r7, #52]	@ 0x34
10014e7e:	0623      	lsls	r3, r4, #24
10014e80:	f85b 6b04 	ldr.w	r6, [fp], #4
10014e84:	f140 82c5 	bpl.w	10015412 <__ssvfscanf_r+0x172a>
10014e88:	2e00      	cmp	r6, #0
10014e8a:	f43f ad11 	beq.w	100148b0 <__ssvfscanf_r+0xbc8>
10014e8e:	4628      	mov	r0, r5
10014e90:	f000 fbbe 	bl	10015610 <malloc>
10014e94:	4604      	mov	r4, r0
10014e96:	2800      	cmp	r0, #0
10014e98:	f000 8179 	beq.w	1001518e <__ssvfscanf_r+0x14a6>
10014e9c:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
10014e9e:	6030      	str	r0, [r6, #0]
10014ea0:	88cb      	ldrh	r3, [r1, #6]
10014ea2:	888a      	ldrh	r2, [r1, #4]
10014ea4:	4293      	cmp	r3, r2
10014ea6:	f0c0 8300 	bcc.w	100154aa <__ssvfscanf_r+0x17c2>
10014eaa:	f64f 71f6 	movw	r1, #65526	@ 0xfff6
10014eae:	428a      	cmp	r2, r1
10014eb0:	647b      	str	r3, [r7, #68]	@ 0x44
10014eb2:	d822      	bhi.n	10014efa <__ssvfscanf_r+0x1212>
10014eb4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10014eb6:	3208      	adds	r2, #8
10014eb8:	b292      	uxth	r2, r2
10014eba:	6818      	ldr	r0, [r3, #0]
10014ebc:	64ba      	str	r2, [r7, #72]	@ 0x48
10014ebe:	0091      	lsls	r1, r2, #2
10014ec0:	f001 fac2 	bl	10016448 <realloc>
10014ec4:	b1c8      	cbz	r0, 10014efa <__ssvfscanf_r+0x1212>
10014ec6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10014ec8:	6cba      	ldr	r2, [r7, #72]	@ 0x48
10014eca:	809a      	strh	r2, [r3, #4]
10014ecc:	6018      	str	r0, [r3, #0]
10014ece:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10014ed0:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
10014ed2:	f840 6023 	str.w	r6, [r0, r3, lsl #2]
10014ed6:	3301      	adds	r3, #1
10014ed8:	80d3      	strh	r3, [r2, #6]
10014eda:	f8cd a000 	str.w	sl, [sp]
10014ede:	4621      	mov	r1, r4
10014ee0:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10014ee2:	462b      	mov	r3, r5
10014ee4:	2201      	movs	r2, #1
10014ee6:	f004 fbc5 	bl	10019674 <_sfread_r>
10014eea:	4604      	mov	r4, r0
10014eec:	2800      	cmp	r0, #0
10014eee:	f040 82de 	bne.w	100154ae <__ssvfscanf_r+0x17c6>
10014ef2:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10014ef4:	2b00      	cmp	r3, #0
10014ef6:	f040 82e4 	bne.w	100154c2 <__ssvfscanf_r+0x17da>
10014efa:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10014efc:	88de      	ldrh	r6, [r3, #6]
10014efe:	6818      	ldr	r0, [r3, #0]
10014f00:	b17e      	cbz	r6, 10014f22 <__ssvfscanf_r+0x123a>
10014f02:	2400      	movs	r4, #0
10014f04:	1f05      	subs	r5, r0, #4
10014f06:	46a0      	mov	r8, r4
10014f08:	4681      	mov	r9, r0
10014f0a:	f855 3f04 	ldr.w	r3, [r5, #4]!
10014f0e:	6818      	ldr	r0, [r3, #0]
10014f10:	f000 fb86 	bl	10015620 <free>
10014f14:	3401      	adds	r4, #1
10014f16:	682b      	ldr	r3, [r5, #0]
10014f18:	42a6      	cmp	r6, r4
10014f1a:	f8c3 8000 	str.w	r8, [r3]
10014f1e:	d1f4      	bne.n	10014f0a <__ssvfscanf_r+0x1222>
10014f20:	4648      	mov	r0, r9
10014f22:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10014f26:	643b      	str	r3, [r7, #64]	@ 0x40
10014f28:	f7fe bf58 	b.w	10013ddc <__ssvfscanf_r+0xf4>
10014f2c:	2101      	movs	r1, #1
10014f2e:	e543      	b.n	100149b8 <__ssvfscanf_r+0xcd0>
10014f30:	f64f 72f6 	movw	r2, #65526	@ 0xfff6
10014f34:	4293      	cmp	r3, r2
10014f36:	d8e0      	bhi.n	10014efa <__ssvfscanf_r+0x1212>
10014f38:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
10014f3a:	3308      	adds	r3, #8
10014f3c:	b29b      	uxth	r3, r3
10014f3e:	6810      	ldr	r0, [r2, #0]
10014f40:	647b      	str	r3, [r7, #68]	@ 0x44
10014f42:	0099      	lsls	r1, r3, #2
10014f44:	f001 fa80 	bl	10016448 <realloc>
10014f48:	2800      	cmp	r0, #0
10014f4a:	d0d6      	beq.n	10014efa <__ssvfscanf_r+0x1212>
10014f4c:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
10014f4e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10014f50:	8093      	strh	r3, [r2, #4]
10014f52:	6010      	str	r0, [r2, #0]
10014f54:	e567      	b.n	10014a26 <__ssvfscanf_r+0xd3e>
10014f56:	f64f 70f6 	movw	r0, #65526	@ 0xfff6
10014f5a:	4281      	cmp	r1, r0
10014f5c:	64ba      	str	r2, [r7, #72]	@ 0x48
10014f5e:	d8cc      	bhi.n	10014efa <__ssvfscanf_r+0x1212>
10014f60:	3108      	adds	r1, #8
10014f62:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10014f64:	b28e      	uxth	r6, r1
10014f66:	6818      	ldr	r0, [r3, #0]
10014f68:	00b1      	lsls	r1, r6, #2
10014f6a:	f001 fa6d 	bl	10016448 <realloc>
10014f6e:	2800      	cmp	r0, #0
10014f70:	d0c3      	beq.n	10014efa <__ssvfscanf_r+0x1212>
10014f72:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10014f74:	6cba      	ldr	r2, [r7, #72]	@ 0x48
10014f76:	809e      	strh	r6, [r3, #4]
10014f78:	6018      	str	r0, [r3, #0]
10014f7a:	f7ff bab8 	b.w	100144ee <__ssvfscanf_r+0x806>
10014f7e:	f64f 70f6 	movw	r0, #65526	@ 0xfff6
10014f82:	4281      	cmp	r1, r0
10014f84:	637b      	str	r3, [r7, #52]	@ 0x34
10014f86:	647a      	str	r2, [r7, #68]	@ 0x44
10014f88:	d8b7      	bhi.n	10014efa <__ssvfscanf_r+0x1212>
10014f8a:	3108      	adds	r1, #8
10014f8c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10014f8e:	fa1f fb81 	uxth.w	fp, r1
10014f92:	6818      	ldr	r0, [r3, #0]
10014f94:	ea4f 018b 	mov.w	r1, fp, lsl #2
10014f98:	f001 fa56 	bl	10016448 <realloc>
10014f9c:	2800      	cmp	r0, #0
10014f9e:	d0ac      	beq.n	10014efa <__ssvfscanf_r+0x1212>
10014fa0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10014fa2:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
10014fa4:	f8a3 b004 	strh.w	fp, [r3, #4]
10014fa8:	6018      	str	r0, [r3, #0]
10014faa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10014fac:	f7ff b9e1 	b.w	10014372 <__ssvfscanf_r+0x68a>
10014fb0:	f898 2002 	ldrb.w	r2, [r8, #2]
10014fb4:	f044 0402 	orr.w	r4, r4, #2
10014fb8:	f108 0802 	add.w	r8, r8, #2
10014fbc:	f7fe bf33 	b.w	10013e26 <__ssvfscanf_r+0x13e>
10014fc0:	f898 2002 	ldrb.w	r2, [r8, #2]
10014fc4:	f044 0408 	orr.w	r4, r4, #8
10014fc8:	f108 0802 	add.w	r8, r8, #2
10014fcc:	f7fe bf2b 	b.w	10013e26 <__ssvfscanf_r+0x13e>
10014fd0:	0763      	lsls	r3, r4, #29
10014fd2:	d46b      	bmi.n	100150ac <__ssvfscanf_r+0x13c4>
10014fd4:	f014 0201 	ands.w	r2, r4, #1
10014fd8:	f040 817b 	bne.w	100152d2 <__ssvfscanf_r+0x15ea>
10014fdc:	07a4      	lsls	r4, r4, #30
10014fde:	f140 8178 	bpl.w	100152d2 <__ssvfscanf_r+0x15ea>
10014fe2:	4bc1      	ldr	r3, [pc, #772]	@ (100152e8 <__ssvfscanf_r+0x1600>)
10014fe4:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
10014fe6:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10014fe8:	4299      	cmp	r1, r3
10014fea:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
10014fec:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
10014fee:	f000 81f0 	beq.w	100153d2 <__ssvfscanf_r+0x16ea>
10014ff2:	f003 fead 	bl	10018d50 <_strtoll_r>
10014ff6:	460b      	mov	r3, r1
10014ff8:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
10014ffa:	6811      	ldr	r1, [r2, #0]
10014ffc:	e9c1 0300 	strd	r0, r3, [r1]
10015000:	f7ff b986 	b.w	10014310 <__ssvfscanf_r+0x628>
10015004:	4602      	mov	r2, r0
10015006:	460b      	mov	r3, r1
10015008:	f00b fe54 	bl	10020cb4 <__aeabi_dcmpun>
1001500c:	2800      	cmp	r0, #0
1001500e:	f040 80c7 	bne.w	100151a0 <__ssvfscanf_r+0x14b8>
10015012:	4628      	mov	r0, r5
10015014:	4631      	mov	r1, r6
10015016:	f00b feab 	bl	10020d70 <__aeabi_d2f>
1001501a:	f8cb 0000 	str.w	r0, [fp]
1001501e:	f7ff b8cf 	b.w	100141c0 <__ssvfscanf_r+0x4d8>
10015022:	6028      	str	r0, [r5, #0]
10015024:	f003 ffa4 	bl	10018f70 <iswspace>
10015028:	2800      	cmp	r0, #0
1001502a:	f040 8171 	bne.w	10015310 <__ssvfscanf_r+0x1628>
1001502e:	44d9      	add	r9, fp
10015030:	f7ff b9fb 	b.w	1001442a <__ssvfscanf_r+0x742>
10015034:	f882 9000 	strb.w	r9, [r2]
10015038:	e609      	b.n	10014c4e <__ssvfscanf_r+0xf66>
1001503a:	f8da 3000 	ldr.w	r3, [sl]
1001503e:	4eab      	ldr	r6, [pc, #684]	@ (100152ec <__ssvfscanf_r+0x1604>)
10015040:	781a      	ldrb	r2, [r3, #0]
10015042:	5cb2      	ldrb	r2, [r6, r2]
10015044:	0711      	lsls	r1, r2, #28
10015046:	f53e ae75 	bmi.w	10013d34 <__ssvfscanf_r+0x4c>
1001504a:	3301      	adds	r3, #1
1001504c:	f8ca 3000 	str.w	r3, [sl]
10015050:	f8da 3004 	ldr.w	r3, [sl, #4]
10015054:	2d01      	cmp	r5, #1
10015056:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
1001505a:	f8ca 3004 	str.w	r3, [sl, #4]
1001505e:	bf08      	it	eq
10015060:	f109 0901 	addeq.w	r9, r9, #1
10015064:	f43e ae66 	beq.w	10013d34 <__ssvfscanf_r+0x4c>
10015068:	f8d7 b04c 	ldr.w	fp, [r7, #76]	@ 0x4c
1001506c:	2401      	movs	r4, #1
1001506e:	e012      	b.n	10015096 <__ssvfscanf_r+0x13ae>
10015070:	f8da 3000 	ldr.w	r3, [sl]
10015074:	781a      	ldrb	r2, [r3, #0]
10015076:	5cb2      	ldrb	r2, [r6, r2]
10015078:	0712      	lsls	r2, r2, #28
1001507a:	f103 0301 	add.w	r3, r3, #1
1001507e:	d412      	bmi.n	100150a6 <__ssvfscanf_r+0x13be>
10015080:	f8ca 3000 	str.w	r3, [sl]
10015084:	f8da 3004 	ldr.w	r3, [sl, #4]
10015088:	3401      	adds	r4, #1
1001508a:	3b01      	subs	r3, #1
1001508c:	42a5      	cmp	r5, r4
1001508e:	f8ca 3004 	str.w	r3, [sl, #4]
10015092:	f000 813a 	beq.w	1001530a <__ssvfscanf_r+0x1622>
10015096:	2b00      	cmp	r3, #0
10015098:	dcea      	bgt.n	10015070 <__ssvfscanf_r+0x1388>
1001509a:	4651      	mov	r1, sl
1001509c:	4658      	mov	r0, fp
1001509e:	f004 facd 	bl	1001963c <__ssrefill_r>
100150a2:	2800      	cmp	r0, #0
100150a4:	d0e4      	beq.n	10015070 <__ssvfscanf_r+0x1388>
100150a6:	44a1      	add	r9, r4
100150a8:	f7fe be44 	b.w	10013d34 <__ssvfscanf_r+0x4c>
100150ac:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100150ae:	681b      	ldr	r3, [r3, #0]
100150b0:	8018      	strh	r0, [r3, #0]
100150b2:	f7ff b92d 	b.w	10014310 <__ssvfscanf_r+0x628>
100150b6:	6cbc      	ldr	r4, [r7, #72]	@ 0x48
100150b8:	1d11      	adds	r1, r2, #4
100150ba:	6820      	ldr	r0, [r4, #0]
100150bc:	f001 f9c4 	bl	10016448 <realloc>
100150c0:	2800      	cmp	r0, #0
100150c2:	f43f a9e7 	beq.w	10014494 <__ssvfscanf_r+0x7ac>
100150c6:	6020      	str	r0, [r4, #0]
100150c8:	f7ff b9e4 	b.w	10014494 <__ssvfscanf_r+0x7ac>
100150cc:	2a00      	cmp	r2, #0
100150ce:	f040 8184 	bne.w	100153da <__ssvfscanf_r+0x16f2>
100150d2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100150d4:	461a      	mov	r2, r3
100150d6:	0624      	lsls	r4, r4, #24
100150d8:	f852 3b04 	ldr.w	r3, [r2], #4
100150dc:	637a      	str	r2, [r7, #52]	@ 0x34
100150de:	f100 81ac 	bmi.w	1001543a <__ssvfscanf_r+0x1752>
100150e2:	469b      	mov	fp, r3
100150e4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100150e6:	461a      	mov	r2, r3
100150e8:	469c      	mov	ip, r3
100150ea:	f8c7 8030 	str.w	r8, [r7, #48]	@ 0x30
100150ee:	2600      	movs	r6, #0
100150f0:	4664      	mov	r4, ip
100150f2:	647b      	str	r3, [r7, #68]	@ 0x44
100150f4:	4690      	mov	r8, r2
100150f6:	f000 fe9f 	bl	10015e38 <__locale_mb_cur_max>
100150fa:	42b0      	cmp	r0, r6
100150fc:	f43e ae60 	beq.w	10013dc0 <__ssvfscanf_r+0xd8>
10015100:	e9da 3200 	ldrd	r3, r2, [sl]
10015104:	f813 1b01 	ldrb.w	r1, [r3], #1
10015108:	3a01      	subs	r2, #1
1001510a:	e9ca 3200 	strd	r3, r2, [sl]
1001510e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
10015110:	f507 70b8 	add.w	r0, r7, #368	@ 0x170
10015114:	2a03      	cmp	r2, #3
10015116:	5581      	strb	r1, [r0, r6]
10015118:	f106 0301 	add.w	r3, r6, #1
1001511c:	f107 0668 	add.w	r6, r7, #104	@ 0x68
10015120:	d102      	bne.n	10015128 <__ssvfscanf_r+0x1440>
10015122:	6832      	ldr	r2, [r6, #0]
10015124:	2a04      	cmp	r2, #4
10015126:	d006      	beq.n	10015136 <__ssvfscanf_r+0x144e>
10015128:	2208      	movs	r2, #8
1001512a:	2100      	movs	r1, #0
1001512c:	4630      	mov	r0, r6
1001512e:	62fb      	str	r3, [r7, #44]	@ 0x2c
10015130:	f000 fdec 	bl	10015d0c <memset>
10015134:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
10015136:	9600      	str	r6, [sp, #0]
10015138:	f507 72b8 	add.w	r2, r7, #368	@ 0x170
1001513c:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001513e:	62fb      	str	r3, [r7, #44]	@ 0x2c
10015140:	4659      	mov	r1, fp
10015142:	f000 fd39 	bl	10015bb8 <_mbrtowc_r>
10015146:	4602      	mov	r2, r0
10015148:	6278      	str	r0, [r7, #36]	@ 0x24
1001514a:	1c50      	adds	r0, r2, #1
1001514c:	f43e ae38 	beq.w	10013dc0 <__ssvfscanf_r+0xd8>
10015150:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
10015152:	2a00      	cmp	r2, #0
10015154:	f040 81bd 	bne.w	100154d2 <__ssvfscanf_r+0x17ea>
10015158:	4499      	add	r9, r3
1001515a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001515c:	3d01      	subs	r5, #1
1001515e:	2b00      	cmp	r3, #0
10015160:	f040 81c5 	bne.w	100154ee <__ssvfscanf_r+0x1806>
10015164:	f8cb 3000 	str.w	r3, [fp]
10015168:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001516a:	2b00      	cmp	r3, #0
1001516c:	f000 81f1 	beq.w	10015552 <__ssvfscanf_r+0x186a>
10015170:	ebab 0604 	sub.w	r6, fp, r4
10015174:	ebb8 0fa6 	cmp.w	r8, r6, asr #2
10015178:	f200 81eb 	bhi.w	10015552 <__ssvfscanf_r+0x186a>
1001517c:	4620      	mov	r0, r4
1001517e:	ea4f 01c8 	mov.w	r1, r8, lsl #3
10015182:	f001 f961 	bl	10016448 <realloc>
10015186:	4604      	mov	r4, r0
10015188:	2800      	cmp	r0, #0
1001518a:	f040 81dc 	bne.w	10015546 <__ssvfscanf_r+0x185e>
1001518e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10015190:	2b00      	cmp	r3, #0
10015192:	f47f aeb2 	bne.w	10014efa <__ssvfscanf_r+0x1212>
10015196:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001519a:	643b      	str	r3, [r7, #64]	@ 0x40
1001519c:	f7fe be21 	b.w	10013de2 <__ssvfscanf_r+0xfa>
100151a0:	4853      	ldr	r0, [pc, #332]	@ (100152f0 <__ssvfscanf_r+0x1608>)
100151a2:	f001 fca5 	bl	10016af0 <nanf>
100151a6:	f8cb 0000 	str.w	r0, [fp]
100151aa:	f7ff b809 	b.w	100141c0 <__ssvfscanf_r+0x4d8>
100151ae:	6cbc      	ldr	r4, [r7, #72]	@ 0x48
100151b0:	e9c7 2211 	strd	r2, r2, [r7, #68]	@ 0x44
100151b4:	f7ff bbce 	b.w	10014954 <__ssvfscanf_r+0xc6c>
100151b8:	b082      	sub	sp, #8
100151ba:	e9cd 3302 	strd	r3, r3, [sp, #8]
100151be:	ab02      	add	r3, sp, #8
100151c0:	63fb      	str	r3, [r7, #60]	@ 0x3c
100151c2:	e550      	b.n	10014c66 <__ssvfscanf_r+0xf7e>
100151c4:	637b      	str	r3, [r7, #52]	@ 0x34
100151c6:	004b      	lsls	r3, r1, #1
100151c8:	4610      	mov	r0, r2
100151ca:	4619      	mov	r1, r3
100151cc:	647b      	str	r3, [r7, #68]	@ 0x44
100151ce:	f001 f93b 	bl	10016448 <realloc>
100151d2:	4602      	mov	r2, r0
100151d4:	2800      	cmp	r0, #0
100151d6:	d0da      	beq.n	1001518e <__ssvfscanf_r+0x14a6>
100151d8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100151da:	1984      	adds	r4, r0, r6
100151dc:	6018      	str	r0, [r3, #0]
100151de:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100151e0:	f7ff bbd7 	b.w	10014992 <__ssvfscanf_r+0xcaa>
100151e4:	6938      	ldr	r0, [r7, #16]
100151e6:	4601      	mov	r1, r0
100151e8:	230a      	movs	r3, #10
100151ea:	3101      	adds	r1, #1
100151ec:	4683      	mov	fp, r0
100151ee:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100151f0:	f003 f804 	bl	100181fc <_strtol_r>
100151f4:	697b      	ldr	r3, [r7, #20]
100151f6:	1ac2      	subs	r2, r0, r3
100151f8:	e4e2      	b.n	10014bc0 <__ssvfscanf_r+0xed8>
100151fa:	f04f 0b00 	mov.w	fp, #0
100151fe:	f7ff b926 	b.w	1001444e <__ssvfscanf_r+0x766>
10015202:	6cba      	ldr	r2, [r7, #72]	@ 0x48
10015204:	637e      	str	r6, [r7, #52]	@ 0x34
10015206:	469c      	mov	ip, r3
10015208:	469e      	mov	lr, r3
1001520a:	64bb      	str	r3, [r7, #72]	@ 0x48
1001520c:	f7ff b8bb 	b.w	10014386 <__ssvfscanf_r+0x69e>
10015210:	465e      	mov	r6, fp
10015212:	4623      	mov	r3, r4
10015214:	46a3      	mov	fp, r4
10015216:	e40c      	b.n	10014a32 <__ssvfscanf_r+0xd4a>
10015218:	f8d7 b034 	ldr.w	fp, [r7, #52]	@ 0x34
1001521c:	637a      	str	r2, [r7, #52]	@ 0x34
1001521e:	e9c7 220b 	strd	r2, r2, [r7, #44]	@ 0x2c
10015222:	f7ff b96e 	b.w	10014502 <__ssvfscanf_r+0x81a>
10015226:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
10015228:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001522c:	627c      	str	r4, [r7, #36]	@ 0x24
1001522e:	2e00      	cmp	r6, #0
10015230:	f43f a9e0 	beq.w	100145f4 <__ssvfscanf_r+0x90c>
10015234:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
10015236:	4615      	mov	r5, r2
10015238:	3e01      	subs	r6, #1
1001523a:	f507 73b8 	add.w	r3, r7, #368	@ 0x170
1001523e:	4652      	mov	r2, sl
10015240:	5d99      	ldrb	r1, [r3, r6]
10015242:	4620      	mov	r0, r4
10015244:	f004 f9be 	bl	100195c4 <_sungetc_r>
10015248:	2e00      	cmp	r6, #0
1001524a:	d1f5      	bne.n	10015238 <__ssvfscanf_r+0x1550>
1001524c:	462a      	mov	r2, r5
1001524e:	f7ff b9d1 	b.w	100145f4 <__ssvfscanf_r+0x90c>
10015252:	6cbc      	ldr	r4, [r7, #72]	@ 0x48
10015254:	6820      	ldr	r0, [r4, #0]
10015256:	f001 f8f7 	bl	10016448 <realloc>
1001525a:	2800      	cmp	r0, #0
1001525c:	f43f abb4 	beq.w	100149c8 <__ssvfscanf_r+0xce0>
10015260:	6020      	str	r0, [r4, #0]
10015262:	f7ff bbb1 	b.w	100149c8 <__ssvfscanf_r+0xce0>
10015266:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10015268:	4651      	mov	r1, sl
1001526a:	e9c7 320c 	strd	r3, r2, [r7, #48]	@ 0x30
1001526e:	f004 f9e5 	bl	1001963c <__ssrefill_r>
10015272:	e9d7 320c 	ldrd	r3, r2, [r7, #48]	@ 0x30
10015276:	2800      	cmp	r0, #0
10015278:	f43f ab93 	beq.w	100149a2 <__ssvfscanf_r+0xcba>
1001527c:	f7ff bb98 	b.w	100149b0 <__ssvfscanf_r+0xcc8>
10015280:	f8db 0000 	ldr.w	r0, [fp]
10015284:	f001 f8e0 	bl	10016448 <realloc>
10015288:	2800      	cmp	r0, #0
1001528a:	f43f ac14 	beq.w	10014ab6 <__ssvfscanf_r+0xdce>
1001528e:	f8cb 0000 	str.w	r0, [fp]
10015292:	e410      	b.n	10014ab6 <__ssvfscanf_r+0xdce>
10015294:	07e5      	lsls	r5, r4, #31
10015296:	d435      	bmi.n	10015304 <__ssvfscanf_r+0x161c>
10015298:	07a4      	lsls	r4, r4, #30
1001529a:	d533      	bpl.n	10015304 <__ssvfscanf_r+0x161c>
1001529c:	ea4f 70e9 	mov.w	r0, r9, asr #31
100152a0:	f8c2 9000 	str.w	r9, [r2]
100152a4:	6050      	str	r0, [r2, #4]
100152a6:	e4d2      	b.n	10014c4e <__ssvfscanf_r+0xf66>
100152a8:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100152aa:	4651      	mov	r1, sl
100152ac:	f004 f9c6 	bl	1001963c <__ssrefill_r>
100152b0:	2800      	cmp	r0, #0
100152b2:	f43f a8d1 	beq.w	10014458 <__ssvfscanf_r+0x770>
100152b6:	4643      	mov	r3, r8
100152b8:	f8d7 e030 	ldr.w	lr, [r7, #48]	@ 0x30
100152bc:	f8d7 c044 	ldr.w	ip, [r7, #68]	@ 0x44
100152c0:	f8d7 801c 	ldr.w	r8, [r7, #28]
100152c4:	462a      	mov	r2, r5
100152c6:	f1bb 0f00 	cmp.w	fp, #0
100152ca:	f47e ad79 	bne.w	10013dc0 <__ssvfscanf_r+0xd8>
100152ce:	f7ff b8d4 	b.w	1001447a <__ssvfscanf_r+0x792>
100152d2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100152d4:	f7ff b81a 	b.w	1001430c <__ssvfscanf_r+0x624>
100152d8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100152da:	f423 63f0 	bic.w	r3, r3, #1920	@ 0x780
100152de:	64bb      	str	r3, [r7, #72]	@ 0x48
100152e0:	2401      	movs	r4, #1
100152e2:	f7fe bf07 	b.w	100140f4 <__ssvfscanf_r+0x40c>
100152e6:	bf00      	nop
100152e8:	1001894d 	.word	0x1001894d
100152ec:	1002388d 	.word	0x1002388d
100152f0:	10021458 	.word	0x10021458
100152f4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100152f6:	f423 63f0 	bic.w	r3, r3, #1920	@ 0x780
100152fa:	64bb      	str	r3, [r7, #72]	@ 0x48
100152fc:	2301      	movs	r3, #1
100152fe:	647b      	str	r3, [r7, #68]	@ 0x44
10015300:	f7fe bef8 	b.w	100140f4 <__ssvfscanf_r+0x40c>
10015304:	f8c2 9000 	str.w	r9, [r2]
10015308:	e4a1      	b.n	10014c4e <__ssvfscanf_r+0xf66>
1001530a:	44a9      	add	r9, r5
1001530c:	f7fe bd12 	b.w	10013d34 <__ssvfscanf_r+0x4c>
10015310:	4643      	mov	r3, r8
10015312:	f8d7 e030 	ldr.w	lr, [r7, #48]	@ 0x30
10015316:	f8d7 c044 	ldr.w	ip, [r7, #68]	@ 0x44
1001531a:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001531e:	462a      	mov	r2, r5
10015320:	f1bb 0f00 	cmp.w	fp, #0
10015324:	f43f a8a9 	beq.w	1001447a <__ssvfscanf_r+0x792>
10015328:	633d      	str	r5, [r7, #48]	@ 0x30
1001532a:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
1001532c:	6afd      	ldr	r5, [r7, #44]	@ 0x2c
1001532e:	f8c7 9044 	str.w	r9, [r7, #68]	@ 0x44
10015332:	465e      	mov	r6, fp
10015334:	46f1      	mov	r9, lr
10015336:	46c3      	mov	fp, r8
10015338:	623b      	str	r3, [r7, #32]
1001533a:	46e0      	mov	r8, ip
1001533c:	3e01      	subs	r6, #1
1001533e:	4652      	mov	r2, sl
10015340:	5da9      	ldrb	r1, [r5, r6]
10015342:	4620      	mov	r0, r4
10015344:	f004 f93e 	bl	100195c4 <_sungetc_r>
10015348:	2e00      	cmp	r6, #0
1001534a:	d1f7      	bne.n	1001533c <__ssvfscanf_r+0x1654>
1001534c:	46ce      	mov	lr, r9
1001534e:	46c4      	mov	ip, r8
10015350:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
10015352:	f8d7 9044 	ldr.w	r9, [r7, #68]	@ 0x44
10015356:	6a3b      	ldr	r3, [r7, #32]
10015358:	46d8      	mov	r8, fp
1001535a:	f7ff b88e 	b.w	1001447a <__ssvfscanf_r+0x792>
1001535e:	6b7c      	ldr	r4, [r7, #52]	@ 0x34
10015360:	1d19      	adds	r1, r3, #4
10015362:	6820      	ldr	r0, [r4, #0]
10015364:	f001 f870 	bl	10016448 <realloc>
10015368:	2800      	cmp	r0, #0
1001536a:	f43f a951 	beq.w	10014610 <__ssvfscanf_r+0x928>
1001536e:	6020      	str	r0, [r4, #0]
10015370:	f7ff b94e 	b.w	10014610 <__ssvfscanf_r+0x928>
10015374:	6b38      	ldr	r0, [r7, #48]	@ 0x30
10015376:	00d9      	lsls	r1, r3, #3
10015378:	f001 f866 	bl	10016448 <realloc>
1001537c:	6338      	str	r0, [r7, #48]	@ 0x30
1001537e:	2800      	cmp	r0, #0
10015380:	f43f af05 	beq.w	1001518e <__ssvfscanf_r+0x14a6>
10015384:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10015386:	6cba      	ldr	r2, [r7, #72]	@ 0x48
10015388:	005b      	lsls	r3, r3, #1
1001538a:	1905      	adds	r5, r0, r4
1001538c:	6010      	str	r0, [r2, #0]
1001538e:	647b      	str	r3, [r7, #68]	@ 0x44
10015390:	46c3      	mov	fp, r8
10015392:	f7ff b85c 	b.w	1001444e <__ssvfscanf_r+0x766>
10015396:	6afd      	ldr	r5, [r7, #44]	@ 0x2c
10015398:	45ab      	cmp	fp, r5
1001539a:	f67f ab94 	bls.w	10014ac6 <__ssvfscanf_r+0xdde>
1001539e:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
100153a0:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
100153a4:	4652      	mov	r2, sl
100153a6:	4620      	mov	r0, r4
100153a8:	f004 f90c 	bl	100195c4 <_sungetc_r>
100153ac:	45ab      	cmp	fp, r5
100153ae:	d1f7      	bne.n	100153a0 <__ssvfscanf_r+0x16b8>
100153b0:	f7ff ba7e 	b.w	100148b0 <__ssvfscanf_r+0xbc8>
100153b4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
100153b6:	459b      	cmp	fp, r3
100153b8:	f67f ab85 	bls.w	10014ac6 <__ssvfscanf_r+0xdde>
100153bc:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
100153be:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
100153c2:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100153c4:	4652      	mov	r2, sl
100153c6:	f004 f8fd 	bl	100195c4 <_sungetc_r>
100153ca:	45a3      	cmp	fp, r4
100153cc:	d1f7      	bne.n	100153be <__ssvfscanf_r+0x16d6>
100153ce:	f7ff ba6f 	b.w	100148b0 <__ssvfscanf_r+0xbc8>
100153d2:	f003 fd89 	bl	10018ee8 <_strtoull_r>
100153d6:	460b      	mov	r3, r1
100153d8:	e60e      	b.n	10014ff8 <__ssvfscanf_r+0x1310>
100153da:	2200      	movs	r2, #0
100153dc:	4694      	mov	ip, r2
100153de:	4613      	mov	r3, r2
100153e0:	4693      	mov	fp, r2
100153e2:	e682      	b.n	100150ea <__ssvfscanf_r+0x1402>
100153e4:	461c      	mov	r4, r3
100153e6:	e9da 2300 	ldrd	r2, r3, [sl]
100153ea:	429d      	cmp	r5, r3
100153ec:	eb02 0103 	add.w	r1, r2, r3
100153f0:	dd51      	ble.n	10015496 <__ssvfscanf_r+0x17ae>
100153f2:	f8ca 1000 	str.w	r1, [sl]
100153f6:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100153f8:	4651      	mov	r1, sl
100153fa:	441c      	add	r4, r3
100153fc:	1aed      	subs	r5, r5, r3
100153fe:	f004 f91d 	bl	1001963c <__ssrefill_r>
10015402:	2800      	cmp	r0, #0
10015404:	d0ef      	beq.n	100153e6 <__ssvfscanf_r+0x16fe>
10015406:	2c00      	cmp	r4, #0
10015408:	f43e acda 	beq.w	10013dc0 <__ssvfscanf_r+0xd8>
1001540c:	44a1      	add	r9, r4
1001540e:	f7fe bc91 	b.w	10013d34 <__ssvfscanf_r+0x4c>
10015412:	f8cd a000 	str.w	sl, [sp]
10015416:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10015418:	462b      	mov	r3, r5
1001541a:	4631      	mov	r1, r6
1001541c:	2201      	movs	r2, #1
1001541e:	f004 f929 	bl	10019674 <_sfread_r>
10015422:	4604      	mov	r4, r0
10015424:	2800      	cmp	r0, #0
10015426:	f43e accb 	beq.w	10013dc0 <__ssvfscanf_r+0xd8>
1001542a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001542c:	f8c7 b034 	str.w	fp, [r7, #52]	@ 0x34
10015430:	3301      	adds	r3, #1
10015432:	44a1      	add	r9, r4
10015434:	643b      	str	r3, [r7, #64]	@ 0x40
10015436:	f7fe bc7d 	b.w	10013d34 <__ssvfscanf_r+0x4c>
1001543a:	647b      	str	r3, [r7, #68]	@ 0x44
1001543c:	2b00      	cmp	r3, #0
1001543e:	f43f aa37 	beq.w	100148b0 <__ssvfscanf_r+0xbc8>
10015442:	2080      	movs	r0, #128	@ 0x80
10015444:	f000 f8e4 	bl	10015610 <malloc>
10015448:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001544a:	4683      	mov	fp, r0
1001544c:	2800      	cmp	r0, #0
1001544e:	f43f ae9e 	beq.w	1001518e <__ssvfscanf_r+0x14a6>
10015452:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
10015454:	6018      	str	r0, [r3, #0]
10015456:	88ce      	ldrh	r6, [r1, #6]
10015458:	888a      	ldrh	r2, [r1, #4]
1001545a:	4296      	cmp	r6, r2
1001545c:	d337      	bcc.n	100154ce <__ssvfscanf_r+0x17e6>
1001545e:	f64f 71f6 	movw	r1, #65526	@ 0xfff6
10015462:	428a      	cmp	r2, r1
10015464:	647b      	str	r3, [r7, #68]	@ 0x44
10015466:	f63f ad48 	bhi.w	10014efa <__ssvfscanf_r+0x1212>
1001546a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001546c:	3208      	adds	r2, #8
1001546e:	b294      	uxth	r4, r2
10015470:	6818      	ldr	r0, [r3, #0]
10015472:	00a1      	lsls	r1, r4, #2
10015474:	f000 ffe8 	bl	10016448 <realloc>
10015478:	2800      	cmp	r0, #0
1001547a:	f43f ad3e 	beq.w	10014efa <__ssvfscanf_r+0x1212>
1001547e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10015480:	809c      	strh	r4, [r3, #4]
10015482:	6018      	str	r0, [r3, #0]
10015484:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10015486:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
10015488:	f840 3026 	str.w	r3, [r0, r6, lsl #2]
1001548c:	3601      	adds	r6, #1
1001548e:	80d6      	strh	r6, [r2, #6]
10015490:	46dc      	mov	ip, fp
10015492:	2220      	movs	r2, #32
10015494:	e629      	b.n	100150ea <__ssvfscanf_r+0x1402>
10015496:	1b5b      	subs	r3, r3, r5
10015498:	442a      	add	r2, r5
1001549a:	442c      	add	r4, r5
1001549c:	f8ca 3004 	str.w	r3, [sl, #4]
100154a0:	f8ca 2000 	str.w	r2, [sl]
100154a4:	44a1      	add	r9, r4
100154a6:	f7fe bc45 	b.w	10013d34 <__ssvfscanf_r+0x4c>
100154aa:	6808      	ldr	r0, [r1, #0]
100154ac:	e510      	b.n	10014ed0 <__ssvfscanf_r+0x11e8>
100154ae:	4285      	cmp	r5, r0
100154b0:	d9bb      	bls.n	1001542a <__ssvfscanf_r+0x1742>
100154b2:	6830      	ldr	r0, [r6, #0]
100154b4:	4621      	mov	r1, r4
100154b6:	f000 ffc7 	bl	10016448 <realloc>
100154ba:	2800      	cmp	r0, #0
100154bc:	d0b5      	beq.n	1001542a <__ssvfscanf_r+0x1742>
100154be:	6030      	str	r0, [r6, #0]
100154c0:	e7b3      	b.n	1001542a <__ssvfscanf_r+0x1742>
100154c2:	f8ba 300c 	ldrh.w	r3, [sl, #12]
100154c6:	065b      	lsls	r3, r3, #25
100154c8:	f57e ac86 	bpl.w	10013dd8 <__ssvfscanf_r+0xf0>
100154cc:	e515      	b.n	10014efa <__ssvfscanf_r+0x1212>
100154ce:	6808      	ldr	r0, [r1, #0]
100154d0:	e7d9      	b.n	10015486 <__ssvfscanf_r+0x179e>
100154d2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
100154d4:	1c91      	adds	r1, r2, #2
100154d6:	d034      	beq.n	10015542 <__ssvfscanf_r+0x185a>
100154d8:	2a03      	cmp	r2, #3
100154da:	4499      	add	r9, r3
100154dc:	d102      	bne.n	100154e4 <__ssvfscanf_r+0x17fc>
100154de:	6833      	ldr	r3, [r6, #0]
100154e0:	2b04      	cmp	r3, #4
100154e2:	d000      	beq.n	100154e6 <__ssvfscanf_r+0x17fe>
100154e4:	3d01      	subs	r5, #1
100154e6:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100154e8:	2b00      	cmp	r3, #0
100154ea:	f43f ae3d 	beq.w	10015168 <__ssvfscanf_r+0x1480>
100154ee:	2600      	movs	r6, #0
100154f0:	f8da 3004 	ldr.w	r3, [sl, #4]
100154f4:	2b00      	cmp	r3, #0
100154f6:	dd13      	ble.n	10015520 <__ssvfscanf_r+0x1838>
100154f8:	2d00      	cmp	r5, #0
100154fa:	f47f adfc 	bne.w	100150f6 <__ssvfscanf_r+0x140e>
100154fe:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10015500:	4642      	mov	r2, r8
10015502:	46a4      	mov	ip, r4
10015504:	f8d7 8030 	ldr.w	r8, [r7, #48]	@ 0x30
10015508:	b123      	cbz	r3, 10015514 <__ssvfscanf_r+0x182c>
1001550a:	ebab 010c 	sub.w	r1, fp, ip
1001550e:	ebb2 0fa1 	cmp.w	r2, r1, asr #2
10015512:	d821      	bhi.n	10015558 <__ssvfscanf_r+0x1870>
10015514:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10015516:	2b00      	cmp	r3, #0
10015518:	f47e ac0c 	bne.w	10013d34 <__ssvfscanf_r+0x4c>
1001551c:	f7fe bfba 	b.w	10014494 <__ssvfscanf_r+0x7ac>
10015520:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10015522:	4651      	mov	r1, sl
10015524:	f004 f88a 	bl	1001963c <__ssrefill_r>
10015528:	2800      	cmp	r0, #0
1001552a:	d0e5      	beq.n	100154f8 <__ssvfscanf_r+0x1810>
1001552c:	4642      	mov	r2, r8
1001552e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10015530:	f8d7 8030 	ldr.w	r8, [r7, #48]	@ 0x30
10015534:	46a4      	mov	ip, r4
10015536:	2e00      	cmp	r6, #0
10015538:	f47e ac42 	bne.w	10013dc0 <__ssvfscanf_r+0xd8>
1001553c:	2b00      	cmp	r3, #0
1001553e:	d1e4      	bne.n	1001550a <__ssvfscanf_r+0x1822>
10015540:	e7e8      	b.n	10015514 <__ssvfscanf_r+0x182c>
10015542:	461e      	mov	r6, r3
10015544:	e7d4      	b.n	100154f0 <__ssvfscanf_r+0x1808>
10015546:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10015548:	eb00 0b06 	add.w	fp, r0, r6
1001554c:	6018      	str	r0, [r3, #0]
1001554e:	ea4f 0848 	mov.w	r8, r8, lsl #1
10015552:	f10b 0b04 	add.w	fp, fp, #4
10015556:	e7ca      	b.n	100154ee <__ssvfscanf_r+0x1806>
10015558:	6818      	ldr	r0, [r3, #0]
1001555a:	647b      	str	r3, [r7, #68]	@ 0x44
1001555c:	f000 ff74 	bl	10016448 <realloc>
10015560:	2800      	cmp	r0, #0
10015562:	d0d7      	beq.n	10015514 <__ssvfscanf_r+0x182c>
10015564:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10015566:	6018      	str	r0, [r3, #0]
10015568:	e7d4      	b.n	10015514 <__ssvfscanf_r+0x182c>
1001556a:	bf00      	nop

1001556c <_gets_r>:
1001556c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001556e:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10015570:	6844      	ldr	r4, [r0, #4]
10015572:	4607      	mov	r7, r0
10015574:	460d      	mov	r5, r1
10015576:	2b00      	cmp	r3, #0
10015578:	d033      	beq.n	100155e2 <_gets_r+0x76>
1001557a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001557c:	07d9      	lsls	r1, r3, #31
1001557e:	d402      	bmi.n	10015586 <_gets_r+0x1a>
10015580:	89a3      	ldrh	r3, [r4, #12]
10015582:	059a      	lsls	r2, r3, #22
10015584:	d524      	bpl.n	100155d0 <_gets_r+0x64>
10015586:	462e      	mov	r6, r5
10015588:	e007      	b.n	1001559a <_gets_r+0x2e>
1001558a:	6823      	ldr	r3, [r4, #0]
1001558c:	1c5a      	adds	r2, r3, #1
1001558e:	6022      	str	r2, [r4, #0]
10015590:	781b      	ldrb	r3, [r3, #0]
10015592:	2b0a      	cmp	r3, #10
10015594:	d012      	beq.n	100155bc <_gets_r+0x50>
10015596:	f806 3b01 	strb.w	r3, [r6], #1
1001559a:	6863      	ldr	r3, [r4, #4]
1001559c:	3b01      	subs	r3, #1
1001559e:	2b00      	cmp	r3, #0
100155a0:	6063      	str	r3, [r4, #4]
100155a2:	daf2      	bge.n	1001558a <_gets_r+0x1e>
100155a4:	4621      	mov	r1, r4
100155a6:	4638      	mov	r0, r7
100155a8:	f001 f9cc 	bl	10016944 <__srget_r>
100155ac:	280a      	cmp	r0, #10
100155ae:	d005      	beq.n	100155bc <_gets_r+0x50>
100155b0:	1c43      	adds	r3, r0, #1
100155b2:	d001      	beq.n	100155b8 <_gets_r+0x4c>
100155b4:	b2c3      	uxtb	r3, r0
100155b6:	e7ee      	b.n	10015596 <_gets_r+0x2a>
100155b8:	42ae      	cmp	r6, r5
100155ba:	d015      	beq.n	100155e8 <_gets_r+0x7c>
100155bc:	2300      	movs	r3, #0
100155be:	7033      	strb	r3, [r6, #0]
100155c0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100155c2:	07d8      	lsls	r0, r3, #31
100155c4:	d402      	bmi.n	100155cc <_gets_r+0x60>
100155c6:	89a3      	ldrh	r3, [r4, #12]
100155c8:	059b      	lsls	r3, r3, #22
100155ca:	d505      	bpl.n	100155d8 <_gets_r+0x6c>
100155cc:	4628      	mov	r0, r5
100155ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100155d0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100155d2:	f000 fc2d 	bl	10015e30 <__retarget_lock_acquire_recursive>
100155d6:	e7d6      	b.n	10015586 <_gets_r+0x1a>
100155d8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100155da:	f000 fc2b 	bl	10015e34 <__retarget_lock_release_recursive>
100155de:	4628      	mov	r0, r5
100155e0:	e7f5      	b.n	100155ce <_gets_r+0x62>
100155e2:	f001 f8eb 	bl	100167bc <__sinit>
100155e6:	e7c8      	b.n	1001557a <_gets_r+0xe>
100155e8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100155ea:	07d9      	lsls	r1, r3, #31
100155ec:	d501      	bpl.n	100155f2 <_gets_r+0x86>
100155ee:	2000      	movs	r0, #0
100155f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100155f2:	89a3      	ldrh	r3, [r4, #12]
100155f4:	059a      	lsls	r2, r3, #22
100155f6:	d4fa      	bmi.n	100155ee <_gets_r+0x82>
100155f8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100155fa:	f000 fc1b 	bl	10015e34 <__retarget_lock_release_recursive>
100155fe:	e7f6      	b.n	100155ee <_gets_r+0x82>

10015600 <gets>:
10015600:	4b02      	ldr	r3, [pc, #8]	@ (1001560c <gets+0xc>)
10015602:	4601      	mov	r1, r0
10015604:	6818      	ldr	r0, [r3, #0]
10015606:	f7ff bfb1 	b.w	1001556c <_gets_r>
1001560a:	bf00      	nop
1001560c:	20000590 	.word	0x20000590

10015610 <malloc>:
10015610:	4b02      	ldr	r3, [pc, #8]	@ (1001561c <malloc+0xc>)
10015612:	4601      	mov	r1, r0
10015614:	6818      	ldr	r0, [r3, #0]
10015616:	f000 b80b 	b.w	10015630 <_malloc_r>
1001561a:	bf00      	nop
1001561c:	20000590 	.word	0x20000590

10015620 <free>:
10015620:	4b02      	ldr	r3, [pc, #8]	@ (1001562c <free+0xc>)
10015622:	4601      	mov	r1, r0
10015624:	6818      	ldr	r0, [r3, #0]
10015626:	f002 bc4f 	b.w	10017ec8 <_free_r>
1001562a:	bf00      	nop
1001562c:	20000590 	.word	0x20000590

10015630 <_malloc_r>:
10015630:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015634:	f101 050b 	add.w	r5, r1, #11
10015638:	2d16      	cmp	r5, #22
1001563a:	b085      	sub	sp, #20
1001563c:	4606      	mov	r6, r0
1001563e:	d824      	bhi.n	1001568a <_malloc_r+0x5a>
10015640:	2910      	cmp	r1, #16
10015642:	f200 80b1 	bhi.w	100157a8 <_malloc_r+0x178>
10015646:	f000 feed 	bl	10016424 <__malloc_lock>
1001564a:	2510      	movs	r5, #16
1001564c:	2318      	movs	r3, #24
1001564e:	f04f 0c02 	mov.w	ip, #2
10015652:	4fba      	ldr	r7, [pc, #744]	@ (1001593c <_malloc_r+0x30c>)
10015654:	443b      	add	r3, r7
10015656:	f1a3 0208 	sub.w	r2, r3, #8
1001565a:	685c      	ldr	r4, [r3, #4]
1001565c:	4294      	cmp	r4, r2
1001565e:	f000 8122 	beq.w	100158a6 <_malloc_r+0x276>
10015662:	6863      	ldr	r3, [r4, #4]
10015664:	68e2      	ldr	r2, [r4, #12]
10015666:	68a1      	ldr	r1, [r4, #8]
10015668:	f023 0303 	bic.w	r3, r3, #3
1001566c:	60ca      	str	r2, [r1, #12]
1001566e:	4423      	add	r3, r4
10015670:	4630      	mov	r0, r6
10015672:	6091      	str	r1, [r2, #8]
10015674:	685a      	ldr	r2, [r3, #4]
10015676:	f042 0201 	orr.w	r2, r2, #1
1001567a:	605a      	str	r2, [r3, #4]
1001567c:	3408      	adds	r4, #8
1001567e:	f000 fed7 	bl	10016430 <__malloc_unlock>
10015682:	4620      	mov	r0, r4
10015684:	b005      	add	sp, #20
10015686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001568a:	f035 0507 	bics.w	r5, r5, #7
1001568e:	f100 808b 	bmi.w	100157a8 <_malloc_r+0x178>
10015692:	42a9      	cmp	r1, r5
10015694:	f200 8088 	bhi.w	100157a8 <_malloc_r+0x178>
10015698:	f000 fec4 	bl	10016424 <__malloc_lock>
1001569c:	f5b5 7ffc 	cmp.w	r5, #504	@ 0x1f8
100156a0:	f0c0 8173 	bcc.w	1001598a <_malloc_r+0x35a>
100156a4:	0a6b      	lsrs	r3, r5, #9
100156a6:	f000 8083 	beq.w	100157b0 <_malloc_r+0x180>
100156aa:	2b04      	cmp	r3, #4
100156ac:	f200 8122 	bhi.w	100158f4 <_malloc_r+0x2c4>
100156b0:	09ab      	lsrs	r3, r5, #6
100156b2:	f103 0c39 	add.w	ip, r3, #57	@ 0x39
100156b6:	f103 0e38 	add.w	lr, r3, #56	@ 0x38
100156ba:	ea4f 03cc 	mov.w	r3, ip, lsl #3
100156be:	4f9f      	ldr	r7, [pc, #636]	@ (1001593c <_malloc_r+0x30c>)
100156c0:	443b      	add	r3, r7
100156c2:	f1a3 0008 	sub.w	r0, r3, #8
100156c6:	685c      	ldr	r4, [r3, #4]
100156c8:	42a0      	cmp	r0, r4
100156ca:	d107      	bne.n	100156dc <_malloc_r+0xac>
100156cc:	e00d      	b.n	100156ea <_malloc_r+0xba>
100156ce:	2a00      	cmp	r2, #0
100156d0:	68e1      	ldr	r1, [r4, #12]
100156d2:	f280 80e2 	bge.w	1001589a <_malloc_r+0x26a>
100156d6:	4288      	cmp	r0, r1
100156d8:	d007      	beq.n	100156ea <_malloc_r+0xba>
100156da:	460c      	mov	r4, r1
100156dc:	6863      	ldr	r3, [r4, #4]
100156de:	f023 0303 	bic.w	r3, r3, #3
100156e2:	1b5a      	subs	r2, r3, r5
100156e4:	2a0f      	cmp	r2, #15
100156e6:	ddf2      	ble.n	100156ce <_malloc_r+0x9e>
100156e8:	46f4      	mov	ip, lr
100156ea:	f8df 8254 	ldr.w	r8, [pc, #596]	@ 10015940 <_malloc_r+0x310>
100156ee:	693c      	ldr	r4, [r7, #16]
100156f0:	4544      	cmp	r4, r8
100156f2:	f000 80bf 	beq.w	10015874 <_malloc_r+0x244>
100156f6:	6863      	ldr	r3, [r4, #4]
100156f8:	f023 0903 	bic.w	r9, r3, #3
100156fc:	eba9 0305 	sub.w	r3, r9, r5
10015700:	2b0f      	cmp	r3, #15
10015702:	f300 8147 	bgt.w	10015994 <_malloc_r+0x364>
10015706:	2b00      	cmp	r3, #0
10015708:	e9c7 8804 	strd	r8, r8, [r7, #16]
1001570c:	f280 8131 	bge.w	10015972 <_malloc_r+0x342>
10015710:	f5b9 7f00 	cmp.w	r9, #512	@ 0x200
10015714:	f8d7 e004 	ldr.w	lr, [r7, #4]
10015718:	f080 80cc 	bcs.w	100158b4 <_malloc_r+0x284>
1001571c:	ea4f 01d9 	mov.w	r1, r9, lsr #3
10015720:	3101      	adds	r1, #1
10015722:	ea4f 1959 	mov.w	r9, r9, lsr #5
10015726:	2301      	movs	r3, #1
10015728:	fa03 f309 	lsl.w	r3, r3, r9
1001572c:	f857 2031 	ldr.w	r2, [r7, r1, lsl #3]
10015730:	60a2      	str	r2, [r4, #8]
10015732:	ea4e 0e03 	orr.w	lr, lr, r3
10015736:	eb07 03c1 	add.w	r3, r7, r1, lsl #3
1001573a:	3b08      	subs	r3, #8
1001573c:	60e3      	str	r3, [r4, #12]
1001573e:	f8c7 e004 	str.w	lr, [r7, #4]
10015742:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
10015746:	60d4      	str	r4, [r2, #12]
10015748:	ea4f 03ac 	mov.w	r3, ip, asr #2
1001574c:	2001      	movs	r0, #1
1001574e:	4098      	lsls	r0, r3
10015750:	4570      	cmp	r0, lr
10015752:	d834      	bhi.n	100157be <_malloc_r+0x18e>
10015754:	ea10 0f0e 	tst.w	r0, lr
10015758:	d107      	bne.n	1001576a <_malloc_r+0x13a>
1001575a:	f02c 0c03 	bic.w	ip, ip, #3
1001575e:	0040      	lsls	r0, r0, #1
10015760:	ea10 0f0e 	tst.w	r0, lr
10015764:	f10c 0c04 	add.w	ip, ip, #4
10015768:	d0f9      	beq.n	1001575e <_malloc_r+0x12e>
1001576a:	eb07 0acc 	add.w	sl, r7, ip, lsl #3
1001576e:	4652      	mov	r2, sl
10015770:	46e1      	mov	r9, ip
10015772:	68d1      	ldr	r1, [r2, #12]
10015774:	e00e      	b.n	10015794 <_malloc_r+0x164>
10015776:	684b      	ldr	r3, [r1, #4]
10015778:	f023 0303 	bic.w	r3, r3, #3
1001577c:	eba3 0e05 	sub.w	lr, r3, r5
10015780:	f1be 0f0f 	cmp.w	lr, #15
10015784:	460c      	mov	r4, r1
10015786:	68c9      	ldr	r1, [r1, #12]
10015788:	f300 80c1 	bgt.w	1001590e <_malloc_r+0x2de>
1001578c:	f1be 0f00 	cmp.w	lr, #0
10015790:	f280 80e2 	bge.w	10015958 <_malloc_r+0x328>
10015794:	428a      	cmp	r2, r1
10015796:	d1ee      	bne.n	10015776 <_malloc_r+0x146>
10015798:	f109 0901 	add.w	r9, r9, #1
1001579c:	f019 0f03 	tst.w	r9, #3
100157a0:	f102 0208 	add.w	r2, r2, #8
100157a4:	d1e5      	bne.n	10015772 <_malloc_r+0x142>
100157a6:	e121      	b.n	100159ec <_malloc_r+0x3bc>
100157a8:	230c      	movs	r3, #12
100157aa:	6033      	str	r3, [r6, #0]
100157ac:	2400      	movs	r4, #0
100157ae:	e768      	b.n	10015682 <_malloc_r+0x52>
100157b0:	f44f 7300 	mov.w	r3, #512	@ 0x200
100157b4:	f04f 0c40 	mov.w	ip, #64	@ 0x40
100157b8:	f04f 0e3f 	mov.w	lr, #63	@ 0x3f
100157bc:	e77f      	b.n	100156be <_malloc_r+0x8e>
100157be:	68bc      	ldr	r4, [r7, #8]
100157c0:	6863      	ldr	r3, [r4, #4]
100157c2:	f023 0903 	bic.w	r9, r3, #3
100157c6:	45a9      	cmp	r9, r5
100157c8:	d303      	bcc.n	100157d2 <_malloc_r+0x1a2>
100157ca:	eba9 0305 	sub.w	r3, r9, r5
100157ce:	2b0f      	cmp	r3, #15
100157d0:	dc53      	bgt.n	1001587a <_malloc_r+0x24a>
100157d2:	4b5c      	ldr	r3, [pc, #368]	@ (10015944 <_malloc_r+0x314>)
100157d4:	f8df b170 	ldr.w	fp, [pc, #368]	@ 10015948 <_malloc_r+0x318>
100157d8:	681b      	ldr	r3, [r3, #0]
100157da:	2008      	movs	r0, #8
100157dc:	f103 0810 	add.w	r8, r3, #16
100157e0:	f000 fb94 	bl	10015f0c <sysconf>
100157e4:	f8db 3000 	ldr.w	r3, [fp]
100157e8:	9001      	str	r0, [sp, #4]
100157ea:	3301      	adds	r3, #1
100157ec:	44a8      	add	r8, r5
100157ee:	eb04 0209 	add.w	r2, r4, r9
100157f2:	d005      	beq.n	10015800 <_malloc_r+0x1d0>
100157f4:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
100157f8:	4480      	add	r8, r0
100157fa:	4243      	negs	r3, r0
100157fc:	ea03 0808 	and.w	r8, r3, r8
10015800:	4641      	mov	r1, r8
10015802:	4630      	mov	r0, r6
10015804:	9202      	str	r2, [sp, #8]
10015806:	f003 fc67 	bl	100190d8 <_sbrk_r>
1001580a:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001580e:	9a02      	ldr	r2, [sp, #8]
10015810:	4682      	mov	sl, r0
10015812:	f000 80dc 	beq.w	100159ce <_malloc_r+0x39e>
10015816:	4282      	cmp	r2, r0
10015818:	f200 80d7 	bhi.w	100159ca <_malloc_r+0x39a>
1001581c:	4b4b      	ldr	r3, [pc, #300]	@ (1001594c <_malloc_r+0x31c>)
1001581e:	9901      	ldr	r1, [sp, #4]
10015820:	6818      	ldr	r0, [r3, #0]
10015822:	4440      	add	r0, r8
10015824:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
10015828:	6018      	str	r0, [r3, #0]
1001582a:	4684      	mov	ip, r0
1001582c:	f040 80fc 	bne.w	10015a28 <_malloc_r+0x3f8>
10015830:	ea1a 0f01 	tst.w	sl, r1
10015834:	f040 80f8 	bne.w	10015a28 <_malloc_r+0x3f8>
10015838:	f8d7 a008 	ldr.w	sl, [r7, #8]
1001583c:	44c8      	add	r8, r9
1001583e:	f048 0201 	orr.w	r2, r8, #1
10015842:	f8ca 2004 	str.w	r2, [sl, #4]
10015846:	4b42      	ldr	r3, [pc, #264]	@ (10015950 <_malloc_r+0x320>)
10015848:	6819      	ldr	r1, [r3, #0]
1001584a:	4281      	cmp	r1, r0
1001584c:	bf38      	it	cc
1001584e:	6018      	strcc	r0, [r3, #0]
10015850:	4b40      	ldr	r3, [pc, #256]	@ (10015954 <_malloc_r+0x324>)
10015852:	6819      	ldr	r1, [r3, #0]
10015854:	4281      	cmp	r1, r0
10015856:	bf38      	it	cc
10015858:	6018      	strcc	r0, [r3, #0]
1001585a:	4654      	mov	r4, sl
1001585c:	f022 0803 	bic.w	r8, r2, #3
10015860:	45a8      	cmp	r8, r5
10015862:	eba8 0305 	sub.w	r3, r8, r5
10015866:	d301      	bcc.n	1001586c <_malloc_r+0x23c>
10015868:	2b0f      	cmp	r3, #15
1001586a:	dc06      	bgt.n	1001587a <_malloc_r+0x24a>
1001586c:	4630      	mov	r0, r6
1001586e:	f000 fddf 	bl	10016430 <__malloc_unlock>
10015872:	e79b      	b.n	100157ac <_malloc_r+0x17c>
10015874:	f8d7 e004 	ldr.w	lr, [r7, #4]
10015878:	e766      	b.n	10015748 <_malloc_r+0x118>
1001587a:	1962      	adds	r2, r4, r5
1001587c:	f043 0301 	orr.w	r3, r3, #1
10015880:	f045 0501 	orr.w	r5, r5, #1
10015884:	6065      	str	r5, [r4, #4]
10015886:	4630      	mov	r0, r6
10015888:	60ba      	str	r2, [r7, #8]
1001588a:	6053      	str	r3, [r2, #4]
1001588c:	f000 fdd0 	bl	10016430 <__malloc_unlock>
10015890:	3408      	adds	r4, #8
10015892:	4620      	mov	r0, r4
10015894:	b005      	add	sp, #20
10015896:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001589a:	68a2      	ldr	r2, [r4, #8]
1001589c:	4423      	add	r3, r4
1001589e:	60d1      	str	r1, [r2, #12]
100158a0:	4630      	mov	r0, r6
100158a2:	608a      	str	r2, [r1, #8]
100158a4:	e6e6      	b.n	10015674 <_malloc_r+0x44>
100158a6:	68dc      	ldr	r4, [r3, #12]
100158a8:	42a3      	cmp	r3, r4
100158aa:	f47f aeda 	bne.w	10015662 <_malloc_r+0x32>
100158ae:	f10c 0c02 	add.w	ip, ip, #2
100158b2:	e71a      	b.n	100156ea <_malloc_r+0xba>
100158b4:	f5b9 6f20 	cmp.w	r9, #2560	@ 0xa00
100158b8:	ea4f 2259 	mov.w	r2, r9, lsr #9
100158bc:	d37e      	bcc.n	100159bc <_malloc_r+0x38c>
100158be:	2a14      	cmp	r2, #20
100158c0:	f200 8115 	bhi.w	10015aee <_malloc_r+0x4be>
100158c4:	f102 035c 	add.w	r3, r2, #92	@ 0x5c
100158c8:	00db      	lsls	r3, r3, #3
100158ca:	325b      	adds	r2, #91	@ 0x5b
100158cc:	18f9      	adds	r1, r7, r3
100158ce:	58fb      	ldr	r3, [r7, r3]
100158d0:	3908      	subs	r1, #8
100158d2:	4299      	cmp	r1, r3
100158d4:	d103      	bne.n	100158de <_malloc_r+0x2ae>
100158d6:	e0f0      	b.n	10015aba <_malloc_r+0x48a>
100158d8:	689b      	ldr	r3, [r3, #8]
100158da:	4299      	cmp	r1, r3
100158dc:	d004      	beq.n	100158e8 <_malloc_r+0x2b8>
100158de:	685a      	ldr	r2, [r3, #4]
100158e0:	f022 0203 	bic.w	r2, r2, #3
100158e4:	454a      	cmp	r2, r9
100158e6:	d8f7      	bhi.n	100158d8 <_malloc_r+0x2a8>
100158e8:	68d9      	ldr	r1, [r3, #12]
100158ea:	e9c4 3102 	strd	r3, r1, [r4, #8]
100158ee:	608c      	str	r4, [r1, #8]
100158f0:	60dc      	str	r4, [r3, #12]
100158f2:	e729      	b.n	10015748 <_malloc_r+0x118>
100158f4:	2b14      	cmp	r3, #20
100158f6:	d96d      	bls.n	100159d4 <_malloc_r+0x3a4>
100158f8:	2b54      	cmp	r3, #84	@ 0x54
100158fa:	f200 8101 	bhi.w	10015b00 <_malloc_r+0x4d0>
100158fe:	0b2b      	lsrs	r3, r5, #12
10015900:	f103 0c6f 	add.w	ip, r3, #111	@ 0x6f
10015904:	f103 0e6e 	add.w	lr, r3, #110	@ 0x6e
10015908:	ea4f 03cc 	mov.w	r3, ip, lsl #3
1001590c:	e6d7      	b.n	100156be <_malloc_r+0x8e>
1001590e:	4630      	mov	r0, r6
10015910:	68a6      	ldr	r6, [r4, #8]
10015912:	1962      	adds	r2, r4, r5
10015914:	f045 0501 	orr.w	r5, r5, #1
10015918:	6065      	str	r5, [r4, #4]
1001591a:	60f1      	str	r1, [r6, #12]
1001591c:	608e      	str	r6, [r1, #8]
1001591e:	f04e 0101 	orr.w	r1, lr, #1
10015922:	e9c7 2204 	strd	r2, r2, [r7, #16]
10015926:	f8c2 8008 	str.w	r8, [r2, #8]
1001592a:	f8c2 800c 	str.w	r8, [r2, #12]
1001592e:	6051      	str	r1, [r2, #4]
10015930:	f844 e003 	str.w	lr, [r4, r3]
10015934:	f000 fd7c 	bl	10016430 <__malloc_unlock>
10015938:	3408      	adds	r4, #8
1001593a:	e6a2      	b.n	10015682 <_malloc_r+0x52>
1001593c:	20000018 	.word	0x20000018
10015940:	20000020 	.word	0x20000020
10015944:	20001484 	.word	0x20001484
10015948:	20000010 	.word	0x20000010
1001594c:	20001454 	.word	0x20001454
10015950:	20001480 	.word	0x20001480
10015954:	2000147c 	.word	0x2000147c
10015958:	4423      	add	r3, r4
1001595a:	4630      	mov	r0, r6
1001595c:	685a      	ldr	r2, [r3, #4]
1001595e:	f042 0201 	orr.w	r2, r2, #1
10015962:	605a      	str	r2, [r3, #4]
10015964:	f854 3f08 	ldr.w	r3, [r4, #8]!
10015968:	60d9      	str	r1, [r3, #12]
1001596a:	608b      	str	r3, [r1, #8]
1001596c:	f000 fd60 	bl	10016430 <__malloc_unlock>
10015970:	e687      	b.n	10015682 <_malloc_r+0x52>
10015972:	44a1      	add	r9, r4
10015974:	4630      	mov	r0, r6
10015976:	f8d9 3004 	ldr.w	r3, [r9, #4]
1001597a:	f043 0301 	orr.w	r3, r3, #1
1001597e:	f8c9 3004 	str.w	r3, [r9, #4]
10015982:	3408      	adds	r4, #8
10015984:	f000 fd54 	bl	10016430 <__malloc_unlock>
10015988:	e67b      	b.n	10015682 <_malloc_r+0x52>
1001598a:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
1001598e:	f105 0308 	add.w	r3, r5, #8
10015992:	e65e      	b.n	10015652 <_malloc_r+0x22>
10015994:	1962      	adds	r2, r4, r5
10015996:	f043 0101 	orr.w	r1, r3, #1
1001599a:	f045 0501 	orr.w	r5, r5, #1
1001599e:	6065      	str	r5, [r4, #4]
100159a0:	4630      	mov	r0, r6
100159a2:	e9c7 2204 	strd	r2, r2, [r7, #16]
100159a6:	f8c2 8008 	str.w	r8, [r2, #8]
100159aa:	f8c2 800c 	str.w	r8, [r2, #12]
100159ae:	6051      	str	r1, [r2, #4]
100159b0:	f844 3009 	str.w	r3, [r4, r9]
100159b4:	f000 fd3c 	bl	10016430 <__malloc_unlock>
100159b8:	3408      	adds	r4, #8
100159ba:	e662      	b.n	10015682 <_malloc_r+0x52>
100159bc:	ea4f 1299 	mov.w	r2, r9, lsr #6
100159c0:	f102 0339 	add.w	r3, r2, #57	@ 0x39
100159c4:	00db      	lsls	r3, r3, #3
100159c6:	3238      	adds	r2, #56	@ 0x38
100159c8:	e780      	b.n	100158cc <_malloc_r+0x29c>
100159ca:	42bc      	cmp	r4, r7
100159cc:	d024      	beq.n	10015a18 <_malloc_r+0x3e8>
100159ce:	68bc      	ldr	r4, [r7, #8]
100159d0:	6862      	ldr	r2, [r4, #4]
100159d2:	e743      	b.n	1001585c <_malloc_r+0x22c>
100159d4:	f103 0c5c 	add.w	ip, r3, #92	@ 0x5c
100159d8:	f103 0e5b 	add.w	lr, r3, #91	@ 0x5b
100159dc:	ea4f 03cc 	mov.w	r3, ip, lsl #3
100159e0:	e66d      	b.n	100156be <_malloc_r+0x8e>
100159e2:	f85a 3908 	ldr.w	r3, [sl], #-8
100159e6:	4553      	cmp	r3, sl
100159e8:	f040 80d8 	bne.w	10015b9c <_malloc_r+0x56c>
100159ec:	f01c 0f03 	tst.w	ip, #3
100159f0:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
100159f4:	d1f5      	bne.n	100159e2 <_malloc_r+0x3b2>
100159f6:	687b      	ldr	r3, [r7, #4]
100159f8:	ea23 0300 	bic.w	r3, r3, r0
100159fc:	607b      	str	r3, [r7, #4]
100159fe:	0040      	lsls	r0, r0, #1
10015a00:	4298      	cmp	r0, r3
10015a02:	f63f aedc 	bhi.w	100157be <_malloc_r+0x18e>
10015a06:	b918      	cbnz	r0, 10015a10 <_malloc_r+0x3e0>
10015a08:	e6d9      	b.n	100157be <_malloc_r+0x18e>
10015a0a:	0040      	lsls	r0, r0, #1
10015a0c:	f109 0904 	add.w	r9, r9, #4
10015a10:	4218      	tst	r0, r3
10015a12:	d0fa      	beq.n	10015a0a <_malloc_r+0x3da>
10015a14:	46cc      	mov	ip, r9
10015a16:	e6a8      	b.n	1001576a <_malloc_r+0x13a>
10015a18:	4b61      	ldr	r3, [pc, #388]	@ (10015ba0 <_malloc_r+0x570>)
10015a1a:	9901      	ldr	r1, [sp, #4]
10015a1c:	6818      	ldr	r0, [r3, #0]
10015a1e:	eb08 0c00 	add.w	ip, r8, r0
10015a22:	3901      	subs	r1, #1
10015a24:	f8c3 c000 	str.w	ip, [r3]
10015a28:	f8db 0000 	ldr.w	r0, [fp]
10015a2c:	3001      	adds	r0, #1
10015a2e:	bf1b      	ittet	ne
10015a30:	ebaa 0202 	subne.w	r2, sl, r2
10015a34:	4462      	addne	r2, ip
10015a36:	f8cb a000 	streq.w	sl, [fp]
10015a3a:	601a      	strne	r2, [r3, #0]
10015a3c:	f01a 0207 	ands.w	r2, sl, #7
10015a40:	e9cd 2302 	strd	r2, r3, [sp, #8]
10015a44:	d042      	beq.n	10015acc <_malloc_r+0x49c>
10015a46:	f1c2 0208 	rsb	r2, r2, #8
10015a4a:	9b01      	ldr	r3, [sp, #4]
10015a4c:	4492      	add	sl, r2
10015a4e:	44d0      	add	r8, sl
10015a50:	4413      	add	r3, r2
10015a52:	ea08 0001 	and.w	r0, r8, r1
10015a56:	1a1a      	subs	r2, r3, r0
10015a58:	ea02 0b01 	and.w	fp, r2, r1
10015a5c:	4659      	mov	r1, fp
10015a5e:	4630      	mov	r0, r6
10015a60:	f003 fb3a 	bl	100190d8 <_sbrk_r>
10015a64:	1c42      	adds	r2, r0, #1
10015a66:	9b03      	ldr	r3, [sp, #12]
10015a68:	d07a      	beq.n	10015b60 <_malloc_r+0x530>
10015a6a:	eba0 000a 	sub.w	r0, r0, sl
10015a6e:	eb00 080b 	add.w	r8, r0, fp
10015a72:	6818      	ldr	r0, [r3, #0]
10015a74:	f8c7 a008 	str.w	sl, [r7, #8]
10015a78:	f048 0201 	orr.w	r2, r8, #1
10015a7c:	4458      	add	r0, fp
10015a7e:	42bc      	cmp	r4, r7
10015a80:	f8ca 2004 	str.w	r2, [sl, #4]
10015a84:	6018      	str	r0, [r3, #0]
10015a86:	f43f aede 	beq.w	10015846 <_malloc_r+0x216>
10015a8a:	f1b9 0f0f 	cmp.w	r9, #15
10015a8e:	d942      	bls.n	10015b16 <_malloc_r+0x4e6>
10015a90:	6861      	ldr	r1, [r4, #4]
10015a92:	f1a9 020c 	sub.w	r2, r9, #12
10015a96:	f022 0207 	bic.w	r2, r2, #7
10015a9a:	f001 0101 	and.w	r1, r1, #1
10015a9e:	4311      	orrs	r1, r2
10015aa0:	6061      	str	r1, [r4, #4]
10015aa2:	18a1      	adds	r1, r4, r2
10015aa4:	f04f 0c05 	mov.w	ip, #5
10015aa8:	2a0f      	cmp	r2, #15
10015aaa:	f8c1 c004 	str.w	ip, [r1, #4]
10015aae:	f8c1 c008 	str.w	ip, [r1, #8]
10015ab2:	d84a      	bhi.n	10015b4a <_malloc_r+0x51a>
10015ab4:	f8da 2004 	ldr.w	r2, [sl, #4]
10015ab8:	e6c5      	b.n	10015846 <_malloc_r+0x216>
10015aba:	1092      	asrs	r2, r2, #2
10015abc:	2001      	movs	r0, #1
10015abe:	fa00 f202 	lsl.w	r2, r0, r2
10015ac2:	ea4e 0e02 	orr.w	lr, lr, r2
10015ac6:	f8c7 e004 	str.w	lr, [r7, #4]
10015aca:	e70e      	b.n	100158ea <_malloc_r+0x2ba>
10015acc:	9b01      	ldr	r3, [sp, #4]
10015ace:	eb0a 0208 	add.w	r2, sl, r8
10015ad2:	400a      	ands	r2, r1
10015ad4:	1a9a      	subs	r2, r3, r2
10015ad6:	ea02 0b01 	and.w	fp, r2, r1
10015ada:	4659      	mov	r1, fp
10015adc:	4630      	mov	r0, r6
10015ade:	f003 fafb 	bl	100190d8 <_sbrk_r>
10015ae2:	1c43      	adds	r3, r0, #1
10015ae4:	9b03      	ldr	r3, [sp, #12]
10015ae6:	d1c0      	bne.n	10015a6a <_malloc_r+0x43a>
10015ae8:	f8dd b008 	ldr.w	fp, [sp, #8]
10015aec:	e7c1      	b.n	10015a72 <_malloc_r+0x442>
10015aee:	2a54      	cmp	r2, #84	@ 0x54
10015af0:	d815      	bhi.n	10015b1e <_malloc_r+0x4ee>
10015af2:	ea4f 3219 	mov.w	r2, r9, lsr #12
10015af6:	f102 036f 	add.w	r3, r2, #111	@ 0x6f
10015afa:	00db      	lsls	r3, r3, #3
10015afc:	326e      	adds	r2, #110	@ 0x6e
10015afe:	e6e5      	b.n	100158cc <_malloc_r+0x29c>
10015b00:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
10015b04:	d815      	bhi.n	10015b32 <_malloc_r+0x502>
10015b06:	0beb      	lsrs	r3, r5, #15
10015b08:	f103 0c78 	add.w	ip, r3, #120	@ 0x78
10015b0c:	f103 0e77 	add.w	lr, r3, #119	@ 0x77
10015b10:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10015b14:	e5d3      	b.n	100156be <_malloc_r+0x8e>
10015b16:	2301      	movs	r3, #1
10015b18:	f8ca 3004 	str.w	r3, [sl, #4]
10015b1c:	e6a6      	b.n	1001586c <_malloc_r+0x23c>
10015b1e:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
10015b22:	d825      	bhi.n	10015b70 <_malloc_r+0x540>
10015b24:	ea4f 32d9 	mov.w	r2, r9, lsr #15
10015b28:	f102 0378 	add.w	r3, r2, #120	@ 0x78
10015b2c:	00db      	lsls	r3, r3, #3
10015b2e:	3277      	adds	r2, #119	@ 0x77
10015b30:	e6cc      	b.n	100158cc <_malloc_r+0x29c>
10015b32:	f240 5254 	movw	r2, #1364	@ 0x554
10015b36:	4293      	cmp	r3, r2
10015b38:	d825      	bhi.n	10015b86 <_malloc_r+0x556>
10015b3a:	0cab      	lsrs	r3, r5, #18
10015b3c:	f103 0c7d 	add.w	ip, r3, #125	@ 0x7d
10015b40:	f103 0e7c 	add.w	lr, r3, #124	@ 0x7c
10015b44:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10015b48:	e5b9      	b.n	100156be <_malloc_r+0x8e>
10015b4a:	4630      	mov	r0, r6
10015b4c:	f104 0108 	add.w	r1, r4, #8
10015b50:	9301      	str	r3, [sp, #4]
10015b52:	f002 f9b9 	bl	10017ec8 <_free_r>
10015b56:	9b01      	ldr	r3, [sp, #4]
10015b58:	f8d7 a008 	ldr.w	sl, [r7, #8]
10015b5c:	6818      	ldr	r0, [r3, #0]
10015b5e:	e7a9      	b.n	10015ab4 <_malloc_r+0x484>
10015b60:	9a02      	ldr	r2, [sp, #8]
10015b62:	3a08      	subs	r2, #8
10015b64:	4490      	add	r8, r2
10015b66:	eba8 080a 	sub.w	r8, r8, sl
10015b6a:	f04f 0b00 	mov.w	fp, #0
10015b6e:	e780      	b.n	10015a72 <_malloc_r+0x442>
10015b70:	f240 5354 	movw	r3, #1364	@ 0x554
10015b74:	429a      	cmp	r2, r3
10015b76:	d80d      	bhi.n	10015b94 <_malloc_r+0x564>
10015b78:	ea4f 4299 	mov.w	r2, r9, lsr #18
10015b7c:	f102 037d 	add.w	r3, r2, #125	@ 0x7d
10015b80:	00db      	lsls	r3, r3, #3
10015b82:	327c      	adds	r2, #124	@ 0x7c
10015b84:	e6a2      	b.n	100158cc <_malloc_r+0x29c>
10015b86:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
10015b8a:	f04f 0c7f 	mov.w	ip, #127	@ 0x7f
10015b8e:	f04f 0e7e 	mov.w	lr, #126	@ 0x7e
10015b92:	e594      	b.n	100156be <_malloc_r+0x8e>
10015b94:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
10015b98:	227e      	movs	r2, #126	@ 0x7e
10015b9a:	e697      	b.n	100158cc <_malloc_r+0x29c>
10015b9c:	687b      	ldr	r3, [r7, #4]
10015b9e:	e72e      	b.n	100159fe <_malloc_r+0x3ce>
10015ba0:	20001454 	.word	0x20001454

10015ba4 <register_fini>:
10015ba4:	4b02      	ldr	r3, [pc, #8]	@ (10015bb0 <register_fini+0xc>)
10015ba6:	b113      	cbz	r3, 10015bae <register_fini+0xa>
10015ba8:	4802      	ldr	r0, [pc, #8]	@ (10015bb4 <register_fini+0x10>)
10015baa:	f000 bc47 	b.w	1001643c <atexit>
10015bae:	4770      	bx	lr
10015bb0:	00000000 	.word	0x00000000
10015bb4:	10015e01 	.word	0x10015e01

10015bb8 <_mbrtowc_r>:
10015bb8:	b570      	push	{r4, r5, r6, lr}
10015bba:	b082      	sub	sp, #8
10015bbc:	4604      	mov	r4, r0
10015bbe:	9d06      	ldr	r5, [sp, #24]
10015bc0:	b155      	cbz	r5, 10015bd8 <_mbrtowc_r+0x20>
10015bc2:	4810      	ldr	r0, [pc, #64]	@ (10015c04 <_mbrtowc_r+0x4c>)
10015bc4:	f8d0 60e4 	ldr.w	r6, [r0, #228]	@ 0xe4
10015bc8:	9500      	str	r5, [sp, #0]
10015bca:	b16a      	cbz	r2, 10015be8 <_mbrtowc_r+0x30>
10015bcc:	4620      	mov	r0, r4
10015bce:	47b0      	blx	r6
10015bd0:	1c43      	adds	r3, r0, #1
10015bd2:	d010      	beq.n	10015bf6 <_mbrtowc_r+0x3e>
10015bd4:	b002      	add	sp, #8
10015bd6:	bd70      	pop	{r4, r5, r6, pc}
10015bd8:	f100 05f4 	add.w	r5, r0, #244	@ 0xf4
10015bdc:	4809      	ldr	r0, [pc, #36]	@ (10015c04 <_mbrtowc_r+0x4c>)
10015bde:	f8d0 60e4 	ldr.w	r6, [r0, #228]	@ 0xe4
10015be2:	9500      	str	r5, [sp, #0]
10015be4:	2a00      	cmp	r2, #0
10015be6:	d1f1      	bne.n	10015bcc <_mbrtowc_r+0x14>
10015be8:	2301      	movs	r3, #1
10015bea:	4611      	mov	r1, r2
10015bec:	4620      	mov	r0, r4
10015bee:	4a06      	ldr	r2, [pc, #24]	@ (10015c08 <_mbrtowc_r+0x50>)
10015bf0:	47b0      	blx	r6
10015bf2:	1c43      	adds	r3, r0, #1
10015bf4:	d1ee      	bne.n	10015bd4 <_mbrtowc_r+0x1c>
10015bf6:	2200      	movs	r2, #0
10015bf8:	238a      	movs	r3, #138	@ 0x8a
10015bfa:	602a      	str	r2, [r5, #0]
10015bfc:	6023      	str	r3, [r4, #0]
10015bfe:	b002      	add	sp, #8
10015c00:	bd70      	pop	{r4, r5, r6, pc}
10015c02:	bf00      	nop
10015c04:	20000424 	.word	0x20000424
10015c08:	10021458 	.word	0x10021458

10015c0c <memmove>:
10015c0c:	4288      	cmp	r0, r1
10015c0e:	d90e      	bls.n	10015c2e <memmove+0x22>
10015c10:	188b      	adds	r3, r1, r2
10015c12:	4283      	cmp	r3, r0
10015c14:	d90b      	bls.n	10015c2e <memmove+0x22>
10015c16:	eb00 0c02 	add.w	ip, r0, r2
10015c1a:	2a00      	cmp	r2, #0
10015c1c:	d06e      	beq.n	10015cfc <memmove+0xf0>
10015c1e:	4662      	mov	r2, ip
10015c20:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
10015c24:	f802 cd01 	strb.w	ip, [r2, #-1]!
10015c28:	4299      	cmp	r1, r3
10015c2a:	d1f9      	bne.n	10015c20 <memmove+0x14>
10015c2c:	4770      	bx	lr
10015c2e:	2a0f      	cmp	r2, #15
10015c30:	d80f      	bhi.n	10015c52 <memmove+0x46>
10015c32:	4603      	mov	r3, r0
10015c34:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10015c38:	2a00      	cmp	r2, #0
10015c3a:	d05f      	beq.n	10015cfc <memmove+0xf0>
10015c3c:	f10c 0c01 	add.w	ip, ip, #1
10015c40:	3b01      	subs	r3, #1
10015c42:	448c      	add	ip, r1
10015c44:	f811 2b01 	ldrb.w	r2, [r1], #1
10015c48:	f803 2f01 	strb.w	r2, [r3, #1]!
10015c4c:	4561      	cmp	r1, ip
10015c4e:	d1f9      	bne.n	10015c44 <memmove+0x38>
10015c50:	4770      	bx	lr
10015c52:	ea40 0301 	orr.w	r3, r0, r1
10015c56:	079b      	lsls	r3, r3, #30
10015c58:	d151      	bne.n	10015cfe <memmove+0xf2>
10015c5a:	f1a2 0310 	sub.w	r3, r2, #16
10015c5e:	b570      	push	{r4, r5, r6, lr}
10015c60:	f101 0c20 	add.w	ip, r1, #32
10015c64:	f023 050f 	bic.w	r5, r3, #15
10015c68:	f101 0e10 	add.w	lr, r1, #16
10015c6c:	f100 0410 	add.w	r4, r0, #16
10015c70:	44ac      	add	ip, r5
10015c72:	091b      	lsrs	r3, r3, #4
10015c74:	f85e 5c10 	ldr.w	r5, [lr, #-16]
10015c78:	f844 5c10 	str.w	r5, [r4, #-16]
10015c7c:	f85e 5c0c 	ldr.w	r5, [lr, #-12]
10015c80:	f844 5c0c 	str.w	r5, [r4, #-12]
10015c84:	f85e 5c08 	ldr.w	r5, [lr, #-8]
10015c88:	f844 5c08 	str.w	r5, [r4, #-8]
10015c8c:	f85e 5c04 	ldr.w	r5, [lr, #-4]
10015c90:	f844 5c04 	str.w	r5, [r4, #-4]
10015c94:	f10e 0e10 	add.w	lr, lr, #16
10015c98:	45e6      	cmp	lr, ip
10015c9a:	f104 0410 	add.w	r4, r4, #16
10015c9e:	d1e9      	bne.n	10015c74 <memmove+0x68>
10015ca0:	3301      	adds	r3, #1
10015ca2:	f012 0f0c 	tst.w	r2, #12
10015ca6:	eb01 1103 	add.w	r1, r1, r3, lsl #4
10015caa:	f002 040f 	and.w	r4, r2, #15
10015cae:	eb00 1303 	add.w	r3, r0, r3, lsl #4
10015cb2:	d028      	beq.n	10015d06 <memmove+0xfa>
10015cb4:	3c04      	subs	r4, #4
10015cb6:	f024 0603 	bic.w	r6, r4, #3
10015cba:	ea4f 0c94 	mov.w	ip, r4, lsr #2
10015cbe:	441e      	add	r6, r3
10015cc0:	1f1c      	subs	r4, r3, #4
10015cc2:	468e      	mov	lr, r1
10015cc4:	f85e 5b04 	ldr.w	r5, [lr], #4
10015cc8:	f844 5f04 	str.w	r5, [r4, #4]!
10015ccc:	42b4      	cmp	r4, r6
10015cce:	d1f9      	bne.n	10015cc4 <memmove+0xb8>
10015cd0:	f10c 0401 	add.w	r4, ip, #1
10015cd4:	f002 0203 	and.w	r2, r2, #3
10015cd8:	eb03 0384 	add.w	r3, r3, r4, lsl #2
10015cdc:	eb01 0184 	add.w	r1, r1, r4, lsl #2
10015ce0:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10015ce4:	b14a      	cbz	r2, 10015cfa <memmove+0xee>
10015ce6:	f10c 0c01 	add.w	ip, ip, #1
10015cea:	3b01      	subs	r3, #1
10015cec:	448c      	add	ip, r1
10015cee:	f811 2b01 	ldrb.w	r2, [r1], #1
10015cf2:	f803 2f01 	strb.w	r2, [r3, #1]!
10015cf6:	4561      	cmp	r1, ip
10015cf8:	d1f9      	bne.n	10015cee <memmove+0xe2>
10015cfa:	bd70      	pop	{r4, r5, r6, pc}
10015cfc:	4770      	bx	lr
10015cfe:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10015d02:	4603      	mov	r3, r0
10015d04:	e79a      	b.n	10015c3c <memmove+0x30>
10015d06:	4622      	mov	r2, r4
10015d08:	e7ea      	b.n	10015ce0 <memmove+0xd4>
10015d0a:	bf00      	nop

10015d0c <memset>:
10015d0c:	0783      	lsls	r3, r0, #30
10015d0e:	b530      	push	{r4, r5, lr}
10015d10:	d047      	beq.n	10015da2 <memset+0x96>
10015d12:	1e54      	subs	r4, r2, #1
10015d14:	2a00      	cmp	r2, #0
10015d16:	d03e      	beq.n	10015d96 <memset+0x8a>
10015d18:	b2ca      	uxtb	r2, r1
10015d1a:	4603      	mov	r3, r0
10015d1c:	e001      	b.n	10015d22 <memset+0x16>
10015d1e:	3c01      	subs	r4, #1
10015d20:	d339      	bcc.n	10015d96 <memset+0x8a>
10015d22:	f803 2b01 	strb.w	r2, [r3], #1
10015d26:	079d      	lsls	r5, r3, #30
10015d28:	d1f9      	bne.n	10015d1e <memset+0x12>
10015d2a:	2c03      	cmp	r4, #3
10015d2c:	d92c      	bls.n	10015d88 <memset+0x7c>
10015d2e:	b2cd      	uxtb	r5, r1
10015d30:	eb05 2505 	add.w	r5, r5, r5, lsl #8
10015d34:	2c0f      	cmp	r4, #15
10015d36:	eb05 4505 	add.w	r5, r5, r5, lsl #16
10015d3a:	d935      	bls.n	10015da8 <memset+0x9c>
10015d3c:	f1a4 0210 	sub.w	r2, r4, #16
10015d40:	f022 0c0f 	bic.w	ip, r2, #15
10015d44:	f103 0e10 	add.w	lr, r3, #16
10015d48:	44e6      	add	lr, ip
10015d4a:	ea4f 1c12 	mov.w	ip, r2, lsr #4
10015d4e:	461a      	mov	r2, r3
10015d50:	6015      	str	r5, [r2, #0]
10015d52:	6055      	str	r5, [r2, #4]
10015d54:	6095      	str	r5, [r2, #8]
10015d56:	60d5      	str	r5, [r2, #12]
10015d58:	3210      	adds	r2, #16
10015d5a:	4572      	cmp	r2, lr
10015d5c:	d1f8      	bne.n	10015d50 <memset+0x44>
10015d5e:	f10c 0201 	add.w	r2, ip, #1
10015d62:	f014 0f0c 	tst.w	r4, #12
10015d66:	eb03 1202 	add.w	r2, r3, r2, lsl #4
10015d6a:	f004 0c0f 	and.w	ip, r4, #15
10015d6e:	d013      	beq.n	10015d98 <memset+0x8c>
10015d70:	f1ac 0304 	sub.w	r3, ip, #4
10015d74:	f023 0303 	bic.w	r3, r3, #3
10015d78:	3304      	adds	r3, #4
10015d7a:	4413      	add	r3, r2
10015d7c:	f842 5b04 	str.w	r5, [r2], #4
10015d80:	429a      	cmp	r2, r3
10015d82:	d1fb      	bne.n	10015d7c <memset+0x70>
10015d84:	f00c 0403 	and.w	r4, ip, #3
10015d88:	b12c      	cbz	r4, 10015d96 <memset+0x8a>
10015d8a:	b2c9      	uxtb	r1, r1
10015d8c:	441c      	add	r4, r3
10015d8e:	f803 1b01 	strb.w	r1, [r3], #1
10015d92:	429c      	cmp	r4, r3
10015d94:	d1fb      	bne.n	10015d8e <memset+0x82>
10015d96:	bd30      	pop	{r4, r5, pc}
10015d98:	4664      	mov	r4, ip
10015d9a:	4613      	mov	r3, r2
10015d9c:	2c00      	cmp	r4, #0
10015d9e:	d1f4      	bne.n	10015d8a <memset+0x7e>
10015da0:	e7f9      	b.n	10015d96 <memset+0x8a>
10015da2:	4603      	mov	r3, r0
10015da4:	4614      	mov	r4, r2
10015da6:	e7c0      	b.n	10015d2a <memset+0x1e>
10015da8:	461a      	mov	r2, r3
10015daa:	46a4      	mov	ip, r4
10015dac:	e7e0      	b.n	10015d70 <memset+0x64>
10015dae:	bf00      	nop

10015db0 <__libc_init_array>:
10015db0:	b570      	push	{r4, r5, r6, lr}
10015db2:	4b0f      	ldr	r3, [pc, #60]	@ (10015df0 <__libc_init_array+0x40>)
10015db4:	4d0f      	ldr	r5, [pc, #60]	@ (10015df4 <__libc_init_array+0x44>)
10015db6:	42ab      	cmp	r3, r5
10015db8:	eba3 0605 	sub.w	r6, r3, r5
10015dbc:	d007      	beq.n	10015dce <__libc_init_array+0x1e>
10015dbe:	10b6      	asrs	r6, r6, #2
10015dc0:	2400      	movs	r4, #0
10015dc2:	f855 3b04 	ldr.w	r3, [r5], #4
10015dc6:	3401      	adds	r4, #1
10015dc8:	4798      	blx	r3
10015dca:	42a6      	cmp	r6, r4
10015dcc:	d8f9      	bhi.n	10015dc2 <__libc_init_array+0x12>
10015dce:	f014 fd81 	bl	1002a8d4 <_init>
10015dd2:	4d09      	ldr	r5, [pc, #36]	@ (10015df8 <__libc_init_array+0x48>)
10015dd4:	4b09      	ldr	r3, [pc, #36]	@ (10015dfc <__libc_init_array+0x4c>)
10015dd6:	1b5e      	subs	r6, r3, r5
10015dd8:	42ab      	cmp	r3, r5
10015dda:	ea4f 06a6 	mov.w	r6, r6, asr #2
10015dde:	d006      	beq.n	10015dee <__libc_init_array+0x3e>
10015de0:	2400      	movs	r4, #0
10015de2:	f855 3b04 	ldr.w	r3, [r5], #4
10015de6:	3401      	adds	r4, #1
10015de8:	4798      	blx	r3
10015dea:	42a6      	cmp	r6, r4
10015dec:	d8f9      	bhi.n	10015de2 <__libc_init_array+0x32>
10015dee:	bd70      	pop	{r4, r5, r6, pc}
10015df0:	20000bc0 	.word	0x20000bc0
10015df4:	20000bc0 	.word	0x20000bc0
10015df8:	20000bc0 	.word	0x20000bc0
10015dfc:	20000bc8 	.word	0x20000bc8

10015e00 <__libc_fini_array>:
10015e00:	b538      	push	{r3, r4, r5, lr}
10015e02:	4d07      	ldr	r5, [pc, #28]	@ (10015e20 <__libc_fini_array+0x20>)
10015e04:	4c07      	ldr	r4, [pc, #28]	@ (10015e24 <__libc_fini_array+0x24>)
10015e06:	1b2c      	subs	r4, r5, r4
10015e08:	10a4      	asrs	r4, r4, #2
10015e0a:	d005      	beq.n	10015e18 <__libc_fini_array+0x18>
10015e0c:	3c01      	subs	r4, #1
10015e0e:	f855 3d04 	ldr.w	r3, [r5, #-4]!
10015e12:	4798      	blx	r3
10015e14:	2c00      	cmp	r4, #0
10015e16:	d1f9      	bne.n	10015e0c <__libc_fini_array+0xc>
10015e18:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10015e1c:	f014 bd60 	b.w	1002a8e0 <_fini>
10015e20:	20000bcc 	.word	0x20000bcc
10015e24:	20000bc8 	.word	0x20000bc8

10015e28 <__retarget_lock_init_recursive>:
10015e28:	4770      	bx	lr
10015e2a:	bf00      	nop

10015e2c <__retarget_lock_close_recursive>:
10015e2c:	4770      	bx	lr
10015e2e:	bf00      	nop

10015e30 <__retarget_lock_acquire_recursive>:
10015e30:	4770      	bx	lr
10015e32:	bf00      	nop

10015e34 <__retarget_lock_release_recursive>:
10015e34:	4770      	bx	lr
10015e36:	bf00      	nop

10015e38 <__locale_mb_cur_max>:
10015e38:	4b01      	ldr	r3, [pc, #4]	@ (10015e40 <__locale_mb_cur_max+0x8>)
10015e3a:	f893 0128 	ldrb.w	r0, [r3, #296]	@ 0x128
10015e3e:	4770      	bx	lr
10015e40:	20000424 	.word	0x20000424

10015e44 <_localeconv_r>:
10015e44:	4800      	ldr	r0, [pc, #0]	@ (10015e48 <_localeconv_r+0x4>)
10015e46:	4770      	bx	lr
10015e48:	20000514 	.word	0x20000514

10015e4c <_fclose_r>:
10015e4c:	b570      	push	{r4, r5, r6, lr}
10015e4e:	2900      	cmp	r1, #0
10015e50:	d03f      	beq.n	10015ed2 <_fclose_r+0x86>
10015e52:	4605      	mov	r5, r0
10015e54:	460c      	mov	r4, r1
10015e56:	b110      	cbz	r0, 10015e5e <_fclose_r+0x12>
10015e58:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10015e5a:	2b00      	cmp	r3, #0
10015e5c:	d03c      	beq.n	10015ed8 <_fclose_r+0x8c>
10015e5e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10015e60:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
10015e64:	07de      	lsls	r6, r3, #31
10015e66:	d432      	bmi.n	10015ece <_fclose_r+0x82>
10015e68:	0590      	lsls	r0, r2, #22
10015e6a:	d538      	bpl.n	10015ede <_fclose_r+0x92>
10015e6c:	4621      	mov	r1, r4
10015e6e:	4628      	mov	r0, r5
10015e70:	f000 fb08 	bl	10016484 <__sflush_r>
10015e74:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
10015e76:	4606      	mov	r6, r0
10015e78:	b133      	cbz	r3, 10015e88 <_fclose_r+0x3c>
10015e7a:	69e1      	ldr	r1, [r4, #28]
10015e7c:	4628      	mov	r0, r5
10015e7e:	4798      	blx	r3
10015e80:	2800      	cmp	r0, #0
10015e82:	bfb8      	it	lt
10015e84:	f04f 36ff 	movlt.w	r6, #4294967295	@ 0xffffffff
10015e88:	89a3      	ldrh	r3, [r4, #12]
10015e8a:	061a      	lsls	r2, r3, #24
10015e8c:	d439      	bmi.n	10015f02 <_fclose_r+0xb6>
10015e8e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10015e90:	b141      	cbz	r1, 10015ea4 <_fclose_r+0x58>
10015e92:	f104 0340 	add.w	r3, r4, #64	@ 0x40
10015e96:	4299      	cmp	r1, r3
10015e98:	d002      	beq.n	10015ea0 <_fclose_r+0x54>
10015e9a:	4628      	mov	r0, r5
10015e9c:	f002 f814 	bl	10017ec8 <_free_r>
10015ea0:	2300      	movs	r3, #0
10015ea2:	6323      	str	r3, [r4, #48]	@ 0x30
10015ea4:	6c61      	ldr	r1, [r4, #68]	@ 0x44
10015ea6:	b121      	cbz	r1, 10015eb2 <_fclose_r+0x66>
10015ea8:	4628      	mov	r0, r5
10015eaa:	f002 f80d 	bl	10017ec8 <_free_r>
10015eae:	2300      	movs	r3, #0
10015eb0:	6463      	str	r3, [r4, #68]	@ 0x44
10015eb2:	f000 fca1 	bl	100167f8 <__sfp_lock_acquire>
10015eb6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10015eb8:	2200      	movs	r2, #0
10015eba:	07db      	lsls	r3, r3, #31
10015ebc:	81a2      	strh	r2, [r4, #12]
10015ebe:	d51c      	bpl.n	10015efa <_fclose_r+0xae>
10015ec0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015ec2:	f7ff ffb3 	bl	10015e2c <__retarget_lock_close_recursive>
10015ec6:	f000 fc9d 	bl	10016804 <__sfp_lock_release>
10015eca:	4630      	mov	r0, r6
10015ecc:	bd70      	pop	{r4, r5, r6, pc}
10015ece:	2a00      	cmp	r2, #0
10015ed0:	d1cc      	bne.n	10015e6c <_fclose_r+0x20>
10015ed2:	2600      	movs	r6, #0
10015ed4:	4630      	mov	r0, r6
10015ed6:	bd70      	pop	{r4, r5, r6, pc}
10015ed8:	f000 fc70 	bl	100167bc <__sinit>
10015edc:	e7bf      	b.n	10015e5e <_fclose_r+0x12>
10015ede:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015ee0:	f7ff ffa6 	bl	10015e30 <__retarget_lock_acquire_recursive>
10015ee4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10015ee8:	2b00      	cmp	r3, #0
10015eea:	d1bf      	bne.n	10015e6c <_fclose_r+0x20>
10015eec:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10015eee:	07d9      	lsls	r1, r3, #31
10015ef0:	d4ef      	bmi.n	10015ed2 <_fclose_r+0x86>
10015ef2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015ef4:	f7ff ff9e 	bl	10015e34 <__retarget_lock_release_recursive>
10015ef8:	e7eb      	b.n	10015ed2 <_fclose_r+0x86>
10015efa:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015efc:	f7ff ff9a 	bl	10015e34 <__retarget_lock_release_recursive>
10015f00:	e7de      	b.n	10015ec0 <_fclose_r+0x74>
10015f02:	6921      	ldr	r1, [r4, #16]
10015f04:	4628      	mov	r0, r5
10015f06:	f001 ffdf 	bl	10017ec8 <_free_r>
10015f0a:	e7c0      	b.n	10015e8e <_fclose_r+0x42>

10015f0c <sysconf>:
10015f0c:	2808      	cmp	r0, #8
10015f0e:	d102      	bne.n	10015f16 <sysconf+0xa>
10015f10:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
10015f14:	4770      	bx	lr
10015f16:	b508      	push	{r3, lr}
10015f18:	f7fd fee0 	bl	10013cdc <__errno>
10015f1c:	2316      	movs	r3, #22
10015f1e:	6003      	str	r3, [r0, #0]
10015f20:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10015f24:	bd08      	pop	{r3, pc}
10015f26:	bf00      	nop
	...

10015f40 <strcmp>:
10015f40:	7802      	ldrb	r2, [r0, #0]
10015f42:	780b      	ldrb	r3, [r1, #0]
10015f44:	2a01      	cmp	r2, #1
10015f46:	bf28      	it	cs
10015f48:	429a      	cmpcs	r2, r3
10015f4a:	f040 80d8 	bne.w	100160fe <strcmp+0x1be>
10015f4e:	e96d 4504 	strd	r4, r5, [sp, #-16]!
10015f52:	ea40 0401 	orr.w	r4, r0, r1
10015f56:	e9cd 6702 	strd	r6, r7, [sp, #8]
10015f5a:	f06f 0c00 	mvn.w	ip, #0
10015f5e:	ea4f 7244 	mov.w	r2, r4, lsl #29
10015f62:	b31a      	cbz	r2, 10015fac <strcmp+0x6c>
10015f64:	ea80 0401 	eor.w	r4, r0, r1
10015f68:	f014 0f07 	tst.w	r4, #7
10015f6c:	d16b      	bne.n	10016046 <strcmp+0x106>
10015f6e:	f000 0407 	and.w	r4, r0, #7
10015f72:	f020 0007 	bic.w	r0, r0, #7
10015f76:	f004 0503 	and.w	r5, r4, #3
10015f7a:	f021 0107 	bic.w	r1, r1, #7
10015f7e:	ea4f 05c5 	mov.w	r5, r5, lsl #3
10015f82:	e8f0 2304 	ldrd	r2, r3, [r0], #16
10015f86:	f014 0f04 	tst.w	r4, #4
10015f8a:	e8f1 6704 	ldrd	r6, r7, [r1], #16
10015f8e:	fa0c f405 	lsl.w	r4, ip, r5
10015f92:	ea62 0204 	orn	r2, r2, r4
10015f96:	ea66 0604 	orn	r6, r6, r4
10015f9a:	d00b      	beq.n	10015fb4 <strcmp+0x74>
10015f9c:	ea63 0304 	orn	r3, r3, r4
10015fa0:	4662      	mov	r2, ip
10015fa2:	ea67 0704 	orn	r7, r7, r4
10015fa6:	4666      	mov	r6, ip
10015fa8:	e004      	b.n	10015fb4 <strcmp+0x74>
10015faa:	bf00      	nop
10015fac:	e8f0 2304 	ldrd	r2, r3, [r0], #16
10015fb0:	e8f1 6704 	ldrd	r6, r7, [r1], #16
10015fb4:	fa82 f54c 	uadd8	r5, r2, ip
10015fb8:	ea82 0406 	eor.w	r4, r2, r6
10015fbc:	faa4 f48c 	sel	r4, r4, ip
10015fc0:	bb6c      	cbnz	r4, 1001601e <strcmp+0xde>
10015fc2:	fa83 f54c 	uadd8	r5, r3, ip
10015fc6:	ea83 0507 	eor.w	r5, r3, r7
10015fca:	faa5 f58c 	sel	r5, r5, ip
10015fce:	b995      	cbnz	r5, 10015ff6 <strcmp+0xb6>
10015fd0:	e950 2302 	ldrd	r2, r3, [r0, #-8]
10015fd4:	e951 6702 	ldrd	r6, r7, [r1, #-8]
10015fd8:	fa82 f54c 	uadd8	r5, r2, ip
10015fdc:	ea82 0406 	eor.w	r4, r2, r6
10015fe0:	faa4 f48c 	sel	r4, r4, ip
10015fe4:	fa83 f54c 	uadd8	r5, r3, ip
10015fe8:	ea83 0507 	eor.w	r5, r3, r7
10015fec:	faa5 f58c 	sel	r5, r5, ip
10015ff0:	4325      	orrs	r5, r4
10015ff2:	d0db      	beq.n	10015fac <strcmp+0x6c>
10015ff4:	b99c      	cbnz	r4, 1001601e <strcmp+0xde>
10015ff6:	ba2d      	rev	r5, r5
10015ff8:	fab5 f485 	clz	r4, r5
10015ffc:	f024 0407 	bic.w	r4, r4, #7
10016000:	fa27 f104 	lsr.w	r1, r7, r4
10016004:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
10016008:	fa23 f304 	lsr.w	r3, r3, r4
1001600c:	f003 00ff 	and.w	r0, r3, #255	@ 0xff
10016010:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
10016014:	e8fd 4504 	ldrd	r4, r5, [sp], #16
10016018:	eba0 0001 	sub.w	r0, r0, r1
1001601c:	4770      	bx	lr
1001601e:	ba24      	rev	r4, r4
10016020:	fab4 f484 	clz	r4, r4
10016024:	f024 0407 	bic.w	r4, r4, #7
10016028:	fa26 f104 	lsr.w	r1, r6, r4
1001602c:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
10016030:	fa22 f204 	lsr.w	r2, r2, r4
10016034:	f002 00ff 	and.w	r0, r2, #255	@ 0xff
10016038:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
1001603c:	e8fd 4504 	ldrd	r4, r5, [sp], #16
10016040:	eba0 0001 	sub.w	r0, r0, r1
10016044:	4770      	bx	lr
10016046:	f014 0f03 	tst.w	r4, #3
1001604a:	d13c      	bne.n	100160c6 <strcmp+0x186>
1001604c:	f010 0403 	ands.w	r4, r0, #3
10016050:	d128      	bne.n	100160a4 <strcmp+0x164>
10016052:	f850 2b08 	ldr.w	r2, [r0], #8
10016056:	f851 3b08 	ldr.w	r3, [r1], #8
1001605a:	fa82 f54c 	uadd8	r5, r2, ip
1001605e:	ea82 0503 	eor.w	r5, r2, r3
10016062:	faa5 f58c 	sel	r5, r5, ip
10016066:	b95d      	cbnz	r5, 10016080 <strcmp+0x140>
10016068:	f850 2c04 	ldr.w	r2, [r0, #-4]
1001606c:	f851 3c04 	ldr.w	r3, [r1, #-4]
10016070:	fa82 f54c 	uadd8	r5, r2, ip
10016074:	ea82 0503 	eor.w	r5, r2, r3
10016078:	faa5 f58c 	sel	r5, r5, ip
1001607c:	2d00      	cmp	r5, #0
1001607e:	d0e8      	beq.n	10016052 <strcmp+0x112>
10016080:	ba2d      	rev	r5, r5
10016082:	fab5 f485 	clz	r4, r5
10016086:	f024 0407 	bic.w	r4, r4, #7
1001608a:	fa23 f104 	lsr.w	r1, r3, r4
1001608e:	fa22 f204 	lsr.w	r2, r2, r4
10016092:	f002 00ff 	and.w	r0, r2, #255	@ 0xff
10016096:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
1001609a:	e8fd 4504 	ldrd	r4, r5, [sp], #16
1001609e:	eba0 0001 	sub.w	r0, r0, r1
100160a2:	4770      	bx	lr
100160a4:	ea4f 04c4 	mov.w	r4, r4, lsl #3
100160a8:	f020 0003 	bic.w	r0, r0, #3
100160ac:	f850 2b08 	ldr.w	r2, [r0], #8
100160b0:	f021 0103 	bic.w	r1, r1, #3
100160b4:	f851 3b08 	ldr.w	r3, [r1], #8
100160b8:	fa0c f404 	lsl.w	r4, ip, r4
100160bc:	ea62 0204 	orn	r2, r2, r4
100160c0:	ea63 0304 	orn	r3, r3, r4
100160c4:	e7c9      	b.n	1001605a <strcmp+0x11a>
100160c6:	f010 0403 	ands.w	r4, r0, #3
100160ca:	d01d      	beq.n	10016108 <strcmp+0x1c8>
100160cc:	eba1 0104 	sub.w	r1, r1, r4
100160d0:	f020 0003 	bic.w	r0, r0, #3
100160d4:	07e4      	lsls	r4, r4, #31
100160d6:	f850 2b04 	ldr.w	r2, [r0], #4
100160da:	d006      	beq.n	100160ea <strcmp+0x1aa>
100160dc:	d212      	bcs.n	10016104 <strcmp+0x1c4>
100160de:	788b      	ldrb	r3, [r1, #2]
100160e0:	fa5f f4a2 	uxtb.w	r4, r2, ror #16
100160e4:	1ae4      	subs	r4, r4, r3
100160e6:	d106      	bne.n	100160f6 <strcmp+0x1b6>
100160e8:	b12b      	cbz	r3, 100160f6 <strcmp+0x1b6>
100160ea:	78cb      	ldrb	r3, [r1, #3]
100160ec:	fa5f f4b2 	uxtb.w	r4, r2, ror #24
100160f0:	1ae4      	subs	r4, r4, r3
100160f2:	d100      	bne.n	100160f6 <strcmp+0x1b6>
100160f4:	b933      	cbnz	r3, 10016104 <strcmp+0x1c4>
100160f6:	4620      	mov	r0, r4
100160f8:	f85d 4b10 	ldr.w	r4, [sp], #16
100160fc:	4770      	bx	lr
100160fe:	eba2 0003 	sub.w	r0, r2, r3
10016102:	4770      	bx	lr
10016104:	f101 0104 	add.w	r1, r1, #4
10016108:	f850 2b04 	ldr.w	r2, [r0], #4
1001610c:	07cc      	lsls	r4, r1, #31
1001610e:	f021 0103 	bic.w	r1, r1, #3
10016112:	f851 3b04 	ldr.w	r3, [r1], #4
10016116:	d848      	bhi.n	100161aa <strcmp+0x26a>
10016118:	d224      	bcs.n	10016164 <strcmp+0x224>
1001611a:	f022 447f 	bic.w	r4, r2, #4278190080	@ 0xff000000
1001611e:	fa82 f54c 	uadd8	r5, r2, ip
10016122:	ea94 2513 	eors.w	r5, r4, r3, lsr #8
10016126:	faa5 f58c 	sel	r5, r5, ip
1001612a:	d10a      	bne.n	10016142 <strcmp+0x202>
1001612c:	b965      	cbnz	r5, 10016148 <strcmp+0x208>
1001612e:	f851 3b04 	ldr.w	r3, [r1], #4
10016132:	ea84 0402 	eor.w	r4, r4, r2
10016136:	ebb4 6f03 	cmp.w	r4, r3, lsl #24
1001613a:	d10e      	bne.n	1001615a <strcmp+0x21a>
1001613c:	f850 2b04 	ldr.w	r2, [r0], #4
10016140:	e7eb      	b.n	1001611a <strcmp+0x1da>
10016142:	ea4f 2313 	mov.w	r3, r3, lsr #8
10016146:	e055      	b.n	100161f4 <strcmp+0x2b4>
10016148:	f035 457f 	bics.w	r5, r5, #4278190080	@ 0xff000000
1001614c:	d14d      	bne.n	100161ea <strcmp+0x2aa>
1001614e:	7808      	ldrb	r0, [r1, #0]
10016150:	e8fd 4504 	ldrd	r4, r5, [sp], #16
10016154:	f1c0 0000 	rsb	r0, r0, #0
10016158:	4770      	bx	lr
1001615a:	ea4f 6212 	mov.w	r2, r2, lsr #24
1001615e:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
10016162:	e047      	b.n	100161f4 <strcmp+0x2b4>
10016164:	ea02 441c 	and.w	r4, r2, ip, lsr #16
10016168:	fa82 f54c 	uadd8	r5, r2, ip
1001616c:	ea94 4513 	eors.w	r5, r4, r3, lsr #16
10016170:	faa5 f58c 	sel	r5, r5, ip
10016174:	d10a      	bne.n	1001618c <strcmp+0x24c>
10016176:	b965      	cbnz	r5, 10016192 <strcmp+0x252>
10016178:	f851 3b04 	ldr.w	r3, [r1], #4
1001617c:	ea84 0402 	eor.w	r4, r4, r2
10016180:	ebb4 4f03 	cmp.w	r4, r3, lsl #16
10016184:	d10c      	bne.n	100161a0 <strcmp+0x260>
10016186:	f850 2b04 	ldr.w	r2, [r0], #4
1001618a:	e7eb      	b.n	10016164 <strcmp+0x224>
1001618c:	ea4f 4313 	mov.w	r3, r3, lsr #16
10016190:	e030      	b.n	100161f4 <strcmp+0x2b4>
10016192:	ea15 451c 	ands.w	r5, r5, ip, lsr #16
10016196:	d128      	bne.n	100161ea <strcmp+0x2aa>
10016198:	880b      	ldrh	r3, [r1, #0]
1001619a:	ea4f 4212 	mov.w	r2, r2, lsr #16
1001619e:	e029      	b.n	100161f4 <strcmp+0x2b4>
100161a0:	ea4f 4212 	mov.w	r2, r2, lsr #16
100161a4:	ea03 431c 	and.w	r3, r3, ip, lsr #16
100161a8:	e024      	b.n	100161f4 <strcmp+0x2b4>
100161aa:	f002 04ff 	and.w	r4, r2, #255	@ 0xff
100161ae:	fa82 f54c 	uadd8	r5, r2, ip
100161b2:	ea94 6513 	eors.w	r5, r4, r3, lsr #24
100161b6:	faa5 f58c 	sel	r5, r5, ip
100161ba:	d10a      	bne.n	100161d2 <strcmp+0x292>
100161bc:	b965      	cbnz	r5, 100161d8 <strcmp+0x298>
100161be:	f851 3b04 	ldr.w	r3, [r1], #4
100161c2:	ea84 0402 	eor.w	r4, r4, r2
100161c6:	ebb4 2f03 	cmp.w	r4, r3, lsl #8
100161ca:	d109      	bne.n	100161e0 <strcmp+0x2a0>
100161cc:	f850 2b04 	ldr.w	r2, [r0], #4
100161d0:	e7eb      	b.n	100161aa <strcmp+0x26a>
100161d2:	ea4f 6313 	mov.w	r3, r3, lsr #24
100161d6:	e00d      	b.n	100161f4 <strcmp+0x2b4>
100161d8:	f015 0fff 	tst.w	r5, #255	@ 0xff
100161dc:	d105      	bne.n	100161ea <strcmp+0x2aa>
100161de:	680b      	ldr	r3, [r1, #0]
100161e0:	ea4f 2212 	mov.w	r2, r2, lsr #8
100161e4:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
100161e8:	e004      	b.n	100161f4 <strcmp+0x2b4>
100161ea:	f04f 0000 	mov.w	r0, #0
100161ee:	e8fd 4504 	ldrd	r4, r5, [sp], #16
100161f2:	4770      	bx	lr
100161f4:	ba12      	rev	r2, r2
100161f6:	ba1b      	rev	r3, r3
100161f8:	fa82 f44c 	uadd8	r4, r2, ip
100161fc:	ea82 0403 	eor.w	r4, r2, r3
10016200:	faa4 f58c 	sel	r5, r4, ip
10016204:	fab5 f485 	clz	r4, r5
10016208:	fa02 f204 	lsl.w	r2, r2, r4
1001620c:	fa03 f304 	lsl.w	r3, r3, r4
10016210:	ea4f 6012 	mov.w	r0, r2, lsr #24
10016214:	e8fd 4504 	ldrd	r4, r5, [sp], #16
10016218:	eba0 6013 	sub.w	r0, r0, r3, lsr #24
1001621c:	4770      	bx	lr
1001621e:	bf00      	nop

10016220 <printf>:
10016220:	b40f      	push	{r0, r1, r2, r3}
10016222:	b500      	push	{lr}
10016224:	4907      	ldr	r1, [pc, #28]	@ (10016244 <printf+0x24>)
10016226:	b083      	sub	sp, #12
10016228:	ab04      	add	r3, sp, #16
1001622a:	6808      	ldr	r0, [r1, #0]
1001622c:	f853 2b04 	ldr.w	r2, [r3], #4
10016230:	6881      	ldr	r1, [r0, #8]
10016232:	9301      	str	r3, [sp, #4]
10016234:	f005 f84c 	bl	1001b2d0 <_vfprintf_r>
10016238:	b003      	add	sp, #12
1001623a:	f85d eb04 	ldr.w	lr, [sp], #4
1001623e:	b004      	add	sp, #16
10016240:	4770      	bx	lr
10016242:	bf00      	nop
10016244:	20000590 	.word	0x20000590

10016248 <putchar>:
10016248:	4b02      	ldr	r3, [pc, #8]	@ (10016254 <putchar+0xc>)
1001624a:	4601      	mov	r1, r0
1001624c:	6818      	ldr	r0, [r3, #0]
1001624e:	6882      	ldr	r2, [r0, #8]
10016250:	f008 b868 	b.w	1001e324 <_putc_r>
10016254:	20000590 	.word	0x20000590

10016258 <_puts_r>:
10016258:	b570      	push	{r4, r5, r6, lr}
1001625a:	4605      	mov	r5, r0
1001625c:	b088      	sub	sp, #32
1001625e:	4608      	mov	r0, r1
10016260:	460c      	mov	r4, r1
10016262:	f000 fb8d 	bl	10016980 <strlen>
10016266:	4e21      	ldr	r6, [pc, #132]	@ (100162ec <_puts_r+0x94>)
10016268:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
1001626a:	9005      	str	r0, [sp, #20]
1001626c:	2101      	movs	r1, #1
1001626e:	1843      	adds	r3, r0, r1
10016270:	e9cd 6106 	strd	r6, r1, [sp, #24]
10016274:	a804      	add	r0, sp, #16
10016276:	2102      	movs	r1, #2
10016278:	9404      	str	r4, [sp, #16]
1001627a:	9303      	str	r3, [sp, #12]
1001627c:	68ac      	ldr	r4, [r5, #8]
1001627e:	9001      	str	r0, [sp, #4]
10016280:	9102      	str	r1, [sp, #8]
10016282:	2a00      	cmp	r2, #0
10016284:	d02e      	beq.n	100162e4 <_puts_r+0x8c>
10016286:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10016288:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001628c:	07d6      	lsls	r6, r2, #31
1001628e:	d401      	bmi.n	10016294 <_puts_r+0x3c>
10016290:	0598      	lsls	r0, r3, #22
10016292:	d521      	bpl.n	100162d8 <_puts_r+0x80>
10016294:	0499      	lsls	r1, r3, #18
10016296:	d406      	bmi.n	100162a6 <_puts_r+0x4e>
10016298:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001629a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
1001629e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
100162a2:	81a3      	strh	r3, [r4, #12]
100162a4:	6662      	str	r2, [r4, #100]	@ 0x64
100162a6:	4628      	mov	r0, r5
100162a8:	aa01      	add	r2, sp, #4
100162aa:	4621      	mov	r1, r4
100162ac:	f002 ff26 	bl	100190fc <__sfvwrite_r>
100162b0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100162b2:	2800      	cmp	r0, #0
100162b4:	bf0c      	ite	eq
100162b6:	250a      	moveq	r5, #10
100162b8:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
100162bc:	07da      	lsls	r2, r3, #31
100162be:	d402      	bmi.n	100162c6 <_puts_r+0x6e>
100162c0:	89a3      	ldrh	r3, [r4, #12]
100162c2:	059b      	lsls	r3, r3, #22
100162c4:	d502      	bpl.n	100162cc <_puts_r+0x74>
100162c6:	4628      	mov	r0, r5
100162c8:	b008      	add	sp, #32
100162ca:	bd70      	pop	{r4, r5, r6, pc}
100162cc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100162ce:	f7ff fdb1 	bl	10015e34 <__retarget_lock_release_recursive>
100162d2:	4628      	mov	r0, r5
100162d4:	b008      	add	sp, #32
100162d6:	bd70      	pop	{r4, r5, r6, pc}
100162d8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100162da:	f7ff fda9 	bl	10015e30 <__retarget_lock_acquire_recursive>
100162de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100162e2:	e7d7      	b.n	10016294 <_puts_r+0x3c>
100162e4:	4628      	mov	r0, r5
100162e6:	f000 fa69 	bl	100167bc <__sinit>
100162ea:	e7cc      	b.n	10016286 <_puts_r+0x2e>
100162ec:	10021218 	.word	0x10021218

100162f0 <puts>:
100162f0:	4b02      	ldr	r3, [pc, #8]	@ (100162fc <puts+0xc>)
100162f2:	4601      	mov	r1, r0
100162f4:	6818      	ldr	r0, [r3, #0]
100162f6:	f7ff bfaf 	b.w	10016258 <_puts_r>
100162fa:	bf00      	nop
100162fc:	20000590 	.word	0x20000590

10016300 <lflush>:
10016300:	898b      	ldrh	r3, [r1, #12]
10016302:	f003 0309 	and.w	r3, r3, #9
10016306:	2b09      	cmp	r3, #9
10016308:	d001      	beq.n	1001630e <lflush+0xe>
1001630a:	2000      	movs	r0, #0
1001630c:	4770      	bx	lr
1001630e:	4b02      	ldr	r3, [pc, #8]	@ (10016318 <lflush+0x18>)
10016310:	6818      	ldr	r0, [r3, #0]
10016312:	f000 b94b 	b.w	100165ac <_fflush_r>
10016316:	bf00      	nop
10016318:	20000590 	.word	0x20000590

1001631c <__srefill_r>:
1001631c:	b570      	push	{r4, r5, r6, lr}
1001631e:	460c      	mov	r4, r1
10016320:	4605      	mov	r5, r0
10016322:	b110      	cbz	r0, 1001632a <__srefill_r+0xe>
10016324:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10016326:	2b00      	cmp	r3, #0
10016328:	d05f      	beq.n	100163ea <__srefill_r+0xce>
1001632a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001632e:	049a      	lsls	r2, r3, #18
10016330:	d406      	bmi.n	10016340 <__srefill_r+0x24>
10016332:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10016334:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10016338:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1001633c:	81a3      	strh	r3, [r4, #12]
1001633e:	6662      	str	r2, [r4, #100]	@ 0x64
10016340:	2200      	movs	r2, #0
10016342:	069e      	lsls	r6, r3, #26
10016344:	6062      	str	r2, [r4, #4]
10016346:	d45d      	bmi.n	10016404 <__srefill_r+0xe8>
10016348:	0758      	lsls	r0, r3, #29
1001634a:	d419      	bmi.n	10016380 <__srefill_r+0x64>
1001634c:	06d9      	lsls	r1, r3, #27
1001634e:	d55c      	bpl.n	1001640a <__srefill_r+0xee>
10016350:	071a      	lsls	r2, r3, #28
10016352:	d439      	bmi.n	100163c8 <__srefill_r+0xac>
10016354:	f043 0304 	orr.w	r3, r3, #4
10016358:	81a3      	strh	r3, [r4, #12]
1001635a:	6923      	ldr	r3, [r4, #16]
1001635c:	2b00      	cmp	r3, #0
1001635e:	d03f      	beq.n	100163e0 <__srefill_r+0xc4>
10016360:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
10016364:	07b3      	lsls	r3, r6, #30
10016366:	d11e      	bne.n	100163a6 <__srefill_r+0x8a>
10016368:	6922      	ldr	r2, [r4, #16]
1001636a:	6a26      	ldr	r6, [r4, #32]
1001636c:	6963      	ldr	r3, [r4, #20]
1001636e:	69e1      	ldr	r1, [r4, #28]
10016370:	6022      	str	r2, [r4, #0]
10016372:	4628      	mov	r0, r5
10016374:	47b0      	blx	r6
10016376:	2800      	cmp	r0, #0
10016378:	6060      	str	r0, [r4, #4]
1001637a:	dd39      	ble.n	100163f0 <__srefill_r+0xd4>
1001637c:	2000      	movs	r0, #0
1001637e:	bd70      	pop	{r4, r5, r6, pc}
10016380:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10016382:	2900      	cmp	r1, #0
10016384:	d0e9      	beq.n	1001635a <__srefill_r+0x3e>
10016386:	f104 0340 	add.w	r3, r4, #64	@ 0x40
1001638a:	4299      	cmp	r1, r3
1001638c:	d002      	beq.n	10016394 <__srefill_r+0x78>
1001638e:	4628      	mov	r0, r5
10016390:	f001 fd9a 	bl	10017ec8 <_free_r>
10016394:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
10016396:	6063      	str	r3, [r4, #4]
10016398:	2200      	movs	r2, #0
1001639a:	6322      	str	r2, [r4, #48]	@ 0x30
1001639c:	2b00      	cmp	r3, #0
1001639e:	d0dc      	beq.n	1001635a <__srefill_r+0x3e>
100163a0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
100163a2:	6023      	str	r3, [r4, #0]
100163a4:	e7ea      	b.n	1001637c <__srefill_r+0x60>
100163a6:	2301      	movs	r3, #1
100163a8:	81a3      	strh	r3, [r4, #12]
100163aa:	4a1b      	ldr	r2, [pc, #108]	@ (10016418 <__srefill_r+0xfc>)
100163ac:	491b      	ldr	r1, [pc, #108]	@ (1001641c <__srefill_r+0x100>)
100163ae:	481c      	ldr	r0, [pc, #112]	@ (10016420 <__srefill_r+0x104>)
100163b0:	f003 f820 	bl	100193f4 <_fwalk_sglue>
100163b4:	f006 0309 	and.w	r3, r6, #9
100163b8:	2b09      	cmp	r3, #9
100163ba:	81a6      	strh	r6, [r4, #12]
100163bc:	d1d4      	bne.n	10016368 <__srefill_r+0x4c>
100163be:	4621      	mov	r1, r4
100163c0:	4628      	mov	r0, r5
100163c2:	f000 f85f 	bl	10016484 <__sflush_r>
100163c6:	e7cf      	b.n	10016368 <__srefill_r+0x4c>
100163c8:	4621      	mov	r1, r4
100163ca:	4628      	mov	r0, r5
100163cc:	f000 f8ee 	bl	100165ac <_fflush_r>
100163d0:	b9c0      	cbnz	r0, 10016404 <__srefill_r+0xe8>
100163d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100163d6:	60a0      	str	r0, [r4, #8]
100163d8:	f023 0308 	bic.w	r3, r3, #8
100163dc:	61a0      	str	r0, [r4, #24]
100163de:	e7b9      	b.n	10016354 <__srefill_r+0x38>
100163e0:	4621      	mov	r1, r4
100163e2:	4628      	mov	r0, r5
100163e4:	f007 ff30 	bl	1001e248 <__smakebuf_r>
100163e8:	e7ba      	b.n	10016360 <__srefill_r+0x44>
100163ea:	f000 f9e7 	bl	100167bc <__sinit>
100163ee:	e79c      	b.n	1001632a <__srefill_r+0xe>
100163f0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100163f4:	bf17      	itett	ne
100163f6:	2200      	movne	r2, #0
100163f8:	f043 0320 	orreq.w	r3, r3, #32
100163fc:	f043 0340 	orrne.w	r3, r3, #64	@ 0x40
10016400:	6062      	strne	r2, [r4, #4]
10016402:	81a3      	strh	r3, [r4, #12]
10016404:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10016408:	bd70      	pop	{r4, r5, r6, pc}
1001640a:	2209      	movs	r2, #9
1001640c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10016410:	602a      	str	r2, [r5, #0]
10016412:	81a3      	strh	r3, [r4, #12]
10016414:	e7f6      	b.n	10016404 <__srefill_r+0xe8>
10016416:	bf00      	nop
10016418:	200006b8 	.word	0x200006b8
1001641c:	10016301 	.word	0x10016301
10016420:	20000598 	.word	0x20000598

10016424 <__malloc_lock>:
10016424:	4801      	ldr	r0, [pc, #4]	@ (1001642c <__malloc_lock+0x8>)
10016426:	f7ff bd03 	b.w	10015e30 <__retarget_lock_acquire_recursive>
1001642a:	bf00      	nop
1001642c:	2000148c 	.word	0x2000148c

10016430 <__malloc_unlock>:
10016430:	4801      	ldr	r0, [pc, #4]	@ (10016438 <__malloc_unlock+0x8>)
10016432:	f7ff bcff 	b.w	10015e34 <__retarget_lock_release_recursive>
10016436:	bf00      	nop
10016438:	2000148c 	.word	0x2000148c

1001643c <atexit>:
1001643c:	2300      	movs	r3, #0
1001643e:	4601      	mov	r1, r0
10016440:	461a      	mov	r2, r3
10016442:	4618      	mov	r0, r3
10016444:	f007 be04 	b.w	1001e050 <__register_exitproc>

10016448 <realloc>:
10016448:	b410      	push	{r4}
1001644a:	4c04      	ldr	r4, [pc, #16]	@ (1001645c <realloc+0x14>)
1001644c:	4603      	mov	r3, r0
1001644e:	460a      	mov	r2, r1
10016450:	6820      	ldr	r0, [r4, #0]
10016452:	bc10      	pop	{r4}
10016454:	4619      	mov	r1, r3
10016456:	f000 bb4f 	b.w	10016af8 <_realloc_r>
1001645a:	bf00      	nop
1001645c:	20000590 	.word	0x20000590

10016460 <_close_r>:
10016460:	b538      	push	{r3, r4, r5, lr}
10016462:	4d07      	ldr	r5, [pc, #28]	@ (10016480 <_close_r+0x20>)
10016464:	2200      	movs	r2, #0
10016466:	4604      	mov	r4, r0
10016468:	4608      	mov	r0, r1
1001646a:	602a      	str	r2, [r5, #0]
1001646c:	f7fb fb24 	bl	10011ab8 <_close>
10016470:	1c43      	adds	r3, r0, #1
10016472:	d000      	beq.n	10016476 <_close_r+0x16>
10016474:	bd38      	pop	{r3, r4, r5, pc}
10016476:	682b      	ldr	r3, [r5, #0]
10016478:	2b00      	cmp	r3, #0
1001647a:	d0fb      	beq.n	10016474 <_close_r+0x14>
1001647c:	6023      	str	r3, [r4, #0]
1001647e:	bd38      	pop	{r3, r4, r5, pc}
10016480:	20001498 	.word	0x20001498

10016484 <__sflush_r>:
10016484:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
10016488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001648a:	4607      	mov	r7, r0
1001648c:	0710      	lsls	r0, r2, #28
1001648e:	460c      	mov	r4, r1
10016490:	d446      	bmi.n	10016520 <__sflush_r+0x9c>
10016492:	6849      	ldr	r1, [r1, #4]
10016494:	f442 6300 	orr.w	r3, r2, #2048	@ 0x800
10016498:	2900      	cmp	r1, #0
1001649a:	81a3      	strh	r3, [r4, #12]
1001649c:	dd5c      	ble.n	10016558 <__sflush_r+0xd4>
1001649e:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
100164a0:	2d00      	cmp	r5, #0
100164a2:	d03b      	beq.n	1001651c <__sflush_r+0x98>
100164a4:	2100      	movs	r1, #0
100164a6:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
100164aa:	683e      	ldr	r6, [r7, #0]
100164ac:	6039      	str	r1, [r7, #0]
100164ae:	69e1      	ldr	r1, [r4, #28]
100164b0:	d15e      	bne.n	10016570 <__sflush_r+0xec>
100164b2:	2301      	movs	r3, #1
100164b4:	4638      	mov	r0, r7
100164b6:	47a8      	blx	r5
100164b8:	1c41      	adds	r1, r0, #1
100164ba:	4602      	mov	r2, r0
100164bc:	d068      	beq.n	10016590 <__sflush_r+0x10c>
100164be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100164c2:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
100164c4:	69e1      	ldr	r1, [r4, #28]
100164c6:	075b      	lsls	r3, r3, #29
100164c8:	d505      	bpl.n	100164d6 <__sflush_r+0x52>
100164ca:	6863      	ldr	r3, [r4, #4]
100164cc:	1ad2      	subs	r2, r2, r3
100164ce:	6b23      	ldr	r3, [r4, #48]	@ 0x30
100164d0:	b10b      	cbz	r3, 100164d6 <__sflush_r+0x52>
100164d2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
100164d4:	1ad2      	subs	r2, r2, r3
100164d6:	2300      	movs	r3, #0
100164d8:	4638      	mov	r0, r7
100164da:	47a8      	blx	r5
100164dc:	1c45      	adds	r5, r0, #1
100164de:	d149      	bne.n	10016574 <__sflush_r+0xf0>
100164e0:	6839      	ldr	r1, [r7, #0]
100164e2:	291d      	cmp	r1, #29
100164e4:	d83c      	bhi.n	10016560 <__sflush_r+0xdc>
100164e6:	4a30      	ldr	r2, [pc, #192]	@ (100165a8 <__sflush_r+0x124>)
100164e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100164ec:	410a      	asrs	r2, r1
100164ee:	f012 0201 	ands.w	r2, r2, #1
100164f2:	d137      	bne.n	10016564 <__sflush_r+0xe0>
100164f4:	6062      	str	r2, [r4, #4]
100164f6:	6922      	ldr	r2, [r4, #16]
100164f8:	6022      	str	r2, [r4, #0]
100164fa:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
100164fe:	81a2      	strh	r2, [r4, #12]
10016500:	04da      	lsls	r2, r3, #19
10016502:	d44e      	bmi.n	100165a2 <__sflush_r+0x11e>
10016504:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10016506:	603e      	str	r6, [r7, #0]
10016508:	b141      	cbz	r1, 1001651c <__sflush_r+0x98>
1001650a:	f104 0340 	add.w	r3, r4, #64	@ 0x40
1001650e:	4299      	cmp	r1, r3
10016510:	d002      	beq.n	10016518 <__sflush_r+0x94>
10016512:	4638      	mov	r0, r7
10016514:	f001 fcd8 	bl	10017ec8 <_free_r>
10016518:	2300      	movs	r3, #0
1001651a:	6323      	str	r3, [r4, #48]	@ 0x30
1001651c:	2000      	movs	r0, #0
1001651e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10016520:	690e      	ldr	r6, [r1, #16]
10016522:	2e00      	cmp	r6, #0
10016524:	d0fa      	beq.n	1001651c <__sflush_r+0x98>
10016526:	680d      	ldr	r5, [r1, #0]
10016528:	600e      	str	r6, [r1, #0]
1001652a:	0791      	lsls	r1, r2, #30
1001652c:	bf0c      	ite	eq
1001652e:	6963      	ldreq	r3, [r4, #20]
10016530:	2300      	movne	r3, #0
10016532:	1bad      	subs	r5, r5, r6
10016534:	60a3      	str	r3, [r4, #8]
10016536:	e00c      	b.n	10016552 <__sflush_r+0xce>
10016538:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
1001653c:	69e1      	ldr	r1, [r4, #28]
1001653e:	462b      	mov	r3, r5
10016540:	4632      	mov	r2, r6
10016542:	4638      	mov	r0, r7
10016544:	47e0      	blx	ip
10016546:	f1b0 0c00 	subs.w	ip, r0, #0
1001654a:	eba5 050c 	sub.w	r5, r5, ip
1001654e:	4466      	add	r6, ip
10016550:	dd06      	ble.n	10016560 <__sflush_r+0xdc>
10016552:	2d00      	cmp	r5, #0
10016554:	dcf0      	bgt.n	10016538 <__sflush_r+0xb4>
10016556:	e7e1      	b.n	1001651c <__sflush_r+0x98>
10016558:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
1001655a:	2900      	cmp	r1, #0
1001655c:	dc9f      	bgt.n	1001649e <__sflush_r+0x1a>
1001655e:	e7dd      	b.n	1001651c <__sflush_r+0x98>
10016560:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10016564:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10016568:	81a3      	strh	r3, [r4, #12]
1001656a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001656e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10016570:	6d22      	ldr	r2, [r4, #80]	@ 0x50
10016572:	e7a8      	b.n	100164c6 <__sflush_r+0x42>
10016574:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10016578:	6922      	ldr	r2, [r4, #16]
1001657a:	6022      	str	r2, [r4, #0]
1001657c:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
10016580:	81a2      	strh	r2, [r4, #12]
10016582:	04db      	lsls	r3, r3, #19
10016584:	f04f 0200 	mov.w	r2, #0
10016588:	6062      	str	r2, [r4, #4]
1001658a:	d5bb      	bpl.n	10016504 <__sflush_r+0x80>
1001658c:	6520      	str	r0, [r4, #80]	@ 0x50
1001658e:	e7b9      	b.n	10016504 <__sflush_r+0x80>
10016590:	683b      	ldr	r3, [r7, #0]
10016592:	2b00      	cmp	r3, #0
10016594:	d093      	beq.n	100164be <__sflush_r+0x3a>
10016596:	2b1d      	cmp	r3, #29
10016598:	d001      	beq.n	1001659e <__sflush_r+0x11a>
1001659a:	2b16      	cmp	r3, #22
1001659c:	d1e0      	bne.n	10016560 <__sflush_r+0xdc>
1001659e:	603e      	str	r6, [r7, #0]
100165a0:	e7bc      	b.n	1001651c <__sflush_r+0x98>
100165a2:	2900      	cmp	r1, #0
100165a4:	d1ae      	bne.n	10016504 <__sflush_r+0x80>
100165a6:	e7f1      	b.n	1001658c <__sflush_r+0x108>
100165a8:	dfbffffe 	.word	0xdfbffffe

100165ac <_fflush_r>:
100165ac:	b538      	push	{r3, r4, r5, lr}
100165ae:	460c      	mov	r4, r1
100165b0:	4605      	mov	r5, r0
100165b2:	b108      	cbz	r0, 100165b8 <_fflush_r+0xc>
100165b4:	6b43      	ldr	r3, [r0, #52]	@ 0x34
100165b6:	b303      	cbz	r3, 100165fa <_fflush_r+0x4e>
100165b8:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
100165bc:	b188      	cbz	r0, 100165e2 <_fflush_r+0x36>
100165be:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100165c0:	07db      	lsls	r3, r3, #31
100165c2:	d401      	bmi.n	100165c8 <_fflush_r+0x1c>
100165c4:	0581      	lsls	r1, r0, #22
100165c6:	d50f      	bpl.n	100165e8 <_fflush_r+0x3c>
100165c8:	4628      	mov	r0, r5
100165ca:	4621      	mov	r1, r4
100165cc:	f7ff ff5a 	bl	10016484 <__sflush_r>
100165d0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100165d2:	07da      	lsls	r2, r3, #31
100165d4:	4605      	mov	r5, r0
100165d6:	d402      	bmi.n	100165de <_fflush_r+0x32>
100165d8:	89a3      	ldrh	r3, [r4, #12]
100165da:	059b      	lsls	r3, r3, #22
100165dc:	d508      	bpl.n	100165f0 <_fflush_r+0x44>
100165de:	4628      	mov	r0, r5
100165e0:	bd38      	pop	{r3, r4, r5, pc}
100165e2:	4605      	mov	r5, r0
100165e4:	4628      	mov	r0, r5
100165e6:	bd38      	pop	{r3, r4, r5, pc}
100165e8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100165ea:	f7ff fc21 	bl	10015e30 <__retarget_lock_acquire_recursive>
100165ee:	e7eb      	b.n	100165c8 <_fflush_r+0x1c>
100165f0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100165f2:	f7ff fc1f 	bl	10015e34 <__retarget_lock_release_recursive>
100165f6:	4628      	mov	r0, r5
100165f8:	bd38      	pop	{r3, r4, r5, pc}
100165fa:	f000 f8df 	bl	100167bc <__sinit>
100165fe:	e7db      	b.n	100165b8 <_fflush_r+0xc>

10016600 <fflush>:
10016600:	b350      	cbz	r0, 10016658 <fflush+0x58>
10016602:	b538      	push	{r3, r4, r5, lr}
10016604:	4b17      	ldr	r3, [pc, #92]	@ (10016664 <fflush+0x64>)
10016606:	681d      	ldr	r5, [r3, #0]
10016608:	4604      	mov	r4, r0
1001660a:	b10d      	cbz	r5, 10016610 <fflush+0x10>
1001660c:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
1001660e:	b1bb      	cbz	r3, 10016640 <fflush+0x40>
10016610:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
10016614:	b188      	cbz	r0, 1001663a <fflush+0x3a>
10016616:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10016618:	07db      	lsls	r3, r3, #31
1001661a:	d401      	bmi.n	10016620 <fflush+0x20>
1001661c:	0581      	lsls	r1, r0, #22
1001661e:	d513      	bpl.n	10016648 <fflush+0x48>
10016620:	4628      	mov	r0, r5
10016622:	4621      	mov	r1, r4
10016624:	f7ff ff2e 	bl	10016484 <__sflush_r>
10016628:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001662a:	07da      	lsls	r2, r3, #31
1001662c:	4605      	mov	r5, r0
1001662e:	d402      	bmi.n	10016636 <fflush+0x36>
10016630:	89a3      	ldrh	r3, [r4, #12]
10016632:	059b      	lsls	r3, r3, #22
10016634:	d50c      	bpl.n	10016650 <fflush+0x50>
10016636:	4628      	mov	r0, r5
10016638:	bd38      	pop	{r3, r4, r5, pc}
1001663a:	4605      	mov	r5, r0
1001663c:	4628      	mov	r0, r5
1001663e:	bd38      	pop	{r3, r4, r5, pc}
10016640:	4628      	mov	r0, r5
10016642:	f000 f8bb 	bl	100167bc <__sinit>
10016646:	e7e3      	b.n	10016610 <fflush+0x10>
10016648:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001664a:	f7ff fbf1 	bl	10015e30 <__retarget_lock_acquire_recursive>
1001664e:	e7e7      	b.n	10016620 <fflush+0x20>
10016650:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10016652:	f7ff fbef 	bl	10015e34 <__retarget_lock_release_recursive>
10016656:	e7ee      	b.n	10016636 <fflush+0x36>
10016658:	4a03      	ldr	r2, [pc, #12]	@ (10016668 <fflush+0x68>)
1001665a:	4904      	ldr	r1, [pc, #16]	@ (1001666c <fflush+0x6c>)
1001665c:	4804      	ldr	r0, [pc, #16]	@ (10016670 <fflush+0x70>)
1001665e:	f002 bec9 	b.w	100193f4 <_fwalk_sglue>
10016662:	bf00      	nop
10016664:	20000590 	.word	0x20000590
10016668:	200006b8 	.word	0x200006b8
1001666c:	100165ad 	.word	0x100165ad
10016670:	20000598 	.word	0x20000598

10016674 <stdio_exit_handler>:
10016674:	4a02      	ldr	r2, [pc, #8]	@ (10016680 <stdio_exit_handler+0xc>)
10016676:	4903      	ldr	r1, [pc, #12]	@ (10016684 <stdio_exit_handler+0x10>)
10016678:	4803      	ldr	r0, [pc, #12]	@ (10016688 <stdio_exit_handler+0x14>)
1001667a:	f002 bebb 	b.w	100193f4 <_fwalk_sglue>
1001667e:	bf00      	nop
10016680:	200006b8 	.word	0x200006b8
10016684:	10015e4d 	.word	0x10015e4d
10016688:	20000598 	.word	0x20000598

1001668c <cleanup_stdio>:
1001668c:	4b0c      	ldr	r3, [pc, #48]	@ (100166c0 <cleanup_stdio+0x34>)
1001668e:	6841      	ldr	r1, [r0, #4]
10016690:	4299      	cmp	r1, r3
10016692:	b510      	push	{r4, lr}
10016694:	4604      	mov	r4, r0
10016696:	d001      	beq.n	1001669c <cleanup_stdio+0x10>
10016698:	f7ff fbd8 	bl	10015e4c <_fclose_r>
1001669c:	68a1      	ldr	r1, [r4, #8]
1001669e:	4b09      	ldr	r3, [pc, #36]	@ (100166c4 <cleanup_stdio+0x38>)
100166a0:	4299      	cmp	r1, r3
100166a2:	d002      	beq.n	100166aa <cleanup_stdio+0x1e>
100166a4:	4620      	mov	r0, r4
100166a6:	f7ff fbd1 	bl	10015e4c <_fclose_r>
100166aa:	68e1      	ldr	r1, [r4, #12]
100166ac:	4b06      	ldr	r3, [pc, #24]	@ (100166c8 <cleanup_stdio+0x3c>)
100166ae:	4299      	cmp	r1, r3
100166b0:	d004      	beq.n	100166bc <cleanup_stdio+0x30>
100166b2:	4620      	mov	r0, r4
100166b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100166b8:	f7ff bbc8 	b.w	10015e4c <_fclose_r>
100166bc:	bd10      	pop	{r4, pc}
100166be:	bf00      	nop
100166c0:	2000149c 	.word	0x2000149c
100166c4:	20001504 	.word	0x20001504
100166c8:	2000156c 	.word	0x2000156c

100166cc <global_stdio_init.part.0>:
100166cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
100166d0:	4c31      	ldr	r4, [pc, #196]	@ (10016798 <global_stdio_init.part.0+0xcc>)
100166d2:	4b32      	ldr	r3, [pc, #200]	@ (1001679c <global_stdio_init.part.0+0xd0>)
100166d4:	4832      	ldr	r0, [pc, #200]	@ (100167a0 <global_stdio_init.part.0+0xd4>)
100166d6:	f8df 90cc 	ldr.w	r9, [pc, #204]	@ 100167a4 <global_stdio_init.part.0+0xd8>
100166da:	f8df 80cc 	ldr.w	r8, [pc, #204]	@ 100167a8 <global_stdio_init.part.0+0xdc>
100166de:	4f33      	ldr	r7, [pc, #204]	@ (100167ac <global_stdio_init.part.0+0xe0>)
100166e0:	6018      	str	r0, [r3, #0]
100166e2:	2500      	movs	r5, #0
100166e4:	4629      	mov	r1, r5
100166e6:	2304      	movs	r3, #4
100166e8:	2208      	movs	r2, #8
100166ea:	f104 005c 	add.w	r0, r4, #92	@ 0x5c
100166ee:	4e30      	ldr	r6, [pc, #192]	@ (100167b0 <global_stdio_init.part.0+0xe4>)
100166f0:	60e3      	str	r3, [r4, #12]
100166f2:	e9c4 5500 	strd	r5, r5, [r4]
100166f6:	e9c4 5504 	strd	r5, r5, [r4, #16]
100166fa:	60a5      	str	r5, [r4, #8]
100166fc:	6665      	str	r5, [r4, #100]	@ 0x64
100166fe:	61a5      	str	r5, [r4, #24]
10016700:	f7ff fb04 	bl	10015d0c <memset>
10016704:	f104 0058 	add.w	r0, r4, #88	@ 0x58
10016708:	e9c4 4907 	strd	r4, r9, [r4, #28]
1001670c:	e9c4 8709 	strd	r8, r7, [r4, #36]	@ 0x24
10016710:	62e6      	str	r6, [r4, #44]	@ 0x2c
10016712:	f7ff fb89 	bl	10015e28 <__retarget_lock_init_recursive>
10016716:	4629      	mov	r1, r5
10016718:	4b26      	ldr	r3, [pc, #152]	@ (100167b4 <global_stdio_init.part.0+0xe8>)
1001671a:	6763      	str	r3, [r4, #116]	@ 0x74
1001671c:	2208      	movs	r2, #8
1001671e:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
10016722:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
10016726:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
1001672a:	6725      	str	r5, [r4, #112]	@ 0x70
1001672c:	f8c4 50cc 	str.w	r5, [r4, #204]	@ 0xcc
10016730:	f8c4 5080 	str.w	r5, [r4, #128]	@ 0x80
10016734:	f7ff faea 	bl	10015d0c <memset>
10016738:	f104 0368 	add.w	r3, r4, #104	@ 0x68
1001673c:	f104 00c0 	add.w	r0, r4, #192	@ 0xc0
10016740:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
10016744:	e9c4 9822 	strd	r9, r8, [r4, #136]	@ 0x88
10016748:	e9c4 7624 	strd	r7, r6, [r4, #144]	@ 0x90
1001674c:	f7ff fb6c 	bl	10015e28 <__retarget_lock_init_recursive>
10016750:	4b19      	ldr	r3, [pc, #100]	@ (100167b8 <global_stdio_init.part.0+0xec>)
10016752:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
10016756:	4629      	mov	r1, r5
10016758:	f504 7096 	add.w	r0, r4, #300	@ 0x12c
1001675c:	2208      	movs	r2, #8
1001675e:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
10016762:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
10016766:	f8c4 50d8 	str.w	r5, [r4, #216]	@ 0xd8
1001676a:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
1001676e:	f8c4 50e8 	str.w	r5, [r4, #232]	@ 0xe8
10016772:	f7ff facb 	bl	10015d0c <memset>
10016776:	f104 03d0 	add.w	r3, r4, #208	@ 0xd0
1001677a:	e9c4 873d 	strd	r8, r7, [r4, #244]	@ 0xf4
1001677e:	f8c4 90f0 	str.w	r9, [r4, #240]	@ 0xf0
10016782:	f504 7094 	add.w	r0, r4, #296	@ 0x128
10016786:	f8c4 60fc 	str.w	r6, [r4, #252]	@ 0xfc
1001678a:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
1001678e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10016792:	f7ff bb49 	b.w	10015e28 <__retarget_lock_init_recursive>
10016796:	bf00      	nop
10016798:	2000149c 	.word	0x2000149c
1001679c:	200015d4 	.word	0x200015d4
100167a0:	10016675 	.word	0x10016675
100167a4:	10013c1d 	.word	0x10013c1d
100167a8:	10013c45 	.word	0x10013c45
100167ac:	10013c85 	.word	0x10013c85
100167b0:	10013ca9 	.word	0x10013ca9
100167b4:	00010009 	.word	0x00010009
100167b8:	00020012 	.word	0x00020012

100167bc <__sinit>:
100167bc:	b510      	push	{r4, lr}
100167be:	4604      	mov	r4, r0
100167c0:	480a      	ldr	r0, [pc, #40]	@ (100167ec <__sinit+0x30>)
100167c2:	f7ff fb35 	bl	10015e30 <__retarget_lock_acquire_recursive>
100167c6:	6b63      	ldr	r3, [r4, #52]	@ 0x34
100167c8:	b923      	cbnz	r3, 100167d4 <__sinit+0x18>
100167ca:	4b09      	ldr	r3, [pc, #36]	@ (100167f0 <__sinit+0x34>)
100167cc:	4a09      	ldr	r2, [pc, #36]	@ (100167f4 <__sinit+0x38>)
100167ce:	681b      	ldr	r3, [r3, #0]
100167d0:	6362      	str	r2, [r4, #52]	@ 0x34
100167d2:	b123      	cbz	r3, 100167de <__sinit+0x22>
100167d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100167d8:	4804      	ldr	r0, [pc, #16]	@ (100167ec <__sinit+0x30>)
100167da:	f7ff bb2b 	b.w	10015e34 <__retarget_lock_release_recursive>
100167de:	f7ff ff75 	bl	100166cc <global_stdio_init.part.0>
100167e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100167e6:	4801      	ldr	r0, [pc, #4]	@ (100167ec <__sinit+0x30>)
100167e8:	f7ff bb24 	b.w	10015e34 <__retarget_lock_release_recursive>
100167ec:	20001494 	.word	0x20001494
100167f0:	200015d4 	.word	0x200015d4
100167f4:	1001668d 	.word	0x1001668d

100167f8 <__sfp_lock_acquire>:
100167f8:	4801      	ldr	r0, [pc, #4]	@ (10016800 <__sfp_lock_acquire+0x8>)
100167fa:	f7ff bb19 	b.w	10015e30 <__retarget_lock_acquire_recursive>
100167fe:	bf00      	nop
10016800:	20001494 	.word	0x20001494

10016804 <__sfp_lock_release>:
10016804:	4801      	ldr	r0, [pc, #4]	@ (1001680c <__sfp_lock_release+0x8>)
10016806:	f7ff bb15 	b.w	10015e34 <__retarget_lock_release_recursive>
1001680a:	bf00      	nop
1001680c:	20001494 	.word	0x20001494

10016810 <memcpy>:
10016810:	4684      	mov	ip, r0
10016812:	ea41 0300 	orr.w	r3, r1, r0
10016816:	f013 0303 	ands.w	r3, r3, #3
1001681a:	d16d      	bne.n	100168f8 <memcpy+0xe8>
1001681c:	3a40      	subs	r2, #64	@ 0x40
1001681e:	d341      	bcc.n	100168a4 <memcpy+0x94>
10016820:	f851 3b04 	ldr.w	r3, [r1], #4
10016824:	f840 3b04 	str.w	r3, [r0], #4
10016828:	f851 3b04 	ldr.w	r3, [r1], #4
1001682c:	f840 3b04 	str.w	r3, [r0], #4
10016830:	f851 3b04 	ldr.w	r3, [r1], #4
10016834:	f840 3b04 	str.w	r3, [r0], #4
10016838:	f851 3b04 	ldr.w	r3, [r1], #4
1001683c:	f840 3b04 	str.w	r3, [r0], #4
10016840:	f851 3b04 	ldr.w	r3, [r1], #4
10016844:	f840 3b04 	str.w	r3, [r0], #4
10016848:	f851 3b04 	ldr.w	r3, [r1], #4
1001684c:	f840 3b04 	str.w	r3, [r0], #4
10016850:	f851 3b04 	ldr.w	r3, [r1], #4
10016854:	f840 3b04 	str.w	r3, [r0], #4
10016858:	f851 3b04 	ldr.w	r3, [r1], #4
1001685c:	f840 3b04 	str.w	r3, [r0], #4
10016860:	f851 3b04 	ldr.w	r3, [r1], #4
10016864:	f840 3b04 	str.w	r3, [r0], #4
10016868:	f851 3b04 	ldr.w	r3, [r1], #4
1001686c:	f840 3b04 	str.w	r3, [r0], #4
10016870:	f851 3b04 	ldr.w	r3, [r1], #4
10016874:	f840 3b04 	str.w	r3, [r0], #4
10016878:	f851 3b04 	ldr.w	r3, [r1], #4
1001687c:	f840 3b04 	str.w	r3, [r0], #4
10016880:	f851 3b04 	ldr.w	r3, [r1], #4
10016884:	f840 3b04 	str.w	r3, [r0], #4
10016888:	f851 3b04 	ldr.w	r3, [r1], #4
1001688c:	f840 3b04 	str.w	r3, [r0], #4
10016890:	f851 3b04 	ldr.w	r3, [r1], #4
10016894:	f840 3b04 	str.w	r3, [r0], #4
10016898:	f851 3b04 	ldr.w	r3, [r1], #4
1001689c:	f840 3b04 	str.w	r3, [r0], #4
100168a0:	3a40      	subs	r2, #64	@ 0x40
100168a2:	d2bd      	bcs.n	10016820 <memcpy+0x10>
100168a4:	3230      	adds	r2, #48	@ 0x30
100168a6:	d311      	bcc.n	100168cc <memcpy+0xbc>
100168a8:	f851 3b04 	ldr.w	r3, [r1], #4
100168ac:	f840 3b04 	str.w	r3, [r0], #4
100168b0:	f851 3b04 	ldr.w	r3, [r1], #4
100168b4:	f840 3b04 	str.w	r3, [r0], #4
100168b8:	f851 3b04 	ldr.w	r3, [r1], #4
100168bc:	f840 3b04 	str.w	r3, [r0], #4
100168c0:	f851 3b04 	ldr.w	r3, [r1], #4
100168c4:	f840 3b04 	str.w	r3, [r0], #4
100168c8:	3a10      	subs	r2, #16
100168ca:	d2ed      	bcs.n	100168a8 <memcpy+0x98>
100168cc:	320c      	adds	r2, #12
100168ce:	d305      	bcc.n	100168dc <memcpy+0xcc>
100168d0:	f851 3b04 	ldr.w	r3, [r1], #4
100168d4:	f840 3b04 	str.w	r3, [r0], #4
100168d8:	3a04      	subs	r2, #4
100168da:	d2f9      	bcs.n	100168d0 <memcpy+0xc0>
100168dc:	3204      	adds	r2, #4
100168de:	d008      	beq.n	100168f2 <memcpy+0xe2>
100168e0:	07d2      	lsls	r2, r2, #31
100168e2:	bf1c      	itt	ne
100168e4:	f811 3b01 	ldrbne.w	r3, [r1], #1
100168e8:	f800 3b01 	strbne.w	r3, [r0], #1
100168ec:	d301      	bcc.n	100168f2 <memcpy+0xe2>
100168ee:	880b      	ldrh	r3, [r1, #0]
100168f0:	8003      	strh	r3, [r0, #0]
100168f2:	4660      	mov	r0, ip
100168f4:	4770      	bx	lr
100168f6:	bf00      	nop
100168f8:	2a08      	cmp	r2, #8
100168fa:	d313      	bcc.n	10016924 <memcpy+0x114>
100168fc:	078b      	lsls	r3, r1, #30
100168fe:	d08d      	beq.n	1001681c <memcpy+0xc>
10016900:	f010 0303 	ands.w	r3, r0, #3
10016904:	d08a      	beq.n	1001681c <memcpy+0xc>
10016906:	f1c3 0304 	rsb	r3, r3, #4
1001690a:	1ad2      	subs	r2, r2, r3
1001690c:	07db      	lsls	r3, r3, #31
1001690e:	bf1c      	itt	ne
10016910:	f811 3b01 	ldrbne.w	r3, [r1], #1
10016914:	f800 3b01 	strbne.w	r3, [r0], #1
10016918:	d380      	bcc.n	1001681c <memcpy+0xc>
1001691a:	f831 3b02 	ldrh.w	r3, [r1], #2
1001691e:	f820 3b02 	strh.w	r3, [r0], #2
10016922:	e77b      	b.n	1001681c <memcpy+0xc>
10016924:	3a04      	subs	r2, #4
10016926:	d3d9      	bcc.n	100168dc <memcpy+0xcc>
10016928:	3a01      	subs	r2, #1
1001692a:	f811 3b01 	ldrb.w	r3, [r1], #1
1001692e:	f800 3b01 	strb.w	r3, [r0], #1
10016932:	d2f9      	bcs.n	10016928 <memcpy+0x118>
10016934:	780b      	ldrb	r3, [r1, #0]
10016936:	7003      	strb	r3, [r0, #0]
10016938:	784b      	ldrb	r3, [r1, #1]
1001693a:	7043      	strb	r3, [r0, #1]
1001693c:	788b      	ldrb	r3, [r1, #2]
1001693e:	7083      	strb	r3, [r0, #2]
10016940:	4660      	mov	r0, ip
10016942:	4770      	bx	lr

10016944 <__srget_r>:
10016944:	b538      	push	{r3, r4, r5, lr}
10016946:	460c      	mov	r4, r1
10016948:	4605      	mov	r5, r0
1001694a:	b108      	cbz	r0, 10016950 <__srget_r+0xc>
1001694c:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001694e:	b163      	cbz	r3, 1001696a <__srget_r+0x26>
10016950:	4621      	mov	r1, r4
10016952:	4628      	mov	r0, r5
10016954:	f7ff fce2 	bl	1001631c <__srefill_r>
10016958:	b950      	cbnz	r0, 10016970 <__srget_r+0x2c>
1001695a:	e9d4 2300 	ldrd	r2, r3, [r4]
1001695e:	1c51      	adds	r1, r2, #1
10016960:	3b01      	subs	r3, #1
10016962:	e9c4 1300 	strd	r1, r3, [r4]
10016966:	7810      	ldrb	r0, [r2, #0]
10016968:	bd38      	pop	{r3, r4, r5, pc}
1001696a:	f7ff ff27 	bl	100167bc <__sinit>
1001696e:	e7ef      	b.n	10016950 <__srget_r+0xc>
10016970:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10016974:	bd38      	pop	{r3, r4, r5, pc}
10016976:	bf00      	nop
	...

10016980 <strlen>:
10016980:	b430      	push	{r4, r5}
10016982:	f890 f000 	pld	[r0]
10016986:	f020 0107 	bic.w	r1, r0, #7
1001698a:	f06f 0c00 	mvn.w	ip, #0
1001698e:	f010 0407 	ands.w	r4, r0, #7
10016992:	f891 f020 	pld	[r1, #32]
10016996:	f040 8048 	bne.w	10016a2a <strlen+0xaa>
1001699a:	f04f 0400 	mov.w	r4, #0
1001699e:	f06f 0007 	mvn.w	r0, #7
100169a2:	e9d1 2300 	ldrd	r2, r3, [r1]
100169a6:	f891 f040 	pld	[r1, #64]	@ 0x40
100169aa:	f100 0008 	add.w	r0, r0, #8
100169ae:	fa82 f24c 	uadd8	r2, r2, ip
100169b2:	faa4 f28c 	sel	r2, r4, ip
100169b6:	fa83 f34c 	uadd8	r3, r3, ip
100169ba:	faa2 f38c 	sel	r3, r2, ip
100169be:	bb4b      	cbnz	r3, 10016a14 <strlen+0x94>
100169c0:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
100169c4:	fa82 f24c 	uadd8	r2, r2, ip
100169c8:	f100 0008 	add.w	r0, r0, #8
100169cc:	faa4 f28c 	sel	r2, r4, ip
100169d0:	fa83 f34c 	uadd8	r3, r3, ip
100169d4:	faa2 f38c 	sel	r3, r2, ip
100169d8:	b9e3      	cbnz	r3, 10016a14 <strlen+0x94>
100169da:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
100169de:	fa82 f24c 	uadd8	r2, r2, ip
100169e2:	f100 0008 	add.w	r0, r0, #8
100169e6:	faa4 f28c 	sel	r2, r4, ip
100169ea:	fa83 f34c 	uadd8	r3, r3, ip
100169ee:	faa2 f38c 	sel	r3, r2, ip
100169f2:	b97b      	cbnz	r3, 10016a14 <strlen+0x94>
100169f4:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
100169f8:	f101 0120 	add.w	r1, r1, #32
100169fc:	fa82 f24c 	uadd8	r2, r2, ip
10016a00:	f100 0008 	add.w	r0, r0, #8
10016a04:	faa4 f28c 	sel	r2, r4, ip
10016a08:	fa83 f34c 	uadd8	r3, r3, ip
10016a0c:	faa2 f38c 	sel	r3, r2, ip
10016a10:	2b00      	cmp	r3, #0
10016a12:	d0c6      	beq.n	100169a2 <strlen+0x22>
10016a14:	2a00      	cmp	r2, #0
10016a16:	bf04      	itt	eq
10016a18:	3004      	addeq	r0, #4
10016a1a:	461a      	moveq	r2, r3
10016a1c:	ba12      	rev	r2, r2
10016a1e:	fab2 f282 	clz	r2, r2
10016a22:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
10016a26:	bc30      	pop	{r4, r5}
10016a28:	4770      	bx	lr
10016a2a:	e9d1 2300 	ldrd	r2, r3, [r1]
10016a2e:	f004 0503 	and.w	r5, r4, #3
10016a32:	f1c4 0000 	rsb	r0, r4, #0
10016a36:	ea4f 05c5 	mov.w	r5, r5, lsl #3
10016a3a:	f014 0f04 	tst.w	r4, #4
10016a3e:	f891 f040 	pld	[r1, #64]	@ 0x40
10016a42:	fa0c f505 	lsl.w	r5, ip, r5
10016a46:	ea62 0205 	orn	r2, r2, r5
10016a4a:	bf1c      	itt	ne
10016a4c:	ea63 0305 	ornne	r3, r3, r5
10016a50:	4662      	movne	r2, ip
10016a52:	f04f 0400 	mov.w	r4, #0
10016a56:	e7aa      	b.n	100169ae <strlen+0x2e>

10016a58 <__sccl>:
10016a58:	b570      	push	{r4, r5, r6, lr}
10016a5a:	780c      	ldrb	r4, [r1, #0]
10016a5c:	2c5e      	cmp	r4, #94	@ 0x5e
10016a5e:	4686      	mov	lr, r0
10016a60:	d026      	beq.n	10016ab0 <__sccl+0x58>
10016a62:	2300      	movs	r3, #0
10016a64:	1c48      	adds	r0, r1, #1
10016a66:	469c      	mov	ip, r3
10016a68:	2200      	movs	r2, #0
10016a6a:	f363 0207 	bfi	r2, r3, #0, #8
10016a6e:	f363 220f 	bfi	r2, r3, #8, #8
10016a72:	f363 4217 	bfi	r2, r3, #16, #8
10016a76:	f363 621f 	bfi	r2, r3, #24, #8
10016a7a:	f50e 7180 	add.w	r1, lr, #256	@ 0x100
10016a7e:	4673      	mov	r3, lr
10016a80:	f843 2b04 	str.w	r2, [r3], #4
10016a84:	428b      	cmp	r3, r1
10016a86:	d1fb      	bne.n	10016a80 <__sccl+0x28>
10016a88:	b184      	cbz	r4, 10016aac <__sccl+0x54>
10016a8a:	f08c 0101 	eor.w	r1, ip, #1
10016a8e:	f80e 1004 	strb.w	r1, [lr, r4]
10016a92:	1c45      	adds	r5, r0, #1
10016a94:	f815 3c01 	ldrb.w	r3, [r5, #-1]
10016a98:	2b2d      	cmp	r3, #45	@ 0x2d
10016a9a:	d00e      	beq.n	10016aba <__sccl+0x62>
10016a9c:	2b5d      	cmp	r3, #93	@ 0x5d
10016a9e:	d003      	beq.n	10016aa8 <__sccl+0x50>
10016aa0:	b11b      	cbz	r3, 10016aaa <__sccl+0x52>
10016aa2:	461c      	mov	r4, r3
10016aa4:	4628      	mov	r0, r5
10016aa6:	e7f2      	b.n	10016a8e <__sccl+0x36>
10016aa8:	4628      	mov	r0, r5
10016aaa:	bd70      	pop	{r4, r5, r6, pc}
10016aac:	3801      	subs	r0, #1
10016aae:	bd70      	pop	{r4, r5, r6, pc}
10016ab0:	2301      	movs	r3, #1
10016ab2:	784c      	ldrb	r4, [r1, #1]
10016ab4:	1c88      	adds	r0, r1, #2
10016ab6:	469c      	mov	ip, r3
10016ab8:	e7d6      	b.n	10016a68 <__sccl+0x10>
10016aba:	f890 c001 	ldrb.w	ip, [r0, #1]
10016abe:	f1bc 0f5d 	cmp.w	ip, #93	@ 0x5d
10016ac2:	d0ee      	beq.n	10016aa2 <__sccl+0x4a>
10016ac4:	4564      	cmp	r4, ip
10016ac6:	dcec      	bgt.n	10016aa2 <__sccl+0x4a>
10016ac8:	1c66      	adds	r6, r4, #1
10016aca:	3002      	adds	r0, #2
10016acc:	eb0e 0206 	add.w	r2, lr, r6
10016ad0:	f802 1b01 	strb.w	r1, [r2], #1
10016ad4:	eba2 030e 	sub.w	r3, r2, lr
10016ad8:	3b01      	subs	r3, #1
10016ada:	459c      	cmp	ip, r3
10016adc:	dcf8      	bgt.n	10016ad0 <__sccl+0x78>
10016ade:	ebac 0304 	sub.w	r3, ip, r4
10016ae2:	3b01      	subs	r3, #1
10016ae4:	4564      	cmp	r4, ip
10016ae6:	bfa8      	it	ge
10016ae8:	2300      	movge	r3, #0
10016aea:	3502      	adds	r5, #2
10016aec:	18f4      	adds	r4, r6, r3
10016aee:	e7d1      	b.n	10016a94 <__sccl+0x3c>

10016af0 <nanf>:
10016af0:	4800      	ldr	r0, [pc, #0]	@ (10016af4 <nanf+0x4>)
10016af2:	4770      	bx	lr
10016af4:	7fc00000 	.word	0x7fc00000

10016af8 <_realloc_r>:
10016af8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10016afc:	4616      	mov	r6, r2
10016afe:	2900      	cmp	r1, #0
10016b00:	f000 8096 	beq.w	10016c30 <_realloc_r+0x138>
10016b04:	460c      	mov	r4, r1
10016b06:	4680      	mov	r8, r0
10016b08:	f106 050b 	add.w	r5, r6, #11
10016b0c:	f7ff fc8a 	bl	10016424 <__malloc_lock>
10016b10:	f854 1c04 	ldr.w	r1, [r4, #-4]
10016b14:	2d16      	cmp	r5, #22
10016b16:	f1a4 0908 	sub.w	r9, r4, #8
10016b1a:	f021 0703 	bic.w	r7, r1, #3
10016b1e:	d858      	bhi.n	10016bd2 <_realloc_r+0xda>
10016b20:	2510      	movs	r5, #16
10016b22:	42ae      	cmp	r6, r5
10016b24:	d858      	bhi.n	10016bd8 <_realloc_r+0xe0>
10016b26:	42af      	cmp	r7, r5
10016b28:	da60      	bge.n	10016bec <_realloc_r+0xf4>
10016b2a:	4bbe      	ldr	r3, [pc, #760]	@ (10016e24 <_realloc_r+0x32c>)
10016b2c:	689a      	ldr	r2, [r3, #8]
10016b2e:	eb09 0c07 	add.w	ip, r9, r7
10016b32:	4562      	cmp	r2, ip
10016b34:	f8dc 0004 	ldr.w	r0, [ip, #4]
10016b38:	f000 8090 	beq.w	10016c5c <_realloc_r+0x164>
10016b3c:	f020 0301 	bic.w	r3, r0, #1
10016b40:	4463      	add	r3, ip
10016b42:	685b      	ldr	r3, [r3, #4]
10016b44:	07da      	lsls	r2, r3, #31
10016b46:	d468      	bmi.n	10016c1a <_realloc_r+0x122>
10016b48:	f020 0003 	bic.w	r0, r0, #3
10016b4c:	183b      	adds	r3, r7, r0
10016b4e:	429d      	cmp	r5, r3
10016b50:	dd47      	ble.n	10016be2 <_realloc_r+0xea>
10016b52:	07cb      	lsls	r3, r1, #31
10016b54:	d412      	bmi.n	10016b7c <_realloc_r+0x84>
10016b56:	f854 3c08 	ldr.w	r3, [r4, #-8]
10016b5a:	eba9 0b03 	sub.w	fp, r9, r3
10016b5e:	f8db 3004 	ldr.w	r3, [fp, #4]
10016b62:	f023 0203 	bic.w	r2, r3, #3
10016b66:	4410      	add	r0, r2
10016b68:	eb00 0a07 	add.w	sl, r0, r7
10016b6c:	4555      	cmp	r5, sl
10016b6e:	f340 80f6 	ble.w	10016d5e <_realloc_r+0x266>
10016b72:	eb07 0a02 	add.w	sl, r7, r2
10016b76:	4555      	cmp	r5, sl
10016b78:	f340 80cc 	ble.w	10016d14 <_realloc_r+0x21c>
10016b7c:	4631      	mov	r1, r6
10016b7e:	4640      	mov	r0, r8
10016b80:	f7fe fd56 	bl	10015630 <_malloc_r>
10016b84:	4606      	mov	r6, r0
10016b86:	2800      	cmp	r0, #0
10016b88:	f000 8120 	beq.w	10016dcc <_realloc_r+0x2d4>
10016b8c:	f854 3c04 	ldr.w	r3, [r4, #-4]
10016b90:	f023 0301 	bic.w	r3, r3, #1
10016b94:	444b      	add	r3, r9
10016b96:	f1a0 0208 	sub.w	r2, r0, #8
10016b9a:	4293      	cmp	r3, r2
10016b9c:	f000 80b4 	beq.w	10016d08 <_realloc_r+0x210>
10016ba0:	1f3a      	subs	r2, r7, #4
10016ba2:	2a24      	cmp	r2, #36	@ 0x24
10016ba4:	f200 80d7 	bhi.w	10016d56 <_realloc_r+0x25e>
10016ba8:	2a13      	cmp	r2, #19
10016baa:	f200 80a2 	bhi.w	10016cf2 <_realloc_r+0x1fa>
10016bae:	4603      	mov	r3, r0
10016bb0:	4622      	mov	r2, r4
10016bb2:	6811      	ldr	r1, [r2, #0]
10016bb4:	6019      	str	r1, [r3, #0]
10016bb6:	6851      	ldr	r1, [r2, #4]
10016bb8:	6059      	str	r1, [r3, #4]
10016bba:	6892      	ldr	r2, [r2, #8]
10016bbc:	609a      	str	r2, [r3, #8]
10016bbe:	4621      	mov	r1, r4
10016bc0:	4640      	mov	r0, r8
10016bc2:	f001 f981 	bl	10017ec8 <_free_r>
10016bc6:	4640      	mov	r0, r8
10016bc8:	f7ff fc32 	bl	10016430 <__malloc_unlock>
10016bcc:	4630      	mov	r0, r6
10016bce:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10016bd2:	f035 0507 	bics.w	r5, r5, #7
10016bd6:	d5a4      	bpl.n	10016b22 <_realloc_r+0x2a>
10016bd8:	230c      	movs	r3, #12
10016bda:	f8c8 3000 	str.w	r3, [r8]
10016bde:	2600      	movs	r6, #0
10016be0:	e018      	b.n	10016c14 <_realloc_r+0x11c>
10016be2:	461f      	mov	r7, r3
10016be4:	e9dc 2302 	ldrd	r2, r3, [ip, #8]
10016be8:	60d3      	str	r3, [r2, #12]
10016bea:	609a      	str	r2, [r3, #8]
10016bec:	f8d9 3004 	ldr.w	r3, [r9, #4]
10016bf0:	1b7a      	subs	r2, r7, r5
10016bf2:	2a0f      	cmp	r2, #15
10016bf4:	f003 0301 	and.w	r3, r3, #1
10016bf8:	eb09 0007 	add.w	r0, r9, r7
10016bfc:	d81d      	bhi.n	10016c3a <_realloc_r+0x142>
10016bfe:	433b      	orrs	r3, r7
10016c00:	f8c9 3004 	str.w	r3, [r9, #4]
10016c04:	6843      	ldr	r3, [r0, #4]
10016c06:	f043 0301 	orr.w	r3, r3, #1
10016c0a:	6043      	str	r3, [r0, #4]
10016c0c:	4640      	mov	r0, r8
10016c0e:	f7ff fc0f 	bl	10016430 <__malloc_unlock>
10016c12:	4626      	mov	r6, r4
10016c14:	4630      	mov	r0, r6
10016c16:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10016c1a:	07c9      	lsls	r1, r1, #31
10016c1c:	d4ae      	bmi.n	10016b7c <_realloc_r+0x84>
10016c1e:	f854 3c08 	ldr.w	r3, [r4, #-8]
10016c22:	eba9 0b03 	sub.w	fp, r9, r3
10016c26:	f8db 3004 	ldr.w	r3, [fp, #4]
10016c2a:	f023 0203 	bic.w	r2, r3, #3
10016c2e:	e7a0      	b.n	10016b72 <_realloc_r+0x7a>
10016c30:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10016c34:	4611      	mov	r1, r2
10016c36:	f7fe bcfb 	b.w	10015630 <_malloc_r>
10016c3a:	eb09 0105 	add.w	r1, r9, r5
10016c3e:	432b      	orrs	r3, r5
10016c40:	f042 0201 	orr.w	r2, r2, #1
10016c44:	f8c9 3004 	str.w	r3, [r9, #4]
10016c48:	604a      	str	r2, [r1, #4]
10016c4a:	6843      	ldr	r3, [r0, #4]
10016c4c:	f043 0301 	orr.w	r3, r3, #1
10016c50:	6043      	str	r3, [r0, #4]
10016c52:	3108      	adds	r1, #8
10016c54:	4640      	mov	r0, r8
10016c56:	f001 f937 	bl	10017ec8 <_free_r>
10016c5a:	e7d7      	b.n	10016c0c <_realloc_r+0x114>
10016c5c:	f020 0003 	bic.w	r0, r0, #3
10016c60:	19c2      	adds	r2, r0, r7
10016c62:	f105 0c10 	add.w	ip, r5, #16
10016c66:	4562      	cmp	r2, ip
10016c68:	f280 8091 	bge.w	10016d8e <_realloc_r+0x296>
10016c6c:	07ca      	lsls	r2, r1, #31
10016c6e:	d485      	bmi.n	10016b7c <_realloc_r+0x84>
10016c70:	f854 2c08 	ldr.w	r2, [r4, #-8]
10016c74:	eba9 0b02 	sub.w	fp, r9, r2
10016c78:	f8db 2004 	ldr.w	r2, [fp, #4]
10016c7c:	f022 0203 	bic.w	r2, r2, #3
10016c80:	4410      	add	r0, r2
10016c82:	eb00 0a07 	add.w	sl, r0, r7
10016c86:	45d4      	cmp	ip, sl
10016c88:	f73f af73 	bgt.w	10016b72 <_realloc_r+0x7a>
10016c8c:	465e      	mov	r6, fp
10016c8e:	f8db 100c 	ldr.w	r1, [fp, #12]
10016c92:	f856 0f08 	ldr.w	r0, [r6, #8]!
10016c96:	1f3a      	subs	r2, r7, #4
10016c98:	2a24      	cmp	r2, #36	@ 0x24
10016c9a:	60c1      	str	r1, [r0, #12]
10016c9c:	6088      	str	r0, [r1, #8]
10016c9e:	f200 80ae 	bhi.w	10016dfe <_realloc_r+0x306>
10016ca2:	2a13      	cmp	r2, #19
10016ca4:	f240 80a9 	bls.w	10016dfa <_realloc_r+0x302>
10016ca8:	6821      	ldr	r1, [r4, #0]
10016caa:	f8cb 1008 	str.w	r1, [fp, #8]
10016cae:	6861      	ldr	r1, [r4, #4]
10016cb0:	f8cb 100c 	str.w	r1, [fp, #12]
10016cb4:	2a1b      	cmp	r2, #27
10016cb6:	f200 80a8 	bhi.w	10016e0a <_realloc_r+0x312>
10016cba:	3408      	adds	r4, #8
10016cbc:	f10b 0210 	add.w	r2, fp, #16
10016cc0:	6821      	ldr	r1, [r4, #0]
10016cc2:	6011      	str	r1, [r2, #0]
10016cc4:	6861      	ldr	r1, [r4, #4]
10016cc6:	6051      	str	r1, [r2, #4]
10016cc8:	68a1      	ldr	r1, [r4, #8]
10016cca:	6091      	str	r1, [r2, #8]
10016ccc:	eb0b 0105 	add.w	r1, fp, r5
10016cd0:	ebaa 0205 	sub.w	r2, sl, r5
10016cd4:	f042 0201 	orr.w	r2, r2, #1
10016cd8:	6099      	str	r1, [r3, #8]
10016cda:	604a      	str	r2, [r1, #4]
10016cdc:	f8db 3004 	ldr.w	r3, [fp, #4]
10016ce0:	f003 0301 	and.w	r3, r3, #1
10016ce4:	432b      	orrs	r3, r5
10016ce6:	4640      	mov	r0, r8
10016ce8:	f8cb 3004 	str.w	r3, [fp, #4]
10016cec:	f7ff fba0 	bl	10016430 <__malloc_unlock>
10016cf0:	e790      	b.n	10016c14 <_realloc_r+0x11c>
10016cf2:	6823      	ldr	r3, [r4, #0]
10016cf4:	6003      	str	r3, [r0, #0]
10016cf6:	6863      	ldr	r3, [r4, #4]
10016cf8:	6043      	str	r3, [r0, #4]
10016cfa:	2a1b      	cmp	r2, #27
10016cfc:	d83c      	bhi.n	10016d78 <_realloc_r+0x280>
10016cfe:	f104 0208 	add.w	r2, r4, #8
10016d02:	f100 0308 	add.w	r3, r0, #8
10016d06:	e754      	b.n	10016bb2 <_realloc_r+0xba>
10016d08:	f850 3c04 	ldr.w	r3, [r0, #-4]
10016d0c:	f023 0303 	bic.w	r3, r3, #3
10016d10:	441f      	add	r7, r3
10016d12:	e76b      	b.n	10016bec <_realloc_r+0xf4>
10016d14:	1f3a      	subs	r2, r7, #4
10016d16:	465e      	mov	r6, fp
10016d18:	f8db 300c 	ldr.w	r3, [fp, #12]
10016d1c:	f856 1f08 	ldr.w	r1, [r6, #8]!
10016d20:	2a24      	cmp	r2, #36	@ 0x24
10016d22:	60cb      	str	r3, [r1, #12]
10016d24:	6099      	str	r1, [r3, #8]
10016d26:	d822      	bhi.n	10016d6e <_realloc_r+0x276>
10016d28:	2a13      	cmp	r2, #19
10016d2a:	d91e      	bls.n	10016d6a <_realloc_r+0x272>
10016d2c:	6823      	ldr	r3, [r4, #0]
10016d2e:	f8cb 3008 	str.w	r3, [fp, #8]
10016d32:	6863      	ldr	r3, [r4, #4]
10016d34:	f8cb 300c 	str.w	r3, [fp, #12]
10016d38:	2a1b      	cmp	r2, #27
10016d3a:	d83b      	bhi.n	10016db4 <_realloc_r+0x2bc>
10016d3c:	3408      	adds	r4, #8
10016d3e:	f10b 0310 	add.w	r3, fp, #16
10016d42:	6822      	ldr	r2, [r4, #0]
10016d44:	601a      	str	r2, [r3, #0]
10016d46:	6862      	ldr	r2, [r4, #4]
10016d48:	605a      	str	r2, [r3, #4]
10016d4a:	68a2      	ldr	r2, [r4, #8]
10016d4c:	609a      	str	r2, [r3, #8]
10016d4e:	4634      	mov	r4, r6
10016d50:	4657      	mov	r7, sl
10016d52:	46d9      	mov	r9, fp
10016d54:	e74a      	b.n	10016bec <_realloc_r+0xf4>
10016d56:	4621      	mov	r1, r4
10016d58:	f7fe ff58 	bl	10015c0c <memmove>
10016d5c:	e72f      	b.n	10016bbe <_realloc_r+0xc6>
10016d5e:	e9dc 1302 	ldrd	r1, r3, [ip, #8]
10016d62:	1f3a      	subs	r2, r7, #4
10016d64:	60cb      	str	r3, [r1, #12]
10016d66:	6099      	str	r1, [r3, #8]
10016d68:	e7d5      	b.n	10016d16 <_realloc_r+0x21e>
10016d6a:	4633      	mov	r3, r6
10016d6c:	e7e9      	b.n	10016d42 <_realloc_r+0x24a>
10016d6e:	4621      	mov	r1, r4
10016d70:	4630      	mov	r0, r6
10016d72:	f7fe ff4b 	bl	10015c0c <memmove>
10016d76:	e7ea      	b.n	10016d4e <_realloc_r+0x256>
10016d78:	68a3      	ldr	r3, [r4, #8]
10016d7a:	6083      	str	r3, [r0, #8]
10016d7c:	68e3      	ldr	r3, [r4, #12]
10016d7e:	60c3      	str	r3, [r0, #12]
10016d80:	2a24      	cmp	r2, #36	@ 0x24
10016d82:	d027      	beq.n	10016dd4 <_realloc_r+0x2dc>
10016d84:	f104 0210 	add.w	r2, r4, #16
10016d88:	f100 0310 	add.w	r3, r0, #16
10016d8c:	e711      	b.n	10016bb2 <_realloc_r+0xba>
10016d8e:	eb09 0105 	add.w	r1, r9, r5
10016d92:	6099      	str	r1, [r3, #8]
10016d94:	1b53      	subs	r3, r2, r5
10016d96:	f043 0301 	orr.w	r3, r3, #1
10016d9a:	604b      	str	r3, [r1, #4]
10016d9c:	f854 3c04 	ldr.w	r3, [r4, #-4]
10016da0:	f003 0301 	and.w	r3, r3, #1
10016da4:	432b      	orrs	r3, r5
10016da6:	4640      	mov	r0, r8
10016da8:	f844 3c04 	str.w	r3, [r4, #-4]
10016dac:	f7ff fb40 	bl	10016430 <__malloc_unlock>
10016db0:	4626      	mov	r6, r4
10016db2:	e72f      	b.n	10016c14 <_realloc_r+0x11c>
10016db4:	68a3      	ldr	r3, [r4, #8]
10016db6:	f8cb 3010 	str.w	r3, [fp, #16]
10016dba:	68e3      	ldr	r3, [r4, #12]
10016dbc:	f8cb 3014 	str.w	r3, [fp, #20]
10016dc0:	2a24      	cmp	r2, #36	@ 0x24
10016dc2:	d010      	beq.n	10016de6 <_realloc_r+0x2ee>
10016dc4:	3410      	adds	r4, #16
10016dc6:	f10b 0318 	add.w	r3, fp, #24
10016dca:	e7ba      	b.n	10016d42 <_realloc_r+0x24a>
10016dcc:	4640      	mov	r0, r8
10016dce:	f7ff fb2f 	bl	10016430 <__malloc_unlock>
10016dd2:	e704      	b.n	10016bde <_realloc_r+0xe6>
10016dd4:	6923      	ldr	r3, [r4, #16]
10016dd6:	6103      	str	r3, [r0, #16]
10016dd8:	6961      	ldr	r1, [r4, #20]
10016dda:	6141      	str	r1, [r0, #20]
10016ddc:	f104 0218 	add.w	r2, r4, #24
10016de0:	f100 0318 	add.w	r3, r0, #24
10016de4:	e6e5      	b.n	10016bb2 <_realloc_r+0xba>
10016de6:	6923      	ldr	r3, [r4, #16]
10016de8:	f8cb 3018 	str.w	r3, [fp, #24]
10016dec:	6963      	ldr	r3, [r4, #20]
10016dee:	f8cb 301c 	str.w	r3, [fp, #28]
10016df2:	3418      	adds	r4, #24
10016df4:	f10b 0320 	add.w	r3, fp, #32
10016df8:	e7a3      	b.n	10016d42 <_realloc_r+0x24a>
10016dfa:	4632      	mov	r2, r6
10016dfc:	e760      	b.n	10016cc0 <_realloc_r+0x1c8>
10016dfe:	4621      	mov	r1, r4
10016e00:	4630      	mov	r0, r6
10016e02:	f7fe ff03 	bl	10015c0c <memmove>
10016e06:	4b07      	ldr	r3, [pc, #28]	@ (10016e24 <_realloc_r+0x32c>)
10016e08:	e760      	b.n	10016ccc <_realloc_r+0x1d4>
10016e0a:	68a1      	ldr	r1, [r4, #8]
10016e0c:	f8cb 1010 	str.w	r1, [fp, #16]
10016e10:	68e1      	ldr	r1, [r4, #12]
10016e12:	f8cb 1014 	str.w	r1, [fp, #20]
10016e16:	2a24      	cmp	r2, #36	@ 0x24
10016e18:	d006      	beq.n	10016e28 <_realloc_r+0x330>
10016e1a:	3410      	adds	r4, #16
10016e1c:	f10b 0218 	add.w	r2, fp, #24
10016e20:	e74e      	b.n	10016cc0 <_realloc_r+0x1c8>
10016e22:	bf00      	nop
10016e24:	20000018 	.word	0x20000018
10016e28:	6922      	ldr	r2, [r4, #16]
10016e2a:	f8cb 2018 	str.w	r2, [fp, #24]
10016e2e:	6962      	ldr	r2, [r4, #20]
10016e30:	f8cb 201c 	str.w	r2, [fp, #28]
10016e34:	3418      	adds	r4, #24
10016e36:	f10b 0220 	add.w	r2, fp, #32
10016e3a:	e741      	b.n	10016cc0 <_realloc_r+0x1c8>
10016e3c:	0000      	movs	r0, r0
	...

10016e40 <_strtod_l>:
10016e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10016e44:	b09f      	sub	sp, #124	@ 0x7c
10016e46:	460e      	mov	r6, r1
10016e48:	2100      	movs	r1, #0
10016e4a:	9207      	str	r2, [sp, #28]
10016e4c:	911a      	str	r1, [sp, #104]	@ 0x68
10016e4e:	2200      	movs	r2, #0
10016e50:	2100      	movs	r1, #0
10016e52:	e9cd 1204 	strd	r1, r2, [sp, #16]
10016e56:	4683      	mov	fp, r0
10016e58:	4631      	mov	r1, r6
10016e5a:	9119      	str	r1, [sp, #100]	@ 0x64
10016e5c:	4688      	mov	r8, r1
10016e5e:	f811 2b01 	ldrb.w	r2, [r1], #1
10016e62:	2a2d      	cmp	r2, #45	@ 0x2d
10016e64:	d85e      	bhi.n	10016f24 <_strtod_l+0xe4>
10016e66:	a001      	add	r0, pc, #4	@ (adr r0, 10016e6c <_strtod_l+0x2c>)
10016e68:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
10016e6c:	1001703d 	.word	0x1001703d
10016e70:	10016f25 	.word	0x10016f25
10016e74:	10016f25 	.word	0x10016f25
10016e78:	10016f25 	.word	0x10016f25
10016e7c:	10016f25 	.word	0x10016f25
10016e80:	10016f25 	.word	0x10016f25
10016e84:	10016f25 	.word	0x10016f25
10016e88:	10016f25 	.word	0x10016f25
10016e8c:	10016f25 	.word	0x10016f25
10016e90:	10016e5b 	.word	0x10016e5b
10016e94:	10016e5b 	.word	0x10016e5b
10016e98:	10016e5b 	.word	0x10016e5b
10016e9c:	10016e5b 	.word	0x10016e5b
10016ea0:	10016e5b 	.word	0x10016e5b
10016ea4:	10016f25 	.word	0x10016f25
10016ea8:	10016f25 	.word	0x10016f25
10016eac:	10016f25 	.word	0x10016f25
10016eb0:	10016f25 	.word	0x10016f25
10016eb4:	10016f25 	.word	0x10016f25
10016eb8:	10016f25 	.word	0x10016f25
10016ebc:	10016f25 	.word	0x10016f25
10016ec0:	10016f25 	.word	0x10016f25
10016ec4:	10016f25 	.word	0x10016f25
10016ec8:	10016f25 	.word	0x10016f25
10016ecc:	10016f25 	.word	0x10016f25
10016ed0:	10016f25 	.word	0x10016f25
10016ed4:	10016f25 	.word	0x10016f25
10016ed8:	10016f25 	.word	0x10016f25
10016edc:	10016f25 	.word	0x10016f25
10016ee0:	10016f25 	.word	0x10016f25
10016ee4:	10016f25 	.word	0x10016f25
10016ee8:	10016f25 	.word	0x10016f25
10016eec:	10016e5b 	.word	0x10016e5b
10016ef0:	10016f25 	.word	0x10016f25
10016ef4:	10016f25 	.word	0x10016f25
10016ef8:	10016f25 	.word	0x10016f25
10016efc:	10016f25 	.word	0x10016f25
10016f00:	10016f25 	.word	0x10016f25
10016f04:	10016f25 	.word	0x10016f25
10016f08:	10016f25 	.word	0x10016f25
10016f0c:	10016f25 	.word	0x10016f25
10016f10:	10016f25 	.word	0x10016f25
10016f14:	10016f25 	.word	0x10016f25
10016f18:	1001763b 	.word	0x1001763b
10016f1c:	10016f25 	.word	0x10016f25
10016f20:	10017653 	.word	0x10017653
10016f24:	2100      	movs	r1, #0
10016f26:	9108      	str	r1, [sp, #32]
10016f28:	2a30      	cmp	r2, #48	@ 0x30
10016f2a:	f000 8093 	beq.w	10017054 <_strtod_l+0x214>
10016f2e:	2300      	movs	r3, #0
10016f30:	9309      	str	r3, [sp, #36]	@ 0x24
10016f32:	2a2f      	cmp	r2, #47	@ 0x2f
10016f34:	4617      	mov	r7, r2
10016f36:	f240 84ee 	bls.w	10017916 <_strtod_l+0xad6>
10016f3a:	f04f 0900 	mov.w	r9, #0
10016f3e:	4640      	mov	r0, r8
10016f40:	464d      	mov	r5, r9
10016f42:	464c      	mov	r4, r9
10016f44:	e013      	b.n	10016f6e <_strtod_l+0x12e>
10016f46:	3001      	adds	r0, #1
10016f48:	2c08      	cmp	r4, #8
10016f4a:	9019      	str	r0, [sp, #100]	@ 0x64
10016f4c:	bfc8      	it	gt
10016f4e:	eb09 0989 	addgt.w	r9, r9, r9, lsl #2
10016f52:	7807      	ldrb	r7, [r0, #0]
10016f54:	bfc6      	itte	gt
10016f56:	eb02 0249 	addgt.w	r2, r2, r9, lsl #1
10016f5a:	f1a2 0930 	subgt.w	r9, r2, #48	@ 0x30
10016f5e:	f1a3 0530 	suble.w	r5, r3, #48	@ 0x30
10016f62:	2f2f      	cmp	r7, #47	@ 0x2f
10016f64:	f104 0401 	add.w	r4, r4, #1
10016f68:	463a      	mov	r2, r7
10016f6a:	f340 80b7 	ble.w	100170dc <_strtod_l+0x29c>
10016f6e:	eb05 0385 	add.w	r3, r5, r5, lsl #2
10016f72:	2f39      	cmp	r7, #57	@ 0x39
10016f74:	eb02 0343 	add.w	r3, r2, r3, lsl #1
10016f78:	dde5      	ble.n	10016f46 <_strtod_l+0x106>
10016f7a:	4974      	ldr	r1, [pc, #464]	@ (1001714c <_strtod_l+0x30c>)
10016f7c:	2201      	movs	r2, #1
10016f7e:	f001 fde7 	bl	10018b50 <strncmp>
10016f82:	2800      	cmp	r0, #0
10016f84:	d17b      	bne.n	1001707e <_strtod_l+0x23e>
10016f86:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10016f88:	4613      	mov	r3, r2
10016f8a:	3201      	adds	r2, #1
10016f8c:	9219      	str	r2, [sp, #100]	@ 0x64
10016f8e:	785f      	ldrb	r7, [r3, #1]
10016f90:	2c00      	cmp	r4, #0
10016f92:	f040 8587 	bne.w	10017aa4 <_strtod_l+0xc64>
10016f96:	2f30      	cmp	r7, #48	@ 0x30
10016f98:	f040 851f 	bne.w	100179da <_strtod_l+0xb9a>
10016f9c:	4613      	mov	r3, r2
10016f9e:	4618      	mov	r0, r3
10016fa0:	3301      	adds	r3, #1
10016fa2:	9319      	str	r3, [sp, #100]	@ 0x64
10016fa4:	781f      	ldrb	r7, [r3, #0]
10016fa6:	2f30      	cmp	r7, #48	@ 0x30
10016fa8:	d0f9      	beq.n	10016f9e <_strtod_l+0x15e>
10016faa:	f1c2 0201 	rsb	r2, r2, #1
10016fae:	4410      	add	r0, r2
10016fb0:	f1a7 0331 	sub.w	r3, r7, #49	@ 0x31
10016fb4:	2b08      	cmp	r3, #8
10016fb6:	d834      	bhi.n	10017022 <_strtod_l+0x1e2>
10016fb8:	f8dd 8064 	ldr.w	r8, [sp, #100]	@ 0x64
10016fbc:	1c43      	adds	r3, r0, #1
10016fbe:	f1a7 0e30 	sub.w	lr, r7, #48	@ 0x30
10016fc2:	930e      	str	r3, [sp, #56]	@ 0x38
10016fc4:	2401      	movs	r4, #1
10016fc6:	4647      	mov	r7, r8
10016fc8:	f04f 0a00 	mov.w	sl, #0
10016fcc:	eb05 0585 	add.w	r5, r5, r5, lsl #2
10016fd0:	eb0e 0545 	add.w	r5, lr, r5, lsl #1
10016fd4:	2000      	movs	r0, #0
10016fd6:	1c7b      	adds	r3, r7, #1
10016fd8:	9319      	str	r3, [sp, #100]	@ 0x64
10016fda:	787f      	ldrb	r7, [r7, #1]
10016fdc:	f1a7 0230 	sub.w	r2, r7, #48	@ 0x30
10016fe0:	2a09      	cmp	r2, #9
10016fe2:	f200 8322 	bhi.w	1001762a <_strtod_l+0x7ea>
10016fe6:	9f19      	ldr	r7, [sp, #100]	@ 0x64
10016fe8:	3001      	adds	r0, #1
10016fea:	4696      	mov	lr, r2
10016fec:	2a00      	cmp	r2, #0
10016fee:	d0f2      	beq.n	10016fd6 <_strtod_l+0x196>
10016ff0:	2801      	cmp	r0, #1
10016ff2:	f000 86e5 	beq.w	10017dc0 <_strtod_l+0xf80>
10016ff6:	eb00 0c04 	add.w	ip, r0, r4
10016ffa:	f10c 31ff 	add.w	r1, ip, #4294967295	@ 0xffffffff
10016ffe:	e003      	b.n	10017008 <_strtod_l+0x1c8>
10017000:	005d      	lsls	r5, r3, #1
10017002:	428c      	cmp	r4, r1
10017004:	f000 8477 	beq.w	100178f6 <_strtod_l+0xab6>
10017008:	2c08      	cmp	r4, #8
1001700a:	eb05 0385 	add.w	r3, r5, r5, lsl #2
1001700e:	f104 0401 	add.w	r4, r4, #1
10017012:	d9f5      	bls.n	10017000 <_strtod_l+0x1c0>
10017014:	2c10      	cmp	r4, #16
10017016:	bfdc      	itt	le
10017018:	eb09 0989 	addle.w	r9, r9, r9, lsl #2
1001701c:	ea4f 0949 	movle.w	r9, r9, lsl #1
10017020:	e7ef      	b.n	10017002 <_strtod_l+0x1c2>
10017022:	2f65      	cmp	r7, #101	@ 0x65
10017024:	f040 8318 	bne.w	10017658 <_strtod_l+0x818>
10017028:	f04f 0a00 	mov.w	sl, #0
1001702c:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
10017030:	f04f 0c01 	mov.w	ip, #1
10017034:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10017036:	4303      	orrs	r3, r0
10017038:	f040 82fd 	bne.w	10017636 <_strtod_l+0x7f6>
1001703c:	9b07      	ldr	r3, [sp, #28]
1001703e:	f04f 0800 	mov.w	r8, #0
10017042:	f04f 0900 	mov.w	r9, #0
10017046:	b103      	cbz	r3, 1001704a <_strtod_l+0x20a>
10017048:	601e      	str	r6, [r3, #0]
1001704a:	4640      	mov	r0, r8
1001704c:	4649      	mov	r1, r9
1001704e:	b01f      	add	sp, #124	@ 0x7c
10017050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017054:	f898 2001 	ldrb.w	r2, [r8, #1]
10017058:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
1001705c:	2a58      	cmp	r2, #88	@ 0x58
1001705e:	bf18      	it	ne
10017060:	4643      	movne	r3, r8
10017062:	f000 83fc 	beq.w	1001785e <_strtod_l+0xa1e>
10017066:	3301      	adds	r3, #1
10017068:	9319      	str	r3, [sp, #100]	@ 0x64
1001706a:	781a      	ldrb	r2, [r3, #0]
1001706c:	2a30      	cmp	r2, #48	@ 0x30
1001706e:	d0fa      	beq.n	10017066 <_strtod_l+0x226>
10017070:	4698      	mov	r8, r3
10017072:	2a00      	cmp	r2, #0
10017074:	f000 82bb 	beq.w	100175ee <_strtod_l+0x7ae>
10017078:	2301      	movs	r3, #1
1001707a:	9309      	str	r3, [sp, #36]	@ 0x24
1001707c:	e759      	b.n	10016f32 <_strtod_l+0xf2>
1001707e:	2000      	movs	r0, #0
10017080:	46a2      	mov	sl, r4
10017082:	900e      	str	r0, [sp, #56]	@ 0x38
10017084:	4684      	mov	ip, r0
10017086:	2f65      	cmp	r7, #101	@ 0x65
10017088:	d035      	beq.n	100170f6 <_strtod_l+0x2b6>
1001708a:	2f45      	cmp	r7, #69	@ 0x45
1001708c:	d033      	beq.n	100170f6 <_strtod_l+0x2b6>
1001708e:	2300      	movs	r3, #0
10017090:	930f      	str	r3, [sp, #60]	@ 0x3c
10017092:	2c00      	cmp	r4, #0
10017094:	f040 8081 	bne.w	1001719a <_strtod_l+0x35a>
10017098:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001709a:	4303      	orrs	r3, r0
1001709c:	f040 82a7 	bne.w	100175ee <_strtod_l+0x7ae>
100170a0:	f1bc 0f00 	cmp.w	ip, #0
100170a4:	d1ca      	bne.n	1001703c <_strtod_l+0x1fc>
100170a6:	2f69      	cmp	r7, #105	@ 0x69
100170a8:	f000 847e 	beq.w	100179a8 <_strtod_l+0xb68>
100170ac:	f300 83a3 	bgt.w	100177f6 <_strtod_l+0x9b6>
100170b0:	2f49      	cmp	r7, #73	@ 0x49
100170b2:	f000 8479 	beq.w	100179a8 <_strtod_l+0xb68>
100170b6:	2f4e      	cmp	r7, #78	@ 0x4e
100170b8:	d1c0      	bne.n	1001703c <_strtod_l+0x1fc>
100170ba:	4925      	ldr	r1, [pc, #148]	@ (10017150 <_strtod_l+0x310>)
100170bc:	a819      	add	r0, sp, #100	@ 0x64
100170be:	f001 fc47 	bl	10018950 <__match>
100170c2:	2800      	cmp	r0, #0
100170c4:	d0ba      	beq.n	1001703c <_strtod_l+0x1fc>
100170c6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
100170c8:	781b      	ldrb	r3, [r3, #0]
100170ca:	2b28      	cmp	r3, #40	@ 0x28
100170cc:	f000 85a2 	beq.w	10017c14 <_strtod_l+0xdd4>
100170d0:	4820      	ldr	r0, [pc, #128]	@ (10017154 <_strtod_l+0x314>)
100170d2:	f008 fecd 	bl	1001fe70 <nan>
100170d6:	4680      	mov	r8, r0
100170d8:	4689      	mov	r9, r1
100170da:	e28c      	b.n	100175f6 <_strtod_l+0x7b6>
100170dc:	491b      	ldr	r1, [pc, #108]	@ (1001714c <_strtod_l+0x30c>)
100170de:	2201      	movs	r2, #1
100170e0:	f001 fd36 	bl	10018b50 <strncmp>
100170e4:	2800      	cmp	r0, #0
100170e6:	d1ca      	bne.n	1001707e <_strtod_l+0x23e>
100170e8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
100170ea:	900e      	str	r0, [sp, #56]	@ 0x38
100170ec:	1c5a      	adds	r2, r3, #1
100170ee:	9219      	str	r2, [sp, #100]	@ 0x64
100170f0:	785f      	ldrb	r7, [r3, #1]
100170f2:	46a2      	mov	sl, r4
100170f4:	e772      	b.n	10016fdc <_strtod_l+0x19c>
100170f6:	2c00      	cmp	r4, #0
100170f8:	d09c      	beq.n	10017034 <_strtod_l+0x1f4>
100170fa:	9e19      	ldr	r6, [sp, #100]	@ 0x64
100170fc:	1c73      	adds	r3, r6, #1
100170fe:	9319      	str	r3, [sp, #100]	@ 0x64
10017100:	7877      	ldrb	r7, [r6, #1]
10017102:	2f2b      	cmp	r7, #43	@ 0x2b
10017104:	f000 8294 	beq.w	10017630 <_strtod_l+0x7f0>
10017108:	2f2d      	cmp	r7, #45	@ 0x2d
1001710a:	f000 8284 	beq.w	10017616 <_strtod_l+0x7d6>
1001710e:	2300      	movs	r3, #0
10017110:	930a      	str	r3, [sp, #40]	@ 0x28
10017112:	f1a7 0130 	sub.w	r1, r7, #48	@ 0x30
10017116:	2909      	cmp	r1, #9
10017118:	f200 8283 	bhi.w	10017622 <_strtod_l+0x7e2>
1001711c:	2f30      	cmp	r7, #48	@ 0x30
1001711e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
10017120:	d10a      	bne.n	10017138 <_strtod_l+0x2f8>
10017122:	3301      	adds	r3, #1
10017124:	9319      	str	r3, [sp, #100]	@ 0x64
10017126:	781f      	ldrb	r7, [r3, #0]
10017128:	2f30      	cmp	r7, #48	@ 0x30
1001712a:	d0fa      	beq.n	10017122 <_strtod_l+0x2e2>
1001712c:	f1a7 0231 	sub.w	r2, r7, #49	@ 0x31
10017130:	2a08      	cmp	r2, #8
10017132:	d8ac      	bhi.n	1001708e <_strtod_l+0x24e>
10017134:	f1a7 0130 	sub.w	r1, r7, #48	@ 0x30
10017138:	1c5a      	adds	r2, r3, #1
1001713a:	9219      	str	r2, [sp, #100]	@ 0x64
1001713c:	785f      	ldrb	r7, [r3, #1]
1001713e:	2f2f      	cmp	r7, #47	@ 0x2f
10017140:	f340 83fc 	ble.w	1001793c <_strtod_l+0xafc>
10017144:	4696      	mov	lr, r2
10017146:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
1001714a:	e00e      	b.n	1001716a <_strtod_l+0x32a>
1001714c:	1002151c 	.word	0x1002151c
10017150:	1002399c 	.word	0x1002399c
10017154:	10021458 	.word	0x10021458
10017158:	3201      	adds	r2, #1
1001715a:	9219      	str	r2, [sp, #100]	@ 0x64
1001715c:	f89e 7001 	ldrb.w	r7, [lr, #1]
10017160:	2f2f      	cmp	r7, #47	@ 0x2f
10017162:	f1a8 0130 	sub.w	r1, r8, #48	@ 0x30
10017166:	dd06      	ble.n	10017176 <_strtod_l+0x336>
10017168:	4696      	mov	lr, r2
1001716a:	eb01 0881 	add.w	r8, r1, r1, lsl #2
1001716e:	2f39      	cmp	r7, #57	@ 0x39
10017170:	eb07 0848 	add.w	r8, r7, r8, lsl #1
10017174:	ddf0      	ble.n	10017158 <_strtod_l+0x318>
10017176:	1ad2      	subs	r2, r2, r3
10017178:	2a08      	cmp	r2, #8
1001717a:	f8dd 802c 	ldr.w	r8, [sp, #44]	@ 0x2c
1001717e:	f340 83dd 	ble.w	1001793c <_strtod_l+0xafc>
10017182:	f644 631f 	movw	r3, #19999	@ 0x4e1f
10017186:	930f      	str	r3, [sp, #60]	@ 0x3c
10017188:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001718a:	2b00      	cmp	r3, #0
1001718c:	d081      	beq.n	10017092 <_strtod_l+0x252>
1001718e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10017190:	425b      	negs	r3, r3
10017192:	930f      	str	r3, [sp, #60]	@ 0x3c
10017194:	2c00      	cmp	r4, #0
10017196:	f43f af7f 	beq.w	10017098 <_strtod_l+0x258>
1001719a:	4628      	mov	r0, r5
1001719c:	f009 fa76 	bl	1002068c <__aeabi_ui2d>
100171a0:	4602      	mov	r2, r0
100171a2:	460b      	mov	r3, r1
100171a4:	e9cd 2304 	strd	r2, r3, [sp, #16]
100171a8:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
100171ac:	f1ba 0f00 	cmp.w	sl, #0
100171b0:	bf08      	it	eq
100171b2:	46a2      	moveq	sl, r4
100171b4:	2c10      	cmp	r4, #16
100171b6:	eba3 0302 	sub.w	r3, r3, r2
100171ba:	4626      	mov	r6, r4
100171bc:	bfa8      	it	ge
100171be:	2610      	movge	r6, #16
100171c0:	2c09      	cmp	r4, #9
100171c2:	930b      	str	r3, [sp, #44]	@ 0x2c
100171c4:	dd16      	ble.n	100171f4 <_strtod_l+0x3b4>
100171c6:	4b4f      	ldr	r3, [pc, #316]	@ (10017304 <_strtod_l+0x4c4>)
100171c8:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
100171cc:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
100171d0:	f009 fad6 	bl	10020780 <__aeabi_dmul>
100171d4:	e9cd 0104 	strd	r0, r1, [sp, #16]
100171d8:	4648      	mov	r0, r9
100171da:	f009 fa57 	bl	1002068c <__aeabi_ui2d>
100171de:	4602      	mov	r2, r0
100171e0:	460b      	mov	r3, r1
100171e2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
100171e6:	f009 f915 	bl	10020414 <__adddf3>
100171ea:	2c0f      	cmp	r4, #15
100171ec:	e9cd 0104 	strd	r0, r1, [sp, #16]
100171f0:	f300 81a7 	bgt.w	10017542 <_strtod_l+0x702>
100171f4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100171f6:	2b00      	cmp	r3, #0
100171f8:	f000 8301 	beq.w	100177fe <_strtod_l+0x9be>
100171fc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100171fe:	f340 8231 	ble.w	10017664 <_strtod_l+0x824>
10017202:	2b16      	cmp	r3, #22
10017204:	f340 83a1 	ble.w	1001794a <_strtod_l+0xb0a>
10017208:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1001720a:	f1c4 0325 	rsb	r3, r4, #37	@ 0x25
1001720e:	4293      	cmp	r3, r2
10017210:	f280 8432 	bge.w	10017a78 <_strtod_l+0xc38>
10017214:	1ba6      	subs	r6, r4, r6
10017216:	4416      	add	r6, r2
10017218:	f016 000f 	ands.w	r0, r6, #15
1001721c:	d00a      	beq.n	10017234 <_strtod_l+0x3f4>
1001721e:	4939      	ldr	r1, [pc, #228]	@ (10017304 <_strtod_l+0x4c4>)
10017220:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
10017224:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
10017228:	e9d1 0100 	ldrd	r0, r1, [r1]
1001722c:	f009 faa8 	bl	10020780 <__aeabi_dmul>
10017230:	e9cd 0104 	strd	r0, r1, [sp, #16]
10017234:	f036 030f 	bics.w	r3, r6, #15
10017238:	d046      	beq.n	100172c8 <_strtod_l+0x488>
1001723a:	f5b3 7f9a 	cmp.w	r3, #308	@ 0x134
1001723e:	f300 834e 	bgt.w	100178de <_strtod_l+0xa9e>
10017242:	2b10      	cmp	r3, #16
10017244:	4a30      	ldr	r2, [pc, #192]	@ (10017308 <_strtod_l+0x4c8>)
10017246:	ea4f 1623 	mov.w	r6, r3, asr #4
1001724a:	f340 8539 	ble.w	10017cc0 <_strtod_l+0xe80>
1001724e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10017252:	2300      	movs	r3, #0
10017254:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
10017258:	4617      	mov	r7, r2
1001725a:	4699      	mov	r9, r3
1001725c:	4690      	mov	r8, r2
1001725e:	f016 0f01 	tst.w	r6, #1
10017262:	f109 0901 	add.w	r9, r9, #1
10017266:	ea4f 0666 	mov.w	r6, r6, asr #1
1001726a:	d004      	beq.n	10017276 <_strtod_l+0x436>
1001726c:	e9d7 2300 	ldrd	r2, r3, [r7]
10017270:	f009 fa86 	bl	10020780 <__aeabi_dmul>
10017274:	2301      	movs	r3, #1
10017276:	2e01      	cmp	r6, #1
10017278:	f107 0708 	add.w	r7, r7, #8
1001727c:	d1ef      	bne.n	1001725e <_strtod_l+0x41e>
1001727e:	4642      	mov	r2, r8
10017280:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
10017284:	b10b      	cbz	r3, 1001728a <_strtod_l+0x44a>
10017286:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001728a:	9b05      	ldr	r3, [sp, #20]
1001728c:	f1a3 7354 	sub.w	r3, r3, #55574528	@ 0x3500000
10017290:	eb02 01c9 	add.w	r1, r2, r9, lsl #3
10017294:	9305      	str	r3, [sp, #20]
10017296:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001729a:	e9d1 0100 	ldrd	r0, r1, [r1]
1001729e:	f009 fa6f 	bl	10020780 <__aeabi_dmul>
100172a2:	4b1a      	ldr	r3, [pc, #104]	@ (1001730c <_strtod_l+0x4cc>)
100172a4:	e9cd 0104 	strd	r0, r1, [sp, #16]
100172a8:	400b      	ands	r3, r1
100172aa:	460a      	mov	r2, r1
100172ac:	4918      	ldr	r1, [pc, #96]	@ (10017310 <_strtod_l+0x4d0>)
100172ae:	428b      	cmp	r3, r1
100172b0:	f200 8315 	bhi.w	100178de <_strtod_l+0xa9e>
100172b4:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
100172b8:	428b      	cmp	r3, r1
100172ba:	f240 8454 	bls.w	10017b66 <_strtod_l+0xd26>
100172be:	4b15      	ldr	r3, [pc, #84]	@ (10017314 <_strtod_l+0x4d4>)
100172c0:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
100172c4:	e9cd 2304 	strd	r2, r3, [sp, #16]
100172c8:	2300      	movs	r3, #0
100172ca:	930a      	str	r3, [sp, #40]	@ 0x28
100172cc:	9500      	str	r5, [sp, #0]
100172ce:	4623      	mov	r3, r4
100172d0:	4652      	mov	r2, sl
100172d2:	4641      	mov	r1, r8
100172d4:	4658      	mov	r0, fp
100172d6:	f007 f8e1 	bl	1001e49c <__s2b>
100172da:	9014      	str	r0, [sp, #80]	@ 0x50
100172dc:	2800      	cmp	r0, #0
100172de:	f000 82fe 	beq.w	100178de <_strtod_l+0xa9e>
100172e2:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	@ 0x38
100172e6:	1a9b      	subs	r3, r3, r2
100172e8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
100172ea:	2a00      	cmp	r2, #0
100172ec:	bfa8      	it	ge
100172ee:	2300      	movge	r3, #0
100172f0:	930e      	str	r3, [sp, #56]	@ 0x38
100172f2:	f04f 0a00 	mov.w	sl, #0
100172f6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
100172fa:	f8cd a024 	str.w	sl, [sp, #36]	@ 0x24
100172fe:	9315      	str	r3, [sp, #84]	@ 0x54
10017300:	e0df      	b.n	100174c2 <_strtod_l+0x682>
10017302:	bf00      	nop
10017304:	1002a7a0 	.word	0x1002a7a0
10017308:	1002a778 	.word	0x1002a778
1001730c:	7ff00000 	.word	0x7ff00000
10017310:	7ca00000 	.word	0x7ca00000
10017314:	7fefffff 	.word	0x7fefffff
10017318:	1ad2      	subs	r2, r2, r3
1001731a:	2a1f      	cmp	r2, #31
1001731c:	eba4 0402 	sub.w	r4, r4, r2
10017320:	f300 822e 	bgt.w	10017780 <_strtod_l+0x940>
10017324:	2301      	movs	r3, #1
10017326:	4093      	lsls	r3, r2
10017328:	4698      	mov	r8, r3
1001732a:	2500      	movs	r5, #0
1001732c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001732e:	4426      	add	r6, r4
10017330:	443c      	add	r4, r7
10017332:	42a7      	cmp	r7, r4
10017334:	441e      	add	r6, r3
10017336:	463b      	mov	r3, r7
10017338:	bfa8      	it	ge
1001733a:	4623      	movge	r3, r4
1001733c:	42b3      	cmp	r3, r6
1001733e:	bfa8      	it	ge
10017340:	4633      	movge	r3, r6
10017342:	2b00      	cmp	r3, #0
10017344:	dd02      	ble.n	1001734c <_strtod_l+0x50c>
10017346:	1ae4      	subs	r4, r4, r3
10017348:	1af6      	subs	r6, r6, r3
1001734a:	1aff      	subs	r7, r7, r3
1001734c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001734e:	2b00      	cmp	r3, #0
10017350:	f300 81bc 	bgt.w	100176cc <_strtod_l+0x88c>
10017354:	2c00      	cmp	r4, #0
10017356:	f300 81d2 	bgt.w	100176fe <_strtod_l+0x8be>
1001735a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001735c:	2b00      	cmp	r3, #0
1001735e:	f300 8205 	bgt.w	1001776c <_strtod_l+0x92c>
10017362:	2e00      	cmp	r6, #0
10017364:	f300 81f6 	bgt.w	10017754 <_strtod_l+0x914>
10017368:	2f00      	cmp	r7, #0
1001736a:	dd08      	ble.n	1001737e <_strtod_l+0x53e>
1001736c:	4651      	mov	r1, sl
1001736e:	463a      	mov	r2, r7
10017370:	4658      	mov	r0, fp
10017372:	f007 fa7b 	bl	1001e86c <__lshift>
10017376:	4682      	mov	sl, r0
10017378:	2800      	cmp	r0, #0
1001737a:	f000 81f4 	beq.w	10017766 <_strtod_l+0x926>
1001737e:	991a      	ldr	r1, [sp, #104]	@ 0x68
10017380:	464a      	mov	r2, r9
10017382:	4658      	mov	r0, fp
10017384:	f007 fb0a 	bl	1001e99c <__mdiff>
10017388:	9009      	str	r0, [sp, #36]	@ 0x24
1001738a:	2800      	cmp	r0, #0
1001738c:	f000 81eb 	beq.w	10017766 <_strtod_l+0x926>
10017390:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10017392:	2300      	movs	r3, #0
10017394:	68d1      	ldr	r1, [r2, #12]
10017396:	910f      	str	r1, [sp, #60]	@ 0x3c
10017398:	60d3      	str	r3, [r2, #12]
1001739a:	4651      	mov	r1, sl
1001739c:	f007 fade 	bl	1001e95c <__mcmp>
100173a0:	2800      	cmp	r0, #0
100173a2:	f2c0 8402 	blt.w	10017baa <_strtod_l+0xd6a>
100173a6:	9f05      	ldr	r7, [sp, #20]
100173a8:	f000 8389 	beq.w	10017abe <_strtod_l+0xc7e>
100173ac:	9809      	ldr	r0, [sp, #36]	@ 0x24
100173ae:	4651      	mov	r1, sl
100173b0:	f007 fc8a 	bl	1001ecc8 <__ratio>
100173b4:	2200      	movs	r2, #0
100173b6:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
100173ba:	4604      	mov	r4, r0
100173bc:	460d      	mov	r5, r1
100173be:	f009 fc5b 	bl	10020c78 <__aeabi_dcmple>
100173c2:	2800      	cmp	r0, #0
100173c4:	f000 8172 	beq.w	100176ac <_strtod_l+0x86c>
100173c8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
100173ca:	2b00      	cmp	r3, #0
100173cc:	f040 81e4 	bne.w	10017798 <_strtod_l+0x958>
100173d0:	9b04      	ldr	r3, [sp, #16]
100173d2:	2b00      	cmp	r3, #0
100173d4:	f040 8273 	bne.w	100178be <_strtod_l+0xa7e>
100173d8:	f3c7 0313 	ubfx	r3, r7, #0, #20
100173dc:	2b00      	cmp	r3, #0
100173de:	f040 8211 	bne.w	10017804 <_strtod_l+0x9c4>
100173e2:	4bab      	ldr	r3, [pc, #684]	@ (10017690 <_strtod_l+0x850>)
100173e4:	2200      	movs	r2, #0
100173e6:	4620      	mov	r0, r4
100173e8:	4629      	mov	r1, r5
100173ea:	f009 fc3b 	bl	10020c64 <__aeabi_dcmplt>
100173ee:	2800      	cmp	r0, #0
100173f0:	f040 835c 	bne.w	10017aac <_strtod_l+0xc6c>
100173f4:	4ba7      	ldr	r3, [pc, #668]	@ (10017694 <_strtod_l+0x854>)
100173f6:	4620      	mov	r0, r4
100173f8:	4629      	mov	r1, r5
100173fa:	2200      	movs	r2, #0
100173fc:	f009 f9c0 	bl	10020780 <__aeabi_dmul>
10017400:	4603      	mov	r3, r0
10017402:	460c      	mov	r4, r1
10017404:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
10017408:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
1001740c:	900c      	str	r0, [sp, #48]	@ 0x30
1001740e:	930d      	str	r3, [sp, #52]	@ 0x34
10017410:	4ea1      	ldr	r6, [pc, #644]	@ (10017698 <_strtod_l+0x858>)
10017412:	4ba2      	ldr	r3, [pc, #648]	@ (1001769c <_strtod_l+0x85c>)
10017414:	403e      	ands	r6, r7
10017416:	429e      	cmp	r6, r3
10017418:	e9dd 450c 	ldrd	r4, r5, [sp, #48]	@ 0x30
1001741c:	f000 81c3 	beq.w	100177a6 <_strtod_l+0x966>
10017420:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10017422:	b323      	cbz	r3, 1001746e <_strtod_l+0x62e>
10017424:	f1b6 6fd4 	cmp.w	r6, #111149056	@ 0x6a00000
10017428:	d821      	bhi.n	1001746e <_strtod_l+0x62e>
1001742a:	e9dd 7812 	ldrd	r7, r8, [sp, #72]	@ 0x48
1001742e:	a396      	add	r3, pc, #600	@ (adr r3, 10017688 <_strtod_l+0x848>)
10017430:	e9d3 2300 	ldrd	r2, r3, [r3]
10017434:	4638      	mov	r0, r7
10017436:	4641      	mov	r1, r8
10017438:	f009 fc1e 	bl	10020c78 <__aeabi_dcmple>
1001743c:	b1a0      	cbz	r0, 10017468 <_strtod_l+0x628>
1001743e:	4641      	mov	r1, r8
10017440:	4638      	mov	r0, r7
10017442:	f009 fc75 	bl	10020d30 <__aeabi_d2uiz>
10017446:	2801      	cmp	r0, #1
10017448:	bf38      	it	cc
1001744a:	2001      	movcc	r0, #1
1001744c:	f009 f91e 	bl	1002068c <__aeabi_ui2d>
10017450:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10017452:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
10017456:	2b00      	cmp	r3, #0
10017458:	f040 82ba 	bne.w	100179d0 <_strtod_l+0xb90>
1001745c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
10017460:	9016      	str	r0, [sp, #88]	@ 0x58
10017462:	9317      	str	r3, [sp, #92]	@ 0x5c
10017464:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	@ 0x58
10017468:	f105 63d6 	add.w	r3, r5, #112197632	@ 0x6b00000
1001746c:	1b9d      	subs	r5, r3, r6
1001746e:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	@ 0x40
10017472:	4638      	mov	r0, r7
10017474:	4641      	mov	r1, r8
10017476:	f007 fb43 	bl	1001eb00 <__ulp>
1001747a:	4602      	mov	r2, r0
1001747c:	460b      	mov	r3, r1
1001747e:	4620      	mov	r0, r4
10017480:	4629      	mov	r1, r5
10017482:	f009 f97d 	bl	10020780 <__aeabi_dmul>
10017486:	463a      	mov	r2, r7
10017488:	4643      	mov	r3, r8
1001748a:	f008 ffc3 	bl	10020414 <__adddf3>
1001748e:	e9cd 0104 	strd	r0, r1, [sp, #16]
10017492:	460c      	mov	r4, r1
10017494:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10017496:	b923      	cbnz	r3, 100174a2 <_strtod_l+0x662>
10017498:	4b7f      	ldr	r3, [pc, #508]	@ (10017698 <_strtod_l+0x858>)
1001749a:	4023      	ands	r3, r4
1001749c:	429e      	cmp	r6, r3
1001749e:	f000 81ba 	beq.w	10017816 <_strtod_l+0x9d6>
100174a2:	991a      	ldr	r1, [sp, #104]	@ 0x68
100174a4:	4658      	mov	r0, fp
100174a6:	f006 ff9f 	bl	1001e3e8 <_Bfree>
100174aa:	4649      	mov	r1, r9
100174ac:	4658      	mov	r0, fp
100174ae:	f006 ff9b 	bl	1001e3e8 <_Bfree>
100174b2:	4651      	mov	r1, sl
100174b4:	4658      	mov	r0, fp
100174b6:	f006 ff97 	bl	1001e3e8 <_Bfree>
100174ba:	9909      	ldr	r1, [sp, #36]	@ 0x24
100174bc:	4658      	mov	r0, fp
100174be:	f006 ff93 	bl	1001e3e8 <_Bfree>
100174c2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
100174c4:	4658      	mov	r0, fp
100174c6:	6861      	ldr	r1, [r4, #4]
100174c8:	f006 ff68 	bl	1001e39c <_Balloc>
100174cc:	4681      	mov	r9, r0
100174ce:	2800      	cmp	r0, #0
100174d0:	f000 8149 	beq.w	10017766 <_strtod_l+0x926>
100174d4:	6922      	ldr	r2, [r4, #16]
100174d6:	3202      	adds	r2, #2
100174d8:	f104 010c 	add.w	r1, r4, #12
100174dc:	0092      	lsls	r2, r2, #2
100174de:	300c      	adds	r0, #12
100174e0:	f7ff f996 	bl	10016810 <memcpy>
100174e4:	ab1c      	add	r3, sp, #112	@ 0x70
100174e6:	9301      	str	r3, [sp, #4]
100174e8:	ab1b      	add	r3, sp, #108	@ 0x6c
100174ea:	9300      	str	r3, [sp, #0]
100174ec:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
100174f0:	4658      	mov	r0, fp
100174f2:	e9cd 3410 	strd	r3, r4, [sp, #64]	@ 0x40
100174f6:	461a      	mov	r2, r3
100174f8:	4623      	mov	r3, r4
100174fa:	f007 fb87 	bl	1001ec0c <__d2b>
100174fe:	901a      	str	r0, [sp, #104]	@ 0x68
10017500:	2800      	cmp	r0, #0
10017502:	f000 8105 	beq.w	10017710 <_strtod_l+0x8d0>
10017506:	2101      	movs	r1, #1
10017508:	4658      	mov	r0, fp
1001750a:	f007 f871 	bl	1001e5f0 <__i2b>
1001750e:	4682      	mov	sl, r0
10017510:	2800      	cmp	r0, #0
10017512:	f000 8128 	beq.w	10017766 <_strtod_l+0x926>
10017516:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
10017518:	2b00      	cmp	r3, #0
1001751a:	f2c0 8117 	blt.w	1001774c <_strtod_l+0x90c>
1001751e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10017520:	9e15      	ldr	r6, [sp, #84]	@ 0x54
10017522:	189f      	adds	r7, r3, r2
10017524:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10017526:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
10017528:	1a9b      	subs	r3, r3, r2
1001752a:	4423      	add	r3, r4
1001752c:	4a5c      	ldr	r2, [pc, #368]	@ (100176a0 <_strtod_l+0x860>)
1001752e:	3b01      	subs	r3, #1
10017530:	4293      	cmp	r3, r2
10017532:	f1c4 0436 	rsb	r4, r4, #54	@ 0x36
10017536:	f6ff aeef 	blt.w	10017318 <_strtod_l+0x4d8>
1001753a:	2301      	movs	r3, #1
1001753c:	2500      	movs	r5, #0
1001753e:	4698      	mov	r8, r3
10017540:	e6f4      	b.n	1001732c <_strtod_l+0x4ec>
10017542:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10017544:	1ba6      	subs	r6, r4, r6
10017546:	441e      	add	r6, r3
10017548:	2e00      	cmp	r6, #0
1001754a:	f73f ae65 	bgt.w	10017218 <_strtod_l+0x3d8>
1001754e:	f43f aebb 	beq.w	100172c8 <_strtod_l+0x488>
10017552:	4276      	negs	r6, r6
10017554:	f016 020f 	ands.w	r2, r6, #15
10017558:	d00a      	beq.n	10017570 <_strtod_l+0x730>
1001755a:	4b52      	ldr	r3, [pc, #328]	@ (100176a4 <_strtod_l+0x864>)
1001755c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
10017560:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10017564:	e9d3 2300 	ldrd	r2, r3, [r3]
10017568:	f009 fa34 	bl	100209d4 <__aeabi_ddiv>
1001756c:	e9cd 0104 	strd	r0, r1, [sp, #16]
10017570:	1136      	asrs	r6, r6, #4
10017572:	f43f aea9 	beq.w	100172c8 <_strtod_l+0x488>
10017576:	2e1f      	cmp	r6, #31
10017578:	dc36      	bgt.n	100175e8 <_strtod_l+0x7a8>
1001757a:	f016 0310 	ands.w	r3, r6, #16
1001757e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10017582:	bf18      	it	ne
10017584:	236a      	movne	r3, #106	@ 0x6a
10017586:	4f48      	ldr	r7, [pc, #288]	@ (100176a8 <_strtod_l+0x868>)
10017588:	930a      	str	r3, [sp, #40]	@ 0x28
1001758a:	2300      	movs	r3, #0
1001758c:	07f2      	lsls	r2, r6, #31
1001758e:	d504      	bpl.n	1001759a <_strtod_l+0x75a>
10017590:	e9d7 2300 	ldrd	r2, r3, [r7]
10017594:	f009 f8f4 	bl	10020780 <__aeabi_dmul>
10017598:	2301      	movs	r3, #1
1001759a:	1076      	asrs	r6, r6, #1
1001759c:	f107 0708 	add.w	r7, r7, #8
100175a0:	d1f4      	bne.n	1001758c <_strtod_l+0x74c>
100175a2:	b10b      	cbz	r3, 100175a8 <_strtod_l+0x768>
100175a4:	e9cd 0104 	strd	r0, r1, [sp, #16]
100175a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100175aa:	b1a3      	cbz	r3, 100175d6 <_strtod_l+0x796>
100175ac:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
100175b0:	f3c1 520a 	ubfx	r2, r1, #20, #11
100175b4:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
100175b8:	2b00      	cmp	r3, #0
100175ba:	dd0a      	ble.n	100175d2 <_strtod_l+0x792>
100175bc:	2b1f      	cmp	r3, #31
100175be:	f340 8398 	ble.w	10017cf2 <_strtod_l+0xeb2>
100175c2:	2000      	movs	r0, #0
100175c4:	2b34      	cmp	r3, #52	@ 0x34
100175c6:	9004      	str	r0, [sp, #16]
100175c8:	f340 83ca 	ble.w	10017d60 <_strtod_l+0xf20>
100175cc:	f04f 735c 	mov.w	r3, #57671680	@ 0x3700000
100175d0:	9305      	str	r3, [sp, #20]
100175d2:	236a      	movs	r3, #106	@ 0x6a
100175d4:	930a      	str	r3, [sp, #40]	@ 0x28
100175d6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
100175da:	2200      	movs	r2, #0
100175dc:	2300      	movs	r3, #0
100175de:	f009 fb37 	bl	10020c50 <__aeabi_dcmpeq>
100175e2:	2800      	cmp	r0, #0
100175e4:	f43f ae72 	beq.w	100172cc <_strtod_l+0x48c>
100175e8:	2322      	movs	r3, #34	@ 0x22
100175ea:	f8cb 3000 	str.w	r3, [fp]
100175ee:	f04f 0800 	mov.w	r8, #0
100175f2:	f04f 0900 	mov.w	r9, #0
100175f6:	9a07      	ldr	r2, [sp, #28]
100175f8:	b10a      	cbz	r2, 100175fe <_strtod_l+0x7be>
100175fa:	9b19      	ldr	r3, [sp, #100]	@ 0x64
100175fc:	6013      	str	r3, [r2, #0]
100175fe:	9b08      	ldr	r3, [sp, #32]
10017600:	2b00      	cmp	r3, #0
10017602:	f43f ad22 	beq.w	1001704a <_strtod_l+0x20a>
10017606:	f109 4300 	add.w	r3, r9, #2147483648	@ 0x80000000
1001760a:	4699      	mov	r9, r3
1001760c:	4640      	mov	r0, r8
1001760e:	4649      	mov	r1, r9
10017610:	b01f      	add	sp, #124	@ 0x7c
10017612:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017616:	2301      	movs	r3, #1
10017618:	930a      	str	r3, [sp, #40]	@ 0x28
1001761a:	1cb3      	adds	r3, r6, #2
1001761c:	9319      	str	r3, [sp, #100]	@ 0x64
1001761e:	78b7      	ldrb	r7, [r6, #2]
10017620:	e577      	b.n	10017112 <_strtod_l+0x2d2>
10017622:	2300      	movs	r3, #0
10017624:	9619      	str	r6, [sp, #100]	@ 0x64
10017626:	930f      	str	r3, [sp, #60]	@ 0x3c
10017628:	e533      	b.n	10017092 <_strtod_l+0x252>
1001762a:	f04f 0c01 	mov.w	ip, #1
1001762e:	e52a      	b.n	10017086 <_strtod_l+0x246>
10017630:	2300      	movs	r3, #0
10017632:	930a      	str	r3, [sp, #40]	@ 0x28
10017634:	e7f1      	b.n	1001761a <_strtod_l+0x7da>
10017636:	2400      	movs	r4, #0
10017638:	e55f      	b.n	100170fa <_strtod_l+0x2ba>
1001763a:	2200      	movs	r2, #0
1001763c:	9208      	str	r2, [sp, #32]
1001763e:	f108 0101 	add.w	r1, r8, #1
10017642:	9119      	str	r1, [sp, #100]	@ 0x64
10017644:	f898 2001 	ldrb.w	r2, [r8, #1]
10017648:	2a00      	cmp	r2, #0
1001764a:	f43f acf7 	beq.w	1001703c <_strtod_l+0x1fc>
1001764e:	4688      	mov	r8, r1
10017650:	e46a      	b.n	10016f28 <_strtod_l+0xe8>
10017652:	2201      	movs	r2, #1
10017654:	9208      	str	r2, [sp, #32]
10017656:	e7f2      	b.n	1001763e <_strtod_l+0x7fe>
10017658:	2f45      	cmp	r7, #69	@ 0x45
1001765a:	f43f ace5 	beq.w	10017028 <_strtod_l+0x1e8>
1001765e:	f04f 0c01 	mov.w	ip, #1
10017662:	e519      	b.n	10017098 <_strtod_l+0x258>
10017664:	3316      	adds	r3, #22
10017666:	f6ff af6c 	blt.w	10017542 <_strtod_l+0x702>
1001766a:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	@ 0x38
1001766e:	1a9a      	subs	r2, r3, r2
10017670:	4b0c      	ldr	r3, [pc, #48]	@ (100176a4 <_strtod_l+0x864>)
10017672:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
10017676:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001767a:	e9d3 2300 	ldrd	r2, r3, [r3]
1001767e:	f009 f9a9 	bl	100209d4 <__aeabi_ddiv>
10017682:	4680      	mov	r8, r0
10017684:	4689      	mov	r9, r1
10017686:	e7b6      	b.n	100175f6 <_strtod_l+0x7b6>
10017688:	ffc00000 	.word	0xffc00000
1001768c:	41dfffff 	.word	0x41dfffff
10017690:	3ff00000 	.word	0x3ff00000
10017694:	3fe00000 	.word	0x3fe00000
10017698:	7ff00000 	.word	0x7ff00000
1001769c:	7fe00000 	.word	0x7fe00000
100176a0:	fffffc02 	.word	0xfffffc02
100176a4:	1002a7a0 	.word	0x1002a7a0
100176a8:	100239c8 	.word	0x100239c8
100176ac:	4bb4      	ldr	r3, [pc, #720]	@ (10017980 <_strtod_l+0xb40>)
100176ae:	4620      	mov	r0, r4
100176b0:	4629      	mov	r1, r5
100176b2:	2200      	movs	r2, #0
100176b4:	f009 f864 	bl	10020780 <__aeabi_dmul>
100176b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
100176ba:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
100176be:	2b00      	cmp	r3, #0
100176c0:	d165      	bne.n	1001778e <_strtod_l+0x94e>
100176c2:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
100176c6:	900c      	str	r0, [sp, #48]	@ 0x30
100176c8:	930d      	str	r3, [sp, #52]	@ 0x34
100176ca:	e6a1      	b.n	10017410 <_strtod_l+0x5d0>
100176cc:	4651      	mov	r1, sl
100176ce:	461a      	mov	r2, r3
100176d0:	4658      	mov	r0, fp
100176d2:	f007 f871 	bl	1001e7b8 <__pow5mult>
100176d6:	4682      	mov	sl, r0
100176d8:	2800      	cmp	r0, #0
100176da:	d044      	beq.n	10017766 <_strtod_l+0x926>
100176dc:	4601      	mov	r1, r0
100176de:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
100176e0:	4658      	mov	r0, fp
100176e2:	f006 ffb3 	bl	1001e64c <__multiply>
100176e6:	2800      	cmp	r0, #0
100176e8:	d03d      	beq.n	10017766 <_strtod_l+0x926>
100176ea:	900f      	str	r0, [sp, #60]	@ 0x3c
100176ec:	991a      	ldr	r1, [sp, #104]	@ 0x68
100176ee:	4658      	mov	r0, fp
100176f0:	f006 fe7a 	bl	1001e3e8 <_Bfree>
100176f4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
100176f6:	931a      	str	r3, [sp, #104]	@ 0x68
100176f8:	2c00      	cmp	r4, #0
100176fa:	f77f ae2e 	ble.w	1001735a <_strtod_l+0x51a>
100176fe:	991a      	ldr	r1, [sp, #104]	@ 0x68
10017700:	4622      	mov	r2, r4
10017702:	4658      	mov	r0, fp
10017704:	f007 f8b2 	bl	1001e86c <__lshift>
10017708:	901a      	str	r0, [sp, #104]	@ 0x68
1001770a:	2800      	cmp	r0, #0
1001770c:	f47f ae25 	bne.w	1001735a <_strtod_l+0x51a>
10017710:	464f      	mov	r7, r9
10017712:	4605      	mov	r5, r0
10017714:	2322      	movs	r3, #34	@ 0x22
10017716:	f8df 926c 	ldr.w	r9, [pc, #620]	@ 10017984 <_strtod_l+0xb44>
1001771a:	f8cb 3000 	str.w	r3, [fp]
1001771e:	f04f 0800 	mov.w	r8, #0
10017722:	4629      	mov	r1, r5
10017724:	4658      	mov	r0, fp
10017726:	f006 fe5f 	bl	1001e3e8 <_Bfree>
1001772a:	4639      	mov	r1, r7
1001772c:	4658      	mov	r0, fp
1001772e:	f006 fe5b 	bl	1001e3e8 <_Bfree>
10017732:	4651      	mov	r1, sl
10017734:	4658      	mov	r0, fp
10017736:	f006 fe57 	bl	1001e3e8 <_Bfree>
1001773a:	9914      	ldr	r1, [sp, #80]	@ 0x50
1001773c:	4658      	mov	r0, fp
1001773e:	f006 fe53 	bl	1001e3e8 <_Bfree>
10017742:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017744:	4658      	mov	r0, fp
10017746:	f006 fe4f 	bl	1001e3e8 <_Bfree>
1001774a:	e754      	b.n	100175f6 <_strtod_l+0x7b6>
1001774c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001774e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
10017750:	1ad6      	subs	r6, r2, r3
10017752:	e6e7      	b.n	10017524 <_strtod_l+0x6e4>
10017754:	4649      	mov	r1, r9
10017756:	4632      	mov	r2, r6
10017758:	4658      	mov	r0, fp
1001775a:	f007 f887 	bl	1001e86c <__lshift>
1001775e:	4681      	mov	r9, r0
10017760:	2800      	cmp	r0, #0
10017762:	f47f ae01 	bne.w	10017368 <_strtod_l+0x528>
10017766:	464f      	mov	r7, r9
10017768:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001776a:	e7d3      	b.n	10017714 <_strtod_l+0x8d4>
1001776c:	4649      	mov	r1, r9
1001776e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10017770:	4658      	mov	r0, fp
10017772:	f007 f821 	bl	1001e7b8 <__pow5mult>
10017776:	4681      	mov	r9, r0
10017778:	2800      	cmp	r0, #0
1001777a:	f47f adf2 	bne.w	10017362 <_strtod_l+0x522>
1001777e:	e7f2      	b.n	10017766 <_strtod_l+0x926>
10017780:	4a81      	ldr	r2, [pc, #516]	@ (10017988 <_strtod_l+0xb48>)
10017782:	1ad3      	subs	r3, r2, r3
10017784:	2201      	movs	r2, #1
10017786:	fa02 f503 	lsl.w	r5, r2, r3
1001778a:	4690      	mov	r8, r2
1001778c:	e5ce      	b.n	1001732c <_strtod_l+0x4ec>
1001778e:	e9dd 3412 	ldrd	r3, r4, [sp, #72]	@ 0x48
10017792:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
10017796:	e63b      	b.n	10017410 <_strtod_l+0x5d0>
10017798:	4c7c      	ldr	r4, [pc, #496]	@ (1001798c <_strtod_l+0xb4c>)
1001779a:	2300      	movs	r3, #0
1001779c:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
100177a0:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
100177a4:	e634      	b.n	10017410 <_strtod_l+0x5d0>
100177a6:	f1a7 7354 	sub.w	r3, r7, #55574528	@ 0x3500000
100177aa:	9305      	str	r3, [sp, #20]
100177ac:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
100177b0:	4620      	mov	r0, r4
100177b2:	4629      	mov	r1, r5
100177b4:	f007 f9a4 	bl	1001eb00 <__ulp>
100177b8:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
100177bc:	f008 ffe0 	bl	10020780 <__aeabi_dmul>
100177c0:	462b      	mov	r3, r5
100177c2:	4622      	mov	r2, r4
100177c4:	f008 fe26 	bl	10020414 <__adddf3>
100177c8:	4f6e      	ldr	r7, [pc, #440]	@ (10017984 <_strtod_l+0xb44>)
100177ca:	4b71      	ldr	r3, [pc, #452]	@ (10017990 <_strtod_l+0xb50>)
100177cc:	400f      	ands	r7, r1
100177ce:	429f      	cmp	r7, r3
100177d0:	e9cd 0104 	strd	r0, r1, [sp, #16]
100177d4:	f240 808b 	bls.w	100178ee <_strtod_l+0xaae>
100177d8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
100177dc:	f103 7354 	add.w	r3, r3, #55574528	@ 0x3500000
100177e0:	4299      	cmp	r1, r3
100177e2:	d102      	bne.n	100177ea <_strtod_l+0x9aa>
100177e4:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
100177e8:	d0bd      	beq.n	10017766 <_strtod_l+0x926>
100177ea:	4c6a      	ldr	r4, [pc, #424]	@ (10017994 <_strtod_l+0xb54>)
100177ec:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
100177f0:	e9cd 3404 	strd	r3, r4, [sp, #16]
100177f4:	e655      	b.n	100174a2 <_strtod_l+0x662>
100177f6:	2f6e      	cmp	r7, #110	@ 0x6e
100177f8:	f43f ac5f 	beq.w	100170ba <_strtod_l+0x27a>
100177fc:	e41e      	b.n	1001703c <_strtod_l+0x1fc>
100177fe:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
10017802:	e6f8      	b.n	100175f6 <_strtod_l+0x7b6>
10017804:	4c64      	ldr	r4, [pc, #400]	@ (10017998 <_strtod_l+0xb58>)
10017806:	2300      	movs	r3, #0
10017808:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
1001780c:	4c5f      	ldr	r4, [pc, #380]	@ (1001798c <_strtod_l+0xb4c>)
1001780e:	2300      	movs	r3, #0
10017810:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
10017814:	e5fc      	b.n	10017410 <_strtod_l+0x5d0>
10017816:	e9dd 5612 	ldrd	r5, r6, [sp, #72]	@ 0x48
1001781a:	4628      	mov	r0, r5
1001781c:	4631      	mov	r1, r6
1001781e:	f009 fb0f 	bl	10020e40 <__aeabi_d2lz>
10017822:	f008 ff7f 	bl	10020724 <__aeabi_l2d>
10017826:	460b      	mov	r3, r1
10017828:	4602      	mov	r2, r0
1001782a:	4631      	mov	r1, r6
1001782c:	4628      	mov	r0, r5
1001782e:	f008 fdef 	bl	10020410 <__aeabi_dsub>
10017832:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10017834:	9b04      	ldr	r3, [sp, #16]
10017836:	f3c4 0413 	ubfx	r4, r4, #0, #20
1001783a:	431d      	orrs	r5, r3
1001783c:	432c      	orrs	r4, r5
1001783e:	4606      	mov	r6, r0
10017840:	460f      	mov	r7, r1
10017842:	d12a      	bne.n	1001789a <_strtod_l+0xa5a>
10017844:	a348      	add	r3, pc, #288	@ (adr r3, 10017968 <_strtod_l+0xb28>)
10017846:	e9d3 2300 	ldrd	r2, r3, [r3]
1001784a:	f009 fa0b 	bl	10020c64 <__aeabi_dcmplt>
1001784e:	2800      	cmp	r0, #0
10017850:	f43f ae27 	beq.w	100174a2 <_strtod_l+0x662>
10017854:	464f      	mov	r7, r9
10017856:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001785a:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001785c:	e761      	b.n	10017722 <_strtod_l+0x8e2>
1001785e:	9302      	str	r3, [sp, #8]
10017860:	9b08      	ldr	r3, [sp, #32]
10017862:	9301      	str	r3, [sp, #4]
10017864:	ab1a      	add	r3, sp, #104	@ 0x68
10017866:	9300      	str	r3, [sp, #0]
10017868:	4a4c      	ldr	r2, [pc, #304]	@ (1001799c <_strtod_l+0xb5c>)
1001786a:	ab1b      	add	r3, sp, #108	@ 0x6c
1001786c:	a919      	add	r1, sp, #100	@ 0x64
1001786e:	4658      	mov	r0, fp
10017870:	f000 fd18 	bl	100182a4 <__gethex>
10017874:	f010 050f 	ands.w	r5, r0, #15
10017878:	4604      	mov	r4, r0
1001787a:	f43f aeb8 	beq.w	100175ee <_strtod_l+0x7ae>
1001787e:	2d06      	cmp	r5, #6
10017880:	f040 80ae 	bne.w	100179e0 <_strtod_l+0xba0>
10017884:	9a07      	ldr	r2, [sp, #28]
10017886:	b112      	cbz	r2, 1001788e <_strtod_l+0xa4e>
10017888:	f108 0301 	add.w	r3, r8, #1
1001788c:	6013      	str	r3, [r2, #0]
1001788e:	f04f 0800 	mov.w	r8, #0
10017892:	f04f 0900 	mov.w	r9, #0
10017896:	f7ff bbd8 	b.w	1001704a <_strtod_l+0x20a>
1001789a:	a335      	add	r3, pc, #212	@ (adr r3, 10017970 <_strtod_l+0xb30>)
1001789c:	e9d3 2300 	ldrd	r2, r3, [r3]
100178a0:	f009 f9e0 	bl	10020c64 <__aeabi_dcmplt>
100178a4:	2800      	cmp	r0, #0
100178a6:	d1d5      	bne.n	10017854 <_strtod_l+0xa14>
100178a8:	a333      	add	r3, pc, #204	@ (adr r3, 10017978 <_strtod_l+0xb38>)
100178aa:	e9d3 2300 	ldrd	r2, r3, [r3]
100178ae:	4630      	mov	r0, r6
100178b0:	4639      	mov	r1, r7
100178b2:	f009 f9f5 	bl	10020ca0 <__aeabi_dcmpgt>
100178b6:	2800      	cmp	r0, #0
100178b8:	f43f adf3 	beq.w	100174a2 <_strtod_l+0x662>
100178bc:	e7ca      	b.n	10017854 <_strtod_l+0xa14>
100178be:	9b04      	ldr	r3, [sp, #16]
100178c0:	2b01      	cmp	r3, #1
100178c2:	d19f      	bne.n	10017804 <_strtod_l+0x9c4>
100178c4:	2f00      	cmp	r7, #0
100178c6:	d19d      	bne.n	10017804 <_strtod_l+0x9c4>
100178c8:	464f      	mov	r7, r9
100178ca:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
100178cc:	2322      	movs	r3, #34	@ 0x22
100178ce:	4625      	mov	r5, r4
100178d0:	f8cb 3000 	str.w	r3, [fp]
100178d4:	f04f 0800 	mov.w	r8, #0
100178d8:	f04f 0900 	mov.w	r9, #0
100178dc:	e721      	b.n	10017722 <_strtod_l+0x8e2>
100178de:	2322      	movs	r3, #34	@ 0x22
100178e0:	f8cb 3000 	str.w	r3, [fp]
100178e4:	f8df 909c 	ldr.w	r9, [pc, #156]	@ 10017984 <_strtod_l+0xb44>
100178e8:	f04f 0800 	mov.w	r8, #0
100178ec:	e683      	b.n	100175f6 <_strtod_l+0x7b6>
100178ee:	f101 7454 	add.w	r4, r1, #55574528	@ 0x3500000
100178f2:	9405      	str	r4, [sp, #20]
100178f4:	e5ce      	b.n	10017494 <_strtod_l+0x654>
100178f6:	4664      	mov	r4, ip
100178f8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100178fa:	2908      	cmp	r1, #8
100178fc:	4403      	add	r3, r0
100178fe:	930e      	str	r3, [sp, #56]	@ 0x38
10017900:	f77f ab64 	ble.w	10016fcc <_strtod_l+0x18c>
10017904:	2c10      	cmp	r4, #16
10017906:	bfdc      	itt	le
10017908:	eb09 0989 	addle.w	r9, r9, r9, lsl #2
1001790c:	eb02 0949 	addle.w	r9, r2, r9, lsl #1
10017910:	2000      	movs	r0, #0
10017912:	f7ff bb60 	b.w	10016fd6 <_strtod_l+0x196>
10017916:	4922      	ldr	r1, [pc, #136]	@ (100179a0 <_strtod_l+0xb60>)
10017918:	2201      	movs	r2, #1
1001791a:	4640      	mov	r0, r8
1001791c:	f001 f918 	bl	10018b50 <strncmp>
10017920:	2800      	cmp	r0, #0
10017922:	f000 80a0 	beq.w	10017a66 <_strtod_l+0xc26>
10017926:	f04f 0a00 	mov.w	sl, #0
1001792a:	46d1      	mov	r9, sl
1001792c:	4655      	mov	r5, sl
1001792e:	4650      	mov	r0, sl
10017930:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
10017934:	4654      	mov	r4, sl
10017936:	46d4      	mov	ip, sl
10017938:	f7ff bba7 	b.w	1001708a <_strtod_l+0x24a>
1001793c:	f644 631f 	movw	r3, #19999	@ 0x4e1f
10017940:	4299      	cmp	r1, r3
10017942:	bfa8      	it	ge
10017944:	4619      	movge	r1, r3
10017946:	910f      	str	r1, [sp, #60]	@ 0x3c
10017948:	e41e      	b.n	10017188 <_strtod_l+0x348>
1001794a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1001794c:	4915      	ldr	r1, [pc, #84]	@ (100179a4 <_strtod_l+0xb64>)
1001794e:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
10017952:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
10017956:	e9d1 0100 	ldrd	r0, r1, [r1]
1001795a:	f008 ff11 	bl	10020780 <__aeabi_dmul>
1001795e:	4680      	mov	r8, r0
10017960:	4689      	mov	r9, r1
10017962:	e648      	b.n	100175f6 <_strtod_l+0x7b6>
10017964:	f3af 8000 	nop.w
10017968:	94a03595 	.word	0x94a03595
1001796c:	3fcfffff 	.word	0x3fcfffff
10017970:	94a03595 	.word	0x94a03595
10017974:	3fdfffff 	.word	0x3fdfffff
10017978:	35afe535 	.word	0x35afe535
1001797c:	3fe00000 	.word	0x3fe00000
10017980:	3fe00000 	.word	0x3fe00000
10017984:	7ff00000 	.word	0x7ff00000
10017988:	fffffbe2 	.word	0xfffffbe2
1001798c:	3ff00000 	.word	0x3ff00000
10017990:	7c9fffff 	.word	0x7c9fffff
10017994:	7fefffff 	.word	0x7fefffff
10017998:	bff00000 	.word	0xbff00000
1001799c:	100239b4 	.word	0x100239b4
100179a0:	1002151c 	.word	0x1002151c
100179a4:	1002a7a0 	.word	0x1002a7a0
100179a8:	49a4      	ldr	r1, [pc, #656]	@ (10017c3c <_strtod_l+0xdfc>)
100179aa:	a819      	add	r0, sp, #100	@ 0x64
100179ac:	f000 ffd0 	bl	10018950 <__match>
100179b0:	2800      	cmp	r0, #0
100179b2:	f43f ab43 	beq.w	1001703c <_strtod_l+0x1fc>
100179b6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
100179b8:	49a1      	ldr	r1, [pc, #644]	@ (10017c40 <_strtod_l+0xe00>)
100179ba:	3b01      	subs	r3, #1
100179bc:	a819      	add	r0, sp, #100	@ 0x64
100179be:	9319      	str	r3, [sp, #100]	@ 0x64
100179c0:	f000 ffc6 	bl	10018950 <__match>
100179c4:	2800      	cmp	r0, #0
100179c6:	d18d      	bne.n	100178e4 <_strtod_l+0xaa4>
100179c8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
100179ca:	3301      	adds	r3, #1
100179cc:	9319      	str	r3, [sp, #100]	@ 0x64
100179ce:	e789      	b.n	100178e4 <_strtod_l+0xaa4>
100179d0:	e9dd 3412 	ldrd	r3, r4, [sp, #72]	@ 0x48
100179d4:	e9cd 3416 	strd	r3, r4, [sp, #88]	@ 0x58
100179d8:	e544      	b.n	10017464 <_strtod_l+0x624>
100179da:	2000      	movs	r0, #0
100179dc:	f7ff bae8 	b.w	10016fb0 <_strtod_l+0x170>
100179e0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
100179e2:	b13a      	cbz	r2, 100179f4 <_strtod_l+0xbb4>
100179e4:	2135      	movs	r1, #53	@ 0x35
100179e6:	a81c      	add	r0, sp, #112	@ 0x70
100179e8:	f007 f998 	bl	1001ed1c <__copybits>
100179ec:	991a      	ldr	r1, [sp, #104]	@ 0x68
100179ee:	4658      	mov	r0, fp
100179f0:	f006 fcfa 	bl	1001e3e8 <_Bfree>
100179f4:	3d01      	subs	r5, #1
100179f6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
100179f8:	2d04      	cmp	r5, #4
100179fa:	f200 81fc 	bhi.w	10017df6 <_strtod_l+0xfb6>
100179fe:	e8df f005 	tbb	[pc, r5]
10017a02:	2c03      	.short	0x2c03
10017a04:	1e29      	.short	0x1e29
10017a06:	03          	.byte	0x03
10017a07:	00          	.byte	0x00
10017a08:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10017a0a:	9204      	str	r2, [sp, #16]
10017a0c:	f203 4233 	addw	r2, r3, #1075	@ 0x433
10017a10:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10017a12:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
10017a16:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
10017a1a:	9305      	str	r3, [sp, #20]
10017a1c:	05e1      	lsls	r1, r4, #23
10017a1e:	d502      	bpl.n	10017a26 <_strtod_l+0xbe6>
10017a20:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
10017a24:	9305      	str	r3, [sp, #20]
10017a26:	4a87      	ldr	r2, [pc, #540]	@ (10017c44 <_strtod_l+0xe04>)
10017a28:	401a      	ands	r2, r3
10017a2a:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
10017a2e:	2a00      	cmp	r2, #0
10017a30:	f47f ade1 	bne.w	100175f6 <_strtod_l+0x7b6>
10017a34:	f7fc f952 	bl	10013cdc <__errno>
10017a38:	2322      	movs	r3, #34	@ 0x22
10017a3a:	6003      	str	r3, [r0, #0]
10017a3c:	e5db      	b.n	100175f6 <_strtod_l+0x7b6>
10017a3e:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10017a42:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
10017a46:	e9cd 2304 	strd	r2, r3, [sp, #16]
10017a4a:	05e3      	lsls	r3, r4, #23
10017a4c:	f57f aed7 	bpl.w	100177fe <_strtod_l+0x9be>
10017a50:	9b05      	ldr	r3, [sp, #20]
10017a52:	e7e5      	b.n	10017a20 <_strtod_l+0xbe0>
10017a54:	4b7b      	ldr	r3, [pc, #492]	@ (10017c44 <_strtod_l+0xe04>)
10017a56:	9305      	str	r3, [sp, #20]
10017a58:	e7f7      	b.n	10017a4a <_strtod_l+0xc0a>
10017a5a:	e9dd 121c 	ldrd	r1, r2, [sp, #112]	@ 0x70
10017a5e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10017a60:	e9cd 1204 	strd	r1, r2, [sp, #16]
10017a64:	e7da      	b.n	10017a1c <_strtod_l+0xbdc>
10017a66:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10017a68:	4613      	mov	r3, r2
10017a6a:	3201      	adds	r2, #1
10017a6c:	9219      	str	r2, [sp, #100]	@ 0x64
10017a6e:	785f      	ldrb	r7, [r3, #1]
10017a70:	4605      	mov	r5, r0
10017a72:	4681      	mov	r9, r0
10017a74:	f7ff ba8f 	b.w	10016f96 <_strtod_l+0x156>
10017a78:	4d73      	ldr	r5, [pc, #460]	@ (10017c48 <_strtod_l+0xe08>)
10017a7a:	f1c4 040f 	rsb	r4, r4, #15
10017a7e:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
10017a82:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
10017a86:	e9d1 0100 	ldrd	r0, r1, [r1]
10017a8a:	f008 fe79 	bl	10020780 <__aeabi_dmul>
10017a8e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10017a90:	1b1c      	subs	r4, r3, r4
10017a92:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
10017a96:	e9d5 2300 	ldrd	r2, r3, [r5]
10017a9a:	f008 fe71 	bl	10020780 <__aeabi_dmul>
10017a9e:	4680      	mov	r8, r0
10017aa0:	4689      	mov	r9, r1
10017aa2:	e5a8      	b.n	100175f6 <_strtod_l+0x7b6>
10017aa4:	46a2      	mov	sl, r4
10017aa6:	900e      	str	r0, [sp, #56]	@ 0x38
10017aa8:	f7ff ba98 	b.w	10016fdc <_strtod_l+0x19c>
10017aac:	4c67      	ldr	r4, [pc, #412]	@ (10017c4c <_strtod_l+0xe0c>)
10017aae:	2300      	movs	r3, #0
10017ab0:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
10017ab4:	4c66      	ldr	r4, [pc, #408]	@ (10017c50 <_strtod_l+0xe10>)
10017ab6:	2300      	movs	r3, #0
10017ab8:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
10017abc:	e4a8      	b.n	10017410 <_strtod_l+0x5d0>
10017abe:	980f      	ldr	r0, [sp, #60]	@ 0x3c
10017ac0:	4964      	ldr	r1, [pc, #400]	@ (10017c54 <_strtod_l+0xe14>)
10017ac2:	463b      	mov	r3, r7
10017ac4:	46c4      	mov	ip, r8
10017ac6:	464f      	mov	r7, r9
10017ac8:	46ae      	mov	lr, r5
10017aca:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
10017ace:	f3c3 0213 	ubfx	r2, r3, #0, #20
10017ad2:	2800      	cmp	r0, #0
10017ad4:	d04c      	beq.n	10017b70 <_strtod_l+0xd30>
10017ad6:	428a      	cmp	r2, r1
10017ad8:	f000 80fc 	beq.w	10017cd4 <_strtod_l+0xe94>
10017adc:	2d00      	cmp	r5, #0
10017ade:	f000 80f3 	beq.w	10017cc8 <_strtod_l+0xe88>
10017ae2:	421d      	tst	r5, r3
10017ae4:	d03b      	beq.n	10017b5e <_strtod_l+0xd1e>
10017ae6:	4640      	mov	r0, r8
10017ae8:	4649      	mov	r1, r9
10017aea:	9304      	str	r3, [sp, #16]
10017aec:	f007 f808 	bl	1001eb00 <__ulp>
10017af0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10017af2:	4604      	mov	r4, r0
10017af4:	460d      	mov	r5, r1
10017af6:	2b00      	cmp	r3, #0
10017af8:	f000 8128 	beq.w	10017d4c <_strtod_l+0xf0c>
10017afc:	9b04      	ldr	r3, [sp, #16]
10017afe:	f3c3 530a 	ubfx	r3, r3, #20, #11
10017b02:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
10017b06:	2b00      	cmp	r3, #0
10017b08:	f340 8151 	ble.w	10017dae <_strtod_l+0xf6e>
10017b0c:	051c      	lsls	r4, r3, #20
10017b0e:	f104 537f 	add.w	r3, r4, #1069547520	@ 0x3fc00000
10017b12:	2200      	movs	r2, #0
10017b14:	f503 1340 	add.w	r3, r3, #3145728	@ 0x300000
10017b18:	f008 fe32 	bl	10020780 <__aeabi_dmul>
10017b1c:	4602      	mov	r2, r0
10017b1e:	460b      	mov	r3, r1
10017b20:	4640      	mov	r0, r8
10017b22:	4649      	mov	r1, r9
10017b24:	f008 fc76 	bl	10020414 <__adddf3>
10017b28:	4680      	mov	r8, r0
10017b2a:	4689      	mov	r9, r1
10017b2c:	4b4a      	ldr	r3, [pc, #296]	@ (10017c58 <_strtod_l+0xe18>)
10017b2e:	4640      	mov	r0, r8
10017b30:	4649      	mov	r1, r9
10017b32:	2200      	movs	r2, #0
10017b34:	f008 fe24 	bl	10020780 <__aeabi_dmul>
10017b38:	4b42      	ldr	r3, [pc, #264]	@ (10017c44 <_strtod_l+0xe04>)
10017b3a:	400b      	ands	r3, r1
10017b3c:	4680      	mov	r8, r0
10017b3e:	4689      	mov	r9, r1
10017b40:	2b00      	cmp	r3, #0
10017b42:	f47f ae8a 	bne.w	1001785a <_strtod_l+0xa1a>
10017b46:	2322      	movs	r3, #34	@ 0x22
10017b48:	f8cb 3000 	str.w	r3, [fp]
10017b4c:	e685      	b.n	1001785a <_strtod_l+0xa1a>
10017b4e:	f1be 0f00 	cmp.w	lr, #0
10017b52:	f000 8089 	beq.w	10017c68 <_strtod_l+0xe28>
10017b56:	ea1e 0f03 	tst.w	lr, r3
10017b5a:	f040 8089 	bne.w	10017c70 <_strtod_l+0xe30>
10017b5e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10017b60:	2b00      	cmp	r3, #0
10017b62:	d1e3      	bne.n	10017b2c <_strtod_l+0xcec>
10017b64:	e679      	b.n	1001785a <_strtod_l+0xa1a>
10017b66:	f102 7354 	add.w	r3, r2, #55574528	@ 0x3500000
10017b6a:	9305      	str	r3, [sp, #20]
10017b6c:	f7ff bbac 	b.w	100172c8 <_strtod_l+0x488>
10017b70:	2a00      	cmp	r2, #0
10017b72:	d175      	bne.n	10017c60 <_strtod_l+0xe20>
10017b74:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
10017b78:	4622      	mov	r2, r4
10017b7a:	2c00      	cmp	r4, #0
10017b7c:	d1e7      	bne.n	10017b4e <_strtod_l+0xd0e>
10017b7e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10017b80:	2a00      	cmp	r2, #0
10017b82:	f040 80be 	bne.w	10017d02 <_strtod_l+0xec2>
10017b86:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
10017b8a:	0d24      	lsrs	r4, r4, #20
10017b8c:	0524      	lsls	r4, r4, #20
10017b8e:	f5a4 1480 	sub.w	r4, r4, #1048576	@ 0x100000
10017b92:	ea6f 5314 	mvn.w	r3, r4, lsr #20
10017b96:	ea6f 5303 	mvn.w	r3, r3, lsl #20
10017b9a:	9305      	str	r3, [sp, #20]
10017b9c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10017ba0:	9304      	str	r3, [sp, #16]
10017ba2:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
10017ba6:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
10017ba8:	e5bb      	b.n	10017722 <_strtod_l+0x8e2>
10017baa:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10017bae:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10017bb0:	4303      	orrs	r3, r0
10017bb2:	464f      	mov	r7, r9
10017bb4:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
10017bb8:	d1d1      	bne.n	10017b5e <_strtod_l+0xd1e>
10017bba:	f3c1 0313 	ubfx	r3, r1, #0, #20
10017bbe:	2b00      	cmp	r3, #0
10017bc0:	d1cd      	bne.n	10017b5e <_strtod_l+0xd1e>
10017bc2:	f021 4400 	bic.w	r4, r1, #2147483648	@ 0x80000000
10017bc6:	0d24      	lsrs	r4, r4, #20
10017bc8:	0524      	lsls	r4, r4, #20
10017bca:	f1b4 6fd6 	cmp.w	r4, #112197632	@ 0x6b00000
10017bce:	4625      	mov	r5, r4
10017bd0:	d9c5      	bls.n	10017b5e <_strtod_l+0xd1e>
10017bd2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10017bd4:	6953      	ldr	r3, [r2, #20]
10017bd6:	b913      	cbnz	r3, 10017bde <_strtod_l+0xd9e>
10017bd8:	6913      	ldr	r3, [r2, #16]
10017bda:	2b01      	cmp	r3, #1
10017bdc:	ddbf      	ble.n	10017b5e <_strtod_l+0xd1e>
10017bde:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017be0:	2201      	movs	r2, #1
10017be2:	4658      	mov	r0, fp
10017be4:	f006 fe42 	bl	1001e86c <__lshift>
10017be8:	4651      	mov	r1, sl
10017bea:	9009      	str	r0, [sp, #36]	@ 0x24
10017bec:	f006 feb6 	bl	1001e95c <__mcmp>
10017bf0:	2800      	cmp	r0, #0
10017bf2:	ddb4      	ble.n	10017b5e <_strtod_l+0xd1e>
10017bf4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10017bf6:	2b00      	cmp	r3, #0
10017bf8:	d0c9      	beq.n	10017b8e <_strtod_l+0xd4e>
10017bfa:	f5a5 1380 	sub.w	r3, r5, #1048576	@ 0x100000
10017bfe:	ea6f 5313 	mvn.w	r3, r3, lsr #20
10017c02:	ea6f 5303 	mvn.w	r3, r3, lsl #20
10017c06:	9305      	str	r3, [sp, #20]
10017c08:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10017c0c:	9304      	str	r3, [sp, #16]
10017c0e:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
10017c12:	e78b      	b.n	10017b2c <_strtod_l+0xcec>
10017c14:	4911      	ldr	r1, [pc, #68]	@ (10017c5c <_strtod_l+0xe1c>)
10017c16:	a819      	add	r0, sp, #100	@ 0x64
10017c18:	aa1c      	add	r2, sp, #112	@ 0x70
10017c1a:	f000 feb3 	bl	10018984 <__hexnan>
10017c1e:	2805      	cmp	r0, #5
10017c20:	f47f aa56 	bne.w	100170d0 <_strtod_l+0x290>
10017c24:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10017c26:	f043 43ff 	orr.w	r3, r3, #2139095040	@ 0x7f800000
10017c2a:	f443 03e0 	orr.w	r3, r3, #7340032	@ 0x700000
10017c2e:	9305      	str	r3, [sp, #20]
10017c30:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10017c32:	9304      	str	r3, [sp, #16]
10017c34:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
10017c38:	e4dd      	b.n	100175f6 <_strtod_l+0x7b6>
10017c3a:	bf00      	nop
10017c3c:	10023990 	.word	0x10023990
10017c40:	10023994 	.word	0x10023994
10017c44:	7ff00000 	.word	0x7ff00000
10017c48:	1002a7a0 	.word	0x1002a7a0
10017c4c:	bfe00000 	.word	0xbfe00000
10017c50:	3fe00000 	.word	0x3fe00000
10017c54:	000fffff 	.word	0x000fffff
10017c58:	39500000 	.word	0x39500000
10017c5c:	100239a0 	.word	0x100239a0
10017c60:	2d00      	cmp	r5, #0
10017c62:	f47f af78 	bne.w	10017b56 <_strtod_l+0xd16>
10017c66:	9a04      	ldr	r2, [sp, #16]
10017c68:	ea1c 0f02 	tst.w	ip, r2
10017c6c:	f43f af77 	beq.w	10017b5e <_strtod_l+0xd1e>
10017c70:	4640      	mov	r0, r8
10017c72:	4649      	mov	r1, r9
10017c74:	9304      	str	r3, [sp, #16]
10017c76:	f006 ff43 	bl	1001eb00 <__ulp>
10017c7a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10017c7c:	2b00      	cmp	r3, #0
10017c7e:	d053      	beq.n	10017d28 <_strtod_l+0xee8>
10017c80:	9b04      	ldr	r3, [sp, #16]
10017c82:	f3c3 530a 	ubfx	r3, r3, #20, #11
10017c86:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
10017c8a:	2b00      	cmp	r3, #0
10017c8c:	f340 809b 	ble.w	10017dc6 <_strtod_l+0xf86>
10017c90:	051c      	lsls	r4, r3, #20
10017c92:	f104 537f 	add.w	r3, r4, #1069547520	@ 0x3fc00000
10017c96:	2200      	movs	r2, #0
10017c98:	f503 1340 	add.w	r3, r3, #3145728	@ 0x300000
10017c9c:	f008 fd70 	bl	10020780 <__aeabi_dmul>
10017ca0:	4602      	mov	r2, r0
10017ca2:	460b      	mov	r3, r1
10017ca4:	4640      	mov	r0, r8
10017ca6:	4649      	mov	r1, r9
10017ca8:	f008 fbb2 	bl	10020410 <__aeabi_dsub>
10017cac:	2200      	movs	r2, #0
10017cae:	2300      	movs	r3, #0
10017cb0:	4680      	mov	r8, r0
10017cb2:	4689      	mov	r9, r1
10017cb4:	f008 ffcc 	bl	10020c50 <__aeabi_dcmpeq>
10017cb8:	2800      	cmp	r0, #0
10017cba:	f43f af37 	beq.w	10017b2c <_strtod_l+0xcec>
10017cbe:	e604      	b.n	100178ca <_strtod_l+0xa8a>
10017cc0:	f04f 0900 	mov.w	r9, #0
10017cc4:	f7ff bae1 	b.w	1001728a <_strtod_l+0x44a>
10017cc8:	9a04      	ldr	r2, [sp, #16]
10017cca:	ea1c 0f02 	tst.w	ip, r2
10017cce:	f43f af46 	beq.w	10017b5e <_strtod_l+0xd1e>
10017cd2:	e708      	b.n	10017ae6 <_strtod_l+0xca6>
10017cd4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10017cd8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10017cda:	4604      	mov	r4, r0
10017cdc:	2a00      	cmp	r2, #0
10017cde:	d147      	bne.n	10017d70 <_strtod_l+0xf30>
10017ce0:	4602      	mov	r2, r0
10017ce2:	3201      	adds	r2, #1
10017ce4:	d077      	beq.n	10017dd6 <_strtod_l+0xf96>
10017ce6:	2d00      	cmp	r5, #0
10017ce8:	d070      	beq.n	10017dcc <_strtod_l+0xf8c>
10017cea:	421d      	tst	r5, r3
10017cec:	f43f adb5 	beq.w	1001785a <_strtod_l+0xa1a>
10017cf0:	e6f9      	b.n	10017ae6 <_strtod_l+0xca6>
10017cf2:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10017cf6:	fa02 f303 	lsl.w	r3, r2, r3
10017cfa:	9a04      	ldr	r2, [sp, #16]
10017cfc:	401a      	ands	r2, r3
10017cfe:	9204      	str	r2, [sp, #16]
10017d00:	e467      	b.n	100175d2 <_strtod_l+0x792>
10017d02:	4d3e      	ldr	r5, [pc, #248]	@ (10017dfc <_strtod_l+0xfbc>)
10017d04:	401d      	ands	r5, r3
10017d06:	f1b5 6fd6 	cmp.w	r5, #112197632	@ 0x6b00000
10017d0a:	f63f af76 	bhi.w	10017bfa <_strtod_l+0xdba>
10017d0e:	f1b5 7f5c 	cmp.w	r5, #57671680	@ 0x3700000
10017d12:	f63f af0b 	bhi.w	10017b2c <_strtod_l+0xcec>
10017d16:	2322      	movs	r3, #34	@ 0x22
10017d18:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
10017d1a:	f8cb 3000 	str.w	r3, [fp]
10017d1e:	f04f 0800 	mov.w	r8, #0
10017d22:	f04f 0900 	mov.w	r9, #0
10017d26:	e4fc      	b.n	10017722 <_strtod_l+0x8e2>
10017d28:	4602      	mov	r2, r0
10017d2a:	460b      	mov	r3, r1
10017d2c:	4640      	mov	r0, r8
10017d2e:	4649      	mov	r1, r9
10017d30:	f008 fb6e 	bl	10020410 <__aeabi_dsub>
10017d34:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
10017d36:	2200      	movs	r2, #0
10017d38:	2300      	movs	r3, #0
10017d3a:	4680      	mov	r8, r0
10017d3c:	4689      	mov	r9, r1
10017d3e:	4625      	mov	r5, r4
10017d40:	f008 ff86 	bl	10020c50 <__aeabi_dcmpeq>
10017d44:	2800      	cmp	r0, #0
10017d46:	f43f acec 	beq.w	10017722 <_strtod_l+0x8e2>
10017d4a:	e5bf      	b.n	100178cc <_strtod_l+0xa8c>
10017d4c:	4640      	mov	r0, r8
10017d4e:	4649      	mov	r1, r9
10017d50:	462b      	mov	r3, r5
10017d52:	4622      	mov	r2, r4
10017d54:	f008 fb5e 	bl	10020414 <__adddf3>
10017d58:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
10017d5a:	4680      	mov	r8, r0
10017d5c:	4689      	mov	r9, r1
10017d5e:	e4e0      	b.n	10017722 <_strtod_l+0x8e2>
10017d60:	f1c2 024b 	rsb	r2, r2, #75	@ 0x4b
10017d64:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10017d68:	4093      	lsls	r3, r2
10017d6a:	400b      	ands	r3, r1
10017d6c:	9305      	str	r3, [sp, #20]
10017d6e:	e430      	b.n	100175d2 <_strtod_l+0x792>
10017d70:	4a22      	ldr	r2, [pc, #136]	@ (10017dfc <_strtod_l+0xfbc>)
10017d72:	401a      	ands	r2, r3
10017d74:	f1b2 6fd4 	cmp.w	r2, #111149056	@ 0x6a00000
10017d78:	d909      	bls.n	10017d8e <_strtod_l+0xf4e>
10017d7a:	1c61      	adds	r1, r4, #1
10017d7c:	d032      	beq.n	10017de4 <_strtod_l+0xfa4>
10017d7e:	f1be 0f00 	cmp.w	lr, #0
10017d82:	d033      	beq.n	10017dec <_strtod_l+0xfac>
10017d84:	ea1e 0f03 	tst.w	lr, r3
10017d88:	f43f aed0 	beq.w	10017b2c <_strtod_l+0xcec>
10017d8c:	e6ab      	b.n	10017ae6 <_strtod_l+0xca6>
10017d8e:	0d10      	lsrs	r0, r2, #20
10017d90:	f1c0 006b 	rsb	r0, r0, #107	@ 0x6b
10017d94:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
10017d98:	4081      	lsls	r1, r0
10017d9a:	428c      	cmp	r4, r1
10017d9c:	d1ef      	bne.n	10017d7e <_strtod_l+0xf3e>
10017d9e:	f502 1380 	add.w	r3, r2, #1048576	@ 0x100000
10017da2:	9305      	str	r3, [sp, #20]
10017da4:	2300      	movs	r3, #0
10017da6:	9304      	str	r3, [sp, #16]
10017da8:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
10017dac:	e6d7      	b.n	10017b5e <_strtod_l+0xd1e>
10017dae:	4640      	mov	r0, r8
10017db0:	4649      	mov	r1, r9
10017db2:	4622      	mov	r2, r4
10017db4:	462b      	mov	r3, r5
10017db6:	f008 fb2d 	bl	10020414 <__adddf3>
10017dba:	4680      	mov	r8, r0
10017dbc:	4689      	mov	r9, r1
10017dbe:	e6b5      	b.n	10017b2c <_strtod_l+0xcec>
10017dc0:	4621      	mov	r1, r4
10017dc2:	3401      	adds	r4, #1
10017dc4:	e598      	b.n	100178f8 <_strtod_l+0xab8>
10017dc6:	4602      	mov	r2, r0
10017dc8:	460b      	mov	r3, r1
10017dca:	e76b      	b.n	10017ca4 <_strtod_l+0xe64>
10017dcc:	ea10 0f0c 	tst.w	r0, ip
10017dd0:	f43f ad43 	beq.w	1001785a <_strtod_l+0xa1a>
10017dd4:	e687      	b.n	10017ae6 <_strtod_l+0xca6>
10017dd6:	4a0a      	ldr	r2, [pc, #40]	@ (10017e00 <_strtod_l+0xfc0>)
10017dd8:	4293      	cmp	r3, r2
10017dda:	f43f acc5 	beq.w	10017768 <_strtod_l+0x928>
10017dde:	3201      	adds	r2, #1
10017de0:	401a      	ands	r2, r3
10017de2:	e7dc      	b.n	10017d9e <_strtod_l+0xf5e>
10017de4:	4906      	ldr	r1, [pc, #24]	@ (10017e00 <_strtod_l+0xfc0>)
10017de6:	428b      	cmp	r3, r1
10017de8:	d1d9      	bne.n	10017d9e <_strtod_l+0xf5e>
10017dea:	e4bd      	b.n	10017768 <_strtod_l+0x928>
10017dec:	ea14 0f0c 	tst.w	r4, ip
10017df0:	f43f ae9c 	beq.w	10017b2c <_strtod_l+0xcec>
10017df4:	e677      	b.n	10017ae6 <_strtod_l+0xca6>
10017df6:	2300      	movs	r3, #0
10017df8:	e610      	b.n	10017a1c <_strtod_l+0xbdc>
10017dfa:	bf00      	nop
10017dfc:	7ff00000 	.word	0x7ff00000
10017e00:	7fefffff 	.word	0x7fefffff

10017e04 <_strtod_r>:
10017e04:	4b01      	ldr	r3, [pc, #4]	@ (10017e0c <_strtod_r+0x8>)
10017e06:	f7ff b81b 	b.w	10016e40 <_strtod_l>
10017e0a:	bf00      	nop
10017e0c:	20000424 	.word	0x20000424

10017e10 <_malloc_trim_r>:
10017e10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10017e14:	4606      	mov	r6, r0
10017e16:	2008      	movs	r0, #8
10017e18:	4689      	mov	r9, r1
10017e1a:	f7fe f877 	bl	10015f0c <sysconf>
10017e1e:	f8df 809c 	ldr.w	r8, [pc, #156]	@ 10017ebc <_malloc_trim_r+0xac>
10017e22:	4605      	mov	r5, r0
10017e24:	4630      	mov	r0, r6
10017e26:	f7fe fafd 	bl	10016424 <__malloc_lock>
10017e2a:	f8d8 3008 	ldr.w	r3, [r8, #8]
10017e2e:	685f      	ldr	r7, [r3, #4]
10017e30:	f027 0703 	bic.w	r7, r7, #3
10017e34:	f1a7 0411 	sub.w	r4, r7, #17
10017e38:	eba4 0409 	sub.w	r4, r4, r9
10017e3c:	442c      	add	r4, r5
10017e3e:	fbb4 f4f5 	udiv	r4, r4, r5
10017e42:	3c01      	subs	r4, #1
10017e44:	fb05 f404 	mul.w	r4, r5, r4
10017e48:	42a5      	cmp	r5, r4
10017e4a:	dc08      	bgt.n	10017e5e <_malloc_trim_r+0x4e>
10017e4c:	2100      	movs	r1, #0
10017e4e:	4630      	mov	r0, r6
10017e50:	f001 f942 	bl	100190d8 <_sbrk_r>
10017e54:	f8d8 3008 	ldr.w	r3, [r8, #8]
10017e58:	443b      	add	r3, r7
10017e5a:	4298      	cmp	r0, r3
10017e5c:	d005      	beq.n	10017e6a <_malloc_trim_r+0x5a>
10017e5e:	4630      	mov	r0, r6
10017e60:	f7fe fae6 	bl	10016430 <__malloc_unlock>
10017e64:	2000      	movs	r0, #0
10017e66:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10017e6a:	4261      	negs	r1, r4
10017e6c:	4630      	mov	r0, r6
10017e6e:	f001 f933 	bl	100190d8 <_sbrk_r>
10017e72:	3001      	adds	r0, #1
10017e74:	d00f      	beq.n	10017e96 <_malloc_trim_r+0x86>
10017e76:	4a12      	ldr	r2, [pc, #72]	@ (10017ec0 <_malloc_trim_r+0xb0>)
10017e78:	f8d8 3008 	ldr.w	r3, [r8, #8]
10017e7c:	1b3f      	subs	r7, r7, r4
10017e7e:	f047 0701 	orr.w	r7, r7, #1
10017e82:	605f      	str	r7, [r3, #4]
10017e84:	6813      	ldr	r3, [r2, #0]
10017e86:	4630      	mov	r0, r6
10017e88:	1b1b      	subs	r3, r3, r4
10017e8a:	6013      	str	r3, [r2, #0]
10017e8c:	f7fe fad0 	bl	10016430 <__malloc_unlock>
10017e90:	2001      	movs	r0, #1
10017e92:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10017e96:	2100      	movs	r1, #0
10017e98:	4630      	mov	r0, r6
10017e9a:	f001 f91d 	bl	100190d8 <_sbrk_r>
10017e9e:	f8d8 2008 	ldr.w	r2, [r8, #8]
10017ea2:	1a83      	subs	r3, r0, r2
10017ea4:	2b0f      	cmp	r3, #15
10017ea6:	ddda      	ble.n	10017e5e <_malloc_trim_r+0x4e>
10017ea8:	f043 0301 	orr.w	r3, r3, #1
10017eac:	6053      	str	r3, [r2, #4]
10017eae:	4b05      	ldr	r3, [pc, #20]	@ (10017ec4 <_malloc_trim_r+0xb4>)
10017eb0:	4903      	ldr	r1, [pc, #12]	@ (10017ec0 <_malloc_trim_r+0xb0>)
10017eb2:	681b      	ldr	r3, [r3, #0]
10017eb4:	1ac0      	subs	r0, r0, r3
10017eb6:	6008      	str	r0, [r1, #0]
10017eb8:	e7d1      	b.n	10017e5e <_malloc_trim_r+0x4e>
10017eba:	bf00      	nop
10017ebc:	20000018 	.word	0x20000018
10017ec0:	20001454 	.word	0x20001454
10017ec4:	20000010 	.word	0x20000010

10017ec8 <_free_r>:
10017ec8:	2900      	cmp	r1, #0
10017eca:	d07c      	beq.n	10017fc6 <_free_r+0xfe>
10017ecc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10017ece:	460c      	mov	r4, r1
10017ed0:	4606      	mov	r6, r0
10017ed2:	f7fe faa7 	bl	10016424 <__malloc_lock>
10017ed6:	f854 3c04 	ldr.w	r3, [r4, #-4]
10017eda:	4f77      	ldr	r7, [pc, #476]	@ (100180b8 <_free_r+0x1f0>)
10017edc:	f1a4 0508 	sub.w	r5, r4, #8
10017ee0:	f023 0101 	bic.w	r1, r3, #1
10017ee4:	1868      	adds	r0, r5, r1
10017ee6:	f8d7 c008 	ldr.w	ip, [r7, #8]
10017eea:	6842      	ldr	r2, [r0, #4]
10017eec:	4584      	cmp	ip, r0
10017eee:	f022 0203 	bic.w	r2, r2, #3
10017ef2:	f000 8083 	beq.w	10017ffc <_free_r+0x134>
10017ef6:	07db      	lsls	r3, r3, #31
10017ef8:	6042      	str	r2, [r0, #4]
10017efa:	eb00 0c02 	add.w	ip, r0, r2
10017efe:	d433      	bmi.n	10017f68 <_free_r+0xa0>
10017f00:	f854 4c08 	ldr.w	r4, [r4, #-8]
10017f04:	f8dc 3004 	ldr.w	r3, [ip, #4]
10017f08:	1b2d      	subs	r5, r5, r4
10017f0a:	4421      	add	r1, r4
10017f0c:	68ac      	ldr	r4, [r5, #8]
10017f0e:	f107 0c08 	add.w	ip, r7, #8
10017f12:	4564      	cmp	r4, ip
10017f14:	f003 0301 	and.w	r3, r3, #1
10017f18:	d064      	beq.n	10017fe4 <_free_r+0x11c>
10017f1a:	f8d5 e00c 	ldr.w	lr, [r5, #12]
10017f1e:	f8c4 e00c 	str.w	lr, [r4, #12]
10017f22:	f8ce 4008 	str.w	r4, [lr, #8]
10017f26:	2b00      	cmp	r3, #0
10017f28:	f000 8081 	beq.w	1001802e <_free_r+0x166>
10017f2c:	f041 0301 	orr.w	r3, r1, #1
10017f30:	606b      	str	r3, [r5, #4]
10017f32:	6001      	str	r1, [r0, #0]
10017f34:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10017f38:	d222      	bcs.n	10017f80 <_free_r+0xb8>
10017f3a:	6878      	ldr	r0, [r7, #4]
10017f3c:	08cb      	lsrs	r3, r1, #3
10017f3e:	2201      	movs	r2, #1
10017f40:	0949      	lsrs	r1, r1, #5
10017f42:	3301      	adds	r3, #1
10017f44:	408a      	lsls	r2, r1
10017f46:	4302      	orrs	r2, r0
10017f48:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
10017f4c:	607a      	str	r2, [r7, #4]
10017f4e:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
10017f52:	3a08      	subs	r2, #8
10017f54:	e9c5 1202 	strd	r1, r2, [r5, #8]
10017f58:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
10017f5c:	60cd      	str	r5, [r1, #12]
10017f5e:	4630      	mov	r0, r6
10017f60:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
10017f64:	f7fe ba64 	b.w	10016430 <__malloc_unlock>
10017f68:	f8dc 3004 	ldr.w	r3, [ip, #4]
10017f6c:	07db      	lsls	r3, r3, #31
10017f6e:	d52b      	bpl.n	10017fc8 <_free_r+0x100>
10017f70:	f041 0301 	orr.w	r3, r1, #1
10017f74:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10017f78:	f844 3c04 	str.w	r3, [r4, #-4]
10017f7c:	6001      	str	r1, [r0, #0]
10017f7e:	d3dc      	bcc.n	10017f3a <_free_r+0x72>
10017f80:	f5b1 6f20 	cmp.w	r1, #2560	@ 0xa00
10017f84:	ea4f 2351 	mov.w	r3, r1, lsr #9
10017f88:	d253      	bcs.n	10018032 <_free_r+0x16a>
10017f8a:	098b      	lsrs	r3, r1, #6
10017f8c:	f103 0039 	add.w	r0, r3, #57	@ 0x39
10017f90:	f103 0238 	add.w	r2, r3, #56	@ 0x38
10017f94:	00c3      	lsls	r3, r0, #3
10017f96:	18f8      	adds	r0, r7, r3
10017f98:	58fb      	ldr	r3, [r7, r3]
10017f9a:	3808      	subs	r0, #8
10017f9c:	4298      	cmp	r0, r3
10017f9e:	d103      	bne.n	10017fa8 <_free_r+0xe0>
10017fa0:	e063      	b.n	1001806a <_free_r+0x1a2>
10017fa2:	689b      	ldr	r3, [r3, #8]
10017fa4:	4298      	cmp	r0, r3
10017fa6:	d004      	beq.n	10017fb2 <_free_r+0xea>
10017fa8:	685a      	ldr	r2, [r3, #4]
10017faa:	f022 0203 	bic.w	r2, r2, #3
10017fae:	428a      	cmp	r2, r1
10017fb0:	d8f7      	bhi.n	10017fa2 <_free_r+0xda>
10017fb2:	68d8      	ldr	r0, [r3, #12]
10017fb4:	e9c5 3002 	strd	r3, r0, [r5, #8]
10017fb8:	6085      	str	r5, [r0, #8]
10017fba:	60dd      	str	r5, [r3, #12]
10017fbc:	4630      	mov	r0, r6
10017fbe:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
10017fc2:	f7fe ba35 	b.w	10016430 <__malloc_unlock>
10017fc6:	4770      	bx	lr
10017fc8:	4411      	add	r1, r2
10017fca:	f107 0c08 	add.w	ip, r7, #8
10017fce:	6883      	ldr	r3, [r0, #8]
10017fd0:	4563      	cmp	r3, ip
10017fd2:	d03f      	beq.n	10018054 <_free_r+0x18c>
10017fd4:	68c2      	ldr	r2, [r0, #12]
10017fd6:	60da      	str	r2, [r3, #12]
10017fd8:	6093      	str	r3, [r2, #8]
10017fda:	f041 0301 	orr.w	r3, r1, #1
10017fde:	606b      	str	r3, [r5, #4]
10017fe0:	5069      	str	r1, [r5, r1]
10017fe2:	e7a7      	b.n	10017f34 <_free_r+0x6c>
10017fe4:	2b00      	cmp	r3, #0
10017fe6:	d161      	bne.n	100180ac <_free_r+0x1e4>
10017fe8:	440a      	add	r2, r1
10017fea:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
10017fee:	60cb      	str	r3, [r1, #12]
10017ff0:	6099      	str	r1, [r3, #8]
10017ff2:	f042 0301 	orr.w	r3, r2, #1
10017ff6:	606b      	str	r3, [r5, #4]
10017ff8:	50aa      	str	r2, [r5, r2]
10017ffa:	e7b0      	b.n	10017f5e <_free_r+0x96>
10017ffc:	440a      	add	r2, r1
10017ffe:	07d9      	lsls	r1, r3, #31
10018000:	d407      	bmi.n	10018012 <_free_r+0x14a>
10018002:	f854 3c08 	ldr.w	r3, [r4, #-8]
10018006:	1aed      	subs	r5, r5, r3
10018008:	441a      	add	r2, r3
1001800a:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
1001800e:	60cb      	str	r3, [r1, #12]
10018010:	6099      	str	r1, [r3, #8]
10018012:	f042 0301 	orr.w	r3, r2, #1
10018016:	606b      	str	r3, [r5, #4]
10018018:	4b28      	ldr	r3, [pc, #160]	@ (100180bc <_free_r+0x1f4>)
1001801a:	60bd      	str	r5, [r7, #8]
1001801c:	681b      	ldr	r3, [r3, #0]
1001801e:	4293      	cmp	r3, r2
10018020:	d89d      	bhi.n	10017f5e <_free_r+0x96>
10018022:	4b27      	ldr	r3, [pc, #156]	@ (100180c0 <_free_r+0x1f8>)
10018024:	4630      	mov	r0, r6
10018026:	6819      	ldr	r1, [r3, #0]
10018028:	f7ff fef2 	bl	10017e10 <_malloc_trim_r>
1001802c:	e797      	b.n	10017f5e <_free_r+0x96>
1001802e:	4411      	add	r1, r2
10018030:	e7cd      	b.n	10017fce <_free_r+0x106>
10018032:	2b14      	cmp	r3, #20
10018034:	d908      	bls.n	10018048 <_free_r+0x180>
10018036:	2b54      	cmp	r3, #84	@ 0x54
10018038:	d81f      	bhi.n	1001807a <_free_r+0x1b2>
1001803a:	0b0b      	lsrs	r3, r1, #12
1001803c:	f103 006f 	add.w	r0, r3, #111	@ 0x6f
10018040:	f103 026e 	add.w	r2, r3, #110	@ 0x6e
10018044:	00c3      	lsls	r3, r0, #3
10018046:	e7a6      	b.n	10017f96 <_free_r+0xce>
10018048:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
1001804c:	f103 025b 	add.w	r2, r3, #91	@ 0x5b
10018050:	00c3      	lsls	r3, r0, #3
10018052:	e7a0      	b.n	10017f96 <_free_r+0xce>
10018054:	f041 0301 	orr.w	r3, r1, #1
10018058:	613d      	str	r5, [r7, #16]
1001805a:	617d      	str	r5, [r7, #20]
1001805c:	f8c5 c008 	str.w	ip, [r5, #8]
10018060:	f8c5 c00c 	str.w	ip, [r5, #12]
10018064:	606b      	str	r3, [r5, #4]
10018066:	5069      	str	r1, [r5, r1]
10018068:	e779      	b.n	10017f5e <_free_r+0x96>
1001806a:	6879      	ldr	r1, [r7, #4]
1001806c:	1092      	asrs	r2, r2, #2
1001806e:	2401      	movs	r4, #1
10018070:	fa04 f202 	lsl.w	r2, r4, r2
10018074:	430a      	orrs	r2, r1
10018076:	607a      	str	r2, [r7, #4]
10018078:	e79c      	b.n	10017fb4 <_free_r+0xec>
1001807a:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
1001807e:	d806      	bhi.n	1001808e <_free_r+0x1c6>
10018080:	0bcb      	lsrs	r3, r1, #15
10018082:	f103 0078 	add.w	r0, r3, #120	@ 0x78
10018086:	f103 0277 	add.w	r2, r3, #119	@ 0x77
1001808a:	00c3      	lsls	r3, r0, #3
1001808c:	e783      	b.n	10017f96 <_free_r+0xce>
1001808e:	f240 5254 	movw	r2, #1364	@ 0x554
10018092:	4293      	cmp	r3, r2
10018094:	d806      	bhi.n	100180a4 <_free_r+0x1dc>
10018096:	0c8b      	lsrs	r3, r1, #18
10018098:	f103 007d 	add.w	r0, r3, #125	@ 0x7d
1001809c:	f103 027c 	add.w	r2, r3, #124	@ 0x7c
100180a0:	00c3      	lsls	r3, r0, #3
100180a2:	e778      	b.n	10017f96 <_free_r+0xce>
100180a4:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
100180a8:	227e      	movs	r2, #126	@ 0x7e
100180aa:	e774      	b.n	10017f96 <_free_r+0xce>
100180ac:	f041 0301 	orr.w	r3, r1, #1
100180b0:	606b      	str	r3, [r5, #4]
100180b2:	6001      	str	r1, [r0, #0]
100180b4:	e753      	b.n	10017f5e <_free_r+0x96>
100180b6:	bf00      	nop
100180b8:	20000018 	.word	0x20000018
100180bc:	20000014 	.word	0x20000014
100180c0:	20001484 	.word	0x20001484

100180c4 <_strtol_l.constprop.0>:
100180c4:	2b24      	cmp	r3, #36	@ 0x24
100180c6:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
100180ca:	d843      	bhi.n	10018154 <_strtol_l.constprop.0+0x90>
100180cc:	2b01      	cmp	r3, #1
100180ce:	d041      	beq.n	10018154 <_strtol_l.constprop.0+0x90>
100180d0:	4680      	mov	r8, r0
100180d2:	4849      	ldr	r0, [pc, #292]	@ (100181f8 <_strtol_l.constprop.0+0x134>)
100180d4:	461f      	mov	r7, r3
100180d6:	468e      	mov	lr, r1
100180d8:	4675      	mov	r5, lr
100180da:	f81e bb01 	ldrb.w	fp, [lr], #1
100180de:	f810 400b 	ldrb.w	r4, [r0, fp]
100180e2:	f014 0408 	ands.w	r4, r4, #8
100180e6:	d1f7      	bne.n	100180d8 <_strtol_l.constprop.0+0x14>
100180e8:	f1bb 0f2d 	cmp.w	fp, #45	@ 0x2d
100180ec:	d06f      	beq.n	100181ce <_strtol_l.constprop.0+0x10a>
100180ee:	f1bb 0f2b 	cmp.w	fp, #43	@ 0x2b
100180f2:	bf08      	it	eq
100180f4:	f89e b000 	ldrbeq.w	fp, [lr]
100180f8:	f06f 4900 	mvn.w	r9, #2147483648	@ 0x80000000
100180fc:	bf08      	it	eq
100180fe:	f105 0e02 	addeq.w	lr, r5, #2
10018102:	bb73      	cbnz	r3, 10018162 <_strtol_l.constprop.0+0x9e>
10018104:	f1bb 0f30 	cmp.w	fp, #48	@ 0x30
10018108:	d04b      	beq.n	100181a2 <_strtol_l.constprop.0+0xde>
1001810a:	270a      	movs	r7, #10
1001810c:	463b      	mov	r3, r7
1001810e:	2500      	movs	r5, #0
10018110:	fbb9 f6f7 	udiv	r6, r9, r7
10018114:	4628      	mov	r0, r5
10018116:	fb07 9a16 	mls	sl, r7, r6, r9
1001811a:	e005      	b.n	10018128 <_strtol_l.constprop.0+0x64>
1001811c:	d03a      	beq.n	10018194 <_strtol_l.constprop.0+0xd0>
1001811e:	fb07 c000 	mla	r0, r7, r0, ip
10018122:	2501      	movs	r5, #1
10018124:	f81e bb01 	ldrb.w	fp, [lr], #1
10018128:	f1ab 0c30 	sub.w	ip, fp, #48	@ 0x30
1001812c:	f1bc 0f09 	cmp.w	ip, #9
10018130:	d906      	bls.n	10018140 <_strtol_l.constprop.0+0x7c>
10018132:	f1ab 0c41 	sub.w	ip, fp, #65	@ 0x41
10018136:	f1bc 0f19 	cmp.w	ip, #25
1001813a:	d819      	bhi.n	10018170 <_strtol_l.constprop.0+0xac>
1001813c:	f1ab 0c37 	sub.w	ip, fp, #55	@ 0x37
10018140:	4563      	cmp	r3, ip
10018142:	dd1e      	ble.n	10018182 <_strtol_l.constprop.0+0xbe>
10018144:	f1b5 3fff 	cmp.w	r5, #4294967295	@ 0xffffffff
10018148:	d0ec      	beq.n	10018124 <_strtol_l.constprop.0+0x60>
1001814a:	4286      	cmp	r6, r0
1001814c:	d2e6      	bcs.n	1001811c <_strtol_l.constprop.0+0x58>
1001814e:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
10018152:	e7e7      	b.n	10018124 <_strtol_l.constprop.0+0x60>
10018154:	f7fb fdc2 	bl	10013cdc <__errno>
10018158:	2316      	movs	r3, #22
1001815a:	6003      	str	r3, [r0, #0]
1001815c:	2000      	movs	r0, #0
1001815e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018162:	2b10      	cmp	r3, #16
10018164:	d1d3      	bne.n	1001810e <_strtol_l.constprop.0+0x4a>
10018166:	f1bb 0f30 	cmp.w	fp, #48	@ 0x30
1001816a:	d023      	beq.n	100181b4 <_strtol_l.constprop.0+0xf0>
1001816c:	461f      	mov	r7, r3
1001816e:	e7ce      	b.n	1001810e <_strtol_l.constprop.0+0x4a>
10018170:	f1ab 0c61 	sub.w	ip, fp, #97	@ 0x61
10018174:	f1bc 0f19 	cmp.w	ip, #25
10018178:	d803      	bhi.n	10018182 <_strtol_l.constprop.0+0xbe>
1001817a:	f1ab 0c57 	sub.w	ip, fp, #87	@ 0x57
1001817e:	4563      	cmp	r3, ip
10018180:	dce0      	bgt.n	10018144 <_strtol_l.constprop.0+0x80>
10018182:	1c6b      	adds	r3, r5, #1
10018184:	d02b      	beq.n	100181de <_strtol_l.constprop.0+0x11a>
10018186:	b954      	cbnz	r4, 1001819e <_strtol_l.constprop.0+0xda>
10018188:	2a00      	cmp	r2, #0
1001818a:	d0e8      	beq.n	1001815e <_strtol_l.constprop.0+0x9a>
1001818c:	bb85      	cbnz	r5, 100181f0 <_strtol_l.constprop.0+0x12c>
1001818e:	6011      	str	r1, [r2, #0]
10018190:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018194:	45e2      	cmp	sl, ip
10018196:	dac2      	bge.n	1001811e <_strtol_l.constprop.0+0x5a>
10018198:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
1001819c:	e7c2      	b.n	10018124 <_strtol_l.constprop.0+0x60>
1001819e:	4240      	negs	r0, r0
100181a0:	e7f2      	b.n	10018188 <_strtol_l.constprop.0+0xc4>
100181a2:	f89e 3000 	ldrb.w	r3, [lr]
100181a6:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
100181aa:	2b58      	cmp	r3, #88	@ 0x58
100181ac:	d008      	beq.n	100181c0 <_strtol_l.constprop.0+0xfc>
100181ae:	2708      	movs	r7, #8
100181b0:	463b      	mov	r3, r7
100181b2:	e7ac      	b.n	1001810e <_strtol_l.constprop.0+0x4a>
100181b4:	f89e 0000 	ldrb.w	r0, [lr]
100181b8:	f000 00df 	and.w	r0, r0, #223	@ 0xdf
100181bc:	2858      	cmp	r0, #88	@ 0x58
100181be:	d1d5      	bne.n	1001816c <_strtol_l.constprop.0+0xa8>
100181c0:	2710      	movs	r7, #16
100181c2:	f89e b001 	ldrb.w	fp, [lr, #1]
100181c6:	463b      	mov	r3, r7
100181c8:	f10e 0e02 	add.w	lr, lr, #2
100181cc:	e79f      	b.n	1001810e <_strtol_l.constprop.0+0x4a>
100181ce:	f89e b000 	ldrb.w	fp, [lr]
100181d2:	f04f 4900 	mov.w	r9, #2147483648	@ 0x80000000
100181d6:	f105 0e02 	add.w	lr, r5, #2
100181da:	2401      	movs	r4, #1
100181dc:	e791      	b.n	10018102 <_strtol_l.constprop.0+0x3e>
100181de:	2322      	movs	r3, #34	@ 0x22
100181e0:	f8c8 3000 	str.w	r3, [r8]
100181e4:	b132      	cbz	r2, 100181f4 <_strtol_l.constprop.0+0x130>
100181e6:	f10e 31ff 	add.w	r1, lr, #4294967295	@ 0xffffffff
100181ea:	4648      	mov	r0, r9
100181ec:	6011      	str	r1, [r2, #0]
100181ee:	e7cf      	b.n	10018190 <_strtol_l.constprop.0+0xcc>
100181f0:	4681      	mov	r9, r0
100181f2:	e7f8      	b.n	100181e6 <_strtol_l.constprop.0+0x122>
100181f4:	4648      	mov	r0, r9
100181f6:	e7b2      	b.n	1001815e <_strtol_l.constprop.0+0x9a>
100181f8:	1002388d 	.word	0x1002388d

100181fc <_strtol_r>:
100181fc:	f7ff bf62 	b.w	100180c4 <_strtol_l.constprop.0>

10018200 <rshift>:
10018200:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10018204:	6904      	ldr	r4, [r0, #16]
10018206:	ebb4 1f61 	cmp.w	r4, r1, asr #5
1001820a:	dc05      	bgt.n	10018218 <rshift+0x18>
1001820c:	2300      	movs	r3, #0
1001820e:	6103      	str	r3, [r0, #16]
10018210:	2300      	movs	r3, #0
10018212:	6143      	str	r3, [r0, #20]
10018214:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10018218:	f100 0514 	add.w	r5, r0, #20
1001821c:	114e      	asrs	r6, r1, #5
1001821e:	f011 0c1f 	ands.w	ip, r1, #31
10018222:	eb05 0e84 	add.w	lr, r5, r4, lsl #2
10018226:	eb05 0386 	add.w	r3, r5, r6, lsl #2
1001822a:	d021      	beq.n	10018270 <rshift+0x70>
1001822c:	f855 1026 	ldr.w	r1, [r5, r6, lsl #2]
10018230:	3304      	adds	r3, #4
10018232:	459e      	cmp	lr, r3
10018234:	fa21 f10c 	lsr.w	r1, r1, ip
10018238:	f1cc 0820 	rsb	r8, ip, #32
1001823c:	d92d      	bls.n	1001829a <rshift+0x9a>
1001823e:	462f      	mov	r7, r5
10018240:	681a      	ldr	r2, [r3, #0]
10018242:	fa02 f208 	lsl.w	r2, r2, r8
10018246:	430a      	orrs	r2, r1
10018248:	f847 2b04 	str.w	r2, [r7], #4
1001824c:	f853 1b04 	ldr.w	r1, [r3], #4
10018250:	459e      	cmp	lr, r3
10018252:	fa21 f10c 	lsr.w	r1, r1, ip
10018256:	d8f3      	bhi.n	10018240 <rshift+0x40>
10018258:	1ba3      	subs	r3, r4, r6
1001825a:	009b      	lsls	r3, r3, #2
1001825c:	3b05      	subs	r3, #5
1001825e:	089b      	lsrs	r3, r3, #2
10018260:	3301      	adds	r3, #1
10018262:	eb05 0483 	add.w	r4, r5, r3, lsl #2
10018266:	f845 1023 	str.w	r1, [r5, r3, lsl #2]
1001826a:	b179      	cbz	r1, 1001828c <rshift+0x8c>
1001826c:	3404      	adds	r4, #4
1001826e:	e00d      	b.n	1001828c <rshift+0x8c>
10018270:	459e      	cmp	lr, r3
10018272:	bf88      	it	hi
10018274:	f100 0210 	addhi.w	r2, r0, #16
10018278:	d9c8      	bls.n	1001820c <rshift+0xc>
1001827a:	f853 1b04 	ldr.w	r1, [r3], #4
1001827e:	f842 1f04 	str.w	r1, [r2, #4]!
10018282:	459e      	cmp	lr, r3
10018284:	d8f9      	bhi.n	1001827a <rshift+0x7a>
10018286:	1ba4      	subs	r4, r4, r6
10018288:	eb05 0484 	add.w	r4, r5, r4, lsl #2
1001828c:	1b63      	subs	r3, r4, r5
1001828e:	109b      	asrs	r3, r3, #2
10018290:	42ac      	cmp	r4, r5
10018292:	6103      	str	r3, [r0, #16]
10018294:	d0bc      	beq.n	10018210 <rshift+0x10>
10018296:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001829a:	6141      	str	r1, [r0, #20]
1001829c:	2900      	cmp	r1, #0
1001829e:	d0b5      	beq.n	1001820c <rshift+0xc>
100182a0:	462c      	mov	r4, r5
100182a2:	e7e3      	b.n	1001826c <rshift+0x6c>

100182a4 <__gethex>:
100182a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100182a8:	680f      	ldr	r7, [r1, #0]
100182aa:	b085      	sub	sp, #20
100182ac:	e9cd 2000 	strd	r2, r0, [sp]
100182b0:	78ba      	ldrb	r2, [r7, #2]
100182b2:	9303      	str	r3, [sp, #12]
100182b4:	2a30      	cmp	r2, #48	@ 0x30
100182b6:	4689      	mov	r9, r1
100182b8:	f040 81ca 	bne.w	10018650 <__gethex+0x3ac>
100182bc:	1cfb      	adds	r3, r7, #3
100182be:	781a      	ldrb	r2, [r3, #0]
100182c0:	2a30      	cmp	r2, #48	@ 0x30
100182c2:	461c      	mov	r4, r3
100182c4:	f103 0301 	add.w	r3, r3, #1
100182c8:	d0f9      	beq.n	100182be <__gethex+0x1a>
100182ca:	1be7      	subs	r7, r4, r7
100182cc:	3f02      	subs	r7, #2
100182ce:	f8df 82d8 	ldr.w	r8, [pc, #728]	@ 100185a8 <__gethex+0x304>
100182d2:	f818 3002 	ldrb.w	r3, [r8, r2]
100182d6:	2b00      	cmp	r3, #0
100182d8:	f000 80df 	beq.w	1001849a <__gethex+0x1f6>
100182dc:	7823      	ldrb	r3, [r4, #0]
100182de:	f818 3003 	ldrb.w	r3, [r8, r3]
100182e2:	f04f 0a00 	mov.w	sl, #0
100182e6:	4655      	mov	r5, sl
100182e8:	2b00      	cmp	r3, #0
100182ea:	f000 8150 	beq.w	1001858e <__gethex+0x2ea>
100182ee:	4626      	mov	r6, r4
100182f0:	f816 3f01 	ldrb.w	r3, [r6, #1]!
100182f4:	f818 3003 	ldrb.w	r3, [r8, r3]
100182f8:	2b00      	cmp	r3, #0
100182fa:	d1f9      	bne.n	100182f0 <__gethex+0x4c>
100182fc:	49ab      	ldr	r1, [pc, #684]	@ (100185ac <__gethex+0x308>)
100182fe:	2201      	movs	r2, #1
10018300:	4630      	mov	r0, r6
10018302:	f000 fc25 	bl	10018b50 <strncmp>
10018306:	4683      	mov	fp, r0
10018308:	2800      	cmp	r0, #0
1001830a:	d04c      	beq.n	100183a6 <__gethex+0x102>
1001830c:	7832      	ldrb	r2, [r6, #0]
1001830e:	2d00      	cmp	r5, #0
10018310:	f000 8180 	beq.w	10018614 <__gethex+0x370>
10018314:	1bab      	subs	r3, r5, r6
10018316:	ea4f 0b83 	mov.w	fp, r3, lsl #2
1001831a:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
1001831e:	2a50      	cmp	r2, #80	@ 0x50
10018320:	4635      	mov	r5, r6
10018322:	d04c      	beq.n	100183be <__gethex+0x11a>
10018324:	f8c9 6000 	str.w	r6, [r9]
10018328:	f1ba 0f00 	cmp.w	sl, #0
1001832c:	d165      	bne.n	100183fa <__gethex+0x156>
1001832e:	1b2a      	subs	r2, r5, r4
10018330:	3a01      	subs	r2, #1
10018332:	2a07      	cmp	r2, #7
10018334:	4651      	mov	r1, sl
10018336:	dd04      	ble.n	10018342 <__gethex+0x9e>
10018338:	1052      	asrs	r2, r2, #1
1001833a:	2a07      	cmp	r2, #7
1001833c:	f101 0101 	add.w	r1, r1, #1
10018340:	dcfa      	bgt.n	10018338 <__gethex+0x94>
10018342:	9801      	ldr	r0, [sp, #4]
10018344:	f006 f82a 	bl	1001e39c <_Balloc>
10018348:	4682      	mov	sl, r0
1001834a:	2800      	cmp	r0, #0
1001834c:	f000 8250 	beq.w	100187f0 <__gethex+0x54c>
10018350:	f100 0614 	add.w	r6, r0, #20
10018354:	42a5      	cmp	r5, r4
10018356:	9602      	str	r6, [sp, #8]
10018358:	d957      	bls.n	1001840a <__gethex+0x166>
1001835a:	2700      	movs	r7, #0
1001835c:	46b9      	mov	r9, r7
1001835e:	e00d      	b.n	1001837c <__gethex+0xd8>
10018360:	2f20      	cmp	r7, #32
10018362:	d01a      	beq.n	1001839a <__gethex+0xf6>
10018364:	463a      	mov	r2, r7
10018366:	3704      	adds	r7, #4
10018368:	782b      	ldrb	r3, [r5, #0]
1001836a:	f818 3003 	ldrb.w	r3, [r8, r3]
1001836e:	f003 030f 	and.w	r3, r3, #15
10018372:	4093      	lsls	r3, r2
10018374:	ea49 0903 	orr.w	r9, r9, r3
10018378:	42a5      	cmp	r5, r4
1001837a:	d049      	beq.n	10018410 <__gethex+0x16c>
1001837c:	f815 3d01 	ldrb.w	r3, [r5, #-1]!
10018380:	2b2e      	cmp	r3, #46	@ 0x2e
10018382:	d1ed      	bne.n	10018360 <__gethex+0xbc>
10018384:	42a5      	cmp	r5, r4
10018386:	d3eb      	bcc.n	10018360 <__gethex+0xbc>
10018388:	4988      	ldr	r1, [pc, #544]	@ (100185ac <__gethex+0x308>)
1001838a:	2201      	movs	r2, #1
1001838c:	4628      	mov	r0, r5
1001838e:	f000 fbdf 	bl	10018b50 <strncmp>
10018392:	2800      	cmp	r0, #0
10018394:	d0f0      	beq.n	10018378 <__gethex+0xd4>
10018396:	2f20      	cmp	r7, #32
10018398:	d1e4      	bne.n	10018364 <__gethex+0xc0>
1001839a:	2200      	movs	r2, #0
1001839c:	f846 9b04 	str.w	r9, [r6], #4
100183a0:	2704      	movs	r7, #4
100183a2:	4691      	mov	r9, r2
100183a4:	e7e0      	b.n	10018368 <__gethex+0xc4>
100183a6:	2d00      	cmp	r5, #0
100183a8:	f000 8143 	beq.w	10018632 <__gethex+0x38e>
100183ac:	7832      	ldrb	r2, [r6, #0]
100183ae:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
100183b2:	1bab      	subs	r3, r5, r6
100183b4:	2a50      	cmp	r2, #80	@ 0x50
100183b6:	ea4f 0b83 	mov.w	fp, r3, lsl #2
100183ba:	4635      	mov	r5, r6
100183bc:	d1b2      	bne.n	10018324 <__gethex+0x80>
100183be:	786a      	ldrb	r2, [r5, #1]
100183c0:	2a2b      	cmp	r2, #43	@ 0x2b
100183c2:	f000 8125 	beq.w	10018610 <__gethex+0x36c>
100183c6:	2a2d      	cmp	r2, #45	@ 0x2d
100183c8:	f000 80a1 	beq.w	1001850e <__gethex+0x26a>
100183cc:	1c6e      	adds	r6, r5, #1
100183ce:	2000      	movs	r0, #0
100183d0:	f818 1002 	ldrb.w	r1, [r8, r2]
100183d4:	1e4a      	subs	r2, r1, #1
100183d6:	2a18      	cmp	r2, #24
100183d8:	f200 8097 	bhi.w	1001850a <__gethex+0x266>
100183dc:	7872      	ldrb	r2, [r6, #1]
100183de:	f818 2002 	ldrb.w	r2, [r8, r2]
100183e2:	3910      	subs	r1, #16
100183e4:	3601      	adds	r6, #1
100183e6:	2a00      	cmp	r2, #0
100183e8:	d154      	bne.n	10018494 <__gethex+0x1f0>
100183ea:	b100      	cbz	r0, 100183ee <__gethex+0x14a>
100183ec:	4249      	negs	r1, r1
100183ee:	448b      	add	fp, r1
100183f0:	f8c9 6000 	str.w	r6, [r9]
100183f4:	f1ba 0f00 	cmp.w	sl, #0
100183f8:	d099      	beq.n	1001832e <__gethex+0x8a>
100183fa:	2f00      	cmp	r7, #0
100183fc:	bf0c      	ite	eq
100183fe:	2506      	moveq	r5, #6
10018400:	2500      	movne	r5, #0
10018402:	4628      	mov	r0, r5
10018404:	b005      	add	sp, #20
10018406:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001840a:	9e02      	ldr	r6, [sp, #8]
1001840c:	f04f 0900 	mov.w	r9, #0
10018410:	f846 9b04 	str.w	r9, [r6], #4
10018414:	9b02      	ldr	r3, [sp, #8]
10018416:	1af6      	subs	r6, r6, r3
10018418:	10b6      	asrs	r6, r6, #2
1001841a:	f8ca 6010 	str.w	r6, [sl, #16]
1001841e:	4648      	mov	r0, r9
10018420:	f006 f894 	bl	1001e54c <__hi0bits>
10018424:	9b00      	ldr	r3, [sp, #0]
10018426:	0176      	lsls	r6, r6, #5
10018428:	681c      	ldr	r4, [r3, #0]
1001842a:	1a36      	subs	r6, r6, r0
1001842c:	42a6      	cmp	r6, r4
1001842e:	dc72      	bgt.n	10018516 <__gethex+0x272>
10018430:	f2c0 80f2 	blt.w	10018618 <__gethex+0x374>
10018434:	2700      	movs	r7, #0
10018436:	9b00      	ldr	r3, [sp, #0]
10018438:	689a      	ldr	r2, [r3, #8]
1001843a:	455a      	cmp	r2, fp
1001843c:	f2c0 8129 	blt.w	10018692 <__gethex+0x3ee>
10018440:	9b00      	ldr	r3, [sp, #0]
10018442:	685a      	ldr	r2, [r3, #4]
10018444:	455a      	cmp	r2, fp
10018446:	dd49      	ble.n	100184dc <__gethex+0x238>
10018448:	eba2 0b0b 	sub.w	fp, r2, fp
1001844c:	455c      	cmp	r4, fp
1001844e:	dc7f      	bgt.n	10018550 <__gethex+0x2ac>
10018450:	68db      	ldr	r3, [r3, #12]
10018452:	2b02      	cmp	r3, #2
10018454:	f000 815b 	beq.w	1001870e <__gethex+0x46a>
10018458:	2b03      	cmp	r3, #3
1001845a:	f000 8153 	beq.w	10018704 <__gethex+0x460>
1001845e:	2b01      	cmp	r3, #1
10018460:	f000 8136 	beq.w	100186d0 <__gethex+0x42c>
10018464:	9801      	ldr	r0, [sp, #4]
10018466:	4651      	mov	r1, sl
10018468:	f005 ffbe 	bl	1001e3e8 <_Bfree>
1001846c:	2550      	movs	r5, #80	@ 0x50
1001846e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10018470:	2300      	movs	r3, #0
10018472:	4628      	mov	r0, r5
10018474:	6013      	str	r3, [r2, #0]
10018476:	b005      	add	sp, #20
10018478:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001847c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10018480:	f816 3f01 	ldrb.w	r3, [r6, #1]!
10018484:	eb02 0241 	add.w	r2, r2, r1, lsl #1
10018488:	f1a2 0110 	sub.w	r1, r2, #16
1001848c:	f818 2003 	ldrb.w	r2, [r8, r3]
10018490:	2a00      	cmp	r2, #0
10018492:	d0aa      	beq.n	100183ea <__gethex+0x146>
10018494:	2a19      	cmp	r2, #25
10018496:	ddf1      	ble.n	1001847c <__gethex+0x1d8>
10018498:	e7a7      	b.n	100183ea <__gethex+0x146>
1001849a:	4944      	ldr	r1, [pc, #272]	@ (100185ac <__gethex+0x308>)
1001849c:	2201      	movs	r2, #1
1001849e:	4620      	mov	r0, r4
100184a0:	f000 fb56 	bl	10018b50 <strncmp>
100184a4:	4682      	mov	sl, r0
100184a6:	2800      	cmp	r0, #0
100184a8:	d173      	bne.n	10018592 <__gethex+0x2ee>
100184aa:	7863      	ldrb	r3, [r4, #1]
100184ac:	f818 2003 	ldrb.w	r2, [r8, r3]
100184b0:	1c65      	adds	r5, r4, #1
100184b2:	2a00      	cmp	r2, #0
100184b4:	d06f      	beq.n	10018596 <__gethex+0x2f2>
100184b6:	2b30      	cmp	r3, #48	@ 0x30
100184b8:	462c      	mov	r4, r5
100184ba:	f040 8134 	bne.w	10018726 <__gethex+0x482>
100184be:	f814 3f01 	ldrb.w	r3, [r4, #1]!
100184c2:	2b30      	cmp	r3, #48	@ 0x30
100184c4:	d0fb      	beq.n	100184be <__gethex+0x21a>
100184c6:	f818 3003 	ldrb.w	r3, [r8, r3]
100184ca:	fab3 fa83 	clz	sl, r3
100184ce:	2701      	movs	r7, #1
100184d0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
100184d4:	2b00      	cmp	r3, #0
100184d6:	f47f af0a 	bne.w	100182ee <__gethex+0x4a>
100184da:	e058      	b.n	1001858e <__gethex+0x2ea>
100184dc:	2501      	movs	r5, #1
100184de:	b157      	cbz	r7, 100184f6 <__gethex+0x252>
100184e0:	9b00      	ldr	r3, [sp, #0]
100184e2:	68da      	ldr	r2, [r3, #12]
100184e4:	2a02      	cmp	r2, #2
100184e6:	d063      	beq.n	100185b0 <__gethex+0x30c>
100184e8:	2a03      	cmp	r2, #3
100184ea:	d065      	beq.n	100185b8 <__gethex+0x314>
100184ec:	2a01      	cmp	r2, #1
100184ee:	f000 8086 	beq.w	100185fe <__gethex+0x35a>
100184f2:	f045 0510 	orr.w	r5, r5, #16
100184f6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100184f8:	f8c3 a000 	str.w	sl, [r3]
100184fc:	9b03      	ldr	r3, [sp, #12]
100184fe:	4628      	mov	r0, r5
10018500:	f8c3 b000 	str.w	fp, [r3]
10018504:	b005      	add	sp, #20
10018506:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001850a:	462e      	mov	r6, r5
1001850c:	e70a      	b.n	10018324 <__gethex+0x80>
1001850e:	2001      	movs	r0, #1
10018510:	78aa      	ldrb	r2, [r5, #2]
10018512:	1cae      	adds	r6, r5, #2
10018514:	e75c      	b.n	100183d0 <__gethex+0x12c>
10018516:	1b36      	subs	r6, r6, r4
10018518:	4631      	mov	r1, r6
1001851a:	4650      	mov	r0, sl
1001851c:	f006 fc2c 	bl	1001ed78 <__any_on>
10018520:	4607      	mov	r7, r0
10018522:	b178      	cbz	r0, 10018544 <__gethex+0x2a0>
10018524:	1e71      	subs	r1, r6, #1
10018526:	114a      	asrs	r2, r1, #5
10018528:	9b02      	ldr	r3, [sp, #8]
1001852a:	2701      	movs	r7, #1
1001852c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
10018530:	f001 021f 	and.w	r2, r1, #31
10018534:	fa07 f202 	lsl.w	r2, r7, r2
10018538:	4202      	tst	r2, r0
1001853a:	d003      	beq.n	10018544 <__gethex+0x2a0>
1001853c:	42b9      	cmp	r1, r7
1001853e:	f300 80b9 	bgt.w	100186b4 <__gethex+0x410>
10018542:	2702      	movs	r7, #2
10018544:	4631      	mov	r1, r6
10018546:	4650      	mov	r0, sl
10018548:	44b3      	add	fp, r6
1001854a:	f7ff fe59 	bl	10018200 <rshift>
1001854e:	e772      	b.n	10018436 <__gethex+0x192>
10018550:	f10b 36ff 	add.w	r6, fp, #4294967295	@ 0xffffffff
10018554:	2f00      	cmp	r7, #0
10018556:	f040 80a5 	bne.w	100186a4 <__gethex+0x400>
1001855a:	2e00      	cmp	r6, #0
1001855c:	f040 80a4 	bne.w	100186a8 <__gethex+0x404>
10018560:	1173      	asrs	r3, r6, #5
10018562:	9a02      	ldr	r2, [sp, #8]
10018564:	f006 061f 	and.w	r6, r6, #31
10018568:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
1001856c:	2301      	movs	r3, #1
1001856e:	40b3      	lsls	r3, r6
10018570:	4213      	tst	r3, r2
10018572:	4659      	mov	r1, fp
10018574:	4650      	mov	r0, sl
10018576:	bf18      	it	ne
10018578:	f047 0702 	orrne.w	r7, r7, #2
1001857c:	f7ff fe40 	bl	10018200 <rshift>
10018580:	9b00      	ldr	r3, [sp, #0]
10018582:	eba4 040b 	sub.w	r4, r4, fp
10018586:	2502      	movs	r5, #2
10018588:	f8d3 b004 	ldr.w	fp, [r3, #4]
1001858c:	e7a7      	b.n	100184de <__gethex+0x23a>
1001858e:	4626      	mov	r6, r4
10018590:	e6b4      	b.n	100182fc <__gethex+0x58>
10018592:	7823      	ldrb	r3, [r4, #0]
10018594:	4625      	mov	r5, r4
10018596:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001859a:	2b50      	cmp	r3, #80	@ 0x50
1001859c:	f000 8093 	beq.w	100186c6 <__gethex+0x422>
100185a0:	f8c9 5000 	str.w	r5, [r9]
100185a4:	e729      	b.n	100183fa <__gethex+0x156>
100185a6:	bf00      	nop
100185a8:	10023a68 	.word	0x10023a68
100185ac:	1002151c 	.word	0x1002151c
100185b0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
100185b2:	f1c3 0301 	rsb	r3, r3, #1
100185b6:	930f      	str	r3, [sp, #60]	@ 0x3c
100185b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
100185ba:	2b00      	cmp	r3, #0
100185bc:	d099      	beq.n	100184f2 <__gethex+0x24e>
100185be:	f8dd 8008 	ldr.w	r8, [sp, #8]
100185c2:	f8da 7010 	ldr.w	r7, [sl, #16]
100185c6:	4642      	mov	r2, r8
100185c8:	ea4f 0987 	mov.w	r9, r7, lsl #2
100185cc:	eb08 0687 	add.w	r6, r8, r7, lsl #2
100185d0:	2000      	movs	r0, #0
100185d2:	e003      	b.n	100185dc <__gethex+0x338>
100185d4:	4296      	cmp	r6, r2
100185d6:	f842 0c04 	str.w	r0, [r2, #-4]
100185da:	d93c      	bls.n	10018656 <__gethex+0x3b2>
100185dc:	4694      	mov	ip, r2
100185de:	f852 1b04 	ldr.w	r1, [r2], #4
100185e2:	1c4b      	adds	r3, r1, #1
100185e4:	d0f6      	beq.n	100185d4 <__gethex+0x330>
100185e6:	3101      	adds	r1, #1
100185e8:	2d02      	cmp	r5, #2
100185ea:	f8cc 1000 	str.w	r1, [ip]
100185ee:	f000 8093 	beq.w	10018718 <__gethex+0x474>
100185f2:	f014 041f 	ands.w	r4, r4, #31
100185f6:	f040 80b3 	bne.w	10018760 <__gethex+0x4bc>
100185fa:	2521      	movs	r5, #33	@ 0x21
100185fc:	e77b      	b.n	100184f6 <__gethex+0x252>
100185fe:	07b9      	lsls	r1, r7, #30
10018600:	f57f af77 	bpl.w	100184f2 <__gethex+0x24e>
10018604:	9b02      	ldr	r3, [sp, #8]
10018606:	681a      	ldr	r2, [r3, #0]
10018608:	4317      	orrs	r7, r2
1001860a:	07fa      	lsls	r2, r7, #31
1001860c:	d4d7      	bmi.n	100185be <__gethex+0x31a>
1001860e:	e770      	b.n	100184f2 <__gethex+0x24e>
10018610:	2000      	movs	r0, #0
10018612:	e77d      	b.n	10018510 <__gethex+0x26c>
10018614:	46ab      	mov	fp, r5
10018616:	e680      	b.n	1001831a <__gethex+0x76>
10018618:	1ba2      	subs	r2, r4, r6
1001861a:	4651      	mov	r1, sl
1001861c:	9801      	ldr	r0, [sp, #4]
1001861e:	ebab 0b02 	sub.w	fp, fp, r2
10018622:	f006 f923 	bl	1001e86c <__lshift>
10018626:	f100 0314 	add.w	r3, r0, #20
1001862a:	4682      	mov	sl, r0
1001862c:	9302      	str	r3, [sp, #8]
1001862e:	2700      	movs	r7, #0
10018630:	e701      	b.n	10018436 <__gethex+0x192>
10018632:	7872      	ldrb	r2, [r6, #1]
10018634:	f818 1002 	ldrb.w	r1, [r8, r2]
10018638:	1c75      	adds	r5, r6, #1
1001863a:	462e      	mov	r6, r5
1001863c:	2900      	cmp	r1, #0
1001863e:	f43f ae6c 	beq.w	1001831a <__gethex+0x76>
10018642:	f816 2f01 	ldrb.w	r2, [r6, #1]!
10018646:	f818 3002 	ldrb.w	r3, [r8, r2]
1001864a:	2b00      	cmp	r3, #0
1001864c:	d1f9      	bne.n	10018642 <__gethex+0x39e>
1001864e:	e661      	b.n	10018314 <__gethex+0x70>
10018650:	1cbc      	adds	r4, r7, #2
10018652:	2700      	movs	r7, #0
10018654:	e63b      	b.n	100182ce <__gethex+0x2a>
10018656:	f8da 2008 	ldr.w	r2, [sl, #8]
1001865a:	4297      	cmp	r7, r2
1001865c:	da65      	bge.n	1001872a <__gethex+0x486>
1001865e:	463a      	mov	r2, r7
10018660:	eb0a 0182 	add.w	r1, sl, r2, lsl #2
10018664:	2001      	movs	r0, #1
10018666:	3201      	adds	r2, #1
10018668:	2d02      	cmp	r5, #2
1001866a:	f8ca 2010 	str.w	r2, [sl, #16]
1001866e:	6148      	str	r0, [r1, #20]
10018670:	d052      	beq.n	10018718 <__gethex+0x474>
10018672:	4297      	cmp	r7, r2
10018674:	dabd      	bge.n	100185f2 <__gethex+0x34e>
10018676:	2a00      	cmp	r2, #0
10018678:	dc7f      	bgt.n	1001877a <__gethex+0x4d6>
1001867a:	2200      	movs	r2, #0
1001867c:	f8ca 2010 	str.w	r2, [sl, #16]
10018680:	2200      	movs	r2, #0
10018682:	f8ca 2014 	str.w	r2, [sl, #20]
10018686:	9b00      	ldr	r3, [sp, #0]
10018688:	689a      	ldr	r2, [r3, #8]
1001868a:	f10b 0b01 	add.w	fp, fp, #1
1001868e:	455a      	cmp	r2, fp
10018690:	dab3      	bge.n	100185fa <__gethex+0x356>
10018692:	9801      	ldr	r0, [sp, #4]
10018694:	4651      	mov	r1, sl
10018696:	f005 fea7 	bl	1001e3e8 <_Bfree>
1001869a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001869c:	2300      	movs	r3, #0
1001869e:	6013      	str	r3, [r2, #0]
100186a0:	25a3      	movs	r5, #163	@ 0xa3
100186a2:	e6ae      	b.n	10018402 <__gethex+0x15e>
100186a4:	2701      	movs	r7, #1
100186a6:	e75b      	b.n	10018560 <__gethex+0x2bc>
100186a8:	4631      	mov	r1, r6
100186aa:	4650      	mov	r0, sl
100186ac:	f006 fb64 	bl	1001ed78 <__any_on>
100186b0:	4607      	mov	r7, r0
100186b2:	e755      	b.n	10018560 <__gethex+0x2bc>
100186b4:	1eb1      	subs	r1, r6, #2
100186b6:	4650      	mov	r0, sl
100186b8:	f006 fb5e 	bl	1001ed78 <__any_on>
100186bc:	2800      	cmp	r0, #0
100186be:	f43f af40 	beq.w	10018542 <__gethex+0x29e>
100186c2:	2703      	movs	r7, #3
100186c4:	e73e      	b.n	10018544 <__gethex+0x2a0>
100186c6:	f04f 0b00 	mov.w	fp, #0
100186ca:	f04f 0a01 	mov.w	sl, #1
100186ce:	e676      	b.n	100183be <__gethex+0x11a>
100186d0:	455c      	cmp	r4, fp
100186d2:	f47f aec7 	bne.w	10018464 <__gethex+0x1c0>
100186d6:	2c01      	cmp	r4, #1
100186d8:	d008      	beq.n	100186ec <__gethex+0x448>
100186da:	1e61      	subs	r1, r4, #1
100186dc:	4650      	mov	r0, sl
100186de:	f006 fb4b 	bl	1001ed78 <__any_on>
100186e2:	2800      	cmp	r0, #0
100186e4:	f43f aebe 	beq.w	10018464 <__gethex+0x1c0>
100186e8:	9b00      	ldr	r3, [sp, #0]
100186ea:	685a      	ldr	r2, [r3, #4]
100186ec:	9903      	ldr	r1, [sp, #12]
100186ee:	600a      	str	r2, [r1, #0]
100186f0:	9a02      	ldr	r2, [sp, #8]
100186f2:	2301      	movs	r3, #1
100186f4:	f8ca 3010 	str.w	r3, [sl, #16]
100186f8:	6013      	str	r3, [r2, #0]
100186fa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100186fc:	2562      	movs	r5, #98	@ 0x62
100186fe:	f8c3 a000 	str.w	sl, [r3]
10018702:	e67e      	b.n	10018402 <__gethex+0x15e>
10018704:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10018706:	2b00      	cmp	r3, #0
10018708:	f43f aeac 	beq.w	10018464 <__gethex+0x1c0>
1001870c:	e7ee      	b.n	100186ec <__gethex+0x448>
1001870e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10018710:	2b00      	cmp	r3, #0
10018712:	f47f aea7 	bne.w	10018464 <__gethex+0x1c0>
10018716:	e7e9      	b.n	100186ec <__gethex+0x448>
10018718:	9b00      	ldr	r3, [sp, #0]
1001871a:	681a      	ldr	r2, [r3, #0]
1001871c:	3a01      	subs	r2, #1
1001871e:	42a2      	cmp	r2, r4
10018720:	d054      	beq.n	100187cc <__gethex+0x528>
10018722:	2522      	movs	r5, #34	@ 0x22
10018724:	e6e7      	b.n	100184f6 <__gethex+0x252>
10018726:	2701      	movs	r7, #1
10018728:	e5e1      	b.n	100182ee <__gethex+0x4a>
1001872a:	f8da 1004 	ldr.w	r1, [sl, #4]
1001872e:	9801      	ldr	r0, [sp, #4]
10018730:	3101      	adds	r1, #1
10018732:	f005 fe33 	bl	1001e39c <_Balloc>
10018736:	4606      	mov	r6, r0
10018738:	2800      	cmp	r0, #0
1001873a:	d05f      	beq.n	100187fc <__gethex+0x558>
1001873c:	f8da 2010 	ldr.w	r2, [sl, #16]
10018740:	3202      	adds	r2, #2
10018742:	0092      	lsls	r2, r2, #2
10018744:	f10a 010c 	add.w	r1, sl, #12
10018748:	300c      	adds	r0, #12
1001874a:	f7fe f861 	bl	10016810 <memcpy>
1001874e:	4651      	mov	r1, sl
10018750:	9801      	ldr	r0, [sp, #4]
10018752:	f005 fe49 	bl	1001e3e8 <_Bfree>
10018756:	f106 0814 	add.w	r8, r6, #20
1001875a:	6932      	ldr	r2, [r6, #16]
1001875c:	46b2      	mov	sl, r6
1001875e:	e77f      	b.n	10018660 <__gethex+0x3bc>
10018760:	44c1      	add	r9, r8
10018762:	f1c4 0420 	rsb	r4, r4, #32
10018766:	f859 0c04 	ldr.w	r0, [r9, #-4]
1001876a:	f005 feef 	bl	1001e54c <__hi0bits>
1001876e:	42a0      	cmp	r0, r4
10018770:	f6bf af43 	bge.w	100185fa <__gethex+0x356>
10018774:	f8da 2010 	ldr.w	r2, [sl, #16]
10018778:	e77d      	b.n	10018676 <__gethex+0x3d2>
1001877a:	f8da 0014 	ldr.w	r0, [sl, #20]
1001877e:	eb08 0282 	add.w	r2, r8, r2, lsl #2
10018782:	f10a 0418 	add.w	r4, sl, #24
10018786:	42a2      	cmp	r2, r4
10018788:	ea4f 0050 	mov.w	r0, r0, lsr #1
1001878c:	d92a      	bls.n	100187e4 <__gethex+0x540>
1001878e:	4645      	mov	r5, r8
10018790:	6823      	ldr	r3, [r4, #0]
10018792:	ea40 70c3 	orr.w	r0, r0, r3, lsl #31
10018796:	f845 0b04 	str.w	r0, [r5], #4
1001879a:	f854 0b04 	ldr.w	r0, [r4], #4
1001879e:	42a2      	cmp	r2, r4
100187a0:	ea4f 0050 	mov.w	r0, r0, lsr #1
100187a4:	d8f4      	bhi.n	10018790 <__gethex+0x4ec>
100187a6:	eba2 020a 	sub.w	r2, r2, sl
100187aa:	3a19      	subs	r2, #25
100187ac:	0892      	lsrs	r2, r2, #2
100187ae:	3201      	adds	r2, #1
100187b0:	f848 0022 	str.w	r0, [r8, r2, lsl #2]
100187b4:	eb08 0282 	add.w	r2, r8, r2, lsl #2
100187b8:	b9c0      	cbnz	r0, 100187ec <__gethex+0x548>
100187ba:	eba2 0108 	sub.w	r1, r2, r8
100187be:	1089      	asrs	r1, r1, #2
100187c0:	4590      	cmp	r8, r2
100187c2:	f8ca 1010 	str.w	r1, [sl, #16]
100187c6:	f47f af5e 	bne.w	10018686 <__gethex+0x3e2>
100187ca:	e759      	b.n	10018680 <__gethex+0x3dc>
100187cc:	1162      	asrs	r2, r4, #5
100187ce:	f004 041f 	and.w	r4, r4, #31
100187d2:	f858 1022 	ldr.w	r1, [r8, r2, lsl #2]
100187d6:	2201      	movs	r2, #1
100187d8:	40a2      	lsls	r2, r4
100187da:	420a      	tst	r2, r1
100187dc:	bf14      	ite	ne
100187de:	2521      	movne	r5, #33	@ 0x21
100187e0:	2522      	moveq	r5, #34	@ 0x22
100187e2:	e688      	b.n	100184f6 <__gethex+0x252>
100187e4:	f8c8 0000 	str.w	r0, [r8]
100187e8:	4642      	mov	r2, r8
100187ea:	b168      	cbz	r0, 10018808 <__gethex+0x564>
100187ec:	3204      	adds	r2, #4
100187ee:	e7e4      	b.n	100187ba <__gethex+0x516>
100187f0:	4b07      	ldr	r3, [pc, #28]	@ (10018810 <__gethex+0x56c>)
100187f2:	4808      	ldr	r0, [pc, #32]	@ (10018814 <__gethex+0x570>)
100187f4:	4652      	mov	r2, sl
100187f6:	21e4      	movs	r1, #228	@ 0xe4
100187f8:	f005 fc80 	bl	1001e0fc <__assert_func>
100187fc:	4b04      	ldr	r3, [pc, #16]	@ (10018810 <__gethex+0x56c>)
100187fe:	4805      	ldr	r0, [pc, #20]	@ (10018814 <__gethex+0x570>)
10018800:	4632      	mov	r2, r6
10018802:	2184      	movs	r1, #132	@ 0x84
10018804:	f005 fc7a 	bl	1001e0fc <__assert_func>
10018808:	f8ca 0010 	str.w	r0, [sl, #16]
1001880c:	e738      	b.n	10018680 <__gethex+0x3dc>
1001880e:	bf00      	nop
10018810:	100239f0 	.word	0x100239f0
10018814:	10023a04 	.word	0x10023a04

10018818 <_strtoul_l.constprop.0>:
10018818:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1001881c:	4607      	mov	r7, r0
1001881e:	4849      	ldr	r0, [pc, #292]	@ (10018944 <_strtoul_l.constprop.0+0x12c>)
10018820:	460e      	mov	r6, r1
10018822:	4635      	mov	r5, r6
10018824:	f816 eb01 	ldrb.w	lr, [r6], #1
10018828:	f810 c00e 	ldrb.w	ip, [r0, lr]
1001882c:	f01c 0c08 	ands.w	ip, ip, #8
10018830:	d1f7      	bne.n	10018822 <_strtoul_l.constprop.0+0xa>
10018832:	f1be 0f2d 	cmp.w	lr, #45	@ 0x2d
10018836:	d05a      	beq.n	100188ee <_strtoul_l.constprop.0+0xd6>
10018838:	f1be 0f2b 	cmp.w	lr, #43	@ 0x2b
1001883c:	bf03      	ittte	eq
1001883e:	f896 e000 	ldrbeq.w	lr, [r6]
10018842:	4664      	moveq	r4, ip
10018844:	1cae      	addeq	r6, r5, #2
10018846:	4664      	movne	r4, ip
10018848:	b94b      	cbnz	r3, 1001885e <_strtoul_l.constprop.0+0x46>
1001884a:	f1be 0f30 	cmp.w	lr, #48	@ 0x30
1001884e:	d05c      	beq.n	1001890a <_strtoul_l.constprop.0+0xf2>
10018850:	230a      	movs	r3, #10
10018852:	f8df 80f4 	ldr.w	r8, [pc, #244]	@ 10018948 <_strtoul_l.constprop.0+0x130>
10018856:	f04f 0a05 	mov.w	sl, #5
1001885a:	4699      	mov	r9, r3
1001885c:	e00a      	b.n	10018874 <_strtoul_l.constprop.0+0x5c>
1001885e:	2b10      	cmp	r3, #16
10018860:	d04a      	beq.n	100188f8 <_strtoul_l.constprop.0+0xe0>
10018862:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
10018866:	fbb8 f8f3 	udiv	r8, r8, r3
1001886a:	fb03 fa08 	mul.w	sl, r3, r8
1001886e:	ea6f 0a0a 	mvn.w	sl, sl
10018872:	4699      	mov	r9, r3
10018874:	2500      	movs	r5, #0
10018876:	4628      	mov	r0, r5
10018878:	e005      	b.n	10018886 <_strtoul_l.constprop.0+0x6e>
1001887a:	d02c      	beq.n	100188d6 <_strtoul_l.constprop.0+0xbe>
1001887c:	fb09 c000 	mla	r0, r9, r0, ip
10018880:	2501      	movs	r5, #1
10018882:	f816 eb01 	ldrb.w	lr, [r6], #1
10018886:	f1ae 0c30 	sub.w	ip, lr, #48	@ 0x30
1001888a:	f1bc 0f09 	cmp.w	ip, #9
1001888e:	d906      	bls.n	1001889e <_strtoul_l.constprop.0+0x86>
10018890:	f1ae 0c41 	sub.w	ip, lr, #65	@ 0x41
10018894:	f1bc 0f19 	cmp.w	ip, #25
10018898:	d80b      	bhi.n	100188b2 <_strtoul_l.constprop.0+0x9a>
1001889a:	f1ae 0c37 	sub.w	ip, lr, #55	@ 0x37
1001889e:	4563      	cmp	r3, ip
100188a0:	dd10      	ble.n	100188c4 <_strtoul_l.constprop.0+0xac>
100188a2:	f1b5 3fff 	cmp.w	r5, #4294967295	@ 0xffffffff
100188a6:	d0ec      	beq.n	10018882 <_strtoul_l.constprop.0+0x6a>
100188a8:	4540      	cmp	r0, r8
100188aa:	d9e6      	bls.n	1001887a <_strtoul_l.constprop.0+0x62>
100188ac:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
100188b0:	e7e7      	b.n	10018882 <_strtoul_l.constprop.0+0x6a>
100188b2:	f1ae 0c61 	sub.w	ip, lr, #97	@ 0x61
100188b6:	f1bc 0f19 	cmp.w	ip, #25
100188ba:	d803      	bhi.n	100188c4 <_strtoul_l.constprop.0+0xac>
100188bc:	f1ae 0c57 	sub.w	ip, lr, #87	@ 0x57
100188c0:	4563      	cmp	r3, ip
100188c2:	dcee      	bgt.n	100188a2 <_strtoul_l.constprop.0+0x8a>
100188c4:	1c6b      	adds	r3, r5, #1
100188c6:	d00b      	beq.n	100188e0 <_strtoul_l.constprop.0+0xc8>
100188c8:	b104      	cbz	r4, 100188cc <_strtoul_l.constprop.0+0xb4>
100188ca:	4240      	negs	r0, r0
100188cc:	b10a      	cbz	r2, 100188d2 <_strtoul_l.constprop.0+0xba>
100188ce:	b965      	cbnz	r5, 100188ea <_strtoul_l.constprop.0+0xd2>
100188d0:	6011      	str	r1, [r2, #0]
100188d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
100188d6:	45d4      	cmp	ip, sl
100188d8:	ddd0      	ble.n	1001887c <_strtoul_l.constprop.0+0x64>
100188da:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
100188de:	e7d0      	b.n	10018882 <_strtoul_l.constprop.0+0x6a>
100188e0:	2322      	movs	r3, #34	@ 0x22
100188e2:	603b      	str	r3, [r7, #0]
100188e4:	4628      	mov	r0, r5
100188e6:	2a00      	cmp	r2, #0
100188e8:	d0f3      	beq.n	100188d2 <_strtoul_l.constprop.0+0xba>
100188ea:	1e71      	subs	r1, r6, #1
100188ec:	e7f0      	b.n	100188d0 <_strtoul_l.constprop.0+0xb8>
100188ee:	f896 e000 	ldrb.w	lr, [r6]
100188f2:	2401      	movs	r4, #1
100188f4:	1cae      	adds	r6, r5, #2
100188f6:	e7a7      	b.n	10018848 <_strtoul_l.constprop.0+0x30>
100188f8:	f1be 0f30 	cmp.w	lr, #48	@ 0x30
100188fc:	d011      	beq.n	10018922 <_strtoul_l.constprop.0+0x10a>
100188fe:	f04f 0a0f 	mov.w	sl, #15
10018902:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
10018906:	4699      	mov	r9, r3
10018908:	e7b4      	b.n	10018874 <_strtoul_l.constprop.0+0x5c>
1001890a:	7833      	ldrb	r3, [r6, #0]
1001890c:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
10018910:	2b58      	cmp	r3, #88	@ 0x58
10018912:	d00b      	beq.n	1001892c <_strtoul_l.constprop.0+0x114>
10018914:	2308      	movs	r3, #8
10018916:	f04f 0a07 	mov.w	sl, #7
1001891a:	f06f 4860 	mvn.w	r8, #3758096384	@ 0xe0000000
1001891e:	4699      	mov	r9, r3
10018920:	e7a8      	b.n	10018874 <_strtoul_l.constprop.0+0x5c>
10018922:	7830      	ldrb	r0, [r6, #0]
10018924:	f000 00df 	and.w	r0, r0, #223	@ 0xdf
10018928:	2858      	cmp	r0, #88	@ 0x58
1001892a:	d1e8      	bne.n	100188fe <_strtoul_l.constprop.0+0xe6>
1001892c:	f04f 0910 	mov.w	r9, #16
10018930:	f896 e001 	ldrb.w	lr, [r6, #1]
10018934:	f04f 0a0f 	mov.w	sl, #15
10018938:	3602      	adds	r6, #2
1001893a:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
1001893e:	464b      	mov	r3, r9
10018940:	e798      	b.n	10018874 <_strtoul_l.constprop.0+0x5c>
10018942:	bf00      	nop
10018944:	1002388d 	.word	0x1002388d
10018948:	19999999 	.word	0x19999999

1001894c <_strtoul_r>:
1001894c:	f7ff bf64 	b.w	10018818 <_strtoul_l.constprop.0>

10018950 <__match>:
10018950:	b410      	push	{r4}
10018952:	6804      	ldr	r4, [r0, #0]
10018954:	3401      	adds	r4, #1
10018956:	e009      	b.n	1001896c <__match+0x1c>
10018958:	f814 3b01 	ldrb.w	r3, [r4], #1
1001895c:	f1a3 0c41 	sub.w	ip, r3, #65	@ 0x41
10018960:	f1bc 0f19 	cmp.w	ip, #25
10018964:	bf98      	it	ls
10018966:	3320      	addls	r3, #32
10018968:	4293      	cmp	r3, r2
1001896a:	d107      	bne.n	1001897c <__match+0x2c>
1001896c:	f811 2b01 	ldrb.w	r2, [r1], #1
10018970:	2a00      	cmp	r2, #0
10018972:	d1f1      	bne.n	10018958 <__match+0x8>
10018974:	6004      	str	r4, [r0, #0]
10018976:	2001      	movs	r0, #1
10018978:	bc10      	pop	{r4}
1001897a:	4770      	bx	lr
1001897c:	2000      	movs	r0, #0
1001897e:	bc10      	pop	{r4}
10018980:	4770      	bx	lr
10018982:	bf00      	nop

10018984 <__hexnan>:
10018984:	6809      	ldr	r1, [r1, #0]
10018986:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001898a:	114b      	asrs	r3, r1, #5
1001898c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
10018990:	f011 0b1f 	ands.w	fp, r1, #31
10018994:	4607      	mov	r7, r0
10018996:	bf0c      	ite	eq
10018998:	4618      	moveq	r0, r3
1001899a:	1d18      	addne	r0, r3, #4
1001899c:	683c      	ldr	r4, [r7, #0]
1001899e:	bf0c      	ite	eq
100189a0:	1f1d      	subeq	r5, r3, #4
100189a2:	461d      	movne	r5, r3
100189a4:	2300      	movs	r3, #0
100189a6:	f840 3c04 	str.w	r3, [r0, #-4]
100189aa:	7861      	ldrb	r1, [r4, #1]
100189ac:	b085      	sub	sp, #20
100189ae:	3401      	adds	r4, #1
100189b0:	2900      	cmp	r1, #0
100189b2:	f000 80a8 	beq.w	10018b06 <__hexnan+0x182>
100189b6:	469e      	mov	lr, r3
100189b8:	469a      	mov	sl, r3
100189ba:	461e      	mov	r6, r3
100189bc:	460b      	mov	r3, r1
100189be:	4601      	mov	r1, r0
100189c0:	4610      	mov	r0, r2
100189c2:	f8df 9188 	ldr.w	r9, [pc, #392]	@ 10018b4c <__hexnan+0x1c8>
100189c6:	9701      	str	r7, [sp, #4]
100189c8:	465a      	mov	r2, fp
100189ca:	46a8      	mov	r8, r5
100189cc:	46ac      	mov	ip, r5
100189ce:	4683      	mov	fp, r0
100189d0:	e010      	b.n	100189f4 <__hexnan+0x70>
100189d2:	2b20      	cmp	r3, #32
100189d4:	f200 808f 	bhi.w	10018af6 <__hexnan+0x172>
100189d8:	4556      	cmp	r6, sl
100189da:	dd08      	ble.n	100189ee <__hexnan+0x6a>
100189dc:	45c4      	cmp	ip, r8
100189de:	d202      	bcs.n	100189e6 <__hexnan+0x62>
100189e0:	f1be 0f07 	cmp.w	lr, #7
100189e4:	dd5f      	ble.n	10018aa6 <__hexnan+0x122>
100189e6:	45e3      	cmp	fp, ip
100189e8:	d354      	bcc.n	10018a94 <__hexnan+0x110>
100189ea:	f04f 0e08 	mov.w	lr, #8
100189ee:	f814 3f01 	ldrb.w	r3, [r4, #1]!
100189f2:	b1b3      	cbz	r3, 10018a22 <__hexnan+0x9e>
100189f4:	f819 7003 	ldrb.w	r7, [r9, r3]
100189f8:	2f00      	cmp	r7, #0
100189fa:	d0ea      	beq.n	100189d2 <__hexnan+0x4e>
100189fc:	f10e 0e01 	add.w	lr, lr, #1
10018a00:	f1be 0f08 	cmp.w	lr, #8
10018a04:	f106 0601 	add.w	r6, r6, #1
10018a08:	dc3a      	bgt.n	10018a80 <__hexnan+0xfc>
10018a0a:	f8dc 3000 	ldr.w	r3, [ip]
10018a0e:	011b      	lsls	r3, r3, #4
10018a10:	f007 070f 	and.w	r7, r7, #15
10018a14:	431f      	orrs	r7, r3
10018a16:	f8cc 7000 	str.w	r7, [ip]
10018a1a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
10018a1e:	2b00      	cmp	r3, #0
10018a20:	d1e8      	bne.n	100189f4 <__hexnan+0x70>
10018a22:	465b      	mov	r3, fp
10018a24:	4608      	mov	r0, r1
10018a26:	4693      	mov	fp, r2
10018a28:	461a      	mov	r2, r3
10018a2a:	2e00      	cmp	r6, #0
10018a2c:	d06b      	beq.n	10018b06 <__hexnan+0x182>
10018a2e:	45e0      	cmp	r8, ip
10018a30:	d902      	bls.n	10018a38 <__hexnan+0xb4>
10018a32:	f1be 0f07 	cmp.w	lr, #7
10018a36:	dd73      	ble.n	10018b20 <__hexnan+0x19c>
10018a38:	4562      	cmp	r2, ip
10018a3a:	d24d      	bcs.n	10018ad8 <__hexnan+0x154>
10018a3c:	1f11      	subs	r1, r2, #4
10018a3e:	4663      	mov	r3, ip
10018a40:	f853 4b04 	ldr.w	r4, [r3], #4
10018a44:	f841 4f04 	str.w	r4, [r1, #4]!
10018a48:	42ab      	cmp	r3, r5
10018a4a:	d9f9      	bls.n	10018a40 <__hexnan+0xbc>
10018a4c:	eba5 030c 	sub.w	r3, r5, ip
10018a50:	f023 0303 	bic.w	r3, r3, #3
10018a54:	1c69      	adds	r1, r5, #1
10018a56:	3304      	adds	r3, #4
10018a58:	f10c 0c01 	add.w	ip, ip, #1
10018a5c:	4561      	cmp	r1, ip
10018a5e:	bf38      	it	cc
10018a60:	2304      	movcc	r3, #4
10018a62:	4413      	add	r3, r2
10018a64:	2100      	movs	r1, #0
10018a66:	f843 1b04 	str.w	r1, [r3], #4
10018a6a:	42ab      	cmp	r3, r5
10018a6c:	d9fb      	bls.n	10018a66 <__hexnan+0xe2>
10018a6e:	f850 3c04 	ldr.w	r3, [r0, #-4]
10018a72:	2b00      	cmp	r3, #0
10018a74:	d14d      	bne.n	10018b12 <__hexnan+0x18e>
10018a76:	42aa      	cmp	r2, r5
10018a78:	d049      	beq.n	10018b0e <__hexnan+0x18a>
10018a7a:	f855 3d04 	ldr.w	r3, [r5, #-4]!
10018a7e:	e7f8      	b.n	10018a72 <__hexnan+0xee>
10018a80:	45e3      	cmp	fp, ip
10018a82:	d2b4      	bcs.n	100189ee <__hexnan+0x6a>
10018a84:	2300      	movs	r3, #0
10018a86:	f84c 3c04 	str.w	r3, [ip, #-4]
10018a8a:	f04f 0e01 	mov.w	lr, #1
10018a8e:	f1ac 0c04 	sub.w	ip, ip, #4
10018a92:	e7bd      	b.n	10018a10 <__hexnan+0x8c>
10018a94:	2300      	movs	r3, #0
10018a96:	f1ac 0804 	sub.w	r8, ip, #4
10018a9a:	f84c 3c04 	str.w	r3, [ip, #-4]
10018a9e:	46b2      	mov	sl, r6
10018aa0:	46c4      	mov	ip, r8
10018aa2:	469e      	mov	lr, r3
10018aa4:	e7a3      	b.n	100189ee <__hexnan+0x6a>
10018aa6:	f1ce 0008 	rsb	r0, lr, #8
10018aaa:	0080      	lsls	r0, r0, #2
10018aac:	e9cd 2c02 	strd	r2, ip, [sp, #8]
10018ab0:	f8dc 3000 	ldr.w	r3, [ip]
10018ab4:	4667      	mov	r7, ip
10018ab6:	f1c0 0e20 	rsb	lr, r0, #32
10018aba:	4684      	mov	ip, r0
10018abc:	6878      	ldr	r0, [r7, #4]
10018abe:	fa00 f20e 	lsl.w	r2, r0, lr
10018ac2:	431a      	orrs	r2, r3
10018ac4:	fa20 f30c 	lsr.w	r3, r0, ip
10018ac8:	603a      	str	r2, [r7, #0]
10018aca:	f847 3f04 	str.w	r3, [r7, #4]!
10018ace:	4547      	cmp	r7, r8
10018ad0:	d3f4      	bcc.n	10018abc <__hexnan+0x138>
10018ad2:	e9dd 2c02 	ldrd	r2, ip, [sp, #8]
10018ad6:	e786      	b.n	100189e6 <__hexnan+0x62>
10018ad8:	f850 3c04 	ldr.w	r3, [r0, #-4]
10018adc:	f1bb 0f00 	cmp.w	fp, #0
10018ae0:	d0c7      	beq.n	10018a72 <__hexnan+0xee>
10018ae2:	f1cb 0b20 	rsb	fp, fp, #32
10018ae6:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
10018aea:	fa21 f10b 	lsr.w	r1, r1, fp
10018aee:	400b      	ands	r3, r1
10018af0:	f840 3c04 	str.w	r3, [r0, #-4]
10018af4:	e7bd      	b.n	10018a72 <__hexnan+0xee>
10018af6:	4608      	mov	r0, r1
10018af8:	4619      	mov	r1, r3
10018afa:	2929      	cmp	r1, #41	@ 0x29
10018afc:	465b      	mov	r3, fp
10018afe:	9f01      	ldr	r7, [sp, #4]
10018b00:	4693      	mov	fp, r2
10018b02:	461a      	mov	r2, r3
10018b04:	d009      	beq.n	10018b1a <__hexnan+0x196>
10018b06:	2004      	movs	r0, #4
10018b08:	b005      	add	sp, #20
10018b0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018b0e:	2301      	movs	r3, #1
10018b10:	602b      	str	r3, [r5, #0]
10018b12:	2005      	movs	r0, #5
10018b14:	b005      	add	sp, #20
10018b16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018b1a:	3401      	adds	r4, #1
10018b1c:	603c      	str	r4, [r7, #0]
10018b1e:	e784      	b.n	10018a2a <__hexnan+0xa6>
10018b20:	f1ce 0308 	rsb	r3, lr, #8
10018b24:	f8dc 1000 	ldr.w	r1, [ip]
10018b28:	009b      	lsls	r3, r3, #2
10018b2a:	f1c3 0e20 	rsb	lr, r3, #32
10018b2e:	4666      	mov	r6, ip
10018b30:	460c      	mov	r4, r1
10018b32:	6877      	ldr	r7, [r6, #4]
10018b34:	fa07 f10e 	lsl.w	r1, r7, lr
10018b38:	4321      	orrs	r1, r4
10018b3a:	fa27 f403 	lsr.w	r4, r7, r3
10018b3e:	6031      	str	r1, [r6, #0]
10018b40:	f846 4f04 	str.w	r4, [r6, #4]!
10018b44:	45b0      	cmp	r8, r6
10018b46:	d8f4      	bhi.n	10018b32 <__hexnan+0x1ae>
10018b48:	e776      	b.n	10018a38 <__hexnan+0xb4>
10018b4a:	bf00      	nop
10018b4c:	10023a68 	.word	0x10023a68

10018b50 <strncmp>:
10018b50:	b3b2      	cbz	r2, 10018bc0 <strncmp+0x70>
10018b52:	ea40 0301 	orr.w	r3, r0, r1
10018b56:	079b      	lsls	r3, r3, #30
10018b58:	b530      	push	{r4, r5, lr}
10018b5a:	4684      	mov	ip, r0
10018b5c:	d118      	bne.n	10018b90 <strncmp+0x40>
10018b5e:	2a03      	cmp	r2, #3
10018b60:	d916      	bls.n	10018b90 <strncmp+0x40>
10018b62:	4604      	mov	r4, r0
10018b64:	460b      	mov	r3, r1
10018b66:	e006      	b.n	10018b76 <strncmp+0x26>
10018b68:	3a04      	subs	r2, #4
10018b6a:	d02b      	beq.n	10018bc4 <strncmp+0x74>
10018b6c:	f01e 3f80 	tst.w	lr, #2155905152	@ 0x80808080
10018b70:	d128      	bne.n	10018bc4 <strncmp+0x74>
10018b72:	2a03      	cmp	r2, #3
10018b74:	d92a      	bls.n	10018bcc <strncmp+0x7c>
10018b76:	6820      	ldr	r0, [r4, #0]
10018b78:	4619      	mov	r1, r3
10018b7a:	f853 5b04 	ldr.w	r5, [r3], #4
10018b7e:	f1a0 3e01 	sub.w	lr, r0, #16843009	@ 0x1010101
10018b82:	42a8      	cmp	r0, r5
10018b84:	46a4      	mov	ip, r4
10018b86:	ea2e 0e00 	bic.w	lr, lr, r0
10018b8a:	f104 0404 	add.w	r4, r4, #4
10018b8e:	d0eb      	beq.n	10018b68 <strncmp+0x18>
10018b90:	f89c 0000 	ldrb.w	r0, [ip]
10018b94:	780c      	ldrb	r4, [r1, #0]
10018b96:	4284      	cmp	r4, r0
10018b98:	d116      	bne.n	10018bc8 <strncmp+0x78>
10018b9a:	2a01      	cmp	r2, #1
10018b9c:	d012      	beq.n	10018bc4 <strncmp+0x74>
10018b9e:	46e6      	mov	lr, ip
10018ba0:	b168      	cbz	r0, 10018bbe <strncmp+0x6e>
10018ba2:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
10018ba6:	f811 4f01 	ldrb.w	r4, [r1, #1]!
10018baa:	eba2 030e 	sub.w	r3, r2, lr
10018bae:	42a0      	cmp	r0, r4
10018bb0:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
10018bb4:	d108      	bne.n	10018bc8 <strncmp+0x78>
10018bb6:	eb1c 0303 	adds.w	r3, ip, r3
10018bba:	d1f1      	bne.n	10018ba0 <strncmp+0x50>
10018bbc:	4618      	mov	r0, r3
10018bbe:	bd30      	pop	{r4, r5, pc}
10018bc0:	4610      	mov	r0, r2
10018bc2:	4770      	bx	lr
10018bc4:	2000      	movs	r0, #0
10018bc6:	bd30      	pop	{r4, r5, pc}
10018bc8:	1b00      	subs	r0, r0, r4
10018bca:	bd30      	pop	{r4, r5, pc}
10018bcc:	46a4      	mov	ip, r4
10018bce:	4619      	mov	r1, r3
10018bd0:	e7de      	b.n	10018b90 <strncmp+0x40>
10018bd2:	bf00      	nop

10018bd4 <_strtoll_l.constprop.0>:
10018bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10018bd8:	b085      	sub	sp, #20
10018bda:	4692      	mov	sl, r2
10018bdc:	4a5b      	ldr	r2, [pc, #364]	@ (10018d4c <_strtoll_l.constprop.0+0x178>)
10018bde:	9003      	str	r0, [sp, #12]
10018be0:	4689      	mov	r9, r1
10018be2:	461e      	mov	r6, r3
10018be4:	460d      	mov	r5, r1
10018be6:	4629      	mov	r1, r5
10018be8:	f815 4b01 	ldrb.w	r4, [r5], #1
10018bec:	5d13      	ldrb	r3, [r2, r4]
10018bee:	f013 0308 	ands.w	r3, r3, #8
10018bf2:	d1f8      	bne.n	10018be6 <_strtoll_l.constprop.0+0x12>
10018bf4:	2c2d      	cmp	r4, #45	@ 0x2d
10018bf6:	d07d      	beq.n	10018cf4 <_strtoll_l.constprop.0+0x120>
10018bf8:	2c2b      	cmp	r4, #43	@ 0x2b
10018bfa:	d041      	beq.n	10018c80 <_strtoll_l.constprop.0+0xac>
10018bfc:	9302      	str	r3, [sp, #8]
10018bfe:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10018c02:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
10018c06:	e9cd 2300 	strd	r2, r3, [sp]
10018c0a:	2e00      	cmp	r6, #0
10018c0c:	d143      	bne.n	10018c96 <_strtoll_l.constprop.0+0xc2>
10018c0e:	2c30      	cmp	r4, #48	@ 0x30
10018c10:	d079      	beq.n	10018d06 <_strtoll_l.constprop.0+0x132>
10018c12:	270a      	movs	r7, #10
10018c14:	46b0      	mov	r8, r6
10018c16:	463e      	mov	r6, r7
10018c18:	e9dd 0100 	ldrd	r0, r1, [sp]
10018c1c:	463a      	mov	r2, r7
10018c1e:	4643      	mov	r3, r8
10018c20:	f008 f8f6 	bl	10020e10 <__aeabi_uldivmod>
10018c24:	2300      	movs	r3, #0
10018c26:	468e      	mov	lr, r1
10018c28:	4683      	mov	fp, r0
10018c2a:	4619      	mov	r1, r3
10018c2c:	4618      	mov	r0, r3
10018c2e:	46a4      	mov	ip, r4
10018c30:	e010      	b.n	10018c54 <_strtoll_l.constprop.0+0x80>
10018c32:	458e      	cmp	lr, r1
10018c34:	bf08      	it	eq
10018c36:	4583      	cmpeq	fp, r0
10018c38:	d04c      	beq.n	10018cd4 <_strtoll_l.constprop.0+0x100>
10018c3a:	fb00 f308 	mul.w	r3, r0, r8
10018c3e:	fb07 3301 	mla	r3, r7, r1, r3
10018c42:	fba0 0107 	umull	r0, r1, r0, r7
10018c46:	440b      	add	r3, r1
10018c48:	1820      	adds	r0, r4, r0
10018c4a:	eb43 71e4 	adc.w	r1, r3, r4, asr #31
10018c4e:	2301      	movs	r3, #1
10018c50:	f815 cb01 	ldrb.w	ip, [r5], #1
10018c54:	f1ac 0430 	sub.w	r4, ip, #48	@ 0x30
10018c58:	2c09      	cmp	r4, #9
10018c5a:	d905      	bls.n	10018c68 <_strtoll_l.constprop.0+0x94>
10018c5c:	f1ac 0441 	sub.w	r4, ip, #65	@ 0x41
10018c60:	2c19      	cmp	r4, #25
10018c62:	d81e      	bhi.n	10018ca2 <_strtoll_l.constprop.0+0xce>
10018c64:	f1ac 0437 	sub.w	r4, ip, #55	@ 0x37
10018c68:	42a6      	cmp	r6, r4
10018c6a:	dd22      	ble.n	10018cb2 <_strtoll_l.constprop.0+0xde>
10018c6c:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
10018c70:	d0ee      	beq.n	10018c50 <_strtoll_l.constprop.0+0x7c>
10018c72:	4583      	cmp	fp, r0
10018c74:	eb7e 0301 	sbcs.w	r3, lr, r1
10018c78:	d2db      	bcs.n	10018c32 <_strtoll_l.constprop.0+0x5e>
10018c7a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10018c7e:	e7e7      	b.n	10018c50 <_strtoll_l.constprop.0+0x7c>
10018c80:	782c      	ldrb	r4, [r5, #0]
10018c82:	9302      	str	r3, [sp, #8]
10018c84:	1c8d      	adds	r5, r1, #2
10018c86:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
10018c8a:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
10018c8e:	e9cd 1300 	strd	r1, r3, [sp]
10018c92:	2e00      	cmp	r6, #0
10018c94:	d0bb      	beq.n	10018c0e <_strtoll_l.constprop.0+0x3a>
10018c96:	2e10      	cmp	r6, #16
10018c98:	d03e      	beq.n	10018d18 <_strtoll_l.constprop.0+0x144>
10018c9a:	4637      	mov	r7, r6
10018c9c:	ea4f 78e6 	mov.w	r8, r6, asr #31
10018ca0:	e7ba      	b.n	10018c18 <_strtoll_l.constprop.0+0x44>
10018ca2:	f1ac 0461 	sub.w	r4, ip, #97	@ 0x61
10018ca6:	2c19      	cmp	r4, #25
10018ca8:	d803      	bhi.n	10018cb2 <_strtoll_l.constprop.0+0xde>
10018caa:	f1ac 0457 	sub.w	r4, ip, #87	@ 0x57
10018cae:	42a6      	cmp	r6, r4
10018cb0:	dcdc      	bgt.n	10018c6c <_strtoll_l.constprop.0+0x98>
10018cb2:	1c5a      	adds	r2, r3, #1
10018cb4:	d013      	beq.n	10018cde <_strtoll_l.constprop.0+0x10a>
10018cb6:	9a02      	ldr	r2, [sp, #8]
10018cb8:	b112      	cbz	r2, 10018cc0 <_strtoll_l.constprop.0+0xec>
10018cba:	4240      	negs	r0, r0
10018cbc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10018cc0:	f1ba 0f00 	cmp.w	sl, #0
10018cc4:	d003      	beq.n	10018cce <_strtoll_l.constprop.0+0xfa>
10018cc6:	2b00      	cmp	r3, #0
10018cc8:	d13d      	bne.n	10018d46 <_strtoll_l.constprop.0+0x172>
10018cca:	f8ca 9000 	str.w	r9, [sl]
10018cce:	b005      	add	sp, #20
10018cd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018cd4:	42a2      	cmp	r2, r4
10018cd6:	dab0      	bge.n	10018c3a <_strtoll_l.constprop.0+0x66>
10018cd8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10018cdc:	e7b8      	b.n	10018c50 <_strtoll_l.constprop.0+0x7c>
10018cde:	9a03      	ldr	r2, [sp, #12]
10018ce0:	2322      	movs	r3, #34	@ 0x22
10018ce2:	6013      	str	r3, [r2, #0]
10018ce4:	f1ba 0f00 	cmp.w	sl, #0
10018ce8:	d028      	beq.n	10018d3c <_strtoll_l.constprop.0+0x168>
10018cea:	e9dd 0100 	ldrd	r0, r1, [sp]
10018cee:	f105 39ff 	add.w	r9, r5, #4294967295	@ 0xffffffff
10018cf2:	e7ea      	b.n	10018cca <_strtoll_l.constprop.0+0xf6>
10018cf4:	9300      	str	r3, [sp, #0]
10018cf6:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
10018cfa:	2301      	movs	r3, #1
10018cfc:	782c      	ldrb	r4, [r5, #0]
10018cfe:	e9cd 0301 	strd	r0, r3, [sp, #4]
10018d02:	1c8d      	adds	r5, r1, #2
10018d04:	e781      	b.n	10018c0a <_strtoll_l.constprop.0+0x36>
10018d06:	782b      	ldrb	r3, [r5, #0]
10018d08:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
10018d0c:	2b58      	cmp	r3, #88	@ 0x58
10018d0e:	d00e      	beq.n	10018d2e <_strtoll_l.constprop.0+0x15a>
10018d10:	2708      	movs	r7, #8
10018d12:	46b0      	mov	r8, r6
10018d14:	463e      	mov	r6, r7
10018d16:	e77f      	b.n	10018c18 <_strtoll_l.constprop.0+0x44>
10018d18:	2c30      	cmp	r4, #48	@ 0x30
10018d1a:	d003      	beq.n	10018d24 <_strtoll_l.constprop.0+0x150>
10018d1c:	4637      	mov	r7, r6
10018d1e:	f04f 0800 	mov.w	r8, #0
10018d22:	e779      	b.n	10018c18 <_strtoll_l.constprop.0+0x44>
10018d24:	782b      	ldrb	r3, [r5, #0]
10018d26:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
10018d2a:	2b58      	cmp	r3, #88	@ 0x58
10018d2c:	d1f6      	bne.n	10018d1c <_strtoll_l.constprop.0+0x148>
10018d2e:	2710      	movs	r7, #16
10018d30:	786c      	ldrb	r4, [r5, #1]
10018d32:	f04f 0800 	mov.w	r8, #0
10018d36:	3502      	adds	r5, #2
10018d38:	463e      	mov	r6, r7
10018d3a:	e76d      	b.n	10018c18 <_strtoll_l.constprop.0+0x44>
10018d3c:	e9dd 0100 	ldrd	r0, r1, [sp]
10018d40:	b005      	add	sp, #20
10018d42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018d46:	e9cd 0100 	strd	r0, r1, [sp]
10018d4a:	e7ce      	b.n	10018cea <_strtoll_l.constprop.0+0x116>
10018d4c:	1002388d 	.word	0x1002388d

10018d50 <_strtoll_r>:
10018d50:	f7ff bf40 	b.w	10018bd4 <_strtoll_l.constprop.0>

10018d54 <_strtoull_l.constprop.0>:
10018d54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10018d58:	b085      	sub	sp, #20
10018d5a:	468b      	mov	fp, r1
10018d5c:	9201      	str	r2, [sp, #4]
10018d5e:	4a60      	ldr	r2, [pc, #384]	@ (10018ee0 <_strtoull_l.constprop.0+0x18c>)
10018d60:	9003      	str	r0, [sp, #12]
10018d62:	461e      	mov	r6, r3
10018d64:	460d      	mov	r5, r1
10018d66:	4629      	mov	r1, r5
10018d68:	f815 4b01 	ldrb.w	r4, [r5], #1
10018d6c:	5d13      	ldrb	r3, [r2, r4]
10018d6e:	f013 0308 	ands.w	r3, r3, #8
10018d72:	d1f8      	bne.n	10018d66 <_strtoull_l.constprop.0+0x12>
10018d74:	2c2d      	cmp	r4, #45	@ 0x2d
10018d76:	d07e      	beq.n	10018e76 <_strtoull_l.constprop.0+0x122>
10018d78:	2c2b      	cmp	r4, #43	@ 0x2b
10018d7a:	bf03      	ittte	eq
10018d7c:	782c      	ldrbeq	r4, [r5, #0]
10018d7e:	9302      	streq	r3, [sp, #8]
10018d80:	1c8d      	addeq	r5, r1, #2
10018d82:	9302      	strne	r3, [sp, #8]
10018d84:	b96e      	cbnz	r6, 10018da2 <_strtoull_l.constprop.0+0x4e>
10018d86:	2c30      	cmp	r4, #48	@ 0x30
10018d88:	f000 8086 	beq.w	10018e98 <_strtoull_l.constprop.0+0x144>
10018d8c:	f04f 090a 	mov.w	r9, #10
10018d90:	46b2      	mov	sl, r6
10018d92:	f8df 8150 	ldr.w	r8, [pc, #336]	@ 10018ee4 <_strtoull_l.constprop.0+0x190>
10018d96:	f04f 0c05 	mov.w	ip, #5
10018d9a:	f04f 3799 	mov.w	r7, #2576980377	@ 0x99999999
10018d9e:	464e      	mov	r6, r9
10018da0:	e017      	b.n	10018dd2 <_strtoull_l.constprop.0+0x7e>
10018da2:	2e10      	cmp	r6, #16
10018da4:	d06c      	beq.n	10018e80 <_strtoull_l.constprop.0+0x12c>
10018da6:	ea4f 7ae6 	mov.w	sl, r6, asr #31
10018daa:	4632      	mov	r2, r6
10018dac:	4653      	mov	r3, sl
10018dae:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10018db2:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
10018db6:	f008 f82b 	bl	10020e10 <__aeabi_uldivmod>
10018dba:	4632      	mov	r2, r6
10018dbc:	4607      	mov	r7, r0
10018dbe:	4688      	mov	r8, r1
10018dc0:	4653      	mov	r3, sl
10018dc2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10018dc6:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
10018dca:	f008 f821 	bl	10020e10 <__aeabi_uldivmod>
10018dce:	46b1      	mov	r9, r6
10018dd0:	4694      	mov	ip, r2
10018dd2:	2200      	movs	r2, #0
10018dd4:	4610      	mov	r0, r2
10018dd6:	4611      	mov	r1, r2
10018dd8:	e010      	b.n	10018dfc <_strtoull_l.constprop.0+0xa8>
10018dda:	4541      	cmp	r1, r8
10018ddc:	bf08      	it	eq
10018dde:	42b8      	cmpeq	r0, r7
10018de0:	d039      	beq.n	10018e56 <_strtoull_l.constprop.0+0x102>
10018de2:	fb00 f20a 	mul.w	r2, r0, sl
10018de6:	fb09 2101 	mla	r1, r9, r1, r2
10018dea:	fba0 0209 	umull	r0, r2, r0, r9
10018dee:	4411      	add	r1, r2
10018df0:	1818      	adds	r0, r3, r0
10018df2:	eb41 71e3 	adc.w	r1, r1, r3, asr #31
10018df6:	2201      	movs	r2, #1
10018df8:	f815 4b01 	ldrb.w	r4, [r5], #1
10018dfc:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
10018e00:	2b09      	cmp	r3, #9
10018e02:	d905      	bls.n	10018e10 <_strtoull_l.constprop.0+0xbc>
10018e04:	f1a4 0341 	sub.w	r3, r4, #65	@ 0x41
10018e08:	2b19      	cmp	r3, #25
10018e0a:	d80c      	bhi.n	10018e26 <_strtoull_l.constprop.0+0xd2>
10018e0c:	f1a4 0337 	sub.w	r3, r4, #55	@ 0x37
10018e10:	429e      	cmp	r6, r3
10018e12:	dd10      	ble.n	10018e36 <_strtoull_l.constprop.0+0xe2>
10018e14:	1c54      	adds	r4, r2, #1
10018e16:	d0ef      	beq.n	10018df8 <_strtoull_l.constprop.0+0xa4>
10018e18:	4287      	cmp	r7, r0
10018e1a:	eb78 0201 	sbcs.w	r2, r8, r1
10018e1e:	d2dc      	bcs.n	10018dda <_strtoull_l.constprop.0+0x86>
10018e20:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10018e24:	e7e8      	b.n	10018df8 <_strtoull_l.constprop.0+0xa4>
10018e26:	f1a4 0361 	sub.w	r3, r4, #97	@ 0x61
10018e2a:	2b19      	cmp	r3, #25
10018e2c:	d803      	bhi.n	10018e36 <_strtoull_l.constprop.0+0xe2>
10018e2e:	f1a4 0357 	sub.w	r3, r4, #87	@ 0x57
10018e32:	429e      	cmp	r6, r3
10018e34:	dcee      	bgt.n	10018e14 <_strtoull_l.constprop.0+0xc0>
10018e36:	1c53      	adds	r3, r2, #1
10018e38:	d012      	beq.n	10018e60 <_strtoull_l.constprop.0+0x10c>
10018e3a:	9b02      	ldr	r3, [sp, #8]
10018e3c:	b113      	cbz	r3, 10018e44 <_strtoull_l.constprop.0+0xf0>
10018e3e:	4240      	negs	r0, r0
10018e40:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10018e44:	9b01      	ldr	r3, [sp, #4]
10018e46:	b11b      	cbz	r3, 10018e50 <_strtoull_l.constprop.0+0xfc>
10018e48:	b992      	cbnz	r2, 10018e70 <_strtoull_l.constprop.0+0x11c>
10018e4a:	9b01      	ldr	r3, [sp, #4]
10018e4c:	f8c3 b000 	str.w	fp, [r3]
10018e50:	b005      	add	sp, #20
10018e52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018e56:	4563      	cmp	r3, ip
10018e58:	ddc3      	ble.n	10018de2 <_strtoull_l.constprop.0+0x8e>
10018e5a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10018e5e:	e7cb      	b.n	10018df8 <_strtoull_l.constprop.0+0xa4>
10018e60:	9903      	ldr	r1, [sp, #12]
10018e62:	2322      	movs	r3, #34	@ 0x22
10018e64:	600b      	str	r3, [r1, #0]
10018e66:	9b01      	ldr	r3, [sp, #4]
10018e68:	4610      	mov	r0, r2
10018e6a:	4611      	mov	r1, r2
10018e6c:	2b00      	cmp	r3, #0
10018e6e:	d0ef      	beq.n	10018e50 <_strtoull_l.constprop.0+0xfc>
10018e70:	f105 3bff 	add.w	fp, r5, #4294967295	@ 0xffffffff
10018e74:	e7e9      	b.n	10018e4a <_strtoull_l.constprop.0+0xf6>
10018e76:	2301      	movs	r3, #1
10018e78:	782c      	ldrb	r4, [r5, #0]
10018e7a:	9302      	str	r3, [sp, #8]
10018e7c:	1c8d      	adds	r5, r1, #2
10018e7e:	e781      	b.n	10018d84 <_strtoull_l.constprop.0+0x30>
10018e80:	2c30      	cmp	r4, #48	@ 0x30
10018e82:	d019      	beq.n	10018eb8 <_strtoull_l.constprop.0+0x164>
10018e84:	f04f 0c0f 	mov.w	ip, #15
10018e88:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
10018e8c:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
10018e90:	46b1      	mov	r9, r6
10018e92:	f04f 0a00 	mov.w	sl, #0
10018e96:	e79c      	b.n	10018dd2 <_strtoull_l.constprop.0+0x7e>
10018e98:	782b      	ldrb	r3, [r5, #0]
10018e9a:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
10018e9e:	2b58      	cmp	r3, #88	@ 0x58
10018ea0:	d00f      	beq.n	10018ec2 <_strtoull_l.constprop.0+0x16e>
10018ea2:	f04f 0908 	mov.w	r9, #8
10018ea6:	46b2      	mov	sl, r6
10018ea8:	f04f 0c07 	mov.w	ip, #7
10018eac:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
10018eb0:	f06f 4860 	mvn.w	r8, #3758096384	@ 0xe0000000
10018eb4:	464e      	mov	r6, r9
10018eb6:	e78c      	b.n	10018dd2 <_strtoull_l.constprop.0+0x7e>
10018eb8:	782b      	ldrb	r3, [r5, #0]
10018eba:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
10018ebe:	2b58      	cmp	r3, #88	@ 0x58
10018ec0:	d1e0      	bne.n	10018e84 <_strtoull_l.constprop.0+0x130>
10018ec2:	f04f 0910 	mov.w	r9, #16
10018ec6:	786c      	ldrb	r4, [r5, #1]
10018ec8:	f04f 0c0f 	mov.w	ip, #15
10018ecc:	3502      	adds	r5, #2
10018ece:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
10018ed2:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
10018ed6:	f04f 0a00 	mov.w	sl, #0
10018eda:	464e      	mov	r6, r9
10018edc:	e779      	b.n	10018dd2 <_strtoull_l.constprop.0+0x7e>
10018ede:	bf00      	nop
10018ee0:	1002388d 	.word	0x1002388d
10018ee4:	19999999 	.word	0x19999999

10018ee8 <_strtoull_r>:
10018ee8:	f7ff bf34 	b.w	10018d54 <_strtoull_l.constprop.0>

10018eec <_fstat_r>:
10018eec:	b570      	push	{r4, r5, r6, lr}
10018eee:	460c      	mov	r4, r1
10018ef0:	4d08      	ldr	r5, [pc, #32]	@ (10018f14 <_fstat_r+0x28>)
10018ef2:	4603      	mov	r3, r0
10018ef4:	2600      	movs	r6, #0
10018ef6:	4620      	mov	r0, r4
10018ef8:	4611      	mov	r1, r2
10018efa:	461c      	mov	r4, r3
10018efc:	602e      	str	r6, [r5, #0]
10018efe:	f7f8 fde7 	bl	10011ad0 <_fstat>
10018f02:	1c43      	adds	r3, r0, #1
10018f04:	d000      	beq.n	10018f08 <_fstat_r+0x1c>
10018f06:	bd70      	pop	{r4, r5, r6, pc}
10018f08:	682b      	ldr	r3, [r5, #0]
10018f0a:	2b00      	cmp	r3, #0
10018f0c:	d0fb      	beq.n	10018f06 <_fstat_r+0x1a>
10018f0e:	6023      	str	r3, [r4, #0]
10018f10:	bd70      	pop	{r4, r5, r6, pc}
10018f12:	bf00      	nop
10018f14:	20001498 	.word	0x20001498

10018f18 <_lseek_r>:
10018f18:	b538      	push	{r3, r4, r5, lr}
10018f1a:	460c      	mov	r4, r1
10018f1c:	4d08      	ldr	r5, [pc, #32]	@ (10018f40 <_lseek_r+0x28>)
10018f1e:	4684      	mov	ip, r0
10018f20:	4611      	mov	r1, r2
10018f22:	4620      	mov	r0, r4
10018f24:	461a      	mov	r2, r3
10018f26:	2300      	movs	r3, #0
10018f28:	602b      	str	r3, [r5, #0]
10018f2a:	4664      	mov	r4, ip
10018f2c:	f7f8 fdcc 	bl	10011ac8 <_lseek>
10018f30:	1c43      	adds	r3, r0, #1
10018f32:	d000      	beq.n	10018f36 <_lseek_r+0x1e>
10018f34:	bd38      	pop	{r3, r4, r5, pc}
10018f36:	682b      	ldr	r3, [r5, #0]
10018f38:	2b00      	cmp	r3, #0
10018f3a:	d0fb      	beq.n	10018f34 <_lseek_r+0x1c>
10018f3c:	6023      	str	r3, [r4, #0]
10018f3e:	bd38      	pop	{r3, r4, r5, pc}
10018f40:	20001498 	.word	0x20001498

10018f44 <_read_r>:
10018f44:	b538      	push	{r3, r4, r5, lr}
10018f46:	460c      	mov	r4, r1
10018f48:	4d08      	ldr	r5, [pc, #32]	@ (10018f6c <_read_r+0x28>)
10018f4a:	4684      	mov	ip, r0
10018f4c:	4611      	mov	r1, r2
10018f4e:	4620      	mov	r0, r4
10018f50:	461a      	mov	r2, r3
10018f52:	2300      	movs	r3, #0
10018f54:	602b      	str	r3, [r5, #0]
10018f56:	4664      	mov	r4, ip
10018f58:	f7f8 fdbe 	bl	10011ad8 <_read>
10018f5c:	1c43      	adds	r3, r0, #1
10018f5e:	d000      	beq.n	10018f62 <_read_r+0x1e>
10018f60:	bd38      	pop	{r3, r4, r5, pc}
10018f62:	682b      	ldr	r3, [r5, #0]
10018f64:	2b00      	cmp	r3, #0
10018f66:	d0fb      	beq.n	10018f60 <_read_r+0x1c>
10018f68:	6023      	str	r3, [r4, #0]
10018f6a:	bd38      	pop	{r3, r4, r5, pc}
10018f6c:	20001498 	.word	0x20001498

10018f70 <iswspace>:
10018f70:	2100      	movs	r1, #0
10018f72:	f000 b801 	b.w	10018f78 <iswspace_l>
10018f76:	bf00      	nop

10018f78 <iswspace_l>:
10018f78:	b510      	push	{r4, lr}
10018f7a:	f000 faf1 	bl	10019560 <_jp2uc_l>
10018f7e:	4604      	mov	r4, r0
10018f80:	f000 f876 	bl	10019070 <category>
10018f84:	f1a0 031a 	sub.w	r3, r0, #26
10018f88:	b2db      	uxtb	r3, r3
10018f8a:	2b02      	cmp	r3, #2
10018f8c:	d906      	bls.n	10018f9c <iswspace_l+0x24>
10018f8e:	f1a4 0009 	sub.w	r0, r4, #9
10018f92:	2804      	cmp	r0, #4
10018f94:	bf8c      	ite	hi
10018f96:	2000      	movhi	r0, #0
10018f98:	2001      	movls	r0, #1
10018f9a:	bd10      	pop	{r4, pc}
10018f9c:	2001      	movs	r0, #1
10018f9e:	bd10      	pop	{r4, pc}

10018fa0 <sprintf>:
10018fa0:	b40e      	push	{r1, r2, r3}
10018fa2:	b510      	push	{r4, lr}
10018fa4:	b09d      	sub	sp, #116	@ 0x74
10018fa6:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
10018faa:	ab1f      	add	r3, sp, #124	@ 0x7c
10018fac:	9104      	str	r1, [sp, #16]
10018fae:	9107      	str	r1, [sp, #28]
10018fb0:	4909      	ldr	r1, [pc, #36]	@ (10018fd8 <sprintf+0x38>)
10018fb2:	f853 2b04 	ldr.w	r2, [r3], #4
10018fb6:	9002      	str	r0, [sp, #8]
10018fb8:	9006      	str	r0, [sp, #24]
10018fba:	4c08      	ldr	r4, [pc, #32]	@ (10018fdc <sprintf+0x3c>)
10018fbc:	6808      	ldr	r0, [r1, #0]
10018fbe:	9301      	str	r3, [sp, #4]
10018fc0:	a902      	add	r1, sp, #8
10018fc2:	9405      	str	r4, [sp, #20]
10018fc4:	f000 fbb8 	bl	10019738 <_svfprintf_r>
10018fc8:	9b02      	ldr	r3, [sp, #8]
10018fca:	2200      	movs	r2, #0
10018fcc:	701a      	strb	r2, [r3, #0]
10018fce:	b01d      	add	sp, #116	@ 0x74
10018fd0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10018fd4:	b003      	add	sp, #12
10018fd6:	4770      	bx	lr
10018fd8:	20000590 	.word	0x20000590
10018fdc:	ffff0208 	.word	0xffff0208

10018fe0 <stpncpy>:
10018fe0:	ea41 0300 	orr.w	r3, r1, r0
10018fe4:	079b      	lsls	r3, r3, #30
10018fe6:	b410      	push	{r4}
10018fe8:	d101      	bne.n	10018fee <stpncpy+0xe>
10018fea:	2a03      	cmp	r2, #3
10018fec:	d81a      	bhi.n	10019024 <stpncpy+0x44>
10018fee:	f101 3cff 	add.w	ip, r1, #4294967295	@ 0xffffffff
10018ff2:	e007      	b.n	10019004 <stpncpy+0x24>
10018ff4:	f81c 1f01 	ldrb.w	r1, [ip, #1]!
10018ff8:	f803 1b01 	strb.w	r1, [r3], #1
10018ffc:	1e54      	subs	r4, r2, #1
10018ffe:	b131      	cbz	r1, 1001900e <stpncpy+0x2e>
10019000:	4622      	mov	r2, r4
10019002:	4618      	mov	r0, r3
10019004:	4603      	mov	r3, r0
10019006:	2a00      	cmp	r2, #0
10019008:	d1f4      	bne.n	10018ff4 <stpncpy+0x14>
1001900a:	bc10      	pop	{r4}
1001900c:	4770      	bx	lr
1001900e:	4402      	add	r2, r0
10019010:	b1f4      	cbz	r4, 10019050 <stpncpy+0x70>
10019012:	f803 1b01 	strb.w	r1, [r3], #1
10019016:	4293      	cmp	r3, r2
10019018:	d1fb      	bne.n	10019012 <stpncpy+0x32>
1001901a:	2800      	cmp	r0, #0
1001901c:	bf08      	it	eq
1001901e:	4610      	moveq	r0, r2
10019020:	bc10      	pop	{r4}
10019022:	4770      	bx	lr
10019024:	468c      	mov	ip, r1
10019026:	e004      	b.n	10019032 <stpncpy+0x52>
10019028:	3a04      	subs	r2, #4
1001902a:	2a03      	cmp	r2, #3
1001902c:	f840 4b04 	str.w	r4, [r0], #4
10019030:	d90c      	bls.n	1001904c <stpncpy+0x6c>
10019032:	f8dc 4000 	ldr.w	r4, [ip]
10019036:	f1a4 3301 	sub.w	r3, r4, #16843009	@ 0x1010101
1001903a:	ea23 0304 	bic.w	r3, r3, r4
1001903e:	f013 3f80 	tst.w	r3, #2155905152	@ 0x80808080
10019042:	4661      	mov	r1, ip
10019044:	f10c 0c04 	add.w	ip, ip, #4
10019048:	d0ee      	beq.n	10019028 <stpncpy+0x48>
1001904a:	e7d0      	b.n	10018fee <stpncpy+0xe>
1001904c:	4661      	mov	r1, ip
1001904e:	e7ce      	b.n	10018fee <stpncpy+0xe>
10019050:	461a      	mov	r2, r3
10019052:	e7e2      	b.n	1001901a <stpncpy+0x3a>

10019054 <__ascii_wctomb>:
10019054:	b149      	cbz	r1, 1001906a <__ascii_wctomb+0x16>
10019056:	2aff      	cmp	r2, #255	@ 0xff
10019058:	d802      	bhi.n	10019060 <__ascii_wctomb+0xc>
1001905a:	700a      	strb	r2, [r1, #0]
1001905c:	2001      	movs	r0, #1
1001905e:	4770      	bx	lr
10019060:	238a      	movs	r3, #138	@ 0x8a
10019062:	6003      	str	r3, [r0, #0]
10019064:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10019068:	4770      	bx	lr
1001906a:	4608      	mov	r0, r1
1001906c:	4770      	bx	lr
1001906e:	bf00      	nop

10019070 <category>:
10019070:	4b17      	ldr	r3, [pc, #92]	@ (100190d0 <category+0x60>)
10019072:	4298      	cmp	r0, r3
10019074:	d827      	bhi.n	100190c6 <category+0x56>
10019076:	b570      	push	{r4, r5, r6, lr}
10019078:	4d16      	ldr	r5, [pc, #88]	@ (100190d4 <category+0x64>)
1001907a:	f04f 0e00 	mov.w	lr, #0
1001907e:	f640 04f9 	movw	r4, #2297	@ 0x8f9
10019082:	e003      	b.n	1001908c <category+0x1c>
10019084:	f102 0e01 	add.w	lr, r2, #1
10019088:	4574      	cmp	r4, lr
1001908a:	db1a      	blt.n	100190c2 <category+0x52>
1001908c:	eb0e 0204 	add.w	r2, lr, r4
10019090:	f022 0301 	bic.w	r3, r2, #1
10019094:	eb03 0362 	add.w	r3, r3, r2, asr #1
10019098:	eb05 0c43 	add.w	ip, r5, r3, lsl #1
1001909c:	1052      	asrs	r2, r2, #1
1001909e:	f89c 1001 	ldrb.w	r1, [ip, #1]
100190a2:	f8bc 6002 	ldrh.w	r6, [ip, #2]
100190a6:	f8bc c004 	ldrh.w	ip, [ip, #4]
100190aa:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
100190ae:	448c      	add	ip, r1
100190b0:	4560      	cmp	r0, ip
100190b2:	ea4f 0343 	mov.w	r3, r3, lsl #1
100190b6:	d8e5      	bhi.n	10019084 <category+0x14>
100190b8:	4288      	cmp	r0, r1
100190ba:	d206      	bcs.n	100190ca <category+0x5a>
100190bc:	1e54      	subs	r4, r2, #1
100190be:	4574      	cmp	r4, lr
100190c0:	dae4      	bge.n	1001908c <category+0x1c>
100190c2:	20ff      	movs	r0, #255	@ 0xff
100190c4:	bd70      	pop	{r4, r5, r6, pc}
100190c6:	20ff      	movs	r0, #255	@ 0xff
100190c8:	4770      	bx	lr
100190ca:	5ce8      	ldrb	r0, [r5, r3]
100190cc:	bd70      	pop	{r4, r5, r6, pc}
100190ce:	bf00      	nop
100190d0:	000e01ef 	.word	0x000e01ef
100190d4:	10023b68 	.word	0x10023b68

100190d8 <_sbrk_r>:
100190d8:	b538      	push	{r3, r4, r5, lr}
100190da:	4d07      	ldr	r5, [pc, #28]	@ (100190f8 <_sbrk_r+0x20>)
100190dc:	2200      	movs	r2, #0
100190de:	4604      	mov	r4, r0
100190e0:	4608      	mov	r0, r1
100190e2:	602a      	str	r2, [r5, #0]
100190e4:	f7f8 fe70 	bl	10011dc8 <_sbrk>
100190e8:	1c43      	adds	r3, r0, #1
100190ea:	d000      	beq.n	100190ee <_sbrk_r+0x16>
100190ec:	bd38      	pop	{r3, r4, r5, pc}
100190ee:	682b      	ldr	r3, [r5, #0]
100190f0:	2b00      	cmp	r3, #0
100190f2:	d0fb      	beq.n	100190ec <_sbrk_r+0x14>
100190f4:	6023      	str	r3, [r4, #0]
100190f6:	bd38      	pop	{r3, r4, r5, pc}
100190f8:	20001498 	.word	0x20001498

100190fc <__sfvwrite_r>:
100190fc:	6893      	ldr	r3, [r2, #8]
100190fe:	2b00      	cmp	r3, #0
10019100:	f000 80f6 	beq.w	100192f0 <__sfvwrite_r+0x1f4>
10019104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10019108:	f9b1 c00c 	ldrsh.w	ip, [r1, #12]
1001910c:	f01c 0f08 	tst.w	ip, #8
10019110:	b083      	sub	sp, #12
10019112:	4690      	mov	r8, r2
10019114:	4681      	mov	r9, r0
10019116:	460c      	mov	r4, r1
10019118:	d031      	beq.n	1001917e <__sfvwrite_r+0x82>
1001911a:	690b      	ldr	r3, [r1, #16]
1001911c:	b37b      	cbz	r3, 1001917e <__sfvwrite_r+0x82>
1001911e:	f01c 0702 	ands.w	r7, ip, #2
10019122:	f8d8 6000 	ldr.w	r6, [r8]
10019126:	d038      	beq.n	1001919a <__sfvwrite_r+0x9e>
10019128:	2700      	movs	r7, #0
1001912a:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
1001912e:	69e1      	ldr	r1, [r4, #28]
10019130:	f8df a2bc 	ldr.w	sl, [pc, #700]	@ 100193f0 <__sfvwrite_r+0x2f4>
10019134:	463d      	mov	r5, r7
10019136:	4555      	cmp	r5, sl
10019138:	462b      	mov	r3, r5
1001913a:	463a      	mov	r2, r7
1001913c:	bf28      	it	cs
1001913e:	4653      	movcs	r3, sl
10019140:	4648      	mov	r0, r9
10019142:	b1c5      	cbz	r5, 10019176 <__sfvwrite_r+0x7a>
10019144:	47d8      	blx	fp
10019146:	2800      	cmp	r0, #0
10019148:	f340 80c8 	ble.w	100192dc <__sfvwrite_r+0x1e0>
1001914c:	f8d8 3008 	ldr.w	r3, [r8, #8]
10019150:	1a1b      	subs	r3, r3, r0
10019152:	4407      	add	r7, r0
10019154:	1a2d      	subs	r5, r5, r0
10019156:	f8c8 3008 	str.w	r3, [r8, #8]
1001915a:	2b00      	cmp	r3, #0
1001915c:	f000 80b4 	beq.w	100192c8 <__sfvwrite_r+0x1cc>
10019160:	4555      	cmp	r5, sl
10019162:	462b      	mov	r3, r5
10019164:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
10019168:	69e1      	ldr	r1, [r4, #28]
1001916a:	bf28      	it	cs
1001916c:	4653      	movcs	r3, sl
1001916e:	463a      	mov	r2, r7
10019170:	4648      	mov	r0, r9
10019172:	2d00      	cmp	r5, #0
10019174:	d1e6      	bne.n	10019144 <__sfvwrite_r+0x48>
10019176:	e9d6 7500 	ldrd	r7, r5, [r6]
1001917a:	3608      	adds	r6, #8
1001917c:	e7db      	b.n	10019136 <__sfvwrite_r+0x3a>
1001917e:	4621      	mov	r1, r4
10019180:	4648      	mov	r0, r9
10019182:	f005 f801 	bl	1001e188 <__swsetup_r>
10019186:	2800      	cmp	r0, #0
10019188:	f040 80ad 	bne.w	100192e6 <__sfvwrite_r+0x1ea>
1001918c:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
10019190:	f8d8 6000 	ldr.w	r6, [r8]
10019194:	f01c 0702 	ands.w	r7, ip, #2
10019198:	d1c6      	bne.n	10019128 <__sfvwrite_r+0x2c>
1001919a:	f01c 0a01 	ands.w	sl, ip, #1
1001919e:	d163      	bne.n	10019268 <__sfvwrite_r+0x16c>
100191a0:	6823      	ldr	r3, [r4, #0]
100191a2:	68a1      	ldr	r1, [r4, #8]
100191a4:	4657      	mov	r7, sl
100191a6:	4618      	mov	r0, r3
100191a8:	468b      	mov	fp, r1
100191aa:	2f00      	cmp	r7, #0
100191ac:	d058      	beq.n	10019260 <__sfvwrite_r+0x164>
100191ae:	f41c 7f00 	tst.w	ip, #512	@ 0x200
100191b2:	f000 80b1 	beq.w	10019318 <__sfvwrite_r+0x21c>
100191b6:	42b9      	cmp	r1, r7
100191b8:	460a      	mov	r2, r1
100191ba:	f200 80dd 	bhi.w	10019378 <__sfvwrite_r+0x27c>
100191be:	f41c 6f90 	tst.w	ip, #1152	@ 0x480
100191c2:	d02f      	beq.n	10019224 <__sfvwrite_r+0x128>
100191c4:	6921      	ldr	r1, [r4, #16]
100191c6:	6962      	ldr	r2, [r4, #20]
100191c8:	1a5d      	subs	r5, r3, r1
100191ca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
100191ce:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
100191d2:	1c6b      	adds	r3, r5, #1
100191d4:	1052      	asrs	r2, r2, #1
100191d6:	443b      	add	r3, r7
100191d8:	4293      	cmp	r3, r2
100191da:	bf92      	itee	ls
100191dc:	4693      	movls	fp, r2
100191de:	469b      	movhi	fp, r3
100191e0:	461a      	movhi	r2, r3
100191e2:	f41c 6f80 	tst.w	ip, #1024	@ 0x400
100191e6:	f000 80e6 	beq.w	100193b6 <__sfvwrite_r+0x2ba>
100191ea:	4611      	mov	r1, r2
100191ec:	4648      	mov	r0, r9
100191ee:	f7fc fa1f 	bl	10015630 <_malloc_r>
100191f2:	2800      	cmp	r0, #0
100191f4:	f000 80f5 	beq.w	100193e2 <__sfvwrite_r+0x2e6>
100191f8:	462a      	mov	r2, r5
100191fa:	6921      	ldr	r1, [r4, #16]
100191fc:	9001      	str	r0, [sp, #4]
100191fe:	f7fd fb07 	bl	10016810 <memcpy>
10019202:	89a2      	ldrh	r2, [r4, #12]
10019204:	9b01      	ldr	r3, [sp, #4]
10019206:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
1001920a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
1001920e:	81a2      	strh	r2, [r4, #12]
10019210:	1958      	adds	r0, r3, r5
10019212:	ebab 0505 	sub.w	r5, fp, r5
10019216:	f8c4 b014 	str.w	fp, [r4, #20]
1001921a:	6123      	str	r3, [r4, #16]
1001921c:	60a5      	str	r5, [r4, #8]
1001921e:	6020      	str	r0, [r4, #0]
10019220:	46bb      	mov	fp, r7
10019222:	463a      	mov	r2, r7
10019224:	4651      	mov	r1, sl
10019226:	9201      	str	r2, [sp, #4]
10019228:	f7fc fcf0 	bl	10015c0c <memmove>
1001922c:	68a1      	ldr	r1, [r4, #8]
1001922e:	6823      	ldr	r3, [r4, #0]
10019230:	9a01      	ldr	r2, [sp, #4]
10019232:	eba1 010b 	sub.w	r1, r1, fp
10019236:	441a      	add	r2, r3
10019238:	463d      	mov	r5, r7
1001923a:	60a1      	str	r1, [r4, #8]
1001923c:	6022      	str	r2, [r4, #0]
1001923e:	2700      	movs	r7, #0
10019240:	f8d8 3008 	ldr.w	r3, [r8, #8]
10019244:	1b5b      	subs	r3, r3, r5
10019246:	44aa      	add	sl, r5
10019248:	f8c8 3008 	str.w	r3, [r8, #8]
1001924c:	2b00      	cmp	r3, #0
1001924e:	d03b      	beq.n	100192c8 <__sfvwrite_r+0x1cc>
10019250:	6823      	ldr	r3, [r4, #0]
10019252:	68a1      	ldr	r1, [r4, #8]
10019254:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
10019258:	4618      	mov	r0, r3
1001925a:	468b      	mov	fp, r1
1001925c:	2f00      	cmp	r7, #0
1001925e:	d1a6      	bne.n	100191ae <__sfvwrite_r+0xb2>
10019260:	e9d6 a700 	ldrd	sl, r7, [r6]
10019264:	3608      	adds	r6, #8
10019266:	e79e      	b.n	100191a6 <__sfvwrite_r+0xaa>
10019268:	4638      	mov	r0, r7
1001926a:	46bb      	mov	fp, r7
1001926c:	463d      	mov	r5, r7
1001926e:	2d00      	cmp	r5, #0
10019270:	d040      	beq.n	100192f4 <__sfvwrite_r+0x1f8>
10019272:	2800      	cmp	r0, #0
10019274:	d045      	beq.n	10019302 <__sfvwrite_r+0x206>
10019276:	463a      	mov	r2, r7
10019278:	e9d4 c304 	ldrd	ip, r3, [r4, #16]
1001927c:	6820      	ldr	r0, [r4, #0]
1001927e:	68a1      	ldr	r1, [r4, #8]
10019280:	42aa      	cmp	r2, r5
10019282:	bf28      	it	cs
10019284:	462a      	movcs	r2, r5
10019286:	4560      	cmp	r0, ip
10019288:	d904      	bls.n	10019294 <__sfvwrite_r+0x198>
1001928a:	eb01 0a03 	add.w	sl, r1, r3
1001928e:	4552      	cmp	r2, sl
10019290:	f300 8082 	bgt.w	10019398 <__sfvwrite_r+0x29c>
10019294:	4293      	cmp	r3, r2
10019296:	dc72      	bgt.n	1001937e <__sfvwrite_r+0x282>
10019298:	69e1      	ldr	r1, [r4, #28]
1001929a:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
1001929e:	465a      	mov	r2, fp
100192a0:	4648      	mov	r0, r9
100192a2:	47e0      	blx	ip
100192a4:	f1b0 0a00 	subs.w	sl, r0, #0
100192a8:	dd18      	ble.n	100192dc <__sfvwrite_r+0x1e0>
100192aa:	ebb7 070a 	subs.w	r7, r7, sl
100192ae:	d00f      	beq.n	100192d0 <__sfvwrite_r+0x1d4>
100192b0:	2001      	movs	r0, #1
100192b2:	f8d8 3008 	ldr.w	r3, [r8, #8]
100192b6:	eba3 030a 	sub.w	r3, r3, sl
100192ba:	44d3      	add	fp, sl
100192bc:	eba5 050a 	sub.w	r5, r5, sl
100192c0:	f8c8 3008 	str.w	r3, [r8, #8]
100192c4:	2b00      	cmp	r3, #0
100192c6:	d1d2      	bne.n	1001926e <__sfvwrite_r+0x172>
100192c8:	2000      	movs	r0, #0
100192ca:	b003      	add	sp, #12
100192cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100192d0:	4621      	mov	r1, r4
100192d2:	4648      	mov	r0, r9
100192d4:	f7fd f96a 	bl	100165ac <_fflush_r>
100192d8:	2800      	cmp	r0, #0
100192da:	d0ea      	beq.n	100192b2 <__sfvwrite_r+0x1b6>
100192dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100192e0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100192e4:	81a3      	strh	r3, [r4, #12]
100192e6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100192ea:	b003      	add	sp, #12
100192ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100192f0:	2000      	movs	r0, #0
100192f2:	4770      	bx	lr
100192f4:	6875      	ldr	r5, [r6, #4]
100192f6:	4633      	mov	r3, r6
100192f8:	3608      	adds	r6, #8
100192fa:	2d00      	cmp	r5, #0
100192fc:	d0fa      	beq.n	100192f4 <__sfvwrite_r+0x1f8>
100192fe:	f8d3 b000 	ldr.w	fp, [r3]
10019302:	462a      	mov	r2, r5
10019304:	210a      	movs	r1, #10
10019306:	4658      	mov	r0, fp
10019308:	f006 fd62 	bl	1001fdd0 <memchr>
1001930c:	2800      	cmp	r0, #0
1001930e:	d065      	beq.n	100193dc <__sfvwrite_r+0x2e0>
10019310:	3001      	adds	r0, #1
10019312:	eba0 070b 	sub.w	r7, r0, fp
10019316:	e7ae      	b.n	10019276 <__sfvwrite_r+0x17a>
10019318:	6922      	ldr	r2, [r4, #16]
1001931a:	429a      	cmp	r2, r3
1001931c:	d314      	bcc.n	10019348 <__sfvwrite_r+0x24c>
1001931e:	6962      	ldr	r2, [r4, #20]
10019320:	42ba      	cmp	r2, r7
10019322:	d811      	bhi.n	10019348 <__sfvwrite_r+0x24c>
10019324:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
10019328:	42bb      	cmp	r3, r7
1001932a:	bf28      	it	cs
1001932c:	463b      	movcs	r3, r7
1001932e:	6a65      	ldr	r5, [r4, #36]	@ 0x24
10019330:	fb93 f3f2 	sdiv	r3, r3, r2
10019334:	69e1      	ldr	r1, [r4, #28]
10019336:	fb02 f303 	mul.w	r3, r2, r3
1001933a:	4648      	mov	r0, r9
1001933c:	4652      	mov	r2, sl
1001933e:	47a8      	blx	r5
10019340:	1e05      	subs	r5, r0, #0
10019342:	ddcb      	ble.n	100192dc <__sfvwrite_r+0x1e0>
10019344:	1b7f      	subs	r7, r7, r5
10019346:	e77b      	b.n	10019240 <__sfvwrite_r+0x144>
10019348:	42b9      	cmp	r1, r7
1001934a:	bf28      	it	cs
1001934c:	4639      	movcs	r1, r7
1001934e:	460d      	mov	r5, r1
10019350:	4618      	mov	r0, r3
10019352:	460a      	mov	r2, r1
10019354:	4651      	mov	r1, sl
10019356:	f7fc fc59 	bl	10015c0c <memmove>
1001935a:	68a1      	ldr	r1, [r4, #8]
1001935c:	6823      	ldr	r3, [r4, #0]
1001935e:	1b49      	subs	r1, r1, r5
10019360:	442b      	add	r3, r5
10019362:	60a1      	str	r1, [r4, #8]
10019364:	6023      	str	r3, [r4, #0]
10019366:	2900      	cmp	r1, #0
10019368:	d1ec      	bne.n	10019344 <__sfvwrite_r+0x248>
1001936a:	4621      	mov	r1, r4
1001936c:	4648      	mov	r0, r9
1001936e:	f7fd f91d 	bl	100165ac <_fflush_r>
10019372:	2800      	cmp	r0, #0
10019374:	d0e6      	beq.n	10019344 <__sfvwrite_r+0x248>
10019376:	e7b1      	b.n	100192dc <__sfvwrite_r+0x1e0>
10019378:	46bb      	mov	fp, r7
1001937a:	463a      	mov	r2, r7
1001937c:	e752      	b.n	10019224 <__sfvwrite_r+0x128>
1001937e:	4659      	mov	r1, fp
10019380:	9201      	str	r2, [sp, #4]
10019382:	f7fc fc43 	bl	10015c0c <memmove>
10019386:	9a01      	ldr	r2, [sp, #4]
10019388:	68a3      	ldr	r3, [r4, #8]
1001938a:	1a9b      	subs	r3, r3, r2
1001938c:	60a3      	str	r3, [r4, #8]
1001938e:	6823      	ldr	r3, [r4, #0]
10019390:	4413      	add	r3, r2
10019392:	6023      	str	r3, [r4, #0]
10019394:	4692      	mov	sl, r2
10019396:	e788      	b.n	100192aa <__sfvwrite_r+0x1ae>
10019398:	4659      	mov	r1, fp
1001939a:	4652      	mov	r2, sl
1001939c:	f7fc fc36 	bl	10015c0c <memmove>
100193a0:	6823      	ldr	r3, [r4, #0]
100193a2:	4453      	add	r3, sl
100193a4:	6023      	str	r3, [r4, #0]
100193a6:	4621      	mov	r1, r4
100193a8:	4648      	mov	r0, r9
100193aa:	f7fd f8ff 	bl	100165ac <_fflush_r>
100193ae:	2800      	cmp	r0, #0
100193b0:	f43f af7b 	beq.w	100192aa <__sfvwrite_r+0x1ae>
100193b4:	e792      	b.n	100192dc <__sfvwrite_r+0x1e0>
100193b6:	4648      	mov	r0, r9
100193b8:	f7fd fb9e 	bl	10016af8 <_realloc_r>
100193bc:	4603      	mov	r3, r0
100193be:	2800      	cmp	r0, #0
100193c0:	f47f af26 	bne.w	10019210 <__sfvwrite_r+0x114>
100193c4:	6921      	ldr	r1, [r4, #16]
100193c6:	4648      	mov	r0, r9
100193c8:	f7fe fd7e 	bl	10017ec8 <_free_r>
100193cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100193d0:	220c      	movs	r2, #12
100193d2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
100193d6:	f8c9 2000 	str.w	r2, [r9]
100193da:	e781      	b.n	100192e0 <__sfvwrite_r+0x1e4>
100193dc:	1c6a      	adds	r2, r5, #1
100193de:	4617      	mov	r7, r2
100193e0:	e74a      	b.n	10019278 <__sfvwrite_r+0x17c>
100193e2:	220c      	movs	r2, #12
100193e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100193e8:	f8c9 2000 	str.w	r2, [r9]
100193ec:	e778      	b.n	100192e0 <__sfvwrite_r+0x1e4>
100193ee:	bf00      	nop
100193f0:	7ffffc00 	.word	0x7ffffc00

100193f4 <_fwalk_sglue>:
100193f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
100193f8:	4680      	mov	r8, r0
100193fa:	460f      	mov	r7, r1
100193fc:	4616      	mov	r6, r2
100193fe:	f04f 0900 	mov.w	r9, #0
10019402:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
10019406:	3d01      	subs	r5, #1
10019408:	d411      	bmi.n	1001942e <_fwalk_sglue+0x3a>
1001940a:	89a3      	ldrh	r3, [r4, #12]
1001940c:	2b01      	cmp	r3, #1
1001940e:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
10019412:	d908      	bls.n	10019426 <_fwalk_sglue+0x32>
10019414:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
10019418:	3301      	adds	r3, #1
1001941a:	4621      	mov	r1, r4
1001941c:	d003      	beq.n	10019426 <_fwalk_sglue+0x32>
1001941e:	4640      	mov	r0, r8
10019420:	47b8      	blx	r7
10019422:	ea49 0900 	orr.w	r9, r9, r0
10019426:	1c6b      	adds	r3, r5, #1
10019428:	f104 0468 	add.w	r4, r4, #104	@ 0x68
1001942c:	d1ed      	bne.n	1001940a <_fwalk_sglue+0x16>
1001942e:	6836      	ldr	r6, [r6, #0]
10019430:	2e00      	cmp	r6, #0
10019432:	d1e6      	bne.n	10019402 <_fwalk_sglue+0xe>
10019434:	4648      	mov	r0, r9
10019436:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1001943a:	bf00      	nop

1001943c <__jp2uc>:
1001943c:	2902      	cmp	r1, #2
1001943e:	f3c0 2207 	ubfx	r2, r0, #8, #8
10019442:	b2c3      	uxtb	r3, r0
10019444:	d025      	beq.n	10019492 <__jp2uc+0x56>
10019446:	2903      	cmp	r1, #3
10019448:	d11e      	bne.n	10019488 <__jp2uc+0x4c>
1001944a:	f102 0150 	add.w	r1, r2, #80	@ 0x50
1001944e:	b2c9      	uxtb	r1, r1
10019450:	291f      	cmp	r1, #31
10019452:	d90b      	bls.n	1001946c <__jp2uc+0x30>
10019454:	f102 0130 	add.w	r1, r2, #48	@ 0x30
10019458:	b2c9      	uxtb	r1, r1
1001945a:	2924      	cmp	r1, #36	@ 0x24
1001945c:	d834      	bhi.n	100194c8 <__jp2uc+0x8c>
1001945e:	f24f 41a6 	movw	r1, #62630	@ 0xf4a6
10019462:	4288      	cmp	r0, r1
10019464:	d926      	bls.n	100194b4 <__jp2uc+0x78>
10019466:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001946a:	4770      	bx	lr
1001946c:	f64c 71d3 	movw	r1, #53203	@ 0xcfd3
10019470:	4288      	cmp	r0, r1
10019472:	d8f8      	bhi.n	10019466 <__jp2uc+0x2a>
10019474:	3ab0      	subs	r2, #176	@ 0xb0
10019476:	ebc2 12c2 	rsb	r2, r2, r2, lsl #7
1001947a:	3ba1      	subs	r3, #161	@ 0xa1
1001947c:	4930      	ldr	r1, [pc, #192]	@ (10019540 <__jp2uc+0x104>)
1001947e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
10019482:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
10019486:	4770      	bx	lr
10019488:	f082 0280 	eor.w	r2, r2, #128	@ 0x80
1001948c:	f083 0380 	eor.w	r3, r3, #128	@ 0x80
10019490:	e7db      	b.n	1001944a <__jp2uc+0xe>
10019492:	2b9e      	cmp	r3, #158	@ 0x9e
10019494:	d90a      	bls.n	100194ac <__jp2uc+0x70>
10019496:	3323      	adds	r3, #35	@ 0x23
10019498:	b2db      	uxtb	r3, r3
1001949a:	2180      	movs	r1, #128	@ 0x80
1001949c:	2a9f      	cmp	r2, #159	@ 0x9f
1001949e:	bf94      	ite	ls
100194a0:	3a70      	subls	r2, #112	@ 0x70
100194a2:	3250      	addhi	r2, #80	@ 0x50
100194a4:	eb01 0142 	add.w	r1, r1, r2, lsl #1
100194a8:	b2ca      	uxtb	r2, r1
100194aa:	e7ce      	b.n	1001944a <__jp2uc+0xe>
100194ac:	3b7e      	subs	r3, #126	@ 0x7e
100194ae:	b2db      	uxtb	r3, r3
100194b0:	217f      	movs	r1, #127	@ 0x7f
100194b2:	e7f3      	b.n	1001949c <__jp2uc+0x60>
100194b4:	3ad0      	subs	r2, #208	@ 0xd0
100194b6:	ebc2 12c2 	rsb	r2, r2, r2, lsl #7
100194ba:	3ba1      	subs	r3, #161	@ 0xa1
100194bc:	4921      	ldr	r1, [pc, #132]	@ (10019544 <__jp2uc+0x108>)
100194be:	eb03 0342 	add.w	r3, r3, r2, lsl #1
100194c2:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
100194c6:	4770      	bx	lr
100194c8:	3aa1      	subs	r2, #161	@ 0xa1
100194ca:	2a07      	cmp	r2, #7
100194cc:	d8cb      	bhi.n	10019466 <__jp2uc+0x2a>
100194ce:	e8df f002 	tbb	[pc, r2]
100194d2:	2831      	.short	0x2831
100194d4:	0f13181e 	.word	0x0f13181e
100194d8:	040b      	.short	0x040b
100194da:	2bc0      	cmp	r3, #192	@ 0xc0
100194dc:	d8c3      	bhi.n	10019466 <__jp2uc+0x2a>
100194de:	4a1a      	ldr	r2, [pc, #104]	@ (10019548 <__jp2uc+0x10c>)
100194e0:	3ba1      	subs	r3, #161	@ 0xa1
100194e2:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
100194e6:	4770      	bx	lr
100194e8:	2bf1      	cmp	r3, #241	@ 0xf1
100194ea:	d8bc      	bhi.n	10019466 <__jp2uc+0x2a>
100194ec:	4a17      	ldr	r2, [pc, #92]	@ (1001954c <__jp2uc+0x110>)
100194ee:	e019      	b.n	10019524 <__jp2uc+0xe8>
100194f0:	2bd8      	cmp	r3, #216	@ 0xd8
100194f2:	d8b8      	bhi.n	10019466 <__jp2uc+0x2a>
100194f4:	4a16      	ldr	r2, [pc, #88]	@ (10019550 <__jp2uc+0x114>)
100194f6:	e015      	b.n	10019524 <__jp2uc+0xe8>
100194f8:	2bf6      	cmp	r3, #246	@ 0xf6
100194fa:	d8b4      	bhi.n	10019466 <__jp2uc+0x2a>
100194fc:	f503 5040 	add.w	r0, r3, #12288	@ 0x3000
10019500:	4770      	bx	lr
10019502:	2bf3      	cmp	r3, #243	@ 0xf3
10019504:	d8af      	bhi.n	10019466 <__jp2uc+0x2a>
10019506:	f503 503e 	add.w	r0, r3, #12160	@ 0x2f80
1001950a:	3020      	adds	r0, #32
1001950c:	4770      	bx	lr
1001950e:	4a11      	ldr	r2, [pc, #68]	@ (10019554 <__jp2uc+0x118>)
10019510:	441a      	add	r2, r3
10019512:	f812 2ca1 	ldrb.w	r2, [r2, #-161]
10019516:	2a00      	cmp	r2, #0
10019518:	d0a5      	beq.n	10019466 <__jp2uc+0x2a>
1001951a:	f503 407e 	add.w	r0, r3, #65024	@ 0xfe00
1001951e:	3060      	adds	r0, #96	@ 0x60
10019520:	4770      	bx	lr
10019522:	4a0d      	ldr	r2, [pc, #52]	@ (10019558 <__jp2uc+0x11c>)
10019524:	3ba1      	subs	r3, #161	@ 0xa1
10019526:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
1001952a:	2800      	cmp	r0, #0
1001952c:	bf08      	it	eq
1001952e:	f04f 30ff 	moveq.w	r0, #4294967295	@ 0xffffffff
10019532:	4770      	bx	lr
10019534:	4a09      	ldr	r2, [pc, #36]	@ (1001955c <__jp2uc+0x120>)
10019536:	3ba1      	subs	r3, #161	@ 0xa1
10019538:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
1001953c:	4770      	bx	lr
1001953e:	bf00      	nop
10019540:	10028bd4 	.word	0x10028bd4
10019544:	10027158 	.word	0x10027158
10019548:	1002a300 	.word	0x1002a300
1001954c:	1002a340 	.word	0x1002a340
10019550:	1002a3e4 	.word	0x1002a3e4
10019554:	1002a454 	.word	0x1002a454
10019558:	1002a4b0 	.word	0x1002a4b0
1001955c:	1002a56c 	.word	0x1002a56c

10019560 <_jp2uc_l>:
10019560:	b538      	push	{r3, r4, r5, lr}
10019562:	4605      	mov	r5, r0
10019564:	b1b9      	cbz	r1, 10019596 <_jp2uc_l+0x36>
10019566:	f501 7495 	add.w	r4, r1, #298	@ 0x12a
1001956a:	4912      	ldr	r1, [pc, #72]	@ (100195b4 <_jp2uc_l+0x54>)
1001956c:	4620      	mov	r0, r4
1001956e:	f7fc fce7 	bl	10015f40 <strcmp>
10019572:	b928      	cbnz	r0, 10019580 <_jp2uc_l+0x20>
10019574:	4628      	mov	r0, r5
10019576:	2101      	movs	r1, #1
10019578:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001957c:	f7ff bf5e 	b.w	1001943c <__jp2uc>
10019580:	490d      	ldr	r1, [pc, #52]	@ (100195b8 <_jp2uc_l+0x58>)
10019582:	4620      	mov	r0, r4
10019584:	f7fc fcdc 	bl	10015f40 <strcmp>
10019588:	b938      	cbnz	r0, 1001959a <_jp2uc_l+0x3a>
1001958a:	4628      	mov	r0, r5
1001958c:	2102      	movs	r1, #2
1001958e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10019592:	f7ff bf53 	b.w	1001943c <__jp2uc>
10019596:	4c09      	ldr	r4, [pc, #36]	@ (100195bc <_jp2uc_l+0x5c>)
10019598:	e7e7      	b.n	1001956a <_jp2uc_l+0xa>
1001959a:	4909      	ldr	r1, [pc, #36]	@ (100195c0 <_jp2uc_l+0x60>)
1001959c:	4620      	mov	r0, r4
1001959e:	f7fc fccf 	bl	10015f40 <strcmp>
100195a2:	b928      	cbnz	r0, 100195b0 <_jp2uc_l+0x50>
100195a4:	4628      	mov	r0, r5
100195a6:	2103      	movs	r1, #3
100195a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
100195ac:	f7ff bf46 	b.w	1001943c <__jp2uc>
100195b0:	4628      	mov	r0, r5
100195b2:	bd38      	pop	{r3, r4, r5, pc}
100195b4:	10027144 	.word	0x10027144
100195b8:	10027148 	.word	0x10027148
100195bc:	2000054e 	.word	0x2000054e
100195c0:	10027150 	.word	0x10027150

100195c4 <_sungetc_r>:
100195c4:	b538      	push	{r3, r4, r5, lr}
100195c6:	1c4b      	adds	r3, r1, #1
100195c8:	d01a      	beq.n	10019600 <_sungetc_r+0x3c>
100195ca:	4614      	mov	r4, r2
100195cc:	8992      	ldrh	r2, [r2, #12]
100195ce:	6863      	ldr	r3, [r4, #4]
100195d0:	f022 0220 	bic.w	r2, r2, #32
100195d4:	81a2      	strh	r2, [r4, #12]
100195d6:	6b22      	ldr	r2, [r4, #48]	@ 0x30
100195d8:	b2cd      	uxtb	r5, r1
100195da:	b1a2      	cbz	r2, 10019606 <_sungetc_r+0x42>
100195dc:	6b62      	ldr	r2, [r4, #52]	@ 0x34
100195de:	429a      	cmp	r2, r3
100195e0:	dd09      	ble.n	100195f6 <_sungetc_r+0x32>
100195e2:	6823      	ldr	r3, [r4, #0]
100195e4:	1e5a      	subs	r2, r3, #1
100195e6:	6022      	str	r2, [r4, #0]
100195e8:	f803 5c01 	strb.w	r5, [r3, #-1]
100195ec:	6863      	ldr	r3, [r4, #4]
100195ee:	3301      	adds	r3, #1
100195f0:	6063      	str	r3, [r4, #4]
100195f2:	4628      	mov	r0, r5
100195f4:	bd38      	pop	{r3, r4, r5, pc}
100195f6:	4621      	mov	r1, r4
100195f8:	f006 fd0c 	bl	10020014 <__submore>
100195fc:	2800      	cmp	r0, #0
100195fe:	d0f0      	beq.n	100195e2 <_sungetc_r+0x1e>
10019600:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
10019604:	e7f5      	b.n	100195f2 <_sungetc_r+0x2e>
10019606:	6922      	ldr	r2, [r4, #16]
10019608:	6821      	ldr	r1, [r4, #0]
1001960a:	b12a      	cbz	r2, 10019618 <_sungetc_r+0x54>
1001960c:	428a      	cmp	r2, r1
1001960e:	d203      	bcs.n	10019618 <_sungetc_r+0x54>
10019610:	f811 2c01 	ldrb.w	r2, [r1, #-1]
10019614:	42aa      	cmp	r2, r5
10019616:	d00c      	beq.n	10019632 <_sungetc_r+0x6e>
10019618:	4622      	mov	r2, r4
1001961a:	e9c4 130e 	strd	r1, r3, [r4, #56]	@ 0x38
1001961e:	f104 0040 	add.w	r0, r4, #64	@ 0x40
10019622:	2303      	movs	r3, #3
10019624:	6363      	str	r3, [r4, #52]	@ 0x34
10019626:	6320      	str	r0, [r4, #48]	@ 0x30
10019628:	f802 5f42 	strb.w	r5, [r2, #66]!
1001962c:	2301      	movs	r3, #1
1001962e:	6022      	str	r2, [r4, #0]
10019630:	e7de      	b.n	100195f0 <_sungetc_r+0x2c>
10019632:	3901      	subs	r1, #1
10019634:	6021      	str	r1, [r4, #0]
10019636:	3301      	adds	r3, #1
10019638:	e7da      	b.n	100195f0 <_sungetc_r+0x2c>
1001963a:	bf00      	nop

1001963c <__ssrefill_r>:
1001963c:	b510      	push	{r4, lr}
1001963e:	460c      	mov	r4, r1
10019640:	6b09      	ldr	r1, [r1, #48]	@ 0x30
10019642:	b169      	cbz	r1, 10019660 <__ssrefill_r+0x24>
10019644:	f104 0340 	add.w	r3, r4, #64	@ 0x40
10019648:	4299      	cmp	r1, r3
1001964a:	d001      	beq.n	10019650 <__ssrefill_r+0x14>
1001964c:	f7fe fc3c 	bl	10017ec8 <_free_r>
10019650:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
10019652:	6063      	str	r3, [r4, #4]
10019654:	2000      	movs	r0, #0
10019656:	6320      	str	r0, [r4, #48]	@ 0x30
10019658:	b113      	cbz	r3, 10019660 <__ssrefill_r+0x24>
1001965a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
1001965c:	6023      	str	r3, [r4, #0]
1001965e:	bd10      	pop	{r4, pc}
10019660:	89a2      	ldrh	r2, [r4, #12]
10019662:	6923      	ldr	r3, [r4, #16]
10019664:	2100      	movs	r1, #0
10019666:	f042 0220 	orr.w	r2, r2, #32
1001966a:	6061      	str	r1, [r4, #4]
1001966c:	81a2      	strh	r2, [r4, #12]
1001966e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10019672:	e7f3      	b.n	1001965c <__ssrefill_r+0x20>

10019674 <_sfread_r>:
10019674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10019678:	b085      	sub	sp, #20
1001967a:	469c      	mov	ip, r3
1001967c:	fb02 f303 	mul.w	r3, r2, r3
10019680:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
10019682:	9301      	str	r3, [sp, #4]
10019684:	2b00      	cmp	r3, #0
10019686:	d03c      	beq.n	10019702 <_sfread_r+0x8e>
10019688:	460f      	mov	r7, r1
1001968a:	e9d4 1500 	ldrd	r1, r5, [r4]
1001968e:	9b01      	ldr	r3, [sp, #4]
10019690:	42ab      	cmp	r3, r5
10019692:	d94e      	bls.n	10019732 <_sfread_r+0xbe>
10019694:	9e01      	ldr	r6, [sp, #4]
10019696:	e9cd c202 	strd	ip, r2, [sp, #8]
1001969a:	462b      	mov	r3, r5
1001969c:	4683      	mov	fp, r0
1001969e:	4635      	mov	r5, r6
100196a0:	f04f 0800 	mov.w	r8, #0
100196a4:	f104 0940 	add.w	r9, r4, #64	@ 0x40
100196a8:	461e      	mov	r6, r3
100196aa:	4632      	mov	r2, r6
100196ac:	4638      	mov	r0, r7
100196ae:	f7fd f8af 	bl	10016810 <memcpy>
100196b2:	6821      	ldr	r1, [r4, #0]
100196b4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
100196b6:	198a      	adds	r2, r1, r6
100196b8:	46aa      	mov	sl, r5
100196ba:	e9c4 2800 	strd	r2, r8, [r4]
100196be:	4619      	mov	r1, r3
100196c0:	4658      	mov	r0, fp
100196c2:	4437      	add	r7, r6
100196c4:	1bad      	subs	r5, r5, r6
100196c6:	b303      	cbz	r3, 1001970a <_sfread_r+0x96>
100196c8:	454b      	cmp	r3, r9
100196ca:	d001      	beq.n	100196d0 <_sfread_r+0x5c>
100196cc:	f7fe fbfc 	bl	10017ec8 <_free_r>
100196d0:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
100196d2:	f8c4 8030 	str.w	r8, [r4, #48]	@ 0x30
100196d6:	6060      	str	r0, [r4, #4]
100196d8:	b1b8      	cbz	r0, 1001970a <_sfread_r+0x96>
100196da:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
100196dc:	6021      	str	r1, [r4, #0]
100196de:	42a8      	cmp	r0, r5
100196e0:	4606      	mov	r6, r0
100196e2:	d3e2      	bcc.n	100196aa <_sfread_r+0x36>
100196e4:	f8dd c008 	ldr.w	ip, [sp, #8]
100196e8:	462e      	mov	r6, r5
100196ea:	4632      	mov	r2, r6
100196ec:	4638      	mov	r0, r7
100196ee:	f8cd c004 	str.w	ip, [sp, #4]
100196f2:	f7fd f88d 	bl	10016810 <memcpy>
100196f6:	e9d4 3200 	ldrd	r3, r2, [r4]
100196fa:	1b92      	subs	r2, r2, r6
100196fc:	4433      	add	r3, r6
100196fe:	e9c4 3200 	strd	r3, r2, [r4]
10019702:	9801      	ldr	r0, [sp, #4]
10019704:	b005      	add	sp, #20
10019706:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001970a:	9b01      	ldr	r3, [sp, #4]
1001970c:	9a03      	ldr	r2, [sp, #12]
1001970e:	4433      	add	r3, r6
10019710:	eba3 050a 	sub.w	r5, r3, sl
10019714:	fbb5 f3f2 	udiv	r3, r5, r2
10019718:	9301      	str	r3, [sp, #4]
1001971a:	89a3      	ldrh	r3, [r4, #12]
1001971c:	6922      	ldr	r2, [r4, #16]
1001971e:	9801      	ldr	r0, [sp, #4]
10019720:	f043 0320 	orr.w	r3, r3, #32
10019724:	81a3      	strh	r3, [r4, #12]
10019726:	2300      	movs	r3, #0
10019728:	e9c4 2300 	strd	r2, r3, [r4]
1001972c:	b005      	add	sp, #20
1001972e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10019732:	461e      	mov	r6, r3
10019734:	e7d9      	b.n	100196ea <_sfread_r+0x76>
10019736:	bf00      	nop

10019738 <_svfprintf_r>:
10019738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001973c:	b0df      	sub	sp, #380	@ 0x17c
1001973e:	460c      	mov	r4, r1
10019740:	9109      	str	r1, [sp, #36]	@ 0x24
10019742:	4691      	mov	r9, r2
10019744:	930d      	str	r3, [sp, #52]	@ 0x34
10019746:	4683      	mov	fp, r0
10019748:	f7fc fb7c 	bl	10015e44 <_localeconv_r>
1001974c:	6803      	ldr	r3, [r0, #0]
1001974e:	931a      	str	r3, [sp, #104]	@ 0x68
10019750:	4618      	mov	r0, r3
10019752:	f7fd f915 	bl	10016980 <strlen>
10019756:	2100      	movs	r1, #0
10019758:	9018      	str	r0, [sp, #96]	@ 0x60
1001975a:	2208      	movs	r2, #8
1001975c:	a82e      	add	r0, sp, #184	@ 0xb8
1001975e:	f7fc fad5 	bl	10015d0c <memset>
10019762:	89a3      	ldrh	r3, [r4, #12]
10019764:	0619      	lsls	r1, r3, #24
10019766:	d503      	bpl.n	10019770 <_svfprintf_r+0x38>
10019768:	6923      	ldr	r3, [r4, #16]
1001976a:	2b00      	cmp	r3, #0
1001976c:	f000 8788 	beq.w	1001a680 <_svfprintf_r+0xf48>
10019770:	2300      	movs	r3, #0
10019772:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
10019776:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
1001977a:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
1001977e:	9313      	str	r3, [sp, #76]	@ 0x4c
10019780:	9319      	str	r3, [sp, #100]	@ 0x64
10019782:	930a      	str	r3, [sp, #40]	@ 0x28
10019784:	2400      	movs	r4, #0
10019786:	2300      	movs	r3, #0
10019788:	e9cd 3416 	strd	r3, r4, [sp, #88]	@ 0x58
1001978c:	aa35      	add	r2, sp, #212	@ 0xd4
1001978e:	9232      	str	r2, [sp, #200]	@ 0xc8
10019790:	4690      	mov	r8, r2
10019792:	f8cd b01c 	str.w	fp, [sp, #28]
10019796:	464d      	mov	r5, r9
10019798:	9f07      	ldr	r7, [sp, #28]
1001979a:	462e      	mov	r6, r5
1001979c:	4b73      	ldr	r3, [pc, #460]	@ (1001996c <_svfprintf_r+0x234>)
1001979e:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
100197a2:	f7fc fb49 	bl	10015e38 <__locale_mb_cur_max>
100197a6:	4603      	mov	r3, r0
100197a8:	a82e      	add	r0, sp, #184	@ 0xb8
100197aa:	9000      	str	r0, [sp, #0]
100197ac:	4632      	mov	r2, r6
100197ae:	a92a      	add	r1, sp, #168	@ 0xa8
100197b0:	4638      	mov	r0, r7
100197b2:	47a0      	blx	r4
100197b4:	2800      	cmp	r0, #0
100197b6:	f000 80a9 	beq.w	1001990c <_svfprintf_r+0x1d4>
100197ba:	f2c0 809f 	blt.w	100198fc <_svfprintf_r+0x1c4>
100197be:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
100197c0:	2a25      	cmp	r2, #37	@ 0x25
100197c2:	4603      	mov	r3, r0
100197c4:	d001      	beq.n	100197ca <_svfprintf_r+0x92>
100197c6:	441e      	add	r6, r3
100197c8:	e7e8      	b.n	1001979c <_svfprintf_r+0x64>
100197ca:	1b77      	subs	r7, r6, r5
100197cc:	4604      	mov	r4, r0
100197ce:	f040 80a0 	bne.w	10019912 <_svfprintf_r+0x1da>
100197d2:	2300      	movs	r3, #0
100197d4:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
100197d8:	4699      	mov	r9, r3
100197da:	930b      	str	r3, [sp, #44]	@ 0x2c
100197dc:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
100197e0:	7873      	ldrb	r3, [r6, #1]
100197e2:	9208      	str	r2, [sp, #32]
100197e4:	1c74      	adds	r4, r6, #1
100197e6:	3401      	adds	r4, #1
100197e8:	f1a3 0220 	sub.w	r2, r3, #32
100197ec:	2a5a      	cmp	r2, #90	@ 0x5a
100197ee:	f200 80bf 	bhi.w	10019970 <_svfprintf_r+0x238>
100197f2:	e8df f012 	tbh	[pc, r2, lsl #1]
100197f6:	02e6      	.short	0x02e6
100197f8:	00bd00bd 	.word	0x00bd00bd
100197fc:	00bd02e2 	.word	0x00bd02e2
10019800:	00bd00bd 	.word	0x00bd00bd
10019804:	00bd006a 	.word	0x00bd006a
10019808:	024800bd 	.word	0x024800bd
1001980c:	00bd0257 	.word	0x00bd0257
10019810:	02f40253 	.word	0x02f40253
10019814:	02f000bd 	.word	0x02f000bd
10019818:	005b005b 	.word	0x005b005b
1001981c:	005b005b 	.word	0x005b005b
10019820:	005b005b 	.word	0x005b005b
10019824:	005b005b 	.word	0x005b005b
10019828:	00bd005b 	.word	0x00bd005b
1001982c:	00bd00bd 	.word	0x00bd00bd
10019830:	00bd00bd 	.word	0x00bd00bd
10019834:	00bd00bd 	.word	0x00bd00bd
10019838:	00bd013e 	.word	0x00bd013e
1001983c:	030e01c7 	.word	0x030e01c7
10019840:	013e013e 	.word	0x013e013e
10019844:	00bd013e 	.word	0x00bd013e
10019848:	00bd00bd 	.word	0x00bd00bd
1001984c:	02de00bd 	.word	0x02de00bd
10019850:	00bd00bd 	.word	0x00bd00bd
10019854:	00bd025c 	.word	0x00bd025c
10019858:	00bd00bd 	.word	0x00bd00bd
1001985c:	00bd01f1 	.word	0x00bd01f1
10019860:	00bd02cb 	.word	0x00bd02cb
10019864:	070600bd 	.word	0x070600bd
10019868:	00bd00bd 	.word	0x00bd00bd
1001986c:	00bd00bd 	.word	0x00bd00bd
10019870:	00bd00bd 	.word	0x00bd00bd
10019874:	00bd00bd 	.word	0x00bd00bd
10019878:	00bd013e 	.word	0x00bd013e
1001987c:	022301c7 	.word	0x022301c7
10019880:	013e013e 	.word	0x013e013e
10019884:	028d013e 	.word	0x028d013e
10019888:	007f0223 	.word	0x007f0223
1001988c:	02a600bd 	.word	0x02a600bd
10019890:	029700bd 	.word	0x029700bd
10019894:	02b906fb 	.word	0x02b906fb
10019898:	00bd007f 	.word	0x00bd007f
1001989c:	007d01f1 	.word	0x007d01f1
100198a0:	00bd0701 	.word	0x00bd0701
100198a4:	072a00bd 	.word	0x072a00bd
100198a8:	007d00bd 	.word	0x007d00bd
100198ac:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
100198b0:	2100      	movs	r1, #0
100198b2:	f814 3b01 	ldrb.w	r3, [r4], #1
100198b6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
100198ba:	eb02 0141 	add.w	r1, r2, r1, lsl #1
100198be:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
100198c2:	2a09      	cmp	r2, #9
100198c4:	d9f5      	bls.n	100198b2 <_svfprintf_r+0x17a>
100198c6:	910b      	str	r1, [sp, #44]	@ 0x2c
100198c8:	e78e      	b.n	100197e8 <_svfprintf_r+0xb0>
100198ca:	9f07      	ldr	r7, [sp, #28]
100198cc:	4638      	mov	r0, r7
100198ce:	f7fc fab9 	bl	10015e44 <_localeconv_r>
100198d2:	6843      	ldr	r3, [r0, #4]
100198d4:	931d      	str	r3, [sp, #116]	@ 0x74
100198d6:	4618      	mov	r0, r3
100198d8:	f7fd f852 	bl	10016980 <strlen>
100198dc:	901e      	str	r0, [sp, #120]	@ 0x78
100198de:	4606      	mov	r6, r0
100198e0:	4638      	mov	r0, r7
100198e2:	f7fc faaf 	bl	10015e44 <_localeconv_r>
100198e6:	6883      	ldr	r3, [r0, #8]
100198e8:	931b      	str	r3, [sp, #108]	@ 0x6c
100198ea:	2e00      	cmp	r6, #0
100198ec:	f040 8616 	bne.w	1001a51c <_svfprintf_r+0xde4>
100198f0:	7823      	ldrb	r3, [r4, #0]
100198f2:	e778      	b.n	100197e6 <_svfprintf_r+0xae>
100198f4:	7823      	ldrb	r3, [r4, #0]
100198f6:	f049 0920 	orr.w	r9, r9, #32
100198fa:	e774      	b.n	100197e6 <_svfprintf_r+0xae>
100198fc:	2208      	movs	r2, #8
100198fe:	2100      	movs	r1, #0
10019900:	a82e      	add	r0, sp, #184	@ 0xb8
10019902:	f7fc fa03 	bl	10015d0c <memset>
10019906:	2301      	movs	r3, #1
10019908:	441e      	add	r6, r3
1001990a:	e747      	b.n	1001979c <_svfprintf_r+0x64>
1001990c:	1b77      	subs	r7, r6, r5
1001990e:	4604      	mov	r4, r0
10019910:	d011      	beq.n	10019936 <_svfprintf_r+0x1fe>
10019912:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10019914:	443b      	add	r3, r7
10019916:	9334      	str	r3, [sp, #208]	@ 0xd0
10019918:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001991a:	3301      	adds	r3, #1
1001991c:	2b07      	cmp	r3, #7
1001991e:	e9c8 5700 	strd	r5, r7, [r8]
10019922:	9333      	str	r3, [sp, #204]	@ 0xcc
10019924:	dc18      	bgt.n	10019958 <_svfprintf_r+0x220>
10019926:	f108 0808 	add.w	r8, r8, #8
1001992a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001992c:	443b      	add	r3, r7
1001992e:	930a      	str	r3, [sp, #40]	@ 0x28
10019930:	2c00      	cmp	r4, #0
10019932:	f47f af4e 	bne.w	100197d2 <_svfprintf_r+0x9a>
10019936:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10019938:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001993c:	2b00      	cmp	r3, #0
1001993e:	f041 81ed 	bne.w	1001ad1c <_svfprintf_r+0x15e4>
10019942:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10019944:	899b      	ldrh	r3, [r3, #12]
10019946:	f003 0340 	and.w	r3, r3, #64	@ 0x40
1001994a:	2b00      	cmp	r3, #0
1001994c:	f041 83bd 	bne.w	1001b0ca <_svfprintf_r+0x1992>
10019950:	980a      	ldr	r0, [sp, #40]	@ 0x28
10019952:	b05f      	add	sp, #380	@ 0x17c
10019954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10019958:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001995a:	9807      	ldr	r0, [sp, #28]
1001995c:	aa32      	add	r2, sp, #200	@ 0xc8
1001995e:	f006 fb93 	bl	10020088 <__ssprint_r>
10019962:	2800      	cmp	r0, #0
10019964:	d1ed      	bne.n	10019942 <_svfprintf_r+0x20a>
10019966:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001996a:	e7de      	b.n	1001992a <_svfprintf_r+0x1f2>
1001996c:	20000424 	.word	0x20000424
10019970:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019974:	2b00      	cmp	r3, #0
10019976:	d0de      	beq.n	10019936 <_svfprintf_r+0x1fe>
10019978:	2200      	movs	r2, #0
1001997a:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
1001997e:	2301      	movs	r3, #1
10019980:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10019984:	9306      	str	r3, [sp, #24]
10019986:	920c      	str	r2, [sp, #48]	@ 0x30
10019988:	469b      	mov	fp, r3
1001998a:	9208      	str	r2, [sp, #32]
1001998c:	9214      	str	r2, [sp, #80]	@ 0x50
1001998e:	9210      	str	r2, [sp, #64]	@ 0x40
10019990:	9212      	str	r2, [sp, #72]	@ 0x48
10019992:	ad45      	add	r5, sp, #276	@ 0x114
10019994:	f019 0302 	ands.w	r3, r9, #2
10019998:	d002      	beq.n	100199a0 <_svfprintf_r+0x268>
1001999a:	9906      	ldr	r1, [sp, #24]
1001999c:	3102      	adds	r1, #2
1001999e:	9106      	str	r1, [sp, #24]
100199a0:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
100199a4:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100199a6:	d105      	bne.n	100199b4 <_svfprintf_r+0x27c>
100199a8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
100199aa:	9806      	ldr	r0, [sp, #24]
100199ac:	1a0e      	subs	r6, r1, r0
100199ae:	2e00      	cmp	r6, #0
100199b0:	f300 80a7 	bgt.w	10019b02 <_svfprintf_r+0x3ca>
100199b4:	b182      	cbz	r2, 100199d8 <_svfprintf_r+0x2a0>
100199b6:	2201      	movs	r2, #1
100199b8:	f8c8 2004 	str.w	r2, [r8, #4]
100199bc:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
100199be:	3201      	adds	r2, #1
100199c0:	3401      	adds	r4, #1
100199c2:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
100199c6:	2a07      	cmp	r2, #7
100199c8:	9434      	str	r4, [sp, #208]	@ 0xd0
100199ca:	9233      	str	r2, [sp, #204]	@ 0xcc
100199cc:	f8c8 1000 	str.w	r1, [r8]
100199d0:	f300 8403 	bgt.w	1001a1da <_svfprintf_r+0xaa2>
100199d4:	f108 0808 	add.w	r8, r8, #8
100199d8:	b183      	cbz	r3, 100199fc <_svfprintf_r+0x2c4>
100199da:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100199dc:	aa28      	add	r2, sp, #160	@ 0xa0
100199de:	3301      	adds	r3, #1
100199e0:	3402      	adds	r4, #2
100199e2:	f8c8 2000 	str.w	r2, [r8]
100199e6:	2b07      	cmp	r3, #7
100199e8:	f04f 0202 	mov.w	r2, #2
100199ec:	9434      	str	r4, [sp, #208]	@ 0xd0
100199ee:	9333      	str	r3, [sp, #204]	@ 0xcc
100199f0:	f8c8 2004 	str.w	r2, [r8, #4]
100199f4:	f300 83e5 	bgt.w	1001a1c2 <_svfprintf_r+0xa8a>
100199f8:	f108 0808 	add.w	r8, r8, #8
100199fc:	2f80      	cmp	r7, #128	@ 0x80
100199fe:	f000 82be 	beq.w	10019f7e <_svfprintf_r+0x846>
10019a02:	9b08      	ldr	r3, [sp, #32]
10019a04:	eba3 060b 	sub.w	r6, r3, fp
10019a08:	2e00      	cmp	r6, #0
10019a0a:	f300 82fd 	bgt.w	1001a008 <_svfprintf_r+0x8d0>
10019a0e:	f419 7f80 	tst.w	r9, #256	@ 0x100
10019a12:	f040 8217 	bne.w	10019e44 <_svfprintf_r+0x70c>
10019a16:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10019a18:	f8c8 5000 	str.w	r5, [r8]
10019a1c:	3301      	adds	r3, #1
10019a1e:	445c      	add	r4, fp
10019a20:	2b07      	cmp	r3, #7
10019a22:	f8c8 b004 	str.w	fp, [r8, #4]
10019a26:	9434      	str	r4, [sp, #208]	@ 0xd0
10019a28:	9333      	str	r3, [sp, #204]	@ 0xcc
10019a2a:	f300 836a 	bgt.w	1001a102 <_svfprintf_r+0x9ca>
10019a2e:	f108 0808 	add.w	r8, r8, #8
10019a32:	f019 0f04 	tst.w	r9, #4
10019a36:	d005      	beq.n	10019a44 <_svfprintf_r+0x30c>
10019a38:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10019a3a:	9a06      	ldr	r2, [sp, #24]
10019a3c:	1a9d      	subs	r5, r3, r2
10019a3e:	2d00      	cmp	r5, #0
10019a40:	f300 83da 	bgt.w	1001a1f8 <_svfprintf_r+0xac0>
10019a44:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
10019a48:	9906      	ldr	r1, [sp, #24]
10019a4a:	428a      	cmp	r2, r1
10019a4c:	bfac      	ite	ge
10019a4e:	189b      	addge	r3, r3, r2
10019a50:	185b      	addlt	r3, r3, r1
10019a52:	930a      	str	r3, [sp, #40]	@ 0x28
10019a54:	2c00      	cmp	r4, #0
10019a56:	f040 8316 	bne.w	1001a086 <_svfprintf_r+0x94e>
10019a5a:	2300      	movs	r3, #0
10019a5c:	9333      	str	r3, [sp, #204]	@ 0xcc
10019a5e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10019a60:	b11b      	cbz	r3, 10019a6a <_svfprintf_r+0x332>
10019a62:	990c      	ldr	r1, [sp, #48]	@ 0x30
10019a64:	9807      	ldr	r0, [sp, #28]
10019a66:	f7fe fa2f 	bl	10017ec8 <_free_r>
10019a6a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019a6e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10019a70:	e692      	b.n	10019798 <_svfprintf_r+0x60>
10019a72:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019a76:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019a78:	3307      	adds	r3, #7
10019a7a:	f023 0307 	bic.w	r3, r3, #7
10019a7e:	e8f3 6702 	ldrd	r6, r7, [r3], #8
10019a82:	930d      	str	r3, [sp, #52]	@ 0x34
10019a84:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
10019a88:	9323      	str	r3, [sp, #140]	@ 0x8c
10019a8a:	9622      	str	r6, [sp, #136]	@ 0x88
10019a8c:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
10019a90:	4bb1      	ldr	r3, [pc, #708]	@ (10019d58 <_svfprintf_r+0x620>)
10019a92:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10019a96:	4650      	mov	r0, sl
10019a98:	4659      	mov	r1, fp
10019a9a:	e9cd 6716 	strd	r6, r7, [sp, #88]	@ 0x58
10019a9e:	f007 f909 	bl	10020cb4 <__aeabi_dcmpun>
10019aa2:	2800      	cmp	r0, #0
10019aa4:	f040 8547 	bne.w	1001a536 <_svfprintf_r+0xdfe>
10019aa8:	4bab      	ldr	r3, [pc, #684]	@ (10019d58 <_svfprintf_r+0x620>)
10019aaa:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10019aae:	4650      	mov	r0, sl
10019ab0:	4659      	mov	r1, fp
10019ab2:	f007 f8e1 	bl	10020c78 <__aeabi_dcmple>
10019ab6:	2800      	cmp	r0, #0
10019ab8:	f040 853d 	bne.w	1001a536 <_svfprintf_r+0xdfe>
10019abc:	2200      	movs	r2, #0
10019abe:	2300      	movs	r3, #0
10019ac0:	4630      	mov	r0, r6
10019ac2:	4639      	mov	r1, r7
10019ac4:	f007 f8ce 	bl	10020c64 <__aeabi_dcmplt>
10019ac8:	2800      	cmp	r0, #0
10019aca:	f041 8053 	bne.w	1001ab74 <_svfprintf_r+0x143c>
10019ace:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10019ad2:	4da2      	ldr	r5, [pc, #648]	@ (10019d5c <_svfprintf_r+0x624>)
10019ad4:	4ba2      	ldr	r3, [pc, #648]	@ (10019d60 <_svfprintf_r+0x628>)
10019ad6:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10019ada:	990e      	ldr	r1, [sp, #56]	@ 0x38
10019adc:	2947      	cmp	r1, #71	@ 0x47
10019ade:	bfc8      	it	gt
10019ae0:	461d      	movgt	r5, r3
10019ae2:	2300      	movs	r3, #0
10019ae4:	2103      	movs	r1, #3
10019ae6:	930c      	str	r3, [sp, #48]	@ 0x30
10019ae8:	9106      	str	r1, [sp, #24]
10019aea:	468b      	mov	fp, r1
10019aec:	9308      	str	r3, [sp, #32]
10019aee:	9314      	str	r3, [sp, #80]	@ 0x50
10019af0:	9310      	str	r3, [sp, #64]	@ 0x40
10019af2:	9312      	str	r3, [sp, #72]	@ 0x48
10019af4:	2a00      	cmp	r2, #0
10019af6:	f43f af4d 	beq.w	10019994 <_svfprintf_r+0x25c>
10019afa:	9b06      	ldr	r3, [sp, #24]
10019afc:	3301      	adds	r3, #1
10019afe:	9306      	str	r3, [sp, #24]
10019b00:	e748      	b.n	10019994 <_svfprintf_r+0x25c>
10019b02:	2e10      	cmp	r6, #16
10019b04:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10019b06:	f341 8279 	ble.w	1001affc <_svfprintf_r+0x18c4>
10019b0a:	4896      	ldr	r0, [pc, #600]	@ (10019d64 <_svfprintf_r+0x62c>)
10019b0c:	9521      	str	r5, [sp, #132]	@ 0x84
10019b0e:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
10019b12:	4621      	mov	r1, r4
10019b14:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10019b16:	9c07      	ldr	r4, [sp, #28]
10019b18:	9015      	str	r0, [sp, #84]	@ 0x54
10019b1a:	f04f 0a10 	mov.w	sl, #16
10019b1e:	4607      	mov	r7, r0
10019b20:	e004      	b.n	10019b2c <_svfprintf_r+0x3f4>
10019b22:	3e10      	subs	r6, #16
10019b24:	2e10      	cmp	r6, #16
10019b26:	f108 0808 	add.w	r8, r8, #8
10019b2a:	dd16      	ble.n	10019b5a <_svfprintf_r+0x422>
10019b2c:	3201      	adds	r2, #1
10019b2e:	3110      	adds	r1, #16
10019b30:	2a07      	cmp	r2, #7
10019b32:	e9c8 7a00 	strd	r7, sl, [r8]
10019b36:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10019b3a:	ddf2      	ble.n	10019b22 <_svfprintf_r+0x3ea>
10019b3c:	aa32      	add	r2, sp, #200	@ 0xc8
10019b3e:	4629      	mov	r1, r5
10019b40:	4620      	mov	r0, r4
10019b42:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019b46:	f006 fa9f 	bl	10020088 <__ssprint_r>
10019b4a:	2800      	cmp	r0, #0
10019b4c:	f040 86f1 	bne.w	1001a932 <_svfprintf_r+0x11fa>
10019b50:	3e10      	subs	r6, #16
10019b52:	2e10      	cmp	r6, #16
10019b54:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10019b58:	dce8      	bgt.n	10019b2c <_svfprintf_r+0x3f4>
10019b5a:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
10019b5e:	9d21      	ldr	r5, [sp, #132]	@ 0x84
10019b60:	460c      	mov	r4, r1
10019b62:	3201      	adds	r2, #1
10019b64:	9915      	ldr	r1, [sp, #84]	@ 0x54
10019b66:	f8c8 1000 	str.w	r1, [r8]
10019b6a:	4434      	add	r4, r6
10019b6c:	2a07      	cmp	r2, #7
10019b6e:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
10019b72:	f8c8 6004 	str.w	r6, [r8, #4]
10019b76:	f300 86cb 	bgt.w	1001a910 <_svfprintf_r+0x11d8>
10019b7a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10019b7e:	f108 0808 	add.w	r8, r8, #8
10019b82:	e717      	b.n	100199b4 <_svfprintf_r+0x27c>
10019b84:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10019b86:	2b43      	cmp	r3, #67	@ 0x43
10019b88:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019b8c:	f102 0404 	add.w	r4, r2, #4
10019b90:	d003      	beq.n	10019b9a <_svfprintf_r+0x462>
10019b92:	f019 0f10 	tst.w	r9, #16
10019b96:	f000 855d 	beq.w	1001a654 <_svfprintf_r+0xf1c>
10019b9a:	2208      	movs	r2, #8
10019b9c:	2100      	movs	r1, #0
10019b9e:	a830      	add	r0, sp, #192	@ 0xc0
10019ba0:	f7fc f8b4 	bl	10015d0c <memset>
10019ba4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019ba6:	9807      	ldr	r0, [sp, #28]
10019ba8:	681a      	ldr	r2, [r3, #0]
10019baa:	ad45      	add	r5, sp, #276	@ 0x114
10019bac:	ab30      	add	r3, sp, #192	@ 0xc0
10019bae:	4629      	mov	r1, r5
10019bb0:	f004 fac4 	bl	1001e13c <_wcrtomb_r>
10019bb4:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10019bb8:	4683      	mov	fp, r0
10019bba:	f001 8281 	beq.w	1001b0c0 <_svfprintf_r+0x1988>
10019bbe:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10019bc2:	9306      	str	r3, [sp, #24]
10019bc4:	2200      	movs	r2, #0
10019bc6:	940d      	str	r4, [sp, #52]	@ 0x34
10019bc8:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10019bcc:	920c      	str	r2, [sp, #48]	@ 0x30
10019bce:	9208      	str	r2, [sp, #32]
10019bd0:	9214      	str	r2, [sp, #80]	@ 0x50
10019bd2:	9210      	str	r2, [sp, #64]	@ 0x40
10019bd4:	9212      	str	r2, [sp, #72]	@ 0x48
10019bd6:	e6dd      	b.n	10019994 <_svfprintf_r+0x25c>
10019bd8:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
10019bda:	f856 5b04 	ldr.w	r5, [r6], #4
10019bde:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019be2:	2300      	movs	r3, #0
10019be4:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10019be8:	2d00      	cmp	r5, #0
10019bea:	f000 8558 	beq.w	1001a69e <_svfprintf_r+0xf66>
10019bee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10019bf0:	2b53      	cmp	r3, #83	@ 0x53
10019bf2:	f000 86ba 	beq.w	1001a96a <_svfprintf_r+0x1232>
10019bf6:	f019 0310 	ands.w	r3, r9, #16
10019bfa:	9312      	str	r3, [sp, #72]	@ 0x48
10019bfc:	f040 86b5 	bne.w	1001a96a <_svfprintf_r+0x1232>
10019c00:	9b08      	ldr	r3, [sp, #32]
10019c02:	1c5a      	adds	r2, r3, #1
10019c04:	f001 8095 	beq.w	1001ad32 <_svfprintf_r+0x15fa>
10019c08:	9912      	ldr	r1, [sp, #72]	@ 0x48
10019c0a:	461a      	mov	r2, r3
10019c0c:	4628      	mov	r0, r5
10019c0e:	f006 f8df 	bl	1001fdd0 <memchr>
10019c12:	900c      	str	r0, [sp, #48]	@ 0x30
10019c14:	2800      	cmp	r0, #0
10019c16:	f001 82f0 	beq.w	1001b1fa <_svfprintf_r+0x1ac2>
10019c1a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10019c1c:	960d      	str	r6, [sp, #52]	@ 0x34
10019c1e:	eba3 0b05 	sub.w	fp, r3, r5
10019c22:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10019c24:	9308      	str	r3, [sp, #32]
10019c26:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10019c2a:	9314      	str	r3, [sp, #80]	@ 0x50
10019c2c:	9310      	str	r3, [sp, #64]	@ 0x40
10019c2e:	930c      	str	r3, [sp, #48]	@ 0x30
10019c30:	2373      	movs	r3, #115	@ 0x73
10019c32:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10019c36:	9106      	str	r1, [sp, #24]
10019c38:	930e      	str	r3, [sp, #56]	@ 0x38
10019c3a:	e75b      	b.n	10019af4 <_svfprintf_r+0x3bc>
10019c3c:	f019 0f20 	tst.w	r9, #32
10019c40:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019c44:	f000 80ed 	beq.w	10019e22 <_svfprintf_r+0x6ea>
10019c48:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019c4a:	3307      	adds	r3, #7
10019c4c:	f023 0307 	bic.w	r3, r3, #7
10019c50:	461a      	mov	r2, r3
10019c52:	6859      	ldr	r1, [r3, #4]
10019c54:	f852 3b08 	ldr.w	r3, [r2], #8
10019c58:	920d      	str	r2, [sp, #52]	@ 0x34
10019c5a:	460a      	mov	r2, r1
10019c5c:	2900      	cmp	r1, #0
10019c5e:	f2c0 841a 	blt.w	1001a496 <_svfprintf_r+0xd5e>
10019c62:	9908      	ldr	r1, [sp, #32]
10019c64:	3101      	adds	r1, #1
10019c66:	f000 829d 	beq.w	1001a1a4 <_svfprintf_r+0xa6c>
10019c6a:	ea53 0102 	orrs.w	r1, r3, r2
10019c6e:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
10019c72:	f040 8298 	bne.w	1001a1a6 <_svfprintf_r+0xa6e>
10019c76:	9a08      	ldr	r2, [sp, #32]
10019c78:	2a00      	cmp	r2, #0
10019c7a:	f040 8299 	bne.w	1001a1b0 <_svfprintf_r+0xa78>
10019c7e:	46a1      	mov	r9, r4
10019c80:	4693      	mov	fp, r2
10019c82:	ad5e      	add	r5, sp, #376	@ 0x178
10019c84:	e152      	b.n	10019f2c <_svfprintf_r+0x7f4>
10019c86:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019c88:	f853 2b04 	ldr.w	r2, [r3], #4
10019c8c:	920b      	str	r2, [sp, #44]	@ 0x2c
10019c8e:	2a00      	cmp	r2, #0
10019c90:	f280 8425 	bge.w	1001a4de <_svfprintf_r+0xda6>
10019c94:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10019c96:	930d      	str	r3, [sp, #52]	@ 0x34
10019c98:	4252      	negs	r2, r2
10019c9a:	920b      	str	r2, [sp, #44]	@ 0x2c
10019c9c:	7823      	ldrb	r3, [r4, #0]
10019c9e:	f049 0904 	orr.w	r9, r9, #4
10019ca2:	e5a0      	b.n	100197e6 <_svfprintf_r+0xae>
10019ca4:	232b      	movs	r3, #43	@ 0x2b
10019ca6:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10019caa:	7823      	ldrb	r3, [r4, #0]
10019cac:	e59b      	b.n	100197e6 <_svfprintf_r+0xae>
10019cae:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019cb2:	f049 0910 	orr.w	r9, r9, #16
10019cb6:	f019 0220 	ands.w	r2, r9, #32
10019cba:	f000 83b5 	beq.w	1001a428 <_svfprintf_r+0xcf0>
10019cbe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019cc0:	3307      	adds	r3, #7
10019cc2:	f023 0307 	bic.w	r3, r3, #7
10019cc6:	4619      	mov	r1, r3
10019cc8:	685a      	ldr	r2, [r3, #4]
10019cca:	f851 3b08 	ldr.w	r3, [r1], #8
10019cce:	910d      	str	r1, [sp, #52]	@ 0x34
10019cd0:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10019cd4:	2100      	movs	r1, #0
10019cd6:	2000      	movs	r0, #0
10019cd8:	9d08      	ldr	r5, [sp, #32]
10019cda:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
10019cde:	1c6f      	adds	r7, r5, #1
10019ce0:	f000 810d 	beq.w	10019efe <_svfprintf_r+0x7c6>
10019ce4:	ea53 0002 	orrs.w	r0, r3, r2
10019ce8:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
10019cec:	f040 8106 	bne.w	10019efc <_svfprintf_r+0x7c4>
10019cf0:	2d00      	cmp	r5, #0
10019cf2:	f040 8628 	bne.w	1001a946 <_svfprintf_r+0x120e>
10019cf6:	2900      	cmp	r1, #0
10019cf8:	f040 83c9 	bne.w	1001a48e <_svfprintf_r+0xd56>
10019cfc:	f014 0b01 	ands.w	fp, r4, #1
10019d00:	f000 83f1 	beq.w	1001a4e6 <_svfprintf_r+0xdae>
10019d04:	2330      	movs	r3, #48	@ 0x30
10019d06:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
10019d0a:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10019d0e:	e10d      	b.n	10019f2c <_svfprintf_r+0x7f4>
10019d10:	7823      	ldrb	r3, [r4, #0]
10019d12:	2b68      	cmp	r3, #104	@ 0x68
10019d14:	bf03      	ittte	eq
10019d16:	7863      	ldrbeq	r3, [r4, #1]
10019d18:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
10019d1c:	3401      	addeq	r4, #1
10019d1e:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
10019d22:	e560      	b.n	100197e6 <_svfprintf_r+0xae>
10019d24:	f019 0f20 	tst.w	r9, #32
10019d28:	940f      	str	r4, [sp, #60]	@ 0x3c
10019d2a:	f000 83e6 	beq.w	1001a4fa <_svfprintf_r+0xdc2>
10019d2e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019d30:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10019d32:	681b      	ldr	r3, [r3, #0]
10019d34:	601a      	str	r2, [r3, #0]
10019d36:	17d2      	asrs	r2, r2, #31
10019d38:	605a      	str	r2, [r3, #4]
10019d3a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019d3c:	3304      	adds	r3, #4
10019d3e:	930d      	str	r3, [sp, #52]	@ 0x34
10019d40:	e695      	b.n	10019a6e <_svfprintf_r+0x336>
10019d42:	7823      	ldrb	r3, [r4, #0]
10019d44:	2b6c      	cmp	r3, #108	@ 0x6c
10019d46:	bf03      	ittte	eq
10019d48:	7863      	ldrbeq	r3, [r4, #1]
10019d4a:	f049 0920 	orreq.w	r9, r9, #32
10019d4e:	3401      	addeq	r4, #1
10019d50:	f049 0910 	orrne.w	r9, r9, #16
10019d54:	e547      	b.n	100197e6 <_svfprintf_r+0xae>
10019d56:	bf00      	nop
10019d58:	7fefffff 	.word	0x7fefffff
10019d5c:	1002a628 	.word	0x1002a628
10019d60:	1002a62c 	.word	0x1002a62c
10019d64:	1002a67c 	.word	0x1002a67c
10019d68:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10019d6a:	940f      	str	r4, [sp, #60]	@ 0x3c
10019d6c:	f852 3b04 	ldr.w	r3, [r2], #4
10019d70:	920d      	str	r2, [sp, #52]	@ 0x34
10019d72:	f647 0230 	movw	r2, #30768	@ 0x7830
10019d76:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
10019d7a:	2078      	movs	r0, #120	@ 0x78
10019d7c:	4aa8      	ldr	r2, [pc, #672]	@ (1001a020 <_svfprintf_r+0x8e8>)
10019d7e:	9219      	str	r2, [sp, #100]	@ 0x64
10019d80:	f049 0402 	orr.w	r4, r9, #2
10019d84:	2200      	movs	r2, #0
10019d86:	2102      	movs	r1, #2
10019d88:	900e      	str	r0, [sp, #56]	@ 0x38
10019d8a:	e7a4      	b.n	10019cd6 <_svfprintf_r+0x59e>
10019d8c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019d90:	f049 0410 	orr.w	r4, r9, #16
10019d94:	f014 0220 	ands.w	r2, r4, #32
10019d98:	f000 8355 	beq.w	1001a446 <_svfprintf_r+0xd0e>
10019d9c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019d9e:	3307      	adds	r3, #7
10019da0:	f023 0307 	bic.w	r3, r3, #7
10019da4:	4619      	mov	r1, r3
10019da6:	685a      	ldr	r2, [r3, #4]
10019da8:	f851 3b08 	ldr.w	r3, [r1], #8
10019dac:	910d      	str	r1, [sp, #52]	@ 0x34
10019dae:	2101      	movs	r1, #1
10019db0:	e791      	b.n	10019cd6 <_svfprintf_r+0x59e>
10019db2:	7823      	ldrb	r3, [r4, #0]
10019db4:	f049 0908 	orr.w	r9, r9, #8
10019db8:	e515      	b.n	100197e6 <_svfprintf_r+0xae>
10019dba:	7823      	ldrb	r3, [r4, #0]
10019dbc:	f049 0901 	orr.w	r9, r9, #1
10019dc0:	e511      	b.n	100197e6 <_svfprintf_r+0xae>
10019dc2:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10019dc6:	7823      	ldrb	r3, [r4, #0]
10019dc8:	2a00      	cmp	r2, #0
10019dca:	f47f ad0c 	bne.w	100197e6 <_svfprintf_r+0xae>
10019dce:	2220      	movs	r2, #32
10019dd0:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10019dd4:	e507      	b.n	100197e6 <_svfprintf_r+0xae>
10019dd6:	7823      	ldrb	r3, [r4, #0]
10019dd8:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
10019ddc:	e503      	b.n	100197e6 <_svfprintf_r+0xae>
10019dde:	4621      	mov	r1, r4
10019de0:	f811 3b01 	ldrb.w	r3, [r1], #1
10019de4:	2b2a      	cmp	r3, #42	@ 0x2a
10019de6:	f001 822b 	beq.w	1001b240 <_svfprintf_r+0x1b08>
10019dea:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10019dee:	2a09      	cmp	r2, #9
10019df0:	460c      	mov	r4, r1
10019df2:	bf98      	it	ls
10019df4:	2100      	movls	r1, #0
10019df6:	f201 8132 	bhi.w	1001b05e <_svfprintf_r+0x1926>
10019dfa:	f814 3b01 	ldrb.w	r3, [r4], #1
10019dfe:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10019e02:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10019e06:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10019e0a:	2a09      	cmp	r2, #9
10019e0c:	d9f5      	bls.n	10019dfa <_svfprintf_r+0x6c2>
10019e0e:	9108      	str	r1, [sp, #32]
10019e10:	e4ea      	b.n	100197e8 <_svfprintf_r+0xb0>
10019e12:	f049 0910 	orr.w	r9, r9, #16
10019e16:	f019 0f20 	tst.w	r9, #32
10019e1a:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019e1e:	f47f af13 	bne.w	10019c48 <_svfprintf_r+0x510>
10019e22:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10019e24:	f019 0f10 	tst.w	r9, #16
10019e28:	f852 3b04 	ldr.w	r3, [r2], #4
10019e2c:	920d      	str	r2, [sp, #52]	@ 0x34
10019e2e:	f040 8360 	bne.w	1001a4f2 <_svfprintf_r+0xdba>
10019e32:	f019 0f40 	tst.w	r9, #64	@ 0x40
10019e36:	f000 8358 	beq.w	1001a4ea <_svfprintf_r+0xdb2>
10019e3a:	f343 32c0 	sbfx	r2, r3, #15, #1
10019e3e:	4611      	mov	r1, r2
10019e40:	b21b      	sxth	r3, r3
10019e42:	e70b      	b.n	10019c5c <_svfprintf_r+0x524>
10019e44:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10019e46:	2b65      	cmp	r3, #101	@ 0x65
10019e48:	f340 8166 	ble.w	1001a118 <_svfprintf_r+0x9e0>
10019e4c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10019e50:	2200      	movs	r2, #0
10019e52:	2300      	movs	r3, #0
10019e54:	f006 fefc 	bl	10020c50 <__aeabi_dcmpeq>
10019e58:	2800      	cmp	r0, #0
10019e5a:	f000 8211 	beq.w	1001a280 <_svfprintf_r+0xb48>
10019e5e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10019e60:	4a70      	ldr	r2, [pc, #448]	@ (1001a024 <_svfprintf_r+0x8ec>)
10019e62:	f8c8 2000 	str.w	r2, [r8]
10019e66:	3301      	adds	r3, #1
10019e68:	3401      	adds	r4, #1
10019e6a:	2201      	movs	r2, #1
10019e6c:	2b07      	cmp	r3, #7
10019e6e:	9434      	str	r4, [sp, #208]	@ 0xd0
10019e70:	9333      	str	r3, [sp, #204]	@ 0xcc
10019e72:	f8c8 2004 	str.w	r2, [r8, #4]
10019e76:	f300 856b 	bgt.w	1001a950 <_svfprintf_r+0x1218>
10019e7a:	f108 0808 	add.w	r8, r8, #8
10019e7e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10019e80:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10019e82:	4293      	cmp	r3, r2
10019e84:	f280 8326 	bge.w	1001a4d4 <_svfprintf_r+0xd9c>
10019e88:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10019e8a:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
10019e8c:	441c      	add	r4, r3
10019e8e:	e9c8 2300 	strd	r2, r3, [r8]
10019e92:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10019e94:	9434      	str	r4, [sp, #208]	@ 0xd0
10019e96:	3301      	adds	r3, #1
10019e98:	2b07      	cmp	r3, #7
10019e9a:	9333      	str	r3, [sp, #204]	@ 0xcc
10019e9c:	f300 83e4 	bgt.w	1001a668 <_svfprintf_r+0xf30>
10019ea0:	f108 0808 	add.w	r8, r8, #8
10019ea4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10019ea6:	1e5d      	subs	r5, r3, #1
10019ea8:	2d00      	cmp	r5, #0
10019eaa:	f77f adc2 	ble.w	10019a32 <_svfprintf_r+0x2fa>
10019eae:	2d10      	cmp	r5, #16
10019eb0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10019eb2:	f340 85ae 	ble.w	1001aa12 <_svfprintf_r+0x12da>
10019eb6:	4f5c      	ldr	r7, [pc, #368]	@ (1001a028 <_svfprintf_r+0x8f0>)
10019eb8:	f8dd b01c 	ldr.w	fp, [sp, #28]
10019ebc:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
10019ec0:	9715      	str	r7, [sp, #84]	@ 0x54
10019ec2:	2610      	movs	r6, #16
10019ec4:	e005      	b.n	10019ed2 <_svfprintf_r+0x79a>
10019ec6:	f108 0808 	add.w	r8, r8, #8
10019eca:	3d10      	subs	r5, #16
10019ecc:	2d10      	cmp	r5, #16
10019ece:	f340 85a2 	ble.w	1001aa16 <_svfprintf_r+0x12de>
10019ed2:	3301      	adds	r3, #1
10019ed4:	3410      	adds	r4, #16
10019ed6:	2b07      	cmp	r3, #7
10019ed8:	e9c8 7600 	strd	r7, r6, [r8]
10019edc:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10019ee0:	ddf1      	ble.n	10019ec6 <_svfprintf_r+0x78e>
10019ee2:	aa32      	add	r2, sp, #200	@ 0xc8
10019ee4:	4651      	mov	r1, sl
10019ee6:	4658      	mov	r0, fp
10019ee8:	f006 f8ce 	bl	10020088 <__ssprint_r>
10019eec:	2800      	cmp	r0, #0
10019eee:	f040 82c0 	bne.w	1001a472 <_svfprintf_r+0xd3a>
10019ef2:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10019ef6:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019efa:	e7e6      	b.n	10019eca <_svfprintf_r+0x792>
10019efc:	464c      	mov	r4, r9
10019efe:	2901      	cmp	r1, #1
10019f00:	f000 8151 	beq.w	1001a1a6 <_svfprintf_r+0xa6e>
10019f04:	2902      	cmp	r1, #2
10019f06:	ad5e      	add	r5, sp, #376	@ 0x178
10019f08:	d11e      	bne.n	10019f48 <_svfprintf_r+0x810>
10019f0a:	9819      	ldr	r0, [sp, #100]	@ 0x64
10019f0c:	f003 010f 	and.w	r1, r3, #15
10019f10:	091b      	lsrs	r3, r3, #4
10019f12:	5c41      	ldrb	r1, [r0, r1]
10019f14:	f805 1d01 	strb.w	r1, [r5, #-1]!
10019f18:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
10019f1c:	0912      	lsrs	r2, r2, #4
10019f1e:	ea53 0102 	orrs.w	r1, r3, r2
10019f22:	d1f3      	bne.n	10019f0c <_svfprintf_r+0x7d4>
10019f24:	ab5e      	add	r3, sp, #376	@ 0x178
10019f26:	46a1      	mov	r9, r4
10019f28:	eba3 0b05 	sub.w	fp, r3, r5
10019f2c:	9908      	ldr	r1, [sp, #32]
10019f2e:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10019f32:	4559      	cmp	r1, fp
10019f34:	f04f 0300 	mov.w	r3, #0
10019f38:	bfb8      	it	lt
10019f3a:	4659      	movlt	r1, fp
10019f3c:	930c      	str	r3, [sp, #48]	@ 0x30
10019f3e:	9106      	str	r1, [sp, #24]
10019f40:	9314      	str	r3, [sp, #80]	@ 0x50
10019f42:	9310      	str	r3, [sp, #64]	@ 0x40
10019f44:	9312      	str	r3, [sp, #72]	@ 0x48
10019f46:	e5d5      	b.n	10019af4 <_svfprintf_r+0x3bc>
10019f48:	f003 0107 	and.w	r1, r3, #7
10019f4c:	08db      	lsrs	r3, r3, #3
10019f4e:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
10019f52:	08d2      	lsrs	r2, r2, #3
10019f54:	3130      	adds	r1, #48	@ 0x30
10019f56:	ea53 0602 	orrs.w	r6, r3, r2
10019f5a:	4628      	mov	r0, r5
10019f5c:	f805 1d01 	strb.w	r1, [r5, #-1]!
10019f60:	d1f2      	bne.n	10019f48 <_svfprintf_r+0x810>
10019f62:	07e6      	lsls	r6, r4, #31
10019f64:	d5de      	bpl.n	10019f24 <_svfprintf_r+0x7ec>
10019f66:	2930      	cmp	r1, #48	@ 0x30
10019f68:	d0dc      	beq.n	10019f24 <_svfprintf_r+0x7ec>
10019f6a:	2330      	movs	r3, #48	@ 0x30
10019f6c:	3802      	subs	r0, #2
10019f6e:	f805 3c01 	strb.w	r3, [r5, #-1]
10019f72:	ab5e      	add	r3, sp, #376	@ 0x178
10019f74:	46a1      	mov	r9, r4
10019f76:	eba3 0b00 	sub.w	fp, r3, r0
10019f7a:	4605      	mov	r5, r0
10019f7c:	e7d6      	b.n	10019f2c <_svfprintf_r+0x7f4>
10019f7e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10019f80:	9a06      	ldr	r2, [sp, #24]
10019f82:	1a9e      	subs	r6, r3, r2
10019f84:	2e00      	cmp	r6, #0
10019f86:	f77f ad3c 	ble.w	10019a02 <_svfprintf_r+0x2ca>
10019f8a:	2e10      	cmp	r6, #16
10019f8c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10019f8e:	f341 80a1 	ble.w	1001b0d4 <_svfprintf_r+0x199c>
10019f92:	4825      	ldr	r0, [pc, #148]	@ (1001a028 <_svfprintf_r+0x8f0>)
10019f94:	f8dd a01c 	ldr.w	sl, [sp, #28]
10019f98:	9015      	str	r0, [sp, #84]	@ 0x54
10019f9a:	4621      	mov	r1, r4
10019f9c:	2710      	movs	r7, #16
10019f9e:	461a      	mov	r2, r3
10019fa0:	4604      	mov	r4, r0
10019fa2:	e004      	b.n	10019fae <_svfprintf_r+0x876>
10019fa4:	3e10      	subs	r6, #16
10019fa6:	2e10      	cmp	r6, #16
10019fa8:	f108 0808 	add.w	r8, r8, #8
10019fac:	dd16      	ble.n	10019fdc <_svfprintf_r+0x8a4>
10019fae:	3201      	adds	r2, #1
10019fb0:	3110      	adds	r1, #16
10019fb2:	2a07      	cmp	r2, #7
10019fb4:	e9c8 4700 	strd	r4, r7, [r8]
10019fb8:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10019fbc:	ddf2      	ble.n	10019fa4 <_svfprintf_r+0x86c>
10019fbe:	9909      	ldr	r1, [sp, #36]	@ 0x24
10019fc0:	aa32      	add	r2, sp, #200	@ 0xc8
10019fc2:	4650      	mov	r0, sl
10019fc4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019fc8:	f006 f85e 	bl	10020088 <__ssprint_r>
10019fcc:	2800      	cmp	r0, #0
10019fce:	f040 84b2 	bne.w	1001a936 <_svfprintf_r+0x11fe>
10019fd2:	3e10      	subs	r6, #16
10019fd4:	2e10      	cmp	r6, #16
10019fd6:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10019fda:	dce8      	bgt.n	10019fae <_svfprintf_r+0x876>
10019fdc:	460c      	mov	r4, r1
10019fde:	4613      	mov	r3, r2
10019fe0:	3301      	adds	r3, #1
10019fe2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10019fe4:	f8c8 2000 	str.w	r2, [r8]
10019fe8:	4434      	add	r4, r6
10019fea:	2b07      	cmp	r3, #7
10019fec:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10019ff0:	f8c8 6004 	str.w	r6, [r8, #4]
10019ff4:	f300 851d 	bgt.w	1001aa32 <_svfprintf_r+0x12fa>
10019ff8:	9b08      	ldr	r3, [sp, #32]
10019ffa:	eba3 060b 	sub.w	r6, r3, fp
10019ffe:	2e00      	cmp	r6, #0
1001a000:	f108 0808 	add.w	r8, r8, #8
1001a004:	f77f ad03 	ble.w	10019a0e <_svfprintf_r+0x2d6>
1001a008:	4a07      	ldr	r2, [pc, #28]	@ (1001a028 <_svfprintf_r+0x8f0>)
1001a00a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a00c:	9215      	str	r2, [sp, #84]	@ 0x54
1001a00e:	2e10      	cmp	r6, #16
1001a010:	dd2a      	ble.n	1001a068 <_svfprintf_r+0x930>
1001a012:	4622      	mov	r2, r4
1001a014:	9f07      	ldr	r7, [sp, #28]
1001a016:	9c09      	ldr	r4, [sp, #36]	@ 0x24
1001a018:	f04f 0a10 	mov.w	sl, #16
1001a01c:	e00b      	b.n	1001a036 <_svfprintf_r+0x8fe>
1001a01e:	bf00      	nop
1001a020:	1002a638 	.word	0x1002a638
1001a024:	1002a668 	.word	0x1002a668
1001a028:	1002a66c 	.word	0x1002a66c
1001a02c:	3e10      	subs	r6, #16
1001a02e:	2e10      	cmp	r6, #16
1001a030:	f108 0808 	add.w	r8, r8, #8
1001a034:	dd17      	ble.n	1001a066 <_svfprintf_r+0x92e>
1001a036:	3301      	adds	r3, #1
1001a038:	498e      	ldr	r1, [pc, #568]	@ (1001a274 <_svfprintf_r+0xb3c>)
1001a03a:	3210      	adds	r2, #16
1001a03c:	2b07      	cmp	r3, #7
1001a03e:	e9c8 1a00 	strd	r1, sl, [r8]
1001a042:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
1001a046:	ddf1      	ble.n	1001a02c <_svfprintf_r+0x8f4>
1001a048:	aa32      	add	r2, sp, #200	@ 0xc8
1001a04a:	4621      	mov	r1, r4
1001a04c:	4638      	mov	r0, r7
1001a04e:	f006 f81b 	bl	10020088 <__ssprint_r>
1001a052:	2800      	cmp	r0, #0
1001a054:	f040 820c 	bne.w	1001a470 <_svfprintf_r+0xd38>
1001a058:	3e10      	subs	r6, #16
1001a05a:	2e10      	cmp	r6, #16
1001a05c:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
1001a060:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a064:	dce7      	bgt.n	1001a036 <_svfprintf_r+0x8fe>
1001a066:	4614      	mov	r4, r2
1001a068:	3301      	adds	r3, #1
1001a06a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001a06c:	f8c8 2000 	str.w	r2, [r8]
1001a070:	4434      	add	r4, r6
1001a072:	2b07      	cmp	r3, #7
1001a074:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a078:	f8c8 6004 	str.w	r6, [r8, #4]
1001a07c:	f300 81c7 	bgt.w	1001a40e <_svfprintf_r+0xcd6>
1001a080:	f108 0808 	add.w	r8, r8, #8
1001a084:	e4c3      	b.n	10019a0e <_svfprintf_r+0x2d6>
1001a086:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a088:	9807      	ldr	r0, [sp, #28]
1001a08a:	aa32      	add	r2, sp, #200	@ 0xc8
1001a08c:	f005 fffc 	bl	10020088 <__ssprint_r>
1001a090:	2800      	cmp	r0, #0
1001a092:	f43f ace2 	beq.w	10019a5a <_svfprintf_r+0x322>
1001a096:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001a09a:	e1ea      	b.n	1001a472 <_svfprintf_r+0xd3a>
1001a09c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a09e:	4976      	ldr	r1, [pc, #472]	@ (1001a278 <_svfprintf_r+0xb40>)
1001a0a0:	f8c8 1000 	str.w	r1, [r8]
1001a0a4:	3301      	adds	r3, #1
1001a0a6:	3401      	adds	r4, #1
1001a0a8:	2101      	movs	r1, #1
1001a0aa:	2b07      	cmp	r3, #7
1001a0ac:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a0ae:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a0b0:	f8c8 1004 	str.w	r1, [r8, #4]
1001a0b4:	f300 8574 	bgt.w	1001aba0 <_svfprintf_r+0x1468>
1001a0b8:	f108 0808 	add.w	r8, r8, #8
1001a0bc:	2a00      	cmp	r2, #0
1001a0be:	f040 84e6 	bne.w	1001aa8e <_svfprintf_r+0x1356>
1001a0c2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001a0c4:	f009 0301 	and.w	r3, r9, #1
1001a0c8:	4313      	orrs	r3, r2
1001a0ca:	f43f acb2 	beq.w	10019a32 <_svfprintf_r+0x2fa>
1001a0ce:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001a0d0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001a0d2:	441c      	add	r4, r3
1001a0d4:	e9c8 2300 	strd	r2, r3, [r8]
1001a0d8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a0da:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a0dc:	3301      	adds	r3, #1
1001a0de:	2b07      	cmp	r3, #7
1001a0e0:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a0e2:	f300 8645 	bgt.w	1001ad70 <_svfprintf_r+0x1638>
1001a0e6:	f108 0808 	add.w	r8, r8, #8
1001a0ea:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001a0ec:	f8c8 5000 	str.w	r5, [r8]
1001a0f0:	3301      	adds	r3, #1
1001a0f2:	4414      	add	r4, r2
1001a0f4:	2b07      	cmp	r3, #7
1001a0f6:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a0fa:	f8c8 2004 	str.w	r2, [r8, #4]
1001a0fe:	f77f ac96 	ble.w	10019a2e <_svfprintf_r+0x2f6>
1001a102:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a104:	9807      	ldr	r0, [sp, #28]
1001a106:	aa32      	add	r2, sp, #200	@ 0xc8
1001a108:	f005 ffbe 	bl	10020088 <__ssprint_r>
1001a10c:	2800      	cmp	r0, #0
1001a10e:	d1c2      	bne.n	1001a096 <_svfprintf_r+0x95e>
1001a110:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a112:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a116:	e48c      	b.n	10019a32 <_svfprintf_r+0x2fa>
1001a118:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a11a:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
1001a11c:	2b01      	cmp	r3, #1
1001a11e:	f104 0401 	add.w	r4, r4, #1
1001a122:	f106 0601 	add.w	r6, r6, #1
1001a126:	f108 0708 	add.w	r7, r8, #8
1001a12a:	f340 8129 	ble.w	1001a380 <_svfprintf_r+0xc48>
1001a12e:	2301      	movs	r3, #1
1001a130:	2e07      	cmp	r6, #7
1001a132:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a136:	f8c8 5000 	str.w	r5, [r8]
1001a13a:	f8c8 3004 	str.w	r3, [r8, #4]
1001a13e:	f300 81b1 	bgt.w	1001a4a4 <_svfprintf_r+0xd6c>
1001a142:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001a144:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001a146:	3601      	adds	r6, #1
1001a148:	441c      	add	r4, r3
1001a14a:	2e07      	cmp	r6, #7
1001a14c:	e9c7 2300 	strd	r2, r3, [r7]
1001a150:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a154:	f300 81b2 	bgt.w	1001a4bc <_svfprintf_r+0xd84>
1001a158:	3708      	adds	r7, #8
1001a15a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a15c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001a160:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
1001a164:	2200      	movs	r2, #0
1001a166:	2300      	movs	r3, #0
1001a168:	f006 fd72 	bl	10020c50 <__aeabi_dcmpeq>
1001a16c:	2800      	cmp	r0, #0
1001a16e:	f040 8121 	bne.w	1001a3b4 <_svfprintf_r+0xc7c>
1001a172:	3601      	adds	r6, #1
1001a174:	3501      	adds	r5, #1
1001a176:	4444      	add	r4, r8
1001a178:	2e07      	cmp	r6, #7
1001a17a:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a17e:	603d      	str	r5, [r7, #0]
1001a180:	f8c7 8004 	str.w	r8, [r7, #4]
1001a184:	f300 810a 	bgt.w	1001a39c <_svfprintf_r+0xc64>
1001a188:	3708      	adds	r7, #8
1001a18a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001a18c:	607b      	str	r3, [r7, #4]
1001a18e:	3601      	adds	r6, #1
1001a190:	441c      	add	r4, r3
1001a192:	2e07      	cmp	r6, #7
1001a194:	ab2c      	add	r3, sp, #176	@ 0xb0
1001a196:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a19a:	603b      	str	r3, [r7, #0]
1001a19c:	dcb1      	bgt.n	1001a102 <_svfprintf_r+0x9ca>
1001a19e:	f107 0808 	add.w	r8, r7, #8
1001a1a2:	e446      	b.n	10019a32 <_svfprintf_r+0x2fa>
1001a1a4:	464c      	mov	r4, r9
1001a1a6:	2b0a      	cmp	r3, #10
1001a1a8:	f172 0100 	sbcs.w	r1, r2, #0
1001a1ac:	f080 8353 	bcs.w	1001a856 <_svfprintf_r+0x111e>
1001a1b0:	3330      	adds	r3, #48	@ 0x30
1001a1b2:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
1001a1b6:	46a1      	mov	r9, r4
1001a1b8:	f04f 0b01 	mov.w	fp, #1
1001a1bc:	f20d 1577 	addw	r5, sp, #375	@ 0x177
1001a1c0:	e6b4      	b.n	10019f2c <_svfprintf_r+0x7f4>
1001a1c2:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a1c4:	9807      	ldr	r0, [sp, #28]
1001a1c6:	aa32      	add	r2, sp, #200	@ 0xc8
1001a1c8:	f005 ff5e 	bl	10020088 <__ssprint_r>
1001a1cc:	2800      	cmp	r0, #0
1001a1ce:	f47f af62 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001a1d2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a1d4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a1d8:	e410      	b.n	100199fc <_svfprintf_r+0x2c4>
1001a1da:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a1dc:	9807      	ldr	r0, [sp, #28]
1001a1de:	9315      	str	r3, [sp, #84]	@ 0x54
1001a1e0:	aa32      	add	r2, sp, #200	@ 0xc8
1001a1e2:	f005 ff51 	bl	10020088 <__ssprint_r>
1001a1e6:	2800      	cmp	r0, #0
1001a1e8:	f47f af55 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001a1ec:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a1ee:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001a1f0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a1f4:	f7ff bbf0 	b.w	100199d8 <_svfprintf_r+0x2a0>
1001a1f8:	2d10      	cmp	r5, #16
1001a1fa:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a1fc:	f340 8733 	ble.w	1001b066 <_svfprintf_r+0x192e>
1001a200:	4f1e      	ldr	r7, [pc, #120]	@ (1001a27c <_svfprintf_r+0xb44>)
1001a202:	f8dd 901c 	ldr.w	r9, [sp, #28]
1001a206:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
1001a20a:	9715      	str	r7, [sp, #84]	@ 0x54
1001a20c:	2610      	movs	r6, #16
1001a20e:	e004      	b.n	1001a21a <_svfprintf_r+0xae2>
1001a210:	3d10      	subs	r5, #16
1001a212:	2d10      	cmp	r5, #16
1001a214:	f108 0808 	add.w	r8, r8, #8
1001a218:	dd16      	ble.n	1001a248 <_svfprintf_r+0xb10>
1001a21a:	3301      	adds	r3, #1
1001a21c:	3410      	adds	r4, #16
1001a21e:	2b07      	cmp	r3, #7
1001a220:	e9c8 7600 	strd	r7, r6, [r8]
1001a224:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a228:	ddf2      	ble.n	1001a210 <_svfprintf_r+0xad8>
1001a22a:	aa32      	add	r2, sp, #200	@ 0xc8
1001a22c:	4651      	mov	r1, sl
1001a22e:	4648      	mov	r0, r9
1001a230:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a234:	f005 ff28 	bl	10020088 <__ssprint_r>
1001a238:	2800      	cmp	r0, #0
1001a23a:	f040 83e8 	bne.w	1001aa0e <_svfprintf_r+0x12d6>
1001a23e:	3d10      	subs	r5, #16
1001a240:	2d10      	cmp	r5, #16
1001a242:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001a246:	dce8      	bgt.n	1001a21a <_svfprintf_r+0xae2>
1001a248:	3301      	adds	r3, #1
1001a24a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001a24c:	442c      	add	r4, r5
1001a24e:	2b07      	cmp	r3, #7
1001a250:	e9c8 2500 	strd	r2, r5, [r8]
1001a254:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a258:	f77f abf4 	ble.w	10019a44 <_svfprintf_r+0x30c>
1001a25c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a25e:	9807      	ldr	r0, [sp, #28]
1001a260:	aa32      	add	r2, sp, #200	@ 0xc8
1001a262:	f005 ff11 	bl	10020088 <__ssprint_r>
1001a266:	2800      	cmp	r0, #0
1001a268:	f47f af15 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001a26c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a26e:	f7ff bbe9 	b.w	10019a44 <_svfprintf_r+0x30c>
1001a272:	bf00      	nop
1001a274:	1002a66c 	.word	0x1002a66c
1001a278:	1002a668 	.word	0x1002a668
1001a27c:	1002a67c 	.word	0x1002a67c
1001a280:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001a282:	2a00      	cmp	r2, #0
1001a284:	f77f af0a 	ble.w	1001a09c <_svfprintf_r+0x964>
1001a288:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
1001a28c:	429f      	cmp	r7, r3
1001a28e:	bfa8      	it	ge
1001a290:	461f      	movge	r7, r3
1001a292:	2f00      	cmp	r7, #0
1001a294:	eb05 0b03 	add.w	fp, r5, r3
1001a298:	dd0b      	ble.n	1001a2b2 <_svfprintf_r+0xb7a>
1001a29a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a29c:	3301      	adds	r3, #1
1001a29e:	443c      	add	r4, r7
1001a2a0:	2b07      	cmp	r3, #7
1001a2a2:	e9c8 5700 	strd	r5, r7, [r8]
1001a2a6:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a2a8:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a2aa:	f300 8642 	bgt.w	1001af32 <_svfprintf_r+0x17fa>
1001a2ae:	f108 0808 	add.w	r8, r8, #8
1001a2b2:	9e12      	ldr	r6, [sp, #72]	@ 0x48
1001a2b4:	2f00      	cmp	r7, #0
1001a2b6:	bfa8      	it	ge
1001a2b8:	1bf6      	subge	r6, r6, r7
1001a2ba:	2e00      	cmp	r6, #0
1001a2bc:	f300 8200 	bgt.w	1001a6c0 <_svfprintf_r+0xf88>
1001a2c0:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
1001a2c4:	f419 6f80 	tst.w	r9, #1024	@ 0x400
1001a2c8:	44aa      	add	sl, r5
1001a2ca:	f040 8221 	bne.w	1001a710 <_svfprintf_r+0xfd8>
1001a2ce:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001a2d0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a2d2:	429d      	cmp	r5, r3
1001a2d4:	db03      	blt.n	1001a2de <_svfprintf_r+0xba6>
1001a2d6:	f019 0f01 	tst.w	r9, #1
1001a2da:	f000 846f 	beq.w	1001abbc <_svfprintf_r+0x1484>
1001a2de:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001a2e0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001a2e2:	441c      	add	r4, r3
1001a2e4:	e9c8 2300 	strd	r2, r3, [r8]
1001a2e8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a2ea:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a2ec:	3301      	adds	r3, #1
1001a2ee:	2b07      	cmp	r3, #7
1001a2f0:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a2f2:	f300 8675 	bgt.w	1001afe0 <_svfprintf_r+0x18a8>
1001a2f6:	f108 0808 	add.w	r8, r8, #8
1001a2fa:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a2fc:	ebab 060a 	sub.w	r6, fp, sl
1001a300:	1b5d      	subs	r5, r3, r5
1001a302:	42ae      	cmp	r6, r5
1001a304:	bfa8      	it	ge
1001a306:	462e      	movge	r6, r5
1001a308:	2e00      	cmp	r6, #0
1001a30a:	dd0d      	ble.n	1001a328 <_svfprintf_r+0xbf0>
1001a30c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a30e:	f8c8 a000 	str.w	sl, [r8]
1001a312:	3301      	adds	r3, #1
1001a314:	4434      	add	r4, r6
1001a316:	2b07      	cmp	r3, #7
1001a318:	f8c8 6004 	str.w	r6, [r8, #4]
1001a31c:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a31e:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a320:	f300 8670 	bgt.w	1001b004 <_svfprintf_r+0x18cc>
1001a324:	f108 0808 	add.w	r8, r8, #8
1001a328:	2e00      	cmp	r6, #0
1001a32a:	bfa8      	it	ge
1001a32c:	1bad      	subge	r5, r5, r6
1001a32e:	2d00      	cmp	r5, #0
1001a330:	f77f ab7f 	ble.w	10019a32 <_svfprintf_r+0x2fa>
1001a334:	2d10      	cmp	r5, #16
1001a336:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a338:	f340 836b 	ble.w	1001aa12 <_svfprintf_r+0x12da>
1001a33c:	4fad      	ldr	r7, [pc, #692]	@ (1001a5f4 <_svfprintf_r+0xebc>)
1001a33e:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001a342:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
1001a346:	9715      	str	r7, [sp, #84]	@ 0x54
1001a348:	2610      	movs	r6, #16
1001a34a:	e005      	b.n	1001a358 <_svfprintf_r+0xc20>
1001a34c:	f108 0808 	add.w	r8, r8, #8
1001a350:	3d10      	subs	r5, #16
1001a352:	2d10      	cmp	r5, #16
1001a354:	f340 835f 	ble.w	1001aa16 <_svfprintf_r+0x12de>
1001a358:	3301      	adds	r3, #1
1001a35a:	3410      	adds	r4, #16
1001a35c:	2b07      	cmp	r3, #7
1001a35e:	e9c8 7600 	strd	r7, r6, [r8]
1001a362:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a366:	ddf1      	ble.n	1001a34c <_svfprintf_r+0xc14>
1001a368:	aa32      	add	r2, sp, #200	@ 0xc8
1001a36a:	4651      	mov	r1, sl
1001a36c:	4658      	mov	r0, fp
1001a36e:	f005 fe8b 	bl	10020088 <__ssprint_r>
1001a372:	2800      	cmp	r0, #0
1001a374:	d17d      	bne.n	1001a472 <_svfprintf_r+0xd3a>
1001a376:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001a37a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a37e:	e7e7      	b.n	1001a350 <_svfprintf_r+0xc18>
1001a380:	f019 0f01 	tst.w	r9, #1
1001a384:	f47f aed3 	bne.w	1001a12e <_svfprintf_r+0x9f6>
1001a388:	2301      	movs	r3, #1
1001a38a:	2e07      	cmp	r6, #7
1001a38c:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a390:	f8c8 5000 	str.w	r5, [r8]
1001a394:	f8c8 3004 	str.w	r3, [r8, #4]
1001a398:	f77f aef7 	ble.w	1001a18a <_svfprintf_r+0xa52>
1001a39c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a39e:	9807      	ldr	r0, [sp, #28]
1001a3a0:	aa32      	add	r2, sp, #200	@ 0xc8
1001a3a2:	f005 fe71 	bl	10020088 <__ssprint_r>
1001a3a6:	2800      	cmp	r0, #0
1001a3a8:	f47f ae75 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001a3ac:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001a3b0:	af35      	add	r7, sp, #212	@ 0xd4
1001a3b2:	e6ea      	b.n	1001a18a <_svfprintf_r+0xa52>
1001a3b4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a3b6:	2b01      	cmp	r3, #1
1001a3b8:	f77f aee7 	ble.w	1001a18a <_svfprintf_r+0xa52>
1001a3bc:	2b11      	cmp	r3, #17
1001a3be:	4b8d      	ldr	r3, [pc, #564]	@ (1001a5f4 <_svfprintf_r+0xebc>)
1001a3c0:	9315      	str	r3, [sp, #84]	@ 0x54
1001a3c2:	f340 8358 	ble.w	1001aa76 <_svfprintf_r+0x133e>
1001a3c6:	f8cd 9020 	str.w	r9, [sp, #32]
1001a3ca:	f8dd a01c 	ldr.w	sl, [sp, #28]
1001a3ce:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001a3d2:	2510      	movs	r5, #16
1001a3d4:	4699      	mov	r9, r3
1001a3d6:	e006      	b.n	1001a3e6 <_svfprintf_r+0xcae>
1001a3d8:	3708      	adds	r7, #8
1001a3da:	f1a8 0810 	sub.w	r8, r8, #16
1001a3de:	f1b8 0f10 	cmp.w	r8, #16
1001a3e2:	f340 8346 	ble.w	1001aa72 <_svfprintf_r+0x133a>
1001a3e6:	3601      	adds	r6, #1
1001a3e8:	3410      	adds	r4, #16
1001a3ea:	2e07      	cmp	r6, #7
1001a3ec:	e9c7 9500 	strd	r9, r5, [r7]
1001a3f0:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a3f4:	ddf0      	ble.n	1001a3d8 <_svfprintf_r+0xca0>
1001a3f6:	aa32      	add	r2, sp, #200	@ 0xc8
1001a3f8:	4659      	mov	r1, fp
1001a3fa:	4650      	mov	r0, sl
1001a3fc:	f005 fe44 	bl	10020088 <__ssprint_r>
1001a400:	2800      	cmp	r0, #0
1001a402:	f040 8298 	bne.w	1001a936 <_svfprintf_r+0x11fe>
1001a406:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001a40a:	af35      	add	r7, sp, #212	@ 0xd4
1001a40c:	e7e5      	b.n	1001a3da <_svfprintf_r+0xca2>
1001a40e:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a410:	9807      	ldr	r0, [sp, #28]
1001a412:	aa32      	add	r2, sp, #200	@ 0xc8
1001a414:	f005 fe38 	bl	10020088 <__ssprint_r>
1001a418:	2800      	cmp	r0, #0
1001a41a:	f47f ae3c 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001a41e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a420:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a424:	f7ff baf3 	b.w	10019a0e <_svfprintf_r+0x2d6>
1001a428:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001a42a:	f851 3b04 	ldr.w	r3, [r1], #4
1001a42e:	910d      	str	r1, [sp, #52]	@ 0x34
1001a430:	f019 0110 	ands.w	r1, r9, #16
1001a434:	f47f ac4c 	bne.w	10019cd0 <_svfprintf_r+0x598>
1001a438:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
1001a43c:	f000 8363 	beq.w	1001ab06 <_svfprintf_r+0x13ce>
1001a440:	b29b      	uxth	r3, r3
1001a442:	460a      	mov	r2, r1
1001a444:	e444      	b.n	10019cd0 <_svfprintf_r+0x598>
1001a446:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001a448:	f851 3b04 	ldr.w	r3, [r1], #4
1001a44c:	910d      	str	r1, [sp, #52]	@ 0x34
1001a44e:	f014 0110 	ands.w	r1, r4, #16
1001a452:	d10b      	bne.n	1001a46c <_svfprintf_r+0xd34>
1001a454:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
1001a458:	d003      	beq.n	1001a462 <_svfprintf_r+0xd2a>
1001a45a:	460a      	mov	r2, r1
1001a45c:	b29b      	uxth	r3, r3
1001a45e:	2101      	movs	r1, #1
1001a460:	e439      	b.n	10019cd6 <_svfprintf_r+0x59e>
1001a462:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
1001a466:	bf1c      	itt	ne
1001a468:	b2db      	uxtbne	r3, r3
1001a46a:	4602      	movne	r2, r0
1001a46c:	2101      	movs	r1, #1
1001a46e:	e432      	b.n	10019cd6 <_svfprintf_r+0x59e>
1001a470:	46bb      	mov	fp, r7
1001a472:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001a474:	2b00      	cmp	r3, #0
1001a476:	f43f aa64 	beq.w	10019942 <_svfprintf_r+0x20a>
1001a47a:	990c      	ldr	r1, [sp, #48]	@ 0x30
1001a47c:	4658      	mov	r0, fp
1001a47e:	f7fd fd23 	bl	10017ec8 <_free_r>
1001a482:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001a484:	899b      	ldrh	r3, [r3, #12]
1001a486:	f003 0340 	and.w	r3, r3, #64	@ 0x40
1001a48a:	f7ff ba5e 	b.w	1001994a <_svfprintf_r+0x212>
1001a48e:	f8dd b020 	ldr.w	fp, [sp, #32]
1001a492:	ad5e      	add	r5, sp, #376	@ 0x178
1001a494:	e54a      	b.n	10019f2c <_svfprintf_r+0x7f4>
1001a496:	425b      	negs	r3, r3
1001a498:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
1001a49c:	464c      	mov	r4, r9
1001a49e:	202d      	movs	r0, #45	@ 0x2d
1001a4a0:	2101      	movs	r1, #1
1001a4a2:	e419      	b.n	10019cd8 <_svfprintf_r+0x5a0>
1001a4a4:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a4a6:	9807      	ldr	r0, [sp, #28]
1001a4a8:	aa32      	add	r2, sp, #200	@ 0xc8
1001a4aa:	f005 fded 	bl	10020088 <__ssprint_r>
1001a4ae:	2800      	cmp	r0, #0
1001a4b0:	f47f adf1 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001a4b4:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001a4b8:	af35      	add	r7, sp, #212	@ 0xd4
1001a4ba:	e642      	b.n	1001a142 <_svfprintf_r+0xa0a>
1001a4bc:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a4be:	9807      	ldr	r0, [sp, #28]
1001a4c0:	aa32      	add	r2, sp, #200	@ 0xc8
1001a4c2:	f005 fde1 	bl	10020088 <__ssprint_r>
1001a4c6:	2800      	cmp	r0, #0
1001a4c8:	f47f ade5 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001a4cc:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001a4d0:	af35      	add	r7, sp, #212	@ 0xd4
1001a4d2:	e642      	b.n	1001a15a <_svfprintf_r+0xa22>
1001a4d4:	f019 0f01 	tst.w	r9, #1
1001a4d8:	f43f aaab 	beq.w	10019a32 <_svfprintf_r+0x2fa>
1001a4dc:	e4d4      	b.n	10019e88 <_svfprintf_r+0x750>
1001a4de:	930d      	str	r3, [sp, #52]	@ 0x34
1001a4e0:	7823      	ldrb	r3, [r4, #0]
1001a4e2:	f7ff b980 	b.w	100197e6 <_svfprintf_r+0xae>
1001a4e6:	ad5e      	add	r5, sp, #376	@ 0x178
1001a4e8:	e520      	b.n	10019f2c <_svfprintf_r+0x7f4>
1001a4ea:	f419 7f00 	tst.w	r9, #512	@ 0x200
1001a4ee:	f040 8374 	bne.w	1001abda <_svfprintf_r+0x14a2>
1001a4f2:	17da      	asrs	r2, r3, #31
1001a4f4:	4611      	mov	r1, r2
1001a4f6:	f7ff bbb1 	b.w	10019c5c <_svfprintf_r+0x524>
1001a4fa:	f019 0f10 	tst.w	r9, #16
1001a4fe:	f040 82b2 	bne.w	1001aa66 <_svfprintf_r+0x132e>
1001a502:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001a506:	f040 8362 	bne.w	1001abce <_svfprintf_r+0x1496>
1001a50a:	f419 7f00 	tst.w	r9, #512	@ 0x200
1001a50e:	f000 82aa 	beq.w	1001aa66 <_svfprintf_r+0x132e>
1001a512:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a514:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001a516:	681b      	ldr	r3, [r3, #0]
1001a518:	701a      	strb	r2, [r3, #0]
1001a51a:	e40e      	b.n	10019d3a <_svfprintf_r+0x602>
1001a51c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
1001a51e:	7823      	ldrb	r3, [r4, #0]
1001a520:	2a00      	cmp	r2, #0
1001a522:	f43f a960 	beq.w	100197e6 <_svfprintf_r+0xae>
1001a526:	7812      	ldrb	r2, [r2, #0]
1001a528:	2a00      	cmp	r2, #0
1001a52a:	f43f a95c 	beq.w	100197e6 <_svfprintf_r+0xae>
1001a52e:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
1001a532:	f7ff b958 	b.w	100197e6 <_svfprintf_r+0xae>
1001a536:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001a53a:	4602      	mov	r2, r0
1001a53c:	460b      	mov	r3, r1
1001a53e:	f006 fbb9 	bl	10020cb4 <__aeabi_dcmpun>
1001a542:	2800      	cmp	r0, #0
1001a544:	f040 860f 	bne.w	1001b166 <_svfprintf_r+0x1a2e>
1001a548:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001a54a:	2b61      	cmp	r3, #97	@ 0x61
1001a54c:	f000 8506 	beq.w	1001af5c <_svfprintf_r+0x1824>
1001a550:	2b41      	cmp	r3, #65	@ 0x41
1001a552:	f000 8582 	beq.w	1001b05a <_svfprintf_r+0x1922>
1001a556:	9b08      	ldr	r3, [sp, #32]
1001a558:	3301      	adds	r3, #1
1001a55a:	f000 8417 	beq.w	1001ad8c <_svfprintf_r+0x1654>
1001a55e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001a560:	f023 0320 	bic.w	r3, r3, #32
1001a564:	2b47      	cmp	r3, #71	@ 0x47
1001a566:	d104      	bne.n	1001a572 <_svfprintf_r+0xe3a>
1001a568:	9b08      	ldr	r3, [sp, #32]
1001a56a:	2b00      	cmp	r3, #0
1001a56c:	bf08      	it	eq
1001a56e:	2301      	moveq	r3, #1
1001a570:	9308      	str	r3, [sp, #32]
1001a572:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
1001a576:	f449 7080 	orr.w	r0, r9, #256	@ 0x100
1001a57a:	2a00      	cmp	r2, #0
1001a57c:	9015      	str	r0, [sp, #84]	@ 0x54
1001a57e:	f8cd 9018 	str.w	r9, [sp, #24]
1001a582:	f04f 0300 	mov.w	r3, #0
1001a586:	f2c0 8521 	blt.w	1001afcc <_svfprintf_r+0x1894>
1001a58a:	e9cd 1224 	strd	r1, r2, [sp, #144]	@ 0x90
1001a58e:	931f      	str	r3, [sp, #124]	@ 0x7c
1001a590:	930c      	str	r3, [sp, #48]	@ 0x30
1001a592:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001a594:	3b41      	subs	r3, #65	@ 0x41
1001a596:	2b25      	cmp	r3, #37	@ 0x25
1001a598:	f200 8328 	bhi.w	1001abec <_svfprintf_r+0x14b4>
1001a59c:	e8df f013 	tbh	[pc, r3, lsl #1]
1001a5a0:	03260401 	.word	0x03260401
1001a5a4:	03260326 	.word	0x03260326
1001a5a8:	03fe03fa 	.word	0x03fe03fa
1001a5ac:	03260326 	.word	0x03260326
1001a5b0:	03260326 	.word	0x03260326
1001a5b4:	03260326 	.word	0x03260326
1001a5b8:	03260326 	.word	0x03260326
1001a5bc:	03260326 	.word	0x03260326
1001a5c0:	03260326 	.word	0x03260326
1001a5c4:	03260326 	.word	0x03260326
1001a5c8:	03260326 	.word	0x03260326
1001a5cc:	03260326 	.word	0x03260326
1001a5d0:	03260326 	.word	0x03260326
1001a5d4:	03260326 	.word	0x03260326
1001a5d8:	03260326 	.word	0x03260326
1001a5dc:	03260326 	.word	0x03260326
1001a5e0:	03260326 	.word	0x03260326
1001a5e4:	03260326 	.word	0x03260326
1001a5e8:	03fe03fa 	.word	0x03fe03fa
1001a5ec:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a5f0:	f7ff bb61 	b.w	10019cb6 <_svfprintf_r+0x57e>
1001a5f4:	1002a66c 	.word	0x1002a66c
1001a5f8:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a5fc:	464c      	mov	r4, r9
1001a5fe:	f7ff bbc9 	b.w	10019d94 <_svfprintf_r+0x65c>
1001a602:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a606:	4bbd      	ldr	r3, [pc, #756]	@ (1001a8fc <_svfprintf_r+0x11c4>)
1001a608:	9319      	str	r3, [sp, #100]	@ 0x64
1001a60a:	f019 0220 	ands.w	r2, r9, #32
1001a60e:	f000 8108 	beq.w	1001a822 <_svfprintf_r+0x10ea>
1001a612:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a614:	3307      	adds	r3, #7
1001a616:	f023 0307 	bic.w	r3, r3, #7
1001a61a:	4619      	mov	r1, r3
1001a61c:	685a      	ldr	r2, [r3, #4]
1001a61e:	f851 3b08 	ldr.w	r3, [r1], #8
1001a622:	910d      	str	r1, [sp, #52]	@ 0x34
1001a624:	f019 0f01 	tst.w	r9, #1
1001a628:	d00a      	beq.n	1001a640 <_svfprintf_r+0xf08>
1001a62a:	ea53 0102 	orrs.w	r1, r3, r2
1001a62e:	d007      	beq.n	1001a640 <_svfprintf_r+0xf08>
1001a630:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001a632:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
1001a636:	2130      	movs	r1, #48	@ 0x30
1001a638:	f049 0902 	orr.w	r9, r9, #2
1001a63c:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
1001a640:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
1001a644:	2102      	movs	r1, #2
1001a646:	f7ff bb46 	b.w	10019cd6 <_svfprintf_r+0x59e>
1001a64a:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a64e:	4bac      	ldr	r3, [pc, #688]	@ (1001a900 <_svfprintf_r+0x11c8>)
1001a650:	9319      	str	r3, [sp, #100]	@ 0x64
1001a652:	e7da      	b.n	1001a60a <_svfprintf_r+0xed2>
1001a654:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a656:	681b      	ldr	r3, [r3, #0]
1001a658:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
1001a65c:	2301      	movs	r3, #1
1001a65e:	9306      	str	r3, [sp, #24]
1001a660:	469b      	mov	fp, r3
1001a662:	ad45      	add	r5, sp, #276	@ 0x114
1001a664:	f7ff baae 	b.w	10019bc4 <_svfprintf_r+0x48c>
1001a668:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a66a:	9807      	ldr	r0, [sp, #28]
1001a66c:	aa32      	add	r2, sp, #200	@ 0xc8
1001a66e:	f005 fd0b 	bl	10020088 <__ssprint_r>
1001a672:	2800      	cmp	r0, #0
1001a674:	f47f ad0f 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001a678:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a67a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a67e:	e411      	b.n	10019ea4 <_svfprintf_r+0x76c>
1001a680:	2140      	movs	r1, #64	@ 0x40
1001a682:	4658      	mov	r0, fp
1001a684:	f7fa ffd4 	bl	10015630 <_malloc_r>
1001a688:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001a68a:	6018      	str	r0, [r3, #0]
1001a68c:	6118      	str	r0, [r3, #16]
1001a68e:	2800      	cmp	r0, #0
1001a690:	f000 8614 	beq.w	1001b2bc <_svfprintf_r+0x1b84>
1001a694:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001a696:	2340      	movs	r3, #64	@ 0x40
1001a698:	6153      	str	r3, [r2, #20]
1001a69a:	f7ff b869 	b.w	10019770 <_svfprintf_r+0x38>
1001a69e:	9b08      	ldr	r3, [sp, #32]
1001a6a0:	950c      	str	r5, [sp, #48]	@ 0x30
1001a6a2:	2b06      	cmp	r3, #6
1001a6a4:	4629      	mov	r1, r5
1001a6a6:	bf28      	it	cs
1001a6a8:	2306      	movcs	r3, #6
1001a6aa:	9508      	str	r5, [sp, #32]
1001a6ac:	462a      	mov	r2, r5
1001a6ae:	9306      	str	r3, [sp, #24]
1001a6b0:	4d94      	ldr	r5, [pc, #592]	@ (1001a904 <_svfprintf_r+0x11cc>)
1001a6b2:	960d      	str	r6, [sp, #52]	@ 0x34
1001a6b4:	469b      	mov	fp, r3
1001a6b6:	9114      	str	r1, [sp, #80]	@ 0x50
1001a6b8:	9110      	str	r1, [sp, #64]	@ 0x40
1001a6ba:	9112      	str	r1, [sp, #72]	@ 0x48
1001a6bc:	f7ff ba1a 	b.w	10019af4 <_svfprintf_r+0x3bc>
1001a6c0:	2e10      	cmp	r6, #16
1001a6c2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a6c4:	f340 85eb 	ble.w	1001b29e <_svfprintf_r+0x1b66>
1001a6c8:	488f      	ldr	r0, [pc, #572]	@ (1001a908 <_svfprintf_r+0x11d0>)
1001a6ca:	f8dd a01c 	ldr.w	sl, [sp, #28]
1001a6ce:	9015      	str	r0, [sp, #84]	@ 0x54
1001a6d0:	4642      	mov	r2, r8
1001a6d2:	4621      	mov	r1, r4
1001a6d4:	46a8      	mov	r8, r5
1001a6d6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
1001a6d8:	2710      	movs	r7, #16
1001a6da:	4605      	mov	r5, r0
1001a6dc:	e004      	b.n	1001a6e8 <_svfprintf_r+0xfb0>
1001a6de:	3208      	adds	r2, #8
1001a6e0:	3e10      	subs	r6, #16
1001a6e2:	2e10      	cmp	r6, #16
1001a6e4:	f340 8224 	ble.w	1001ab30 <_svfprintf_r+0x13f8>
1001a6e8:	3301      	adds	r3, #1
1001a6ea:	3110      	adds	r1, #16
1001a6ec:	2b07      	cmp	r3, #7
1001a6ee:	e9c2 5700 	strd	r5, r7, [r2]
1001a6f2:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
1001a6f6:	ddf2      	ble.n	1001a6de <_svfprintf_r+0xfa6>
1001a6f8:	aa32      	add	r2, sp, #200	@ 0xc8
1001a6fa:	4621      	mov	r1, r4
1001a6fc:	4650      	mov	r0, sl
1001a6fe:	f005 fcc3 	bl	10020088 <__ssprint_r>
1001a702:	2800      	cmp	r0, #0
1001a704:	f040 8117 	bne.w	1001a936 <_svfprintf_r+0x11fe>
1001a708:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
1001a70c:	aa35      	add	r2, sp, #212	@ 0xd4
1001a70e:	e7e7      	b.n	1001a6e0 <_svfprintf_r+0xfa8>
1001a710:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001a712:	f8cd b020 	str.w	fp, [sp, #32]
1001a716:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
1001a71a:	4642      	mov	r2, r8
1001a71c:	4621      	mov	r1, r4
1001a71e:	4f7a      	ldr	r7, [pc, #488]	@ (1001a908 <_svfprintf_r+0x11d0>)
1001a720:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
1001a724:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
1001a728:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001a72c:	4654      	mov	r4, sl
1001a72e:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
1001a732:	b383      	cbz	r3, 1001a796 <_svfprintf_r+0x105e>
1001a734:	f1b9 0f00 	cmp.w	r9, #0
1001a738:	f000 80ff 	beq.w	1001a93a <_svfprintf_r+0x1202>
1001a73c:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
1001a740:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001a742:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001a744:	3001      	adds	r0, #1
1001a746:	4441      	add	r1, r8
1001a748:	2807      	cmp	r0, #7
1001a74a:	e9c2 3800 	strd	r3, r8, [r2]
1001a74e:	9134      	str	r1, [sp, #208]	@ 0xd0
1001a750:	9033      	str	r0, [sp, #204]	@ 0xcc
1001a752:	dc75      	bgt.n	1001a840 <_svfprintf_r+0x1108>
1001a754:	3208      	adds	r2, #8
1001a756:	9b08      	ldr	r3, [sp, #32]
1001a758:	f89a 0000 	ldrb.w	r0, [sl]
1001a75c:	1b1e      	subs	r6, r3, r4
1001a75e:	4286      	cmp	r6, r0
1001a760:	bfa8      	it	ge
1001a762:	4606      	movge	r6, r0
1001a764:	2e00      	cmp	r6, #0
1001a766:	dd0c      	ble.n	1001a782 <_svfprintf_r+0x104a>
1001a768:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001a76a:	3001      	adds	r0, #1
1001a76c:	4431      	add	r1, r6
1001a76e:	2807      	cmp	r0, #7
1001a770:	e9c2 4600 	strd	r4, r6, [r2]
1001a774:	9134      	str	r1, [sp, #208]	@ 0xd0
1001a776:	9033      	str	r0, [sp, #204]	@ 0xcc
1001a778:	f300 8168 	bgt.w	1001aa4c <_svfprintf_r+0x1314>
1001a77c:	f89a 0000 	ldrb.w	r0, [sl]
1001a780:	3208      	adds	r2, #8
1001a782:	2e00      	cmp	r6, #0
1001a784:	bfac      	ite	ge
1001a786:	1b85      	subge	r5, r0, r6
1001a788:	4605      	movlt	r5, r0
1001a78a:	2d00      	cmp	r5, #0
1001a78c:	dc13      	bgt.n	1001a7b6 <_svfprintf_r+0x107e>
1001a78e:	4404      	add	r4, r0
1001a790:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001a792:	2b00      	cmp	r3, #0
1001a794:	d1ce      	bne.n	1001a734 <_svfprintf_r+0xffc>
1001a796:	f1b9 0f00 	cmp.w	r9, #0
1001a79a:	d1cf      	bne.n	1001a73c <_svfprintf_r+0x1004>
1001a79c:	f8dd b020 	ldr.w	fp, [sp, #32]
1001a7a0:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
1001a7a4:	46a2      	mov	sl, r4
1001a7a6:	45da      	cmp	sl, fp
1001a7a8:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
1001a7ac:	4690      	mov	r8, r2
1001a7ae:	460c      	mov	r4, r1
1001a7b0:	bf28      	it	cs
1001a7b2:	46da      	movcs	sl, fp
1001a7b4:	e58b      	b.n	1001a2ce <_svfprintf_r+0xb96>
1001a7b6:	2d10      	cmp	r5, #16
1001a7b8:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001a7ba:	f340 853e 	ble.w	1001b23a <_svfprintf_r+0x1b02>
1001a7be:	4623      	mov	r3, r4
1001a7c0:	463e      	mov	r6, r7
1001a7c2:	462c      	mov	r4, r5
1001a7c4:	461d      	mov	r5, r3
1001a7c6:	e004      	b.n	1001a7d2 <_svfprintf_r+0x109a>
1001a7c8:	3c10      	subs	r4, #16
1001a7ca:	2c10      	cmp	r4, #16
1001a7cc:	f102 0208 	add.w	r2, r2, #8
1001a7d0:	dd16      	ble.n	1001a800 <_svfprintf_r+0x10c8>
1001a7d2:	3001      	adds	r0, #1
1001a7d4:	3110      	adds	r1, #16
1001a7d6:	2310      	movs	r3, #16
1001a7d8:	2807      	cmp	r0, #7
1001a7da:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
1001a7de:	6017      	str	r7, [r2, #0]
1001a7e0:	6053      	str	r3, [r2, #4]
1001a7e2:	ddf1      	ble.n	1001a7c8 <_svfprintf_r+0x1090>
1001a7e4:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a7e6:	aa32      	add	r2, sp, #200	@ 0xc8
1001a7e8:	4658      	mov	r0, fp
1001a7ea:	f005 fc4d 	bl	10020088 <__ssprint_r>
1001a7ee:	2800      	cmp	r0, #0
1001a7f0:	f47f ae3f 	bne.w	1001a472 <_svfprintf_r+0xd3a>
1001a7f4:	3c10      	subs	r4, #16
1001a7f6:	2c10      	cmp	r4, #16
1001a7f8:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
1001a7fc:	aa35      	add	r2, sp, #212	@ 0xd4
1001a7fe:	dce8      	bgt.n	1001a7d2 <_svfprintf_r+0x109a>
1001a800:	462b      	mov	r3, r5
1001a802:	4625      	mov	r5, r4
1001a804:	461c      	mov	r4, r3
1001a806:	3001      	adds	r0, #1
1001a808:	4429      	add	r1, r5
1001a80a:	2807      	cmp	r0, #7
1001a80c:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
1001a810:	6016      	str	r6, [r2, #0]
1001a812:	6055      	str	r5, [r2, #4]
1001a814:	f300 837f 	bgt.w	1001af16 <_svfprintf_r+0x17de>
1001a818:	f89a 0000 	ldrb.w	r0, [sl]
1001a81c:	3208      	adds	r2, #8
1001a81e:	4404      	add	r4, r0
1001a820:	e7b6      	b.n	1001a790 <_svfprintf_r+0x1058>
1001a822:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001a824:	f851 3b04 	ldr.w	r3, [r1], #4
1001a828:	910d      	str	r1, [sp, #52]	@ 0x34
1001a82a:	f019 0110 	ands.w	r1, r9, #16
1001a82e:	f47f aef9 	bne.w	1001a624 <_svfprintf_r+0xeec>
1001a832:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
1001a836:	f000 8160 	beq.w	1001aafa <_svfprintf_r+0x13c2>
1001a83a:	b29b      	uxth	r3, r3
1001a83c:	460a      	mov	r2, r1
1001a83e:	e6f1      	b.n	1001a624 <_svfprintf_r+0xeec>
1001a840:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a842:	aa32      	add	r2, sp, #200	@ 0xc8
1001a844:	4658      	mov	r0, fp
1001a846:	f005 fc1f 	bl	10020088 <__ssprint_r>
1001a84a:	2800      	cmp	r0, #0
1001a84c:	f47f ae11 	bne.w	1001a472 <_svfprintf_r+0xd3a>
1001a850:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001a852:	aa35      	add	r2, sp, #212	@ 0xd4
1001a854:	e77f      	b.n	1001a756 <_svfprintf_r+0x101e>
1001a856:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
1001a85a:	2100      	movs	r1, #0
1001a85c:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
1001a860:	f8df 90a8 	ldr.w	r9, [pc, #168]	@ 1001a90c <_svfprintf_r+0x11d4>
1001a864:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
1001a868:	9406      	str	r4, [sp, #24]
1001a86a:	ad5e      	add	r5, sp, #376	@ 0x178
1001a86c:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
1001a870:	2705      	movs	r7, #5
1001a872:	468c      	mov	ip, r1
1001a874:	465e      	mov	r6, fp
1001a876:	e005      	b.n	1001a884 <_svfprintf_r+0x114c>
1001a878:	2b0a      	cmp	r3, #10
1001a87a:	f172 0200 	sbcs.w	r2, r2, #0
1001a87e:	d333      	bcc.n	1001a8e8 <_svfprintf_r+0x11b0>
1001a880:	465b      	mov	r3, fp
1001a882:	4622      	mov	r2, r4
1001a884:	1899      	adds	r1, r3, r2
1001a886:	f141 0100 	adc.w	r1, r1, #0
1001a88a:	fba9 0401 	umull	r0, r4, r9, r1
1001a88e:	f024 0003 	bic.w	r0, r4, #3
1001a892:	eb00 0094 	add.w	r0, r0, r4, lsr #2
1001a896:	1a09      	subs	r1, r1, r0
1001a898:	1a58      	subs	r0, r3, r1
1001a89a:	f162 0e00 	sbc.w	lr, r2, #0
1001a89e:	fb0a f400 	mul.w	r4, sl, r0
1001a8a2:	fba0 b009 	umull	fp, r0, r0, r9
1001a8a6:	fb09 440e 	mla	r4, r9, lr, r4
1001a8aa:	f00b 0e01 	and.w	lr, fp, #1
1001a8ae:	4404      	add	r4, r0
1001a8b0:	fbae 0e07 	umull	r0, lr, lr, r7
1001a8b4:	1840      	adds	r0, r0, r1
1001a8b6:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
1001a8ba:	3030      	adds	r0, #48	@ 0x30
1001a8bc:	f805 0c01 	strb.w	r0, [r5, #-1]
1001a8c0:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
1001a8c4:	f10c 0c01 	add.w	ip, ip, #1
1001a8c8:	3d01      	subs	r5, #1
1001a8ca:	0864      	lsrs	r4, r4, #1
1001a8cc:	2e00      	cmp	r6, #0
1001a8ce:	d0d3      	beq.n	1001a878 <_svfprintf_r+0x1140>
1001a8d0:	f898 1000 	ldrb.w	r1, [r8]
1001a8d4:	458c      	cmp	ip, r1
1001a8d6:	d1cf      	bne.n	1001a878 <_svfprintf_r+0x1140>
1001a8d8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
1001a8dc:	d0cc      	beq.n	1001a878 <_svfprintf_r+0x1140>
1001a8de:	2b0a      	cmp	r3, #10
1001a8e0:	f172 0200 	sbcs.w	r2, r2, #0
1001a8e4:	f080 8137 	bcs.w	1001ab56 <_svfprintf_r+0x141e>
1001a8e8:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
1001a8ec:	9c06      	ldr	r4, [sp, #24]
1001a8ee:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
1001a8f2:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
1001a8f6:	f7ff bb15 	b.w	10019f24 <_svfprintf_r+0x7ec>
1001a8fa:	bf00      	nop
1001a8fc:	1002a64c 	.word	0x1002a64c
1001a900:	1002a638 	.word	0x1002a638
1001a904:	1002a660 	.word	0x1002a660
1001a908:	1002a66c 	.word	0x1002a66c
1001a90c:	cccccccd 	.word	0xcccccccd
1001a910:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a912:	9807      	ldr	r0, [sp, #28]
1001a914:	9315      	str	r3, [sp, #84]	@ 0x54
1001a916:	aa32      	add	r2, sp, #200	@ 0xc8
1001a918:	f005 fbb6 	bl	10020088 <__ssprint_r>
1001a91c:	2800      	cmp	r0, #0
1001a91e:	f47f abba 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001a922:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001a926:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a928:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001a92a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a92e:	f7ff b841 	b.w	100199b4 <_svfprintf_r+0x27c>
1001a932:	46a3      	mov	fp, r4
1001a934:	e59d      	b.n	1001a472 <_svfprintf_r+0xd3a>
1001a936:	46d3      	mov	fp, sl
1001a938:	e59b      	b.n	1001a472 <_svfprintf_r+0xd3a>
1001a93a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001a93c:	3b01      	subs	r3, #1
1001a93e:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
1001a942:	9310      	str	r3, [sp, #64]	@ 0x40
1001a944:	e6fc      	b.n	1001a740 <_svfprintf_r+0x1008>
1001a946:	2901      	cmp	r1, #1
1001a948:	464c      	mov	r4, r9
1001a94a:	f47f aadb 	bne.w	10019f04 <_svfprintf_r+0x7cc>
1001a94e:	e42f      	b.n	1001a1b0 <_svfprintf_r+0xa78>
1001a950:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a952:	9807      	ldr	r0, [sp, #28]
1001a954:	aa32      	add	r2, sp, #200	@ 0xc8
1001a956:	f005 fb97 	bl	10020088 <__ssprint_r>
1001a95a:	2800      	cmp	r0, #0
1001a95c:	f47f ab9b 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001a960:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a962:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a966:	f7ff ba8a 	b.w	10019e7e <_svfprintf_r+0x746>
1001a96a:	af30      	add	r7, sp, #192	@ 0xc0
1001a96c:	2208      	movs	r2, #8
1001a96e:	2100      	movs	r1, #0
1001a970:	4638      	mov	r0, r7
1001a972:	952b      	str	r5, [sp, #172]	@ 0xac
1001a974:	f7fb f9ca 	bl	10015d0c <memset>
1001a978:	f8dd a020 	ldr.w	sl, [sp, #32]
1001a97c:	f1ba 3fff 	cmp.w	sl, #4294967295	@ 0xffffffff
1001a980:	f000 80c8 	beq.w	1001ab14 <_svfprintf_r+0x13dc>
1001a984:	2400      	movs	r4, #0
1001a986:	f8cd 9018 	str.w	r9, [sp, #24]
1001a98a:	46a3      	mov	fp, r4
1001a98c:	f8dd 901c 	ldr.w	r9, [sp, #28]
1001a990:	e00c      	b.n	1001a9ac <_svfprintf_r+0x1274>
1001a992:	a945      	add	r1, sp, #276	@ 0x114
1001a994:	4648      	mov	r0, r9
1001a996:	f003 fbd1 	bl	1001e13c <_wcrtomb_r>
1001a99a:	1c41      	adds	r1, r0, #1
1001a99c:	4458      	add	r0, fp
1001a99e:	f000 838f 	beq.w	1001b0c0 <_svfprintf_r+0x1988>
1001a9a2:	4550      	cmp	r0, sl
1001a9a4:	dc08      	bgt.n	1001a9b8 <_svfprintf_r+0x1280>
1001a9a6:	f000 8442 	beq.w	1001b22e <_svfprintf_r+0x1af6>
1001a9aa:	4683      	mov	fp, r0
1001a9ac:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
1001a9ae:	5912      	ldr	r2, [r2, r4]
1001a9b0:	463b      	mov	r3, r7
1001a9b2:	3404      	adds	r4, #4
1001a9b4:	2a00      	cmp	r2, #0
1001a9b6:	d1ec      	bne.n	1001a992 <_svfprintf_r+0x125a>
1001a9b8:	f8dd 9018 	ldr.w	r9, [sp, #24]
1001a9bc:	f1bb 0f00 	cmp.w	fp, #0
1001a9c0:	f000 80dd 	beq.w	1001ab7e <_svfprintf_r+0x1446>
1001a9c4:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
1001a9c8:	f300 81ba 	bgt.w	1001ad40 <_svfprintf_r+0x1608>
1001a9cc:	2300      	movs	r3, #0
1001a9ce:	930c      	str	r3, [sp, #48]	@ 0x30
1001a9d0:	ad45      	add	r5, sp, #276	@ 0x114
1001a9d2:	2208      	movs	r2, #8
1001a9d4:	2100      	movs	r1, #0
1001a9d6:	4638      	mov	r0, r7
1001a9d8:	f7fb f998 	bl	10015d0c <memset>
1001a9dc:	9807      	ldr	r0, [sp, #28]
1001a9de:	9700      	str	r7, [sp, #0]
1001a9e0:	465b      	mov	r3, fp
1001a9e2:	aa2b      	add	r2, sp, #172	@ 0xac
1001a9e4:	4629      	mov	r1, r5
1001a9e6:	f004 fa29 	bl	1001ee3c <_wcsrtombs_r>
1001a9ea:	4583      	cmp	fp, r0
1001a9ec:	f040 845d 	bne.w	1001b2aa <_svfprintf_r+0x1b72>
1001a9f0:	2300      	movs	r3, #0
1001a9f2:	f805 300b 	strb.w	r3, [r5, fp]
1001a9f6:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
1001a9fa:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001a9fe:	960d      	str	r6, [sp, #52]	@ 0x34
1001aa00:	9308      	str	r3, [sp, #32]
1001aa02:	9106      	str	r1, [sp, #24]
1001aa04:	9314      	str	r3, [sp, #80]	@ 0x50
1001aa06:	9310      	str	r3, [sp, #64]	@ 0x40
1001aa08:	9312      	str	r3, [sp, #72]	@ 0x48
1001aa0a:	f7ff b873 	b.w	10019af4 <_svfprintf_r+0x3bc>
1001aa0e:	46cb      	mov	fp, r9
1001aa10:	e52f      	b.n	1001a472 <_svfprintf_r+0xd3a>
1001aa12:	4a75      	ldr	r2, [pc, #468]	@ (1001abe8 <_svfprintf_r+0x14b0>)
1001aa14:	9215      	str	r2, [sp, #84]	@ 0x54
1001aa16:	3301      	adds	r3, #1
1001aa18:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001aa1a:	f8c8 2000 	str.w	r2, [r8]
1001aa1e:	442c      	add	r4, r5
1001aa20:	2b07      	cmp	r3, #7
1001aa22:	f8c8 5004 	str.w	r5, [r8, #4]
1001aa26:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001aa2a:	f77f a800 	ble.w	10019a2e <_svfprintf_r+0x2f6>
1001aa2e:	f7ff bb68 	b.w	1001a102 <_svfprintf_r+0x9ca>
1001aa32:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001aa34:	9807      	ldr	r0, [sp, #28]
1001aa36:	aa32      	add	r2, sp, #200	@ 0xc8
1001aa38:	f005 fb26 	bl	10020088 <__ssprint_r>
1001aa3c:	2800      	cmp	r0, #0
1001aa3e:	f47f ab2a 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001aa42:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001aa44:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001aa48:	f7fe bfdb 	b.w	10019a02 <_svfprintf_r+0x2ca>
1001aa4c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001aa4e:	aa32      	add	r2, sp, #200	@ 0xc8
1001aa50:	4658      	mov	r0, fp
1001aa52:	f005 fb19 	bl	10020088 <__ssprint_r>
1001aa56:	2800      	cmp	r0, #0
1001aa58:	f47f ad0b 	bne.w	1001a472 <_svfprintf_r+0xd3a>
1001aa5c:	f89a 0000 	ldrb.w	r0, [sl]
1001aa60:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001aa62:	aa35      	add	r2, sp, #212	@ 0xd4
1001aa64:	e68d      	b.n	1001a782 <_svfprintf_r+0x104a>
1001aa66:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001aa68:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001aa6a:	681b      	ldr	r3, [r3, #0]
1001aa6c:	601a      	str	r2, [r3, #0]
1001aa6e:	f7ff b964 	b.w	10019d3a <_svfprintf_r+0x602>
1001aa72:	f8dd 9020 	ldr.w	r9, [sp, #32]
1001aa76:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001aa78:	603b      	str	r3, [r7, #0]
1001aa7a:	3601      	adds	r6, #1
1001aa7c:	4444      	add	r4, r8
1001aa7e:	2e07      	cmp	r6, #7
1001aa80:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001aa84:	f8c7 8004 	str.w	r8, [r7, #4]
1001aa88:	f77f ab7e 	ble.w	1001a188 <_svfprintf_r+0xa50>
1001aa8c:	e486      	b.n	1001a39c <_svfprintf_r+0xc64>
1001aa8e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001aa90:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001aa92:	441c      	add	r4, r3
1001aa94:	e9c8 1300 	strd	r1, r3, [r8]
1001aa98:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001aa9a:	9434      	str	r4, [sp, #208]	@ 0xd0
1001aa9c:	3301      	adds	r3, #1
1001aa9e:	2b07      	cmp	r3, #7
1001aaa0:	9333      	str	r3, [sp, #204]	@ 0xcc
1001aaa2:	f300 8165 	bgt.w	1001ad70 <_svfprintf_r+0x1638>
1001aaa6:	f108 0808 	add.w	r8, r8, #8
1001aaaa:	2a00      	cmp	r2, #0
1001aaac:	f6bf ab1d 	bge.w	1001a0ea <_svfprintf_r+0x9b2>
1001aab0:	4256      	negs	r6, r2
1001aab2:	3210      	adds	r2, #16
1001aab4:	4a4c      	ldr	r2, [pc, #304]	@ (1001abe8 <_svfprintf_r+0x14b0>)
1001aab6:	9215      	str	r2, [sp, #84]	@ 0x54
1001aab8:	f280 82e8 	bge.w	1001b08c <_svfprintf_r+0x1954>
1001aabc:	46aa      	mov	sl, r5
1001aabe:	2710      	movs	r7, #16
1001aac0:	4615      	mov	r5, r2
1001aac2:	e005      	b.n	1001aad0 <_svfprintf_r+0x1398>
1001aac4:	f108 0808 	add.w	r8, r8, #8
1001aac8:	3e10      	subs	r6, #16
1001aaca:	2e10      	cmp	r6, #16
1001aacc:	f340 82dd 	ble.w	1001b08a <_svfprintf_r+0x1952>
1001aad0:	3301      	adds	r3, #1
1001aad2:	3410      	adds	r4, #16
1001aad4:	2b07      	cmp	r3, #7
1001aad6:	e9c8 5700 	strd	r5, r7, [r8]
1001aada:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001aade:	ddf1      	ble.n	1001aac4 <_svfprintf_r+0x138c>
1001aae0:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001aae2:	9807      	ldr	r0, [sp, #28]
1001aae4:	aa32      	add	r2, sp, #200	@ 0xc8
1001aae6:	f005 facf 	bl	10020088 <__ssprint_r>
1001aaea:	2800      	cmp	r0, #0
1001aaec:	f47f aad3 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001aaf0:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001aaf4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001aaf8:	e7e6      	b.n	1001aac8 <_svfprintf_r+0x1390>
1001aafa:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
1001aafe:	bf1c      	itt	ne
1001ab00:	b2db      	uxtbne	r3, r3
1001ab02:	4602      	movne	r2, r0
1001ab04:	e58e      	b.n	1001a624 <_svfprintf_r+0xeec>
1001ab06:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
1001ab0a:	bf1c      	itt	ne
1001ab0c:	b2db      	uxtbne	r3, r3
1001ab0e:	4602      	movne	r2, r0
1001ab10:	f7ff b8de 	b.w	10019cd0 <_svfprintf_r+0x598>
1001ab14:	2300      	movs	r3, #0
1001ab16:	9807      	ldr	r0, [sp, #28]
1001ab18:	9700      	str	r7, [sp, #0]
1001ab1a:	aa2b      	add	r2, sp, #172	@ 0xac
1001ab1c:	4619      	mov	r1, r3
1001ab1e:	f004 f98d 	bl	1001ee3c <_wcsrtombs_r>
1001ab22:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001ab26:	4683      	mov	fp, r0
1001ab28:	f000 82ca 	beq.w	1001b0c0 <_svfprintf_r+0x1988>
1001ab2c:	952b      	str	r5, [sp, #172]	@ 0xac
1001ab2e:	e745      	b.n	1001a9bc <_svfprintf_r+0x1284>
1001ab30:	4645      	mov	r5, r8
1001ab32:	460c      	mov	r4, r1
1001ab34:	4690      	mov	r8, r2
1001ab36:	3301      	adds	r3, #1
1001ab38:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001ab3a:	f8c8 2000 	str.w	r2, [r8]
1001ab3e:	4434      	add	r4, r6
1001ab40:	2b07      	cmp	r3, #7
1001ab42:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001ab46:	f8c8 6004 	str.w	r6, [r8, #4]
1001ab4a:	f300 8104 	bgt.w	1001ad56 <_svfprintf_r+0x161e>
1001ab4e:	f108 0808 	add.w	r8, r8, #8
1001ab52:	f7ff bbb5 	b.w	1001a2c0 <_svfprintf_r+0xb88>
1001ab56:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
1001ab58:	991d      	ldr	r1, [sp, #116]	@ 0x74
1001ab5a:	1aed      	subs	r5, r5, r3
1001ab5c:	461a      	mov	r2, r3
1001ab5e:	4628      	mov	r0, r5
1001ab60:	f7f8 fffe 	bl	10013b60 <strncpy>
1001ab64:	f898 3001 	ldrb.w	r3, [r8, #1]
1001ab68:	b10b      	cbz	r3, 1001ab6e <_svfprintf_r+0x1436>
1001ab6a:	f108 0801 	add.w	r8, r8, #1
1001ab6e:	f04f 0c00 	mov.w	ip, #0
1001ab72:	e685      	b.n	1001a880 <_svfprintf_r+0x1148>
1001ab74:	222d      	movs	r2, #45	@ 0x2d
1001ab76:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001ab7a:	f7fe bfaa 	b.w	10019ad2 <_svfprintf_r+0x39a>
1001ab7e:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001ab82:	960d      	str	r6, [sp, #52]	@ 0x34
1001ab84:	f8cd b018 	str.w	fp, [sp, #24]
1001ab88:	f8cd b020 	str.w	fp, [sp, #32]
1001ab8c:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
1001ab90:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
1001ab94:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
1001ab98:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
1001ab9c:	f7fe bfaa 	b.w	10019af4 <_svfprintf_r+0x3bc>
1001aba0:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001aba2:	9807      	ldr	r0, [sp, #28]
1001aba4:	aa32      	add	r2, sp, #200	@ 0xc8
1001aba6:	f005 fa6f 	bl	10020088 <__ssprint_r>
1001abaa:	2800      	cmp	r0, #0
1001abac:	f47f aa73 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001abb0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001abb2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001abb4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001abb8:	f7ff ba80 	b.w	1001a0bc <_svfprintf_r+0x984>
1001abbc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001abbe:	ebab 060a 	sub.w	r6, fp, sl
1001abc2:	1b5d      	subs	r5, r3, r5
1001abc4:	42ae      	cmp	r6, r5
1001abc6:	bfa8      	it	ge
1001abc8:	462e      	movge	r6, r5
1001abca:	f7ff bbad 	b.w	1001a328 <_svfprintf_r+0xbf0>
1001abce:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001abd0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001abd2:	681b      	ldr	r3, [r3, #0]
1001abd4:	801a      	strh	r2, [r3, #0]
1001abd6:	f7ff b8b0 	b.w	10019d3a <_svfprintf_r+0x602>
1001abda:	f343 12c0 	sbfx	r2, r3, #7, #1
1001abde:	4611      	mov	r1, r2
1001abe0:	b25b      	sxtb	r3, r3
1001abe2:	f7ff b83b 	b.w	10019c5c <_svfprintf_r+0x524>
1001abe6:	bf00      	nop
1001abe8:	1002a66c 	.word	0x1002a66c
1001abec:	9e08      	ldr	r6, [sp, #32]
1001abee:	2302      	movs	r3, #2
1001abf0:	e9cd 3600 	strd	r3, r6, [sp]
1001abf4:	ab30      	add	r3, sp, #192	@ 0xc0
1001abf6:	9304      	str	r3, [sp, #16]
1001abf8:	ab2b      	add	r3, sp, #172	@ 0xac
1001abfa:	9303      	str	r3, [sp, #12]
1001abfc:	ab29      	add	r3, sp, #164	@ 0xa4
1001abfe:	9302      	str	r3, [sp, #8]
1001ac00:	9807      	ldr	r0, [sp, #28]
1001ac02:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
1001ac06:	f004 f9bf 	bl	1001ef88 <_dtoa_r>
1001ac0a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001ac0c:	2b67      	cmp	r3, #103	@ 0x67
1001ac0e:	4605      	mov	r5, r0
1001ac10:	f000 813b 	beq.w	1001ae8a <_svfprintf_r+0x1752>
1001ac14:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001ac16:	2b47      	cmp	r3, #71	@ 0x47
1001ac18:	f000 8137 	beq.w	1001ae8a <_svfprintf_r+0x1752>
1001ac1c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001ac1e:	f023 0720 	bic.w	r7, r3, #32
1001ac22:	2f46      	cmp	r7, #70	@ 0x46
1001ac24:	eb00 0406 	add.w	r4, r0, r6
1001ac28:	d105      	bne.n	1001ac36 <_svfprintf_r+0x14fe>
1001ac2a:	7803      	ldrb	r3, [r0, #0]
1001ac2c:	2b30      	cmp	r3, #48	@ 0x30
1001ac2e:	f000 82f1 	beq.w	1001b214 <_svfprintf_r+0x1adc>
1001ac32:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
1001ac34:	4434      	add	r4, r6
1001ac36:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001ac3a:	2200      	movs	r2, #0
1001ac3c:	2300      	movs	r3, #0
1001ac3e:	f006 f807 	bl	10020c50 <__aeabi_dcmpeq>
1001ac42:	2800      	cmp	r0, #0
1001ac44:	f000 813f 	beq.w	1001aec6 <_svfprintf_r+0x178e>
1001ac48:	4623      	mov	r3, r4
1001ac4a:	1b5b      	subs	r3, r3, r5
1001ac4c:	9313      	str	r3, [sp, #76]	@ 0x4c
1001ac4e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001ac50:	9212      	str	r2, [sp, #72]	@ 0x48
1001ac52:	2f47      	cmp	r7, #71	@ 0x47
1001ac54:	f000 8121 	beq.w	1001ae9a <_svfprintf_r+0x1762>
1001ac58:	2f46      	cmp	r7, #70	@ 0x46
1001ac5a:	f000 81e3 	beq.w	1001b024 <_svfprintf_r+0x18ec>
1001ac5e:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001ac60:	1e53      	subs	r3, r2, #1
1001ac62:	2961      	cmp	r1, #97	@ 0x61
1001ac64:	9329      	str	r3, [sp, #164]	@ 0xa4
1001ac66:	f000 8318 	beq.w	1001b29a <_svfprintf_r+0x1b62>
1001ac6a:	2941      	cmp	r1, #65	@ 0x41
1001ac6c:	f040 8120 	bne.w	1001aeb0 <_svfprintf_r+0x1778>
1001ac70:	2150      	movs	r1, #80	@ 0x50
1001ac72:	2001      	movs	r0, #1
1001ac74:	2b00      	cmp	r3, #0
1001ac76:	bfb6      	itet	lt
1001ac78:	f1c2 0301 	rsblt	r3, r2, #1
1001ac7c:	222b      	movge	r2, #43	@ 0x2b
1001ac7e:	222d      	movlt	r2, #45	@ 0x2d
1001ac80:	2b09      	cmp	r3, #9
1001ac82:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
1001ac86:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
1001ac8a:	f340 8227 	ble.w	1001b0dc <_svfprintf_r+0x19a4>
1001ac8e:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
1001ac92:	4eae      	ldr	r6, [pc, #696]	@ (1001af4c <_svfprintf_r+0x1814>)
1001ac94:	4622      	mov	r2, r4
1001ac96:	4610      	mov	r0, r2
1001ac98:	fba6 1203 	umull	r1, r2, r6, r3
1001ac9c:	08d2      	lsrs	r2, r2, #3
1001ac9e:	eb02 0182 	add.w	r1, r2, r2, lsl #2
1001aca2:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
1001aca6:	3130      	adds	r1, #48	@ 0x30
1001aca8:	f800 1c01 	strb.w	r1, [r0, #-1]
1001acac:	4619      	mov	r1, r3
1001acae:	2963      	cmp	r1, #99	@ 0x63
1001acb0:	4613      	mov	r3, r2
1001acb2:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
1001acb6:	dcee      	bgt.n	1001ac96 <_svfprintf_r+0x155e>
1001acb8:	3330      	adds	r3, #48	@ 0x30
1001acba:	f802 3c01 	strb.w	r3, [r2, #-1]
1001acbe:	1e83      	subs	r3, r0, #2
1001acc0:	42a3      	cmp	r3, r4
1001acc2:	f080 82ef 	bcs.w	1001b2a4 <_svfprintf_r+0x1b6c>
1001acc6:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
1001acca:	f813 1b01 	ldrb.w	r1, [r3], #1
1001acce:	f802 1f01 	strb.w	r1, [r2, #1]!
1001acd2:	42a3      	cmp	r3, r4
1001acd4:	d1f9      	bne.n	1001acca <_svfprintf_r+0x1592>
1001acd6:	ab5e      	add	r3, sp, #376	@ 0x178
1001acd8:	1a18      	subs	r0, r3, r0
1001acda:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
1001acde:	931c      	str	r3, [sp, #112]	@ 0x70
1001ace0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001ace2:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
1001ace4:	2b01      	cmp	r3, #1
1001ace6:	eb03 0b02 	add.w	fp, r3, r2
1001acea:	f340 822a 	ble.w	1001b142 <_svfprintf_r+0x1a0a>
1001acee:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001acf0:	449b      	add	fp, r3
1001acf2:	9b06      	ldr	r3, [sp, #24]
1001acf4:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
1001acf8:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
1001acfc:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
1001ad00:	2300      	movs	r3, #0
1001ad02:	9314      	str	r3, [sp, #80]	@ 0x50
1001ad04:	9206      	str	r2, [sp, #24]
1001ad06:	9310      	str	r3, [sp, #64]	@ 0x40
1001ad08:	9312      	str	r3, [sp, #72]	@ 0x48
1001ad0a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
1001ad0c:	2b00      	cmp	r3, #0
1001ad0e:	f040 80d3 	bne.w	1001aeb8 <_svfprintf_r+0x1780>
1001ad12:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001ad16:	9308      	str	r3, [sp, #32]
1001ad18:	f7fe beec 	b.w	10019af4 <_svfprintf_r+0x3bc>
1001ad1c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
1001ad1e:	aa32      	add	r2, sp, #200	@ 0xc8
1001ad20:	4621      	mov	r1, r4
1001ad22:	4658      	mov	r0, fp
1001ad24:	f005 f9b0 	bl	10020088 <__ssprint_r>
1001ad28:	89a3      	ldrh	r3, [r4, #12]
1001ad2a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
1001ad2e:	f7fe be0c 	b.w	1001994a <_svfprintf_r+0x212>
1001ad32:	4628      	mov	r0, r5
1001ad34:	960d      	str	r6, [sp, #52]	@ 0x34
1001ad36:	f7fb fe23 	bl	10016980 <strlen>
1001ad3a:	4683      	mov	fp, r0
1001ad3c:	f7fe bf71 	b.w	10019c22 <_svfprintf_r+0x4ea>
1001ad40:	9807      	ldr	r0, [sp, #28]
1001ad42:	f10b 0101 	add.w	r1, fp, #1
1001ad46:	f7fa fc73 	bl	10015630 <_malloc_r>
1001ad4a:	4605      	mov	r5, r0
1001ad4c:	2800      	cmp	r0, #0
1001ad4e:	f000 81b7 	beq.w	1001b0c0 <_svfprintf_r+0x1988>
1001ad52:	900c      	str	r0, [sp, #48]	@ 0x30
1001ad54:	e63d      	b.n	1001a9d2 <_svfprintf_r+0x129a>
1001ad56:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001ad58:	9807      	ldr	r0, [sp, #28]
1001ad5a:	aa32      	add	r2, sp, #200	@ 0xc8
1001ad5c:	f005 f994 	bl	10020088 <__ssprint_r>
1001ad60:	2800      	cmp	r0, #0
1001ad62:	f47f a998 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001ad66:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001ad68:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001ad6c:	f7ff baa8 	b.w	1001a2c0 <_svfprintf_r+0xb88>
1001ad70:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001ad72:	9807      	ldr	r0, [sp, #28]
1001ad74:	aa32      	add	r2, sp, #200	@ 0xc8
1001ad76:	f005 f987 	bl	10020088 <__ssprint_r>
1001ad7a:	2800      	cmp	r0, #0
1001ad7c:	f47f a98b 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001ad80:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001ad84:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001ad86:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001ad8a:	e68e      	b.n	1001aaaa <_svfprintf_r+0x1372>
1001ad8c:	2306      	movs	r3, #6
1001ad8e:	9308      	str	r3, [sp, #32]
1001ad90:	f7ff bbef 	b.w	1001a572 <_svfprintf_r+0xe3a>
1001ad94:	9b08      	ldr	r3, [sp, #32]
1001ad96:	1c5e      	adds	r6, r3, #1
1001ad98:	2302      	movs	r3, #2
1001ad9a:	e729      	b.n	1001abf0 <_svfprintf_r+0x14b8>
1001ad9c:	9e08      	ldr	r6, [sp, #32]
1001ad9e:	2303      	movs	r3, #3
1001ada0:	e726      	b.n	1001abf0 <_svfprintf_r+0x14b8>
1001ada2:	aa29      	add	r2, sp, #164	@ 0xa4
1001ada4:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001ada8:	f005 f868 	bl	1001fe7c <frexp>
1001adac:	2200      	movs	r2, #0
1001adae:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
1001adb2:	f005 fce5 	bl	10020780 <__aeabi_dmul>
1001adb6:	4602      	mov	r2, r0
1001adb8:	460b      	mov	r3, r1
1001adba:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
1001adbe:	2200      	movs	r2, #0
1001adc0:	2300      	movs	r3, #0
1001adc2:	f005 ff45 	bl	10020c50 <__aeabi_dcmpeq>
1001adc6:	2800      	cmp	r0, #0
1001adc8:	f040 81c0 	bne.w	1001b14c <_svfprintf_r+0x1a14>
1001adcc:	4b60      	ldr	r3, [pc, #384]	@ (1001af50 <_svfprintf_r+0x1818>)
1001adce:	9312      	str	r3, [sp, #72]	@ 0x48
1001add0:	9b08      	ldr	r3, [sp, #32]
1001add2:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
1001add6:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
1001adda:	462e      	mov	r6, r5
1001addc:	9514      	str	r5, [sp, #80]	@ 0x50
1001adde:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001ade2:	464d      	mov	r5, r9
1001ade4:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
1001ade8:	e005      	b.n	1001adf6 <_svfprintf_r+0x16be>
1001adea:	2200      	movs	r2, #0
1001adec:	2300      	movs	r3, #0
1001adee:	f005 ff2f 	bl	10020c50 <__aeabi_dcmpeq>
1001adf2:	b9f0      	cbnz	r0, 1001ae32 <_svfprintf_r+0x16fa>
1001adf4:	463d      	mov	r5, r7
1001adf6:	4b57      	ldr	r3, [pc, #348]	@ (1001af54 <_svfprintf_r+0x181c>)
1001adf8:	2200      	movs	r2, #0
1001adfa:	4640      	mov	r0, r8
1001adfc:	4649      	mov	r1, r9
1001adfe:	f005 fcbf 	bl	10020780 <__aeabi_dmul>
1001ae02:	4689      	mov	r9, r1
1001ae04:	4680      	mov	r8, r0
1001ae06:	f005 ff6b 	bl	10020ce0 <__aeabi_d2iz>
1001ae0a:	4604      	mov	r4, r0
1001ae0c:	f005 fc4e 	bl	100206ac <__aeabi_i2d>
1001ae10:	4602      	mov	r2, r0
1001ae12:	460b      	mov	r3, r1
1001ae14:	4640      	mov	r0, r8
1001ae16:	4649      	mov	r1, r9
1001ae18:	f005 fafa 	bl	10020410 <__aeabi_dsub>
1001ae1c:	f81b 3004 	ldrb.w	r3, [fp, r4]
1001ae20:	1c6a      	adds	r2, r5, #1
1001ae22:	46b2      	mov	sl, r6
1001ae24:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
1001ae28:	f806 3b01 	strb.w	r3, [r6], #1
1001ae2c:	4680      	mov	r8, r0
1001ae2e:	4689      	mov	r9, r1
1001ae30:	d1db      	bne.n	1001adea <_svfprintf_r+0x16b2>
1001ae32:	46cb      	mov	fp, r9
1001ae34:	4657      	mov	r7, sl
1001ae36:	46c2      	mov	sl, r8
1001ae38:	4b47      	ldr	r3, [pc, #284]	@ (1001af58 <_svfprintf_r+0x1820>)
1001ae3a:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
1001ae3e:	2200      	movs	r2, #0
1001ae40:	4650      	mov	r0, sl
1001ae42:	4659      	mov	r1, fp
1001ae44:	46a9      	mov	r9, r5
1001ae46:	9d14      	ldr	r5, [sp, #80]	@ 0x50
1001ae48:	f005 ff2a 	bl	10020ca0 <__aeabi_dcmpgt>
1001ae4c:	2800      	cmp	r0, #0
1001ae4e:	f040 8153 	bne.w	1001b0f8 <_svfprintf_r+0x19c0>
1001ae52:	4b41      	ldr	r3, [pc, #260]	@ (1001af58 <_svfprintf_r+0x1820>)
1001ae54:	4650      	mov	r0, sl
1001ae56:	4659      	mov	r1, fp
1001ae58:	2200      	movs	r2, #0
1001ae5a:	f005 fef9 	bl	10020c50 <__aeabi_dcmpeq>
1001ae5e:	b110      	cbz	r0, 1001ae66 <_svfprintf_r+0x172e>
1001ae60:	07e3      	lsls	r3, r4, #31
1001ae62:	f100 8149 	bmi.w	1001b0f8 <_svfprintf_r+0x19c0>
1001ae66:	f1b9 0f00 	cmp.w	r9, #0
1001ae6a:	f2c0 815f 	blt.w	1001b12c <_svfprintf_r+0x19f4>
1001ae6e:	f109 0301 	add.w	r3, r9, #1
1001ae72:	4433      	add	r3, r6
1001ae74:	2230      	movs	r2, #48	@ 0x30
1001ae76:	f806 2b01 	strb.w	r2, [r6], #1
1001ae7a:	42b3      	cmp	r3, r6
1001ae7c:	d1fb      	bne.n	1001ae76 <_svfprintf_r+0x173e>
1001ae7e:	1b5b      	subs	r3, r3, r5
1001ae80:	9313      	str	r3, [sp, #76]	@ 0x4c
1001ae82:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001ae84:	f023 0720 	bic.w	r7, r3, #32
1001ae88:	e6e1      	b.n	1001ac4e <_svfprintf_r+0x1516>
1001ae8a:	9b06      	ldr	r3, [sp, #24]
1001ae8c:	07df      	lsls	r7, r3, #31
1001ae8e:	f100 80f9 	bmi.w	1001b084 <_svfprintf_r+0x194c>
1001ae92:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001ae94:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001ae96:	1b5b      	subs	r3, r3, r5
1001ae98:	9313      	str	r3, [sp, #76]	@ 0x4c
1001ae9a:	1cd3      	adds	r3, r2, #3
1001ae9c:	9212      	str	r2, [sp, #72]	@ 0x48
1001ae9e:	db02      	blt.n	1001aea6 <_svfprintf_r+0x176e>
1001aea0:	9b08      	ldr	r3, [sp, #32]
1001aea2:	4293      	cmp	r3, r2
1001aea4:	da1b      	bge.n	1001aede <_svfprintf_r+0x17a6>
1001aea6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001aea8:	3b02      	subs	r3, #2
1001aeaa:	930e      	str	r3, [sp, #56]	@ 0x38
1001aeac:	1e53      	subs	r3, r2, #1
1001aeae:	9329      	str	r3, [sp, #164]	@ 0xa4
1001aeb0:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
1001aeb4:	2000      	movs	r0, #0
1001aeb6:	e6dd      	b.n	1001ac74 <_svfprintf_r+0x153c>
1001aeb8:	222d      	movs	r2, #45	@ 0x2d
1001aeba:	2300      	movs	r3, #0
1001aebc:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001aec0:	9308      	str	r3, [sp, #32]
1001aec2:	f7fe be1a 	b.w	10019afa <_svfprintf_r+0x3c2>
1001aec6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001aec8:	42a3      	cmp	r3, r4
1001aeca:	f4bf aebe 	bcs.w	1001ac4a <_svfprintf_r+0x1512>
1001aece:	2130      	movs	r1, #48	@ 0x30
1001aed0:	1c5a      	adds	r2, r3, #1
1001aed2:	9230      	str	r2, [sp, #192]	@ 0xc0
1001aed4:	7019      	strb	r1, [r3, #0]
1001aed6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001aed8:	429c      	cmp	r4, r3
1001aeda:	d8f9      	bhi.n	1001aed0 <_svfprintf_r+0x1798>
1001aedc:	e6b5      	b.n	1001ac4a <_svfprintf_r+0x1512>
1001aede:	9913      	ldr	r1, [sp, #76]	@ 0x4c
1001aee0:	428a      	cmp	r2, r1
1001aee2:	f2c0 80c4 	blt.w	1001b06e <_svfprintf_r+0x1936>
1001aee6:	9b06      	ldr	r3, [sp, #24]
1001aee8:	07dc      	lsls	r4, r3, #31
1001aeea:	f140 8184 	bpl.w	1001b1f6 <_svfprintf_r+0x1abe>
1001aeee:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001aef0:	eb02 0b03 	add.w	fp, r2, r3
1001aef4:	9b06      	ldr	r3, [sp, #24]
1001aef6:	0558      	lsls	r0, r3, #21
1001aef8:	d502      	bpl.n	1001af00 <_svfprintf_r+0x17c8>
1001aefa:	2a00      	cmp	r2, #0
1001aefc:	f300 814d 	bgt.w	1001b19a <_svfprintf_r+0x1a62>
1001af00:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001af04:	9306      	str	r3, [sp, #24]
1001af06:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001af0a:	2367      	movs	r3, #103	@ 0x67
1001af0c:	930e      	str	r3, [sp, #56]	@ 0x38
1001af0e:	2300      	movs	r3, #0
1001af10:	9314      	str	r3, [sp, #80]	@ 0x50
1001af12:	9310      	str	r3, [sp, #64]	@ 0x40
1001af14:	e6f9      	b.n	1001ad0a <_svfprintf_r+0x15d2>
1001af16:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001af18:	aa32      	add	r2, sp, #200	@ 0xc8
1001af1a:	4658      	mov	r0, fp
1001af1c:	f005 f8b4 	bl	10020088 <__ssprint_r>
1001af20:	2800      	cmp	r0, #0
1001af22:	f47f aaa6 	bne.w	1001a472 <_svfprintf_r+0xd3a>
1001af26:	f89a 0000 	ldrb.w	r0, [sl]
1001af2a:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001af2c:	aa35      	add	r2, sp, #212	@ 0xd4
1001af2e:	4404      	add	r4, r0
1001af30:	e42e      	b.n	1001a790 <_svfprintf_r+0x1058>
1001af32:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001af34:	9807      	ldr	r0, [sp, #28]
1001af36:	aa32      	add	r2, sp, #200	@ 0xc8
1001af38:	f005 f8a6 	bl	10020088 <__ssprint_r>
1001af3c:	2800      	cmp	r0, #0
1001af3e:	f47f a8aa 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001af42:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001af44:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001af48:	f7ff b9b3 	b.w	1001a2b2 <_svfprintf_r+0xb7a>
1001af4c:	cccccccd 	.word	0xcccccccd
1001af50:	1002a64c 	.word	0x1002a64c
1001af54:	40300000 	.word	0x40300000
1001af58:	3fe00000 	.word	0x3fe00000
1001af5c:	2378      	movs	r3, #120	@ 0x78
1001af5e:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
1001af62:	2330      	movs	r3, #48	@ 0x30
1001af64:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
1001af68:	f049 0302 	orr.w	r3, r9, #2
1001af6c:	9306      	str	r3, [sp, #24]
1001af6e:	9b08      	ldr	r3, [sp, #32]
1001af70:	2b63      	cmp	r3, #99	@ 0x63
1001af72:	f300 80dd 	bgt.w	1001b130 <_svfprintf_r+0x19f8>
1001af76:	2300      	movs	r3, #0
1001af78:	930c      	str	r3, [sp, #48]	@ 0x30
1001af7a:	ad45      	add	r5, sp, #276	@ 0x114
1001af7c:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
1001af80:	9315      	str	r3, [sp, #84]	@ 0x54
1001af82:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001af84:	2b00      	cmp	r3, #0
1001af86:	db22      	blt.n	1001afce <_svfprintf_r+0x1896>
1001af88:	2300      	movs	r3, #0
1001af8a:	931f      	str	r3, [sp, #124]	@ 0x7c
1001af8c:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
1001af90:	e9cd 3424 	strd	r3, r4, [sp, #144]	@ 0x90
1001af94:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001af96:	2b61      	cmp	r3, #97	@ 0x61
1001af98:	f47f aafb 	bne.w	1001a592 <_svfprintf_r+0xe5a>
1001af9c:	aa29      	add	r2, sp, #164	@ 0xa4
1001af9e:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001afa2:	f004 ff6b 	bl	1001fe7c <frexp>
1001afa6:	2200      	movs	r2, #0
1001afa8:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
1001afac:	f005 fbe8 	bl	10020780 <__aeabi_dmul>
1001afb0:	4602      	mov	r2, r0
1001afb2:	460b      	mov	r3, r1
1001afb4:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
1001afb8:	2200      	movs	r2, #0
1001afba:	2300      	movs	r3, #0
1001afbc:	f005 fe48 	bl	10020c50 <__aeabi_dcmpeq>
1001afc0:	2800      	cmp	r0, #0
1001afc2:	f040 80c3 	bne.w	1001b14c <_svfprintf_r+0x1a14>
1001afc6:	4ba9      	ldr	r3, [pc, #676]	@ (1001b26c <_svfprintf_r+0x1b34>)
1001afc8:	9312      	str	r3, [sp, #72]	@ 0x48
1001afca:	e701      	b.n	1001add0 <_svfprintf_r+0x1698>
1001afcc:	930c      	str	r3, [sp, #48]	@ 0x30
1001afce:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
1001afd2:	9324      	str	r3, [sp, #144]	@ 0x90
1001afd4:	f104 4300 	add.w	r3, r4, #2147483648	@ 0x80000000
1001afd8:	9325      	str	r3, [sp, #148]	@ 0x94
1001afda:	232d      	movs	r3, #45	@ 0x2d
1001afdc:	931f      	str	r3, [sp, #124]	@ 0x7c
1001afde:	e7d9      	b.n	1001af94 <_svfprintf_r+0x185c>
1001afe0:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001afe2:	9807      	ldr	r0, [sp, #28]
1001afe4:	aa32      	add	r2, sp, #200	@ 0xc8
1001afe6:	f005 f84f 	bl	10020088 <__ssprint_r>
1001afea:	2800      	cmp	r0, #0
1001afec:	f47f a853 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001aff0:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001aff2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001aff4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001aff8:	f7ff b97f 	b.w	1001a2fa <_svfprintf_r+0xbc2>
1001affc:	499c      	ldr	r1, [pc, #624]	@ (1001b270 <_svfprintf_r+0x1b38>)
1001affe:	9115      	str	r1, [sp, #84]	@ 0x54
1001b000:	f7fe bdaf 	b.w	10019b62 <_svfprintf_r+0x42a>
1001b004:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b006:	9807      	ldr	r0, [sp, #28]
1001b008:	aa32      	add	r2, sp, #200	@ 0xc8
1001b00a:	f005 f83d 	bl	10020088 <__ssprint_r>
1001b00e:	2800      	cmp	r0, #0
1001b010:	f47f a841 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001b014:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001b016:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001b018:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b01a:	1b5d      	subs	r5, r3, r5
1001b01c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b020:	f7ff b982 	b.w	1001a328 <_svfprintf_r+0xbf0>
1001b024:	9b06      	ldr	r3, [sp, #24]
1001b026:	9912      	ldr	r1, [sp, #72]	@ 0x48
1001b028:	9a08      	ldr	r2, [sp, #32]
1001b02a:	f003 0301 	and.w	r3, r3, #1
1001b02e:	2900      	cmp	r1, #0
1001b030:	ea43 0302 	orr.w	r3, r3, r2
1001b034:	f340 810f 	ble.w	1001b256 <_svfprintf_r+0x1b1e>
1001b038:	2b00      	cmp	r3, #0
1001b03a:	f040 80d5 	bne.w	1001b1e8 <_svfprintf_r+0x1ab0>
1001b03e:	2366      	movs	r3, #102	@ 0x66
1001b040:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001b044:	930e      	str	r3, [sp, #56]	@ 0x38
1001b046:	9b06      	ldr	r3, [sp, #24]
1001b048:	055a      	lsls	r2, r3, #21
1001b04a:	f100 80a8 	bmi.w	1001b19e <_svfprintf_r+0x1a66>
1001b04e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001b052:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001b056:	9306      	str	r3, [sp, #24]
1001b058:	e759      	b.n	1001af0e <_svfprintf_r+0x17d6>
1001b05a:	2358      	movs	r3, #88	@ 0x58
1001b05c:	e77f      	b.n	1001af5e <_svfprintf_r+0x1826>
1001b05e:	2200      	movs	r2, #0
1001b060:	9208      	str	r2, [sp, #32]
1001b062:	f7fe bbc1 	b.w	100197e8 <_svfprintf_r+0xb0>
1001b066:	4a82      	ldr	r2, [pc, #520]	@ (1001b270 <_svfprintf_r+0x1b38>)
1001b068:	9215      	str	r2, [sp, #84]	@ 0x54
1001b06a:	f7ff b8ed 	b.w	1001a248 <_svfprintf_r+0xb10>
1001b06e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001b070:	9a18      	ldr	r2, [sp, #96]	@ 0x60
1001b072:	eb03 0b02 	add.w	fp, r3, r2
1001b076:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001b078:	2b00      	cmp	r3, #0
1001b07a:	f340 8083 	ble.w	1001b184 <_svfprintf_r+0x1a4c>
1001b07e:	2367      	movs	r3, #103	@ 0x67
1001b080:	930e      	str	r3, [sp, #56]	@ 0x38
1001b082:	e7e0      	b.n	1001b046 <_svfprintf_r+0x190e>
1001b084:	19ac      	adds	r4, r5, r6
1001b086:	2747      	movs	r7, #71	@ 0x47
1001b088:	e5d5      	b.n	1001ac36 <_svfprintf_r+0x14fe>
1001b08a:	4655      	mov	r5, sl
1001b08c:	3301      	adds	r3, #1
1001b08e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001b090:	f8c8 2000 	str.w	r2, [r8]
1001b094:	4434      	add	r4, r6
1001b096:	2b07      	cmp	r3, #7
1001b098:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001b09c:	f8c8 6004 	str.w	r6, [r8, #4]
1001b0a0:	f77f a821 	ble.w	1001a0e6 <_svfprintf_r+0x9ae>
1001b0a4:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b0a6:	9807      	ldr	r0, [sp, #28]
1001b0a8:	aa32      	add	r2, sp, #200	@ 0xc8
1001b0aa:	f004 ffed 	bl	10020088 <__ssprint_r>
1001b0ae:	2800      	cmp	r0, #0
1001b0b0:	f47e aff1 	bne.w	1001a096 <_svfprintf_r+0x95e>
1001b0b4:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001b0b8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b0bc:	f7ff b815 	b.w	1001a0ea <_svfprintf_r+0x9b2>
1001b0c0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001b0c2:	8993      	ldrh	r3, [r2, #12]
1001b0c4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001b0c8:	8193      	strh	r3, [r2, #12]
1001b0ca:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001b0ce:	930a      	str	r3, [sp, #40]	@ 0x28
1001b0d0:	f7fe bc3e 	b.w	10019950 <_svfprintf_r+0x218>
1001b0d4:	4a67      	ldr	r2, [pc, #412]	@ (1001b274 <_svfprintf_r+0x1b3c>)
1001b0d6:	9215      	str	r2, [sp, #84]	@ 0x54
1001b0d8:	f7fe bf82 	b.w	10019fe0 <_svfprintf_r+0x8a8>
1001b0dc:	2800      	cmp	r0, #0
1001b0de:	d13f      	bne.n	1001b160 <_svfprintf_r+0x1a28>
1001b0e0:	2230      	movs	r2, #48	@ 0x30
1001b0e2:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
1001b0e6:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
1001b0ea:	3330      	adds	r3, #48	@ 0x30
1001b0ec:	f802 3b01 	strb.w	r3, [r2], #1
1001b0f0:	ab2c      	add	r3, sp, #176	@ 0xb0
1001b0f2:	1ad3      	subs	r3, r2, r3
1001b0f4:	931c      	str	r3, [sp, #112]	@ 0x70
1001b0f6:	e5f3      	b.n	1001ace0 <_svfprintf_r+0x15a8>
1001b0f8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001b0fa:	9730      	str	r7, [sp, #192]	@ 0xc0
1001b0fc:	7bd9      	ldrb	r1, [r3, #15]
1001b0fe:	f816 2c01 	ldrb.w	r2, [r6, #-1]
1001b102:	428a      	cmp	r2, r1
1001b104:	4633      	mov	r3, r6
1001b106:	d109      	bne.n	1001b11c <_svfprintf_r+0x19e4>
1001b108:	2030      	movs	r0, #48	@ 0x30
1001b10a:	f803 0c01 	strb.w	r0, [r3, #-1]
1001b10e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001b110:	1e5a      	subs	r2, r3, #1
1001b112:	9230      	str	r2, [sp, #192]	@ 0xc0
1001b114:	f813 2c01 	ldrb.w	r2, [r3, #-1]
1001b118:	4291      	cmp	r1, r2
1001b11a:	d0f6      	beq.n	1001b10a <_svfprintf_r+0x19d2>
1001b11c:	2a39      	cmp	r2, #57	@ 0x39
1001b11e:	bf0b      	itete	eq
1001b120:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
1001b122:	3201      	addne	r2, #1
1001b124:	7a92      	ldrbeq	r2, [r2, #10]
1001b126:	b2d2      	uxtbne	r2, r2
1001b128:	f803 2c01 	strb.w	r2, [r3, #-1]
1001b12c:	4633      	mov	r3, r6
1001b12e:	e6a6      	b.n	1001ae7e <_svfprintf_r+0x1746>
1001b130:	9807      	ldr	r0, [sp, #28]
1001b132:	1c59      	adds	r1, r3, #1
1001b134:	f7fa fa7c 	bl	10015630 <_malloc_r>
1001b138:	4605      	mov	r5, r0
1001b13a:	2800      	cmp	r0, #0
1001b13c:	d0c0      	beq.n	1001b0c0 <_svfprintf_r+0x1988>
1001b13e:	900c      	str	r0, [sp, #48]	@ 0x30
1001b140:	e71c      	b.n	1001af7c <_svfprintf_r+0x1844>
1001b142:	9b06      	ldr	r3, [sp, #24]
1001b144:	07de      	lsls	r6, r3, #31
1001b146:	f57f add4 	bpl.w	1001acf2 <_svfprintf_r+0x15ba>
1001b14a:	e5d0      	b.n	1001acee <_svfprintf_r+0x15b6>
1001b14c:	4b4a      	ldr	r3, [pc, #296]	@ (1001b278 <_svfprintf_r+0x1b40>)
1001b14e:	4a47      	ldr	r2, [pc, #284]	@ (1001b26c <_svfprintf_r+0x1b34>)
1001b150:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001b152:	2961      	cmp	r1, #97	@ 0x61
1001b154:	bf18      	it	ne
1001b156:	461a      	movne	r2, r3
1001b158:	2301      	movs	r3, #1
1001b15a:	9212      	str	r2, [sp, #72]	@ 0x48
1001b15c:	9329      	str	r3, [sp, #164]	@ 0xa4
1001b15e:	e637      	b.n	1001add0 <_svfprintf_r+0x1698>
1001b160:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
1001b164:	e7c1      	b.n	1001b0ea <_svfprintf_r+0x19b2>
1001b166:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001b168:	4d44      	ldr	r5, [pc, #272]	@ (1001b27c <_svfprintf_r+0x1b44>)
1001b16a:	2b00      	cmp	r3, #0
1001b16c:	bfb4      	ite	lt
1001b16e:	222d      	movlt	r2, #45	@ 0x2d
1001b170:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
1001b174:	4b42      	ldr	r3, [pc, #264]	@ (1001b280 <_svfprintf_r+0x1b48>)
1001b176:	bfb8      	it	lt
1001b178:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
1001b17c:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
1001b180:	f7fe bcab 	b.w	10019ada <_svfprintf_r+0x3a2>
1001b184:	f1c3 0301 	rsb	r3, r3, #1
1001b188:	449b      	add	fp, r3
1001b18a:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001b18e:	9306      	str	r3, [sp, #24]
1001b190:	2367      	movs	r3, #103	@ 0x67
1001b192:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001b196:	930e      	str	r3, [sp, #56]	@ 0x38
1001b198:	e6b9      	b.n	1001af0e <_svfprintf_r+0x17d6>
1001b19a:	2367      	movs	r3, #103	@ 0x67
1001b19c:	930e      	str	r3, [sp, #56]	@ 0x38
1001b19e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
1001b1a0:	780b      	ldrb	r3, [r1, #0]
1001b1a2:	2bff      	cmp	r3, #255	@ 0xff
1001b1a4:	f000 808e 	beq.w	1001b2c4 <_svfprintf_r+0x1b8c>
1001b1a8:	2400      	movs	r4, #0
1001b1aa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
1001b1ac:	4620      	mov	r0, r4
1001b1ae:	e003      	b.n	1001b1b8 <_svfprintf_r+0x1a80>
1001b1b0:	3001      	adds	r0, #1
1001b1b2:	3101      	adds	r1, #1
1001b1b4:	2bff      	cmp	r3, #255	@ 0xff
1001b1b6:	d008      	beq.n	1001b1ca <_svfprintf_r+0x1a92>
1001b1b8:	4293      	cmp	r3, r2
1001b1ba:	da06      	bge.n	1001b1ca <_svfprintf_r+0x1a92>
1001b1bc:	1ad2      	subs	r2, r2, r3
1001b1be:	784b      	ldrb	r3, [r1, #1]
1001b1c0:	2b00      	cmp	r3, #0
1001b1c2:	d1f5      	bne.n	1001b1b0 <_svfprintf_r+0x1a78>
1001b1c4:	780b      	ldrb	r3, [r1, #0]
1001b1c6:	3401      	adds	r4, #1
1001b1c8:	e7f4      	b.n	1001b1b4 <_svfprintf_r+0x1a7c>
1001b1ca:	911b      	str	r1, [sp, #108]	@ 0x6c
1001b1cc:	9010      	str	r0, [sp, #64]	@ 0x40
1001b1ce:	9414      	str	r4, [sp, #80]	@ 0x50
1001b1d0:	9212      	str	r2, [sp, #72]	@ 0x48
1001b1d2:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
1001b1d6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
1001b1d8:	4413      	add	r3, r2
1001b1da:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
1001b1dc:	fb02 bb03 	mla	fp, r2, r3, fp
1001b1e0:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001b1e4:	9306      	str	r3, [sp, #24]
1001b1e6:	e590      	b.n	1001ad0a <_svfprintf_r+0x15d2>
1001b1e8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001b1ea:	18cf      	adds	r7, r1, r3
1001b1ec:	443a      	add	r2, r7
1001b1ee:	2366      	movs	r3, #102	@ 0x66
1001b1f0:	4693      	mov	fp, r2
1001b1f2:	930e      	str	r3, [sp, #56]	@ 0x38
1001b1f4:	e727      	b.n	1001b046 <_svfprintf_r+0x190e>
1001b1f6:	4693      	mov	fp, r2
1001b1f8:	e67c      	b.n	1001aef4 <_svfprintf_r+0x17bc>
1001b1fa:	9b08      	ldr	r3, [sp, #32]
1001b1fc:	9306      	str	r3, [sp, #24]
1001b1fe:	469b      	mov	fp, r3
1001b200:	2373      	movs	r3, #115	@ 0x73
1001b202:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001b206:	960d      	str	r6, [sp, #52]	@ 0x34
1001b208:	9008      	str	r0, [sp, #32]
1001b20a:	9014      	str	r0, [sp, #80]	@ 0x50
1001b20c:	9010      	str	r0, [sp, #64]	@ 0x40
1001b20e:	930e      	str	r3, [sp, #56]	@ 0x38
1001b210:	f7fe bc70 	b.w	10019af4 <_svfprintf_r+0x3bc>
1001b214:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001b218:	2200      	movs	r2, #0
1001b21a:	2300      	movs	r3, #0
1001b21c:	f005 fd18 	bl	10020c50 <__aeabi_dcmpeq>
1001b220:	2800      	cmp	r0, #0
1001b222:	f47f ad06 	bne.w	1001ac32 <_svfprintf_r+0x14fa>
1001b226:	f1c6 0601 	rsb	r6, r6, #1
1001b22a:	9629      	str	r6, [sp, #164]	@ 0xa4
1001b22c:	e502      	b.n	1001ac34 <_svfprintf_r+0x14fc>
1001b22e:	f8dd 9018 	ldr.w	r9, [sp, #24]
1001b232:	f8dd b020 	ldr.w	fp, [sp, #32]
1001b236:	f7ff bbc1 	b.w	1001a9bc <_svfprintf_r+0x1284>
1001b23a:	4e0e      	ldr	r6, [pc, #56]	@ (1001b274 <_svfprintf_r+0x1b3c>)
1001b23c:	f7ff bae3 	b.w	1001a806 <_svfprintf_r+0x10ce>
1001b240:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001b242:	7863      	ldrb	r3, [r4, #1]
1001b244:	460c      	mov	r4, r1
1001b246:	f852 1b04 	ldr.w	r1, [r2], #4
1001b24a:	920d      	str	r2, [sp, #52]	@ 0x34
1001b24c:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
1001b250:	9108      	str	r1, [sp, #32]
1001b252:	f7fe bac8 	b.w	100197e6 <_svfprintf_r+0xae>
1001b256:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001b25a:	b99b      	cbnz	r3, 1001b284 <_svfprintf_r+0x1b4c>
1001b25c:	f04f 0b01 	mov.w	fp, #1
1001b260:	2366      	movs	r3, #102	@ 0x66
1001b262:	f8cd b018 	str.w	fp, [sp, #24]
1001b266:	930e      	str	r3, [sp, #56]	@ 0x38
1001b268:	e651      	b.n	1001af0e <_svfprintf_r+0x17d6>
1001b26a:	bf00      	nop
1001b26c:	1002a638 	.word	0x1002a638
1001b270:	1002a67c 	.word	0x1002a67c
1001b274:	1002a66c 	.word	0x1002a66c
1001b278:	1002a64c 	.word	0x1002a64c
1001b27c:	1002a630 	.word	0x1002a630
1001b280:	1002a634 	.word	0x1002a634
1001b284:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001b286:	f8dd b020 	ldr.w	fp, [sp, #32]
1001b28a:	1c5f      	adds	r7, r3, #1
1001b28c:	44bb      	add	fp, r7
1001b28e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001b292:	9306      	str	r3, [sp, #24]
1001b294:	2366      	movs	r3, #102	@ 0x66
1001b296:	930e      	str	r3, [sp, #56]	@ 0x38
1001b298:	e639      	b.n	1001af0e <_svfprintf_r+0x17d6>
1001b29a:	2170      	movs	r1, #112	@ 0x70
1001b29c:	e4e9      	b.n	1001ac72 <_svfprintf_r+0x153a>
1001b29e:	4a0b      	ldr	r2, [pc, #44]	@ (1001b2cc <_svfprintf_r+0x1b94>)
1001b2a0:	9215      	str	r2, [sp, #84]	@ 0x54
1001b2a2:	e448      	b.n	1001ab36 <_svfprintf_r+0x13fe>
1001b2a4:	2302      	movs	r3, #2
1001b2a6:	931c      	str	r3, [sp, #112]	@ 0x70
1001b2a8:	e51a      	b.n	1001ace0 <_svfprintf_r+0x15a8>
1001b2aa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001b2ac:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001b2b0:	8993      	ldrh	r3, [r2, #12]
1001b2b2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001b2b6:	8193      	strh	r3, [r2, #12]
1001b2b8:	f7ff b8db 	b.w	1001a472 <_svfprintf_r+0xd3a>
1001b2bc:	230c      	movs	r3, #12
1001b2be:	f8cb 3000 	str.w	r3, [fp]
1001b2c2:	e702      	b.n	1001b0ca <_svfprintf_r+0x1992>
1001b2c4:	2300      	movs	r3, #0
1001b2c6:	9314      	str	r3, [sp, #80]	@ 0x50
1001b2c8:	9310      	str	r3, [sp, #64]	@ 0x40
1001b2ca:	e782      	b.n	1001b1d2 <_svfprintf_r+0x1a9a>
1001b2cc:	1002a66c 	.word	0x1002a66c

1001b2d0 <_vfprintf_r>:
1001b2d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001b2d4:	b0df      	sub	sp, #380	@ 0x17c
1001b2d6:	461c      	mov	r4, r3
1001b2d8:	9107      	str	r1, [sp, #28]
1001b2da:	4691      	mov	r9, r2
1001b2dc:	4683      	mov	fp, r0
1001b2de:	f7fa fdb1 	bl	10015e44 <_localeconv_r>
1001b2e2:	6803      	ldr	r3, [r0, #0]
1001b2e4:	9319      	str	r3, [sp, #100]	@ 0x64
1001b2e6:	4618      	mov	r0, r3
1001b2e8:	f7fb fb4a 	bl	10016980 <strlen>
1001b2ec:	2208      	movs	r2, #8
1001b2ee:	9018      	str	r0, [sp, #96]	@ 0x60
1001b2f0:	2100      	movs	r1, #0
1001b2f2:	a82e      	add	r0, sp, #184	@ 0xb8
1001b2f4:	940d      	str	r4, [sp, #52]	@ 0x34
1001b2f6:	f7fa fd09 	bl	10015d0c <memset>
1001b2fa:	f1bb 0f00 	cmp.w	fp, #0
1001b2fe:	d004      	beq.n	1001b30a <_vfprintf_r+0x3a>
1001b300:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
1001b304:	2b00      	cmp	r3, #0
1001b306:	f001 807f 	beq.w	1001c408 <_vfprintf_r+0x1138>
1001b30a:	9b07      	ldr	r3, [sp, #28]
1001b30c:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
1001b30e:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001b312:	07d5      	lsls	r5, r2, #31
1001b314:	d402      	bmi.n	1001b31c <_vfprintf_r+0x4c>
1001b316:	0598      	lsls	r0, r3, #22
1001b318:	f140 869f 	bpl.w	1001c05a <_vfprintf_r+0xd8a>
1001b31c:	0499      	lsls	r1, r3, #18
1001b31e:	d407      	bmi.n	1001b330 <_vfprintf_r+0x60>
1001b320:	9907      	ldr	r1, [sp, #28]
1001b322:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
1001b324:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
1001b328:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1001b32c:	818b      	strh	r3, [r1, #12]
1001b32e:	664a      	str	r2, [r1, #100]	@ 0x64
1001b330:	071a      	lsls	r2, r3, #28
1001b332:	f140 80cc 	bpl.w	1001b4ce <_vfprintf_r+0x1fe>
1001b336:	9a07      	ldr	r2, [sp, #28]
1001b338:	6912      	ldr	r2, [r2, #16]
1001b33a:	2a00      	cmp	r2, #0
1001b33c:	f000 80c7 	beq.w	1001b4ce <_vfprintf_r+0x1fe>
1001b340:	f003 021a 	and.w	r2, r3, #26
1001b344:	2a0a      	cmp	r2, #10
1001b346:	f000 80d1 	beq.w	1001b4ec <_vfprintf_r+0x21c>
1001b34a:	2300      	movs	r3, #0
1001b34c:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
1001b350:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
1001b354:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
1001b358:	9313      	str	r3, [sp, #76]	@ 0x4c
1001b35a:	931a      	str	r3, [sp, #104]	@ 0x68
1001b35c:	930a      	str	r3, [sp, #40]	@ 0x28
1001b35e:	2400      	movs	r4, #0
1001b360:	2300      	movs	r3, #0
1001b362:	e9cd 3416 	strd	r3, r4, [sp, #88]	@ 0x58
1001b366:	aa35      	add	r2, sp, #212	@ 0xd4
1001b368:	9232      	str	r2, [sp, #200]	@ 0xc8
1001b36a:	4690      	mov	r8, r2
1001b36c:	f8cd b020 	str.w	fp, [sp, #32]
1001b370:	464d      	mov	r5, r9
1001b372:	9f08      	ldr	r7, [sp, #32]
1001b374:	462e      	mov	r6, r5
1001b376:	4b8d      	ldr	r3, [pc, #564]	@ (1001b5ac <_vfprintf_r+0x2dc>)
1001b378:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
1001b37c:	f7fa fd5c 	bl	10015e38 <__locale_mb_cur_max>
1001b380:	4603      	mov	r3, r0
1001b382:	a82e      	add	r0, sp, #184	@ 0xb8
1001b384:	9000      	str	r0, [sp, #0]
1001b386:	4632      	mov	r2, r6
1001b388:	a92a      	add	r1, sp, #168	@ 0xa8
1001b38a:	4638      	mov	r0, r7
1001b38c:	47a0      	blx	r4
1001b38e:	2800      	cmp	r0, #0
1001b390:	f000 80cb 	beq.w	1001b52a <_vfprintf_r+0x25a>
1001b394:	f2c0 80c1 	blt.w	1001b51a <_vfprintf_r+0x24a>
1001b398:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
1001b39a:	2a25      	cmp	r2, #37	@ 0x25
1001b39c:	4603      	mov	r3, r0
1001b39e:	d001      	beq.n	1001b3a4 <_vfprintf_r+0xd4>
1001b3a0:	441e      	add	r6, r3
1001b3a2:	e7e8      	b.n	1001b376 <_vfprintf_r+0xa6>
1001b3a4:	1b77      	subs	r7, r6, r5
1001b3a6:	4604      	mov	r4, r0
1001b3a8:	f040 80c2 	bne.w	1001b530 <_vfprintf_r+0x260>
1001b3ac:	2300      	movs	r3, #0
1001b3ae:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
1001b3b2:	4699      	mov	r9, r3
1001b3b4:	930b      	str	r3, [sp, #44]	@ 0x2c
1001b3b6:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001b3ba:	7873      	ldrb	r3, [r6, #1]
1001b3bc:	9209      	str	r2, [sp, #36]	@ 0x24
1001b3be:	1c74      	adds	r4, r6, #1
1001b3c0:	3401      	adds	r4, #1
1001b3c2:	f1a3 0220 	sub.w	r2, r3, #32
1001b3c6:	2a5a      	cmp	r2, #90	@ 0x5a
1001b3c8:	f200 80f2 	bhi.w	1001b5b0 <_vfprintf_r+0x2e0>
1001b3cc:	e8df f012 	tbh	[pc, r2, lsl #1]
1001b3d0:	00f002c7 	.word	0x00f002c7
1001b3d4:	02c300f0 	.word	0x02c300f0
1001b3d8:	00f000f0 	.word	0x00f000f0
1001b3dc:	006a00f0 	.word	0x006a00f0
1001b3e0:	00f000f0 	.word	0x00f000f0
1001b3e4:	02a0027d 	.word	0x02a0027d
1001b3e8:	028800f0 	.word	0x028800f0
1001b3ec:	00f002a9 	.word	0x00f002a9
1001b3f0:	005b02a5 	.word	0x005b02a5
1001b3f4:	005b005b 	.word	0x005b005b
1001b3f8:	005b005b 	.word	0x005b005b
1001b3fc:	005b005b 	.word	0x005b005b
1001b400:	005b005b 	.word	0x005b005b
1001b404:	00f000f0 	.word	0x00f000f0
1001b408:	00f000f0 	.word	0x00f000f0
1001b40c:	00f000f0 	.word	0x00f000f0
1001b410:	017100f0 	.word	0x017100f0
1001b414:	020800f0 	.word	0x020800f0
1001b418:	01710322 	.word	0x01710322
1001b41c:	01710171 	.word	0x01710171
1001b420:	00f000f0 	.word	0x00f000f0
1001b424:	00f000f0 	.word	0x00f000f0
1001b428:	00f0031e 	.word	0x00f0031e
1001b42c:	02da00f0 	.word	0x02da00f0
1001b430:	00f000f0 	.word	0x00f000f0
1001b434:	022600f0 	.word	0x022600f0
1001b438:	030b00f0 	.word	0x030b00f0
1001b43c:	00f000f0 	.word	0x00f000f0
1001b440:	00f00717 	.word	0x00f00717
1001b444:	00f000f0 	.word	0x00f000f0
1001b448:	00f000f0 	.word	0x00f000f0
1001b44c:	00f000f0 	.word	0x00f000f0
1001b450:	017100f0 	.word	0x017100f0
1001b454:	020800f0 	.word	0x020800f0
1001b458:	01710258 	.word	0x01710258
1001b45c:	01710171 	.word	0x01710171
1001b460:	02580296 	.word	0x02580296
1001b464:	00f00204 	.word	0x00f00204
1001b468:	00f0028c 	.word	0x00f0028c
1001b46c:	073f034d 	.word	0x073f034d
1001b470:	0204033b 	.word	0x0204033b
1001b474:	022600f0 	.word	0x022600f0
1001b478:	073a007d 	.word	0x073a007d
1001b47c:	00f000f0 	.word	0x00f000f0
1001b480:	00f00743 	.word	0x00f00743
1001b484:	007d      	.short	0x007d
1001b486:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001b48a:	2100      	movs	r1, #0
1001b48c:	f814 3b01 	ldrb.w	r3, [r4], #1
1001b490:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001b494:	eb02 0141 	add.w	r1, r2, r1, lsl #1
1001b498:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001b49c:	2a09      	cmp	r2, #9
1001b49e:	d9f5      	bls.n	1001b48c <_vfprintf_r+0x1bc>
1001b4a0:	910b      	str	r1, [sp, #44]	@ 0x2c
1001b4a2:	e78e      	b.n	1001b3c2 <_vfprintf_r+0xf2>
1001b4a4:	9f08      	ldr	r7, [sp, #32]
1001b4a6:	4638      	mov	r0, r7
1001b4a8:	f7fa fccc 	bl	10015e44 <_localeconv_r>
1001b4ac:	6843      	ldr	r3, [r0, #4]
1001b4ae:	931d      	str	r3, [sp, #116]	@ 0x74
1001b4b0:	4618      	mov	r0, r3
1001b4b2:	f7fb fa65 	bl	10016980 <strlen>
1001b4b6:	901e      	str	r0, [sp, #120]	@ 0x78
1001b4b8:	4606      	mov	r6, r0
1001b4ba:	4638      	mov	r0, r7
1001b4bc:	f7fa fcc2 	bl	10015e44 <_localeconv_r>
1001b4c0:	6883      	ldr	r3, [r0, #8]
1001b4c2:	931b      	str	r3, [sp, #108]	@ 0x6c
1001b4c4:	2e00      	cmp	r6, #0
1001b4c6:	f040 8621 	bne.w	1001c10c <_vfprintf_r+0xe3c>
1001b4ca:	7823      	ldrb	r3, [r4, #0]
1001b4cc:	e778      	b.n	1001b3c0 <_vfprintf_r+0xf0>
1001b4ce:	9d07      	ldr	r5, [sp, #28]
1001b4d0:	4658      	mov	r0, fp
1001b4d2:	4629      	mov	r1, r5
1001b4d4:	f002 fe58 	bl	1001e188 <__swsetup_r>
1001b4d8:	2800      	cmp	r0, #0
1001b4da:	f041 83a6 	bne.w	1001cc2a <_vfprintf_r+0x195a>
1001b4de:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
1001b4e2:	f003 021a 	and.w	r2, r3, #26
1001b4e6:	2a0a      	cmp	r2, #10
1001b4e8:	f47f af2f 	bne.w	1001b34a <_vfprintf_r+0x7a>
1001b4ec:	9907      	ldr	r1, [sp, #28]
1001b4ee:	f9b1 200e 	ldrsh.w	r2, [r1, #14]
1001b4f2:	2a00      	cmp	r2, #0
1001b4f4:	f6ff af29 	blt.w	1001b34a <_vfprintf_r+0x7a>
1001b4f8:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
1001b4fa:	07d5      	lsls	r5, r2, #31
1001b4fc:	d402      	bmi.n	1001b504 <_vfprintf_r+0x234>
1001b4fe:	0598      	lsls	r0, r3, #22
1001b500:	f141 81bf 	bpl.w	1001c882 <_vfprintf_r+0x15b2>
1001b504:	9907      	ldr	r1, [sp, #28]
1001b506:	4623      	mov	r3, r4
1001b508:	464a      	mov	r2, r9
1001b50a:	4658      	mov	r0, fp
1001b50c:	f001 fd04 	bl	1001cf18 <__sbprintf>
1001b510:	900a      	str	r0, [sp, #40]	@ 0x28
1001b512:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001b514:	b05f      	add	sp, #380	@ 0x17c
1001b516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001b51a:	2208      	movs	r2, #8
1001b51c:	2100      	movs	r1, #0
1001b51e:	a82e      	add	r0, sp, #184	@ 0xb8
1001b520:	f7fa fbf4 	bl	10015d0c <memset>
1001b524:	2301      	movs	r3, #1
1001b526:	441e      	add	r6, r3
1001b528:	e725      	b.n	1001b376 <_vfprintf_r+0xa6>
1001b52a:	1b77      	subs	r7, r6, r5
1001b52c:	4604      	mov	r4, r0
1001b52e:	d011      	beq.n	1001b554 <_vfprintf_r+0x284>
1001b530:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
1001b532:	443b      	add	r3, r7
1001b534:	9334      	str	r3, [sp, #208]	@ 0xd0
1001b536:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001b538:	3301      	adds	r3, #1
1001b53a:	2b07      	cmp	r3, #7
1001b53c:	e9c8 5700 	strd	r5, r7, [r8]
1001b540:	9333      	str	r3, [sp, #204]	@ 0xcc
1001b542:	dc13      	bgt.n	1001b56c <_vfprintf_r+0x29c>
1001b544:	f108 0808 	add.w	r8, r8, #8
1001b548:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001b54a:	443b      	add	r3, r7
1001b54c:	930a      	str	r3, [sp, #40]	@ 0x28
1001b54e:	2c00      	cmp	r4, #0
1001b550:	f47f af2c 	bne.w	1001b3ac <_vfprintf_r+0xdc>
1001b554:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
1001b556:	f8dd b020 	ldr.w	fp, [sp, #32]
1001b55a:	2b00      	cmp	r3, #0
1001b55c:	f041 80d6 	bne.w	1001c70c <_vfprintf_r+0x143c>
1001b560:	9b07      	ldr	r3, [sp, #28]
1001b562:	2200      	movs	r2, #0
1001b564:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001b568:	9233      	str	r2, [sp, #204]	@ 0xcc
1001b56a:	e012      	b.n	1001b592 <_vfprintf_r+0x2c2>
1001b56c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001b570:	aa32      	add	r2, sp, #200	@ 0xc8
1001b572:	f001 fd4d 	bl	1001d010 <__sprint_r>
1001b576:	b948      	cbnz	r0, 1001b58c <_vfprintf_r+0x2bc>
1001b578:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b57c:	e7e4      	b.n	1001b548 <_vfprintf_r+0x278>
1001b57e:	46bb      	mov	fp, r7
1001b580:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001b582:	b11b      	cbz	r3, 1001b58c <_vfprintf_r+0x2bc>
1001b584:	990c      	ldr	r1, [sp, #48]	@ 0x30
1001b586:	4658      	mov	r0, fp
1001b588:	f7fc fc9e 	bl	10017ec8 <_free_r>
1001b58c:	9b07      	ldr	r3, [sp, #28]
1001b58e:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001b592:	9a07      	ldr	r2, [sp, #28]
1001b594:	6e52      	ldr	r2, [r2, #100]	@ 0x64
1001b596:	07d4      	lsls	r4, r2, #31
1001b598:	f140 8114 	bpl.w	1001b7c4 <_vfprintf_r+0x4f4>
1001b59c:	0659      	lsls	r1, r3, #25
1001b59e:	f101 8350 	bmi.w	1001cc42 <_vfprintf_r+0x1972>
1001b5a2:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001b5a4:	b05f      	add	sp, #380	@ 0x17c
1001b5a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001b5aa:	bf00      	nop
1001b5ac:	20000424 	.word	0x20000424
1001b5b0:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001b5b4:	2b00      	cmp	r3, #0
1001b5b6:	d0cd      	beq.n	1001b554 <_vfprintf_r+0x284>
1001b5b8:	2200      	movs	r2, #0
1001b5ba:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
1001b5be:	2301      	movs	r3, #1
1001b5c0:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001b5c4:	9306      	str	r3, [sp, #24]
1001b5c6:	920c      	str	r2, [sp, #48]	@ 0x30
1001b5c8:	469b      	mov	fp, r3
1001b5ca:	9209      	str	r2, [sp, #36]	@ 0x24
1001b5cc:	9214      	str	r2, [sp, #80]	@ 0x50
1001b5ce:	9210      	str	r2, [sp, #64]	@ 0x40
1001b5d0:	9212      	str	r2, [sp, #72]	@ 0x48
1001b5d2:	ad45      	add	r5, sp, #276	@ 0x114
1001b5d4:	f019 0302 	ands.w	r3, r9, #2
1001b5d8:	d002      	beq.n	1001b5e0 <_vfprintf_r+0x310>
1001b5da:	9906      	ldr	r1, [sp, #24]
1001b5dc:	3102      	adds	r1, #2
1001b5de:	9106      	str	r1, [sp, #24]
1001b5e0:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
1001b5e4:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b5e6:	d105      	bne.n	1001b5f4 <_vfprintf_r+0x324>
1001b5e8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1001b5ea:	9806      	ldr	r0, [sp, #24]
1001b5ec:	1a0e      	subs	r6, r1, r0
1001b5ee:	2e00      	cmp	r6, #0
1001b5f0:	f300 80a7 	bgt.w	1001b742 <_vfprintf_r+0x472>
1001b5f4:	b182      	cbz	r2, 1001b618 <_vfprintf_r+0x348>
1001b5f6:	2201      	movs	r2, #1
1001b5f8:	f8c8 2004 	str.w	r2, [r8, #4]
1001b5fc:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
1001b5fe:	3201      	adds	r2, #1
1001b600:	3401      	adds	r4, #1
1001b602:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
1001b606:	2a07      	cmp	r2, #7
1001b608:	9434      	str	r4, [sp, #208]	@ 0xd0
1001b60a:	9233      	str	r2, [sp, #204]	@ 0xcc
1001b60c:	f8c8 1000 	str.w	r1, [r8]
1001b610:	f300 83e1 	bgt.w	1001bdd6 <_vfprintf_r+0xb06>
1001b614:	f108 0808 	add.w	r8, r8, #8
1001b618:	b183      	cbz	r3, 1001b63c <_vfprintf_r+0x36c>
1001b61a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001b61c:	aa28      	add	r2, sp, #160	@ 0xa0
1001b61e:	3301      	adds	r3, #1
1001b620:	3402      	adds	r4, #2
1001b622:	f8c8 2000 	str.w	r2, [r8]
1001b626:	2b07      	cmp	r3, #7
1001b628:	f04f 0202 	mov.w	r2, #2
1001b62c:	9434      	str	r4, [sp, #208]	@ 0xd0
1001b62e:	9333      	str	r3, [sp, #204]	@ 0xcc
1001b630:	f8c8 2004 	str.w	r2, [r8, #4]
1001b634:	f300 83dd 	bgt.w	1001bdf2 <_vfprintf_r+0xb22>
1001b638:	f108 0808 	add.w	r8, r8, #8
1001b63c:	2f80      	cmp	r7, #128	@ 0x80
1001b63e:	f000 82be 	beq.w	1001bbbe <_vfprintf_r+0x8ee>
1001b642:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001b644:	eba3 060b 	sub.w	r6, r3, fp
1001b648:	2e00      	cmp	r6, #0
1001b64a:	f300 82fd 	bgt.w	1001bc48 <_vfprintf_r+0x978>
1001b64e:	f419 7f80 	tst.w	r9, #256	@ 0x100
1001b652:	f040 8219 	bne.w	1001ba88 <_vfprintf_r+0x7b8>
1001b656:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001b658:	f8c8 5000 	str.w	r5, [r8]
1001b65c:	3301      	adds	r3, #1
1001b65e:	445c      	add	r4, fp
1001b660:	2b07      	cmp	r3, #7
1001b662:	f8c8 b004 	str.w	fp, [r8, #4]
1001b666:	9434      	str	r4, [sp, #208]	@ 0xd0
1001b668:	9333      	str	r3, [sp, #204]	@ 0xcc
1001b66a:	f300 834d 	bgt.w	1001bd08 <_vfprintf_r+0xa38>
1001b66e:	f108 0808 	add.w	r8, r8, #8
1001b672:	f019 0f04 	tst.w	r9, #4
1001b676:	d005      	beq.n	1001b684 <_vfprintf_r+0x3b4>
1001b678:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001b67a:	9a06      	ldr	r2, [sp, #24]
1001b67c:	1a9d      	subs	r5, r3, r2
1001b67e:	2d00      	cmp	r5, #0
1001b680:	f300 83c3 	bgt.w	1001be0a <_vfprintf_r+0xb3a>
1001b684:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
1001b688:	9906      	ldr	r1, [sp, #24]
1001b68a:	428a      	cmp	r2, r1
1001b68c:	bfac      	ite	ge
1001b68e:	189b      	addge	r3, r3, r2
1001b690:	185b      	addlt	r3, r3, r1
1001b692:	930a      	str	r3, [sp, #40]	@ 0x28
1001b694:	2c00      	cmp	r4, #0
1001b696:	f040 830f 	bne.w	1001bcb8 <_vfprintf_r+0x9e8>
1001b69a:	2300      	movs	r3, #0
1001b69c:	9333      	str	r3, [sp, #204]	@ 0xcc
1001b69e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001b6a0:	b11b      	cbz	r3, 1001b6aa <_vfprintf_r+0x3da>
1001b6a2:	990c      	ldr	r1, [sp, #48]	@ 0x30
1001b6a4:	9808      	ldr	r0, [sp, #32]
1001b6a6:	f7fc fc0f 	bl	10017ec8 <_free_r>
1001b6aa:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b6ae:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
1001b6b0:	e65f      	b.n	1001b372 <_vfprintf_r+0xa2>
1001b6b2:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001b6b6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001b6b8:	3307      	adds	r3, #7
1001b6ba:	f023 0307 	bic.w	r3, r3, #7
1001b6be:	e8f3 6702 	ldrd	r6, r7, [r3], #8
1001b6c2:	930d      	str	r3, [sp, #52]	@ 0x34
1001b6c4:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
1001b6c8:	9323      	str	r3, [sp, #140]	@ 0x8c
1001b6ca:	9622      	str	r6, [sp, #136]	@ 0x88
1001b6cc:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
1001b6d0:	4ba8      	ldr	r3, [pc, #672]	@ (1001b974 <_vfprintf_r+0x6a4>)
1001b6d2:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001b6d6:	4650      	mov	r0, sl
1001b6d8:	4659      	mov	r1, fp
1001b6da:	e9cd 6716 	strd	r6, r7, [sp, #88]	@ 0x58
1001b6de:	f005 fae9 	bl	10020cb4 <__aeabi_dcmpun>
1001b6e2:	2800      	cmp	r0, #0
1001b6e4:	f040 8530 	bne.w	1001c148 <_vfprintf_r+0xe78>
1001b6e8:	4ba2      	ldr	r3, [pc, #648]	@ (1001b974 <_vfprintf_r+0x6a4>)
1001b6ea:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001b6ee:	4650      	mov	r0, sl
1001b6f0:	4659      	mov	r1, fp
1001b6f2:	f005 fac1 	bl	10020c78 <__aeabi_dcmple>
1001b6f6:	2800      	cmp	r0, #0
1001b6f8:	f040 8526 	bne.w	1001c148 <_vfprintf_r+0xe78>
1001b6fc:	2200      	movs	r2, #0
1001b6fe:	2300      	movs	r3, #0
1001b700:	4630      	mov	r0, r6
1001b702:	4639      	mov	r1, r7
1001b704:	f005 faae 	bl	10020c64 <__aeabi_dcmplt>
1001b708:	2800      	cmp	r0, #0
1001b70a:	f041 810f 	bne.w	1001c92c <_vfprintf_r+0x165c>
1001b70e:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001b712:	4d99      	ldr	r5, [pc, #612]	@ (1001b978 <_vfprintf_r+0x6a8>)
1001b714:	4b99      	ldr	r3, [pc, #612]	@ (1001b97c <_vfprintf_r+0x6ac>)
1001b716:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
1001b71a:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001b71c:	2947      	cmp	r1, #71	@ 0x47
1001b71e:	bfc8      	it	gt
1001b720:	461d      	movgt	r5, r3
1001b722:	2300      	movs	r3, #0
1001b724:	2103      	movs	r1, #3
1001b726:	930c      	str	r3, [sp, #48]	@ 0x30
1001b728:	9106      	str	r1, [sp, #24]
1001b72a:	468b      	mov	fp, r1
1001b72c:	9309      	str	r3, [sp, #36]	@ 0x24
1001b72e:	9314      	str	r3, [sp, #80]	@ 0x50
1001b730:	9310      	str	r3, [sp, #64]	@ 0x40
1001b732:	9312      	str	r3, [sp, #72]	@ 0x48
1001b734:	2a00      	cmp	r2, #0
1001b736:	f43f af4d 	beq.w	1001b5d4 <_vfprintf_r+0x304>
1001b73a:	9b06      	ldr	r3, [sp, #24]
1001b73c:	3301      	adds	r3, #1
1001b73e:	9306      	str	r3, [sp, #24]
1001b740:	e748      	b.n	1001b5d4 <_vfprintf_r+0x304>
1001b742:	2e10      	cmp	r6, #16
1001b744:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
1001b746:	f341 823d 	ble.w	1001cbc4 <_vfprintf_r+0x18f4>
1001b74a:	488d      	ldr	r0, [pc, #564]	@ (1001b980 <_vfprintf_r+0x6b0>)
1001b74c:	9521      	str	r5, [sp, #132]	@ 0x84
1001b74e:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
1001b752:	4621      	mov	r1, r4
1001b754:	9d07      	ldr	r5, [sp, #28]
1001b756:	9c08      	ldr	r4, [sp, #32]
1001b758:	9015      	str	r0, [sp, #84]	@ 0x54
1001b75a:	f04f 0a10 	mov.w	sl, #16
1001b75e:	4607      	mov	r7, r0
1001b760:	e004      	b.n	1001b76c <_vfprintf_r+0x49c>
1001b762:	3e10      	subs	r6, #16
1001b764:	2e10      	cmp	r6, #16
1001b766:	f108 0808 	add.w	r8, r8, #8
1001b76a:	dd16      	ble.n	1001b79a <_vfprintf_r+0x4ca>
1001b76c:	3201      	adds	r2, #1
1001b76e:	3110      	adds	r1, #16
1001b770:	2a07      	cmp	r2, #7
1001b772:	e9c8 7a00 	strd	r7, sl, [r8]
1001b776:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
1001b77a:	ddf2      	ble.n	1001b762 <_vfprintf_r+0x492>
1001b77c:	aa32      	add	r2, sp, #200	@ 0xc8
1001b77e:	4629      	mov	r1, r5
1001b780:	4620      	mov	r0, r4
1001b782:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b786:	f001 fc43 	bl	1001d010 <__sprint_r>
1001b78a:	2800      	cmp	r0, #0
1001b78c:	f040 8636 	bne.w	1001c3fc <_vfprintf_r+0x112c>
1001b790:	3e10      	subs	r6, #16
1001b792:	2e10      	cmp	r6, #16
1001b794:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
1001b798:	dce8      	bgt.n	1001b76c <_vfprintf_r+0x49c>
1001b79a:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
1001b79e:	9d21      	ldr	r5, [sp, #132]	@ 0x84
1001b7a0:	460c      	mov	r4, r1
1001b7a2:	3201      	adds	r2, #1
1001b7a4:	9915      	ldr	r1, [sp, #84]	@ 0x54
1001b7a6:	f8c8 1000 	str.w	r1, [r8]
1001b7aa:	4434      	add	r4, r6
1001b7ac:	2a07      	cmp	r2, #7
1001b7ae:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
1001b7b2:	f8c8 6004 	str.w	r6, [r8, #4]
1001b7b6:	f300 8610 	bgt.w	1001c3da <_vfprintf_r+0x110a>
1001b7ba:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001b7be:	f108 0808 	add.w	r8, r8, #8
1001b7c2:	e717      	b.n	1001b5f4 <_vfprintf_r+0x324>
1001b7c4:	0598      	lsls	r0, r3, #22
1001b7c6:	f53f aee9 	bmi.w	1001b59c <_vfprintf_r+0x2cc>
1001b7ca:	9c07      	ldr	r4, [sp, #28]
1001b7cc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001b7ce:	f7fa fb31 	bl	10015e34 <__retarget_lock_release_recursive>
1001b7d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001b7d6:	e6e1      	b.n	1001b59c <_vfprintf_r+0x2cc>
1001b7d8:	7823      	ldrb	r3, [r4, #0]
1001b7da:	f049 0920 	orr.w	r9, r9, #32
1001b7de:	e5ef      	b.n	1001b3c0 <_vfprintf_r+0xf0>
1001b7e0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001b7e2:	2b43      	cmp	r3, #67	@ 0x43
1001b7e4:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001b7e8:	f102 0404 	add.w	r4, r2, #4
1001b7ec:	f000 8562 	beq.w	1001c2b4 <_vfprintf_r+0xfe4>
1001b7f0:	f019 0f10 	tst.w	r9, #16
1001b7f4:	f040 855e 	bne.w	1001c2b4 <_vfprintf_r+0xfe4>
1001b7f8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001b7fa:	681b      	ldr	r3, [r3, #0]
1001b7fc:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
1001b800:	2301      	movs	r3, #1
1001b802:	9306      	str	r3, [sp, #24]
1001b804:	469b      	mov	fp, r3
1001b806:	ad45      	add	r5, sp, #276	@ 0x114
1001b808:	2200      	movs	r2, #0
1001b80a:	940d      	str	r4, [sp, #52]	@ 0x34
1001b80c:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001b810:	920c      	str	r2, [sp, #48]	@ 0x30
1001b812:	9209      	str	r2, [sp, #36]	@ 0x24
1001b814:	9214      	str	r2, [sp, #80]	@ 0x50
1001b816:	9210      	str	r2, [sp, #64]	@ 0x40
1001b818:	9212      	str	r2, [sp, #72]	@ 0x48
1001b81a:	e6db      	b.n	1001b5d4 <_vfprintf_r+0x304>
1001b81c:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
1001b81e:	f856 5b04 	ldr.w	r5, [r6], #4
1001b822:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001b826:	2300      	movs	r3, #0
1001b828:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
1001b82c:	2d00      	cmp	r5, #0
1001b82e:	f000 8530 	beq.w	1001c292 <_vfprintf_r+0xfc2>
1001b832:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b834:	2b53      	cmp	r3, #83	@ 0x53
1001b836:	f000 8601 	beq.w	1001c43c <_vfprintf_r+0x116c>
1001b83a:	f019 0310 	ands.w	r3, r9, #16
1001b83e:	9312      	str	r3, [sp, #72]	@ 0x48
1001b840:	f040 85fc 	bne.w	1001c43c <_vfprintf_r+0x116c>
1001b844:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001b846:	1c5a      	adds	r2, r3, #1
1001b848:	f000 876a 	beq.w	1001c720 <_vfprintf_r+0x1450>
1001b84c:	9912      	ldr	r1, [sp, #72]	@ 0x48
1001b84e:	461a      	mov	r2, r3
1001b850:	4628      	mov	r0, r5
1001b852:	f004 fabd 	bl	1001fdd0 <memchr>
1001b856:	900c      	str	r0, [sp, #48]	@ 0x30
1001b858:	2800      	cmp	r0, #0
1001b85a:	f001 82c5 	beq.w	1001cde8 <_vfprintf_r+0x1b18>
1001b85e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001b860:	960d      	str	r6, [sp, #52]	@ 0x34
1001b862:	eba3 0b05 	sub.w	fp, r3, r5
1001b866:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001b868:	9309      	str	r3, [sp, #36]	@ 0x24
1001b86a:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
1001b86e:	9314      	str	r3, [sp, #80]	@ 0x50
1001b870:	9310      	str	r3, [sp, #64]	@ 0x40
1001b872:	930c      	str	r3, [sp, #48]	@ 0x30
1001b874:	2373      	movs	r3, #115	@ 0x73
1001b876:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001b87a:	9106      	str	r1, [sp, #24]
1001b87c:	930e      	str	r3, [sp, #56]	@ 0x38
1001b87e:	e759      	b.n	1001b734 <_vfprintf_r+0x464>
1001b880:	f019 0f20 	tst.w	r9, #32
1001b884:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001b888:	f000 80cc 	beq.w	1001ba24 <_vfprintf_r+0x754>
1001b88c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001b88e:	3307      	adds	r3, #7
1001b890:	f023 0307 	bic.w	r3, r3, #7
1001b894:	461a      	mov	r2, r3
1001b896:	6859      	ldr	r1, [r3, #4]
1001b898:	f852 3b08 	ldr.w	r3, [r2], #8
1001b89c:	920d      	str	r2, [sp, #52]	@ 0x34
1001b89e:	460a      	mov	r2, r1
1001b8a0:	2900      	cmp	r1, #0
1001b8a2:	f2c0 8425 	blt.w	1001c0f0 <_vfprintf_r+0xe20>
1001b8a6:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b8a8:	3101      	adds	r1, #1
1001b8aa:	f000 8285 	beq.w	1001bdb8 <_vfprintf_r+0xae8>
1001b8ae:	ea53 0102 	orrs.w	r1, r3, r2
1001b8b2:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
1001b8b6:	f040 8280 	bne.w	1001bdba <_vfprintf_r+0xaea>
1001b8ba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001b8bc:	2a00      	cmp	r2, #0
1001b8be:	f040 8281 	bne.w	1001bdc4 <_vfprintf_r+0xaf4>
1001b8c2:	46a1      	mov	r9, r4
1001b8c4:	4693      	mov	fp, r2
1001b8c6:	ad5e      	add	r5, sp, #376	@ 0x178
1001b8c8:	e150      	b.n	1001bb6c <_vfprintf_r+0x89c>
1001b8ca:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001b8cc:	f853 2b04 	ldr.w	r2, [r3], #4
1001b8d0:	920b      	str	r2, [sp, #44]	@ 0x2c
1001b8d2:	2a00      	cmp	r2, #0
1001b8d4:	f280 83ce 	bge.w	1001c074 <_vfprintf_r+0xda4>
1001b8d8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1001b8da:	930d      	str	r3, [sp, #52]	@ 0x34
1001b8dc:	4252      	negs	r2, r2
1001b8de:	920b      	str	r2, [sp, #44]	@ 0x2c
1001b8e0:	7823      	ldrb	r3, [r4, #0]
1001b8e2:	f049 0904 	orr.w	r9, r9, #4
1001b8e6:	e56b      	b.n	1001b3c0 <_vfprintf_r+0xf0>
1001b8e8:	7823      	ldrb	r3, [r4, #0]
1001b8ea:	2b6c      	cmp	r3, #108	@ 0x6c
1001b8ec:	bf03      	ittte	eq
1001b8ee:	7863      	ldrbeq	r3, [r4, #1]
1001b8f0:	f049 0920 	orreq.w	r9, r9, #32
1001b8f4:	3401      	addeq	r4, #1
1001b8f6:	f049 0910 	orrne.w	r9, r9, #16
1001b8fa:	e561      	b.n	1001b3c0 <_vfprintf_r+0xf0>
1001b8fc:	7823      	ldrb	r3, [r4, #0]
1001b8fe:	2b68      	cmp	r3, #104	@ 0x68
1001b900:	bf03      	ittte	eq
1001b902:	7863      	ldrbeq	r3, [r4, #1]
1001b904:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
1001b908:	3401      	addeq	r4, #1
1001b90a:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
1001b90e:	e557      	b.n	1001b3c0 <_vfprintf_r+0xf0>
1001b910:	232b      	movs	r3, #43	@ 0x2b
1001b912:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
1001b916:	7823      	ldrb	r3, [r4, #0]
1001b918:	e552      	b.n	1001b3c0 <_vfprintf_r+0xf0>
1001b91a:	7823      	ldrb	r3, [r4, #0]
1001b91c:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
1001b920:	e54e      	b.n	1001b3c0 <_vfprintf_r+0xf0>
1001b922:	4621      	mov	r1, r4
1001b924:	f811 3b01 	ldrb.w	r3, [r1], #1
1001b928:	2b2a      	cmp	r3, #42	@ 0x2a
1001b92a:	f001 82db 	beq.w	1001cee4 <_vfprintf_r+0x1c14>
1001b92e:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001b932:	2a09      	cmp	r2, #9
1001b934:	460c      	mov	r4, r1
1001b936:	bf98      	it	ls
1001b938:	2100      	movls	r1, #0
1001b93a:	f201 8172 	bhi.w	1001cc22 <_vfprintf_r+0x1952>
1001b93e:	f814 3b01 	ldrb.w	r3, [r4], #1
1001b942:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001b946:	eb02 0141 	add.w	r1, r2, r1, lsl #1
1001b94a:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001b94e:	2a09      	cmp	r2, #9
1001b950:	d9f5      	bls.n	1001b93e <_vfprintf_r+0x66e>
1001b952:	9109      	str	r1, [sp, #36]	@ 0x24
1001b954:	e535      	b.n	1001b3c2 <_vfprintf_r+0xf2>
1001b956:	7823      	ldrb	r3, [r4, #0]
1001b958:	f049 0901 	orr.w	r9, r9, #1
1001b95c:	e530      	b.n	1001b3c0 <_vfprintf_r+0xf0>
1001b95e:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001b962:	7823      	ldrb	r3, [r4, #0]
1001b964:	2a00      	cmp	r2, #0
1001b966:	f47f ad2b 	bne.w	1001b3c0 <_vfprintf_r+0xf0>
1001b96a:	2220      	movs	r2, #32
1001b96c:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001b970:	e526      	b.n	1001b3c0 <_vfprintf_r+0xf0>
1001b972:	bf00      	nop
1001b974:	7fefffff 	.word	0x7fefffff
1001b978:	1002a628 	.word	0x1002a628
1001b97c:	1002a62c 	.word	0x1002a62c
1001b980:	1002a69c 	.word	0x1002a69c
1001b984:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001b988:	f049 0910 	orr.w	r9, r9, #16
1001b98c:	f019 0220 	ands.w	r2, r9, #32
1001b990:	f000 8354 	beq.w	1001c03c <_vfprintf_r+0xd6c>
1001b994:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001b996:	3307      	adds	r3, #7
1001b998:	f023 0307 	bic.w	r3, r3, #7
1001b99c:	4619      	mov	r1, r3
1001b99e:	685a      	ldr	r2, [r3, #4]
1001b9a0:	f851 3b08 	ldr.w	r3, [r1], #8
1001b9a4:	910d      	str	r1, [sp, #52]	@ 0x34
1001b9a6:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
1001b9aa:	2100      	movs	r1, #0
1001b9ac:	2000      	movs	r0, #0
1001b9ae:	9d09      	ldr	r5, [sp, #36]	@ 0x24
1001b9b0:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
1001b9b4:	1c6f      	adds	r7, r5, #1
1001b9b6:	f000 80c2 	beq.w	1001bb3e <_vfprintf_r+0x86e>
1001b9ba:	ea53 0002 	orrs.w	r0, r3, r2
1001b9be:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
1001b9c2:	f040 80bb 	bne.w	1001bb3c <_vfprintf_r+0x86c>
1001b9c6:	2d00      	cmp	r5, #0
1001b9c8:	f040 8523 	bne.w	1001c412 <_vfprintf_r+0x1142>
1001b9cc:	2900      	cmp	r1, #0
1001b9ce:	f040 8496 	bne.w	1001c2fe <_vfprintf_r+0x102e>
1001b9d2:	f014 0b01 	ands.w	fp, r4, #1
1001b9d6:	f000 8351 	beq.w	1001c07c <_vfprintf_r+0xdac>
1001b9da:	2330      	movs	r3, #48	@ 0x30
1001b9dc:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
1001b9e0:	f20d 1577 	addw	r5, sp, #375	@ 0x177
1001b9e4:	e0c2      	b.n	1001bb6c <_vfprintf_r+0x89c>
1001b9e6:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001b9ea:	f049 0410 	orr.w	r4, r9, #16
1001b9ee:	f014 0220 	ands.w	r2, r4, #32
1001b9f2:	f000 8315 	beq.w	1001c020 <_vfprintf_r+0xd50>
1001b9f6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001b9f8:	3307      	adds	r3, #7
1001b9fa:	f023 0307 	bic.w	r3, r3, #7
1001b9fe:	4619      	mov	r1, r3
1001ba00:	685a      	ldr	r2, [r3, #4]
1001ba02:	f851 3b08 	ldr.w	r3, [r1], #8
1001ba06:	910d      	str	r1, [sp, #52]	@ 0x34
1001ba08:	2101      	movs	r1, #1
1001ba0a:	e7cf      	b.n	1001b9ac <_vfprintf_r+0x6dc>
1001ba0c:	7823      	ldrb	r3, [r4, #0]
1001ba0e:	f049 0908 	orr.w	r9, r9, #8
1001ba12:	e4d5      	b.n	1001b3c0 <_vfprintf_r+0xf0>
1001ba14:	f049 0910 	orr.w	r9, r9, #16
1001ba18:	f019 0f20 	tst.w	r9, #32
1001ba1c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001ba20:	f47f af34 	bne.w	1001b88c <_vfprintf_r+0x5bc>
1001ba24:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001ba26:	f019 0f10 	tst.w	r9, #16
1001ba2a:	f852 3b04 	ldr.w	r3, [r2], #4
1001ba2e:	920d      	str	r2, [sp, #52]	@ 0x34
1001ba30:	f040 8359 	bne.w	1001c0e6 <_vfprintf_r+0xe16>
1001ba34:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001ba38:	f000 8351 	beq.w	1001c0de <_vfprintf_r+0xe0e>
1001ba3c:	f343 32c0 	sbfx	r2, r3, #15, #1
1001ba40:	4611      	mov	r1, r2
1001ba42:	b21b      	sxth	r3, r3
1001ba44:	e72c      	b.n	1001b8a0 <_vfprintf_r+0x5d0>
1001ba46:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001ba48:	940f      	str	r4, [sp, #60]	@ 0x3c
1001ba4a:	f852 3b04 	ldr.w	r3, [r2], #4
1001ba4e:	920d      	str	r2, [sp, #52]	@ 0x34
1001ba50:	f647 0230 	movw	r2, #30768	@ 0x7830
1001ba54:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
1001ba58:	2078      	movs	r0, #120	@ 0x78
1001ba5a:	4ab1      	ldr	r2, [pc, #708]	@ (1001bd20 <_vfprintf_r+0xa50>)
1001ba5c:	921a      	str	r2, [sp, #104]	@ 0x68
1001ba5e:	f049 0402 	orr.w	r4, r9, #2
1001ba62:	2200      	movs	r2, #0
1001ba64:	2102      	movs	r1, #2
1001ba66:	900e      	str	r0, [sp, #56]	@ 0x38
1001ba68:	e7a0      	b.n	1001b9ac <_vfprintf_r+0x6dc>
1001ba6a:	f019 0f20 	tst.w	r9, #32
1001ba6e:	940f      	str	r4, [sp, #60]	@ 0x3c
1001ba70:	f000 8359 	beq.w	1001c126 <_vfprintf_r+0xe56>
1001ba74:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001ba76:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001ba78:	681b      	ldr	r3, [r3, #0]
1001ba7a:	601a      	str	r2, [r3, #0]
1001ba7c:	17d2      	asrs	r2, r2, #31
1001ba7e:	605a      	str	r2, [r3, #4]
1001ba80:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001ba82:	3304      	adds	r3, #4
1001ba84:	930d      	str	r3, [sp, #52]	@ 0x34
1001ba86:	e612      	b.n	1001b6ae <_vfprintf_r+0x3de>
1001ba88:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001ba8a:	2b65      	cmp	r3, #101	@ 0x65
1001ba8c:	f340 814e 	ble.w	1001bd2c <_vfprintf_r+0xa5c>
1001ba90:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001ba94:	2200      	movs	r2, #0
1001ba96:	2300      	movs	r3, #0
1001ba98:	f005 f8da 	bl	10020c50 <__aeabi_dcmpeq>
1001ba9c:	2800      	cmp	r0, #0
1001ba9e:	f000 81ee 	beq.w	1001be7e <_vfprintf_r+0xbae>
1001baa2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001baa4:	4a9f      	ldr	r2, [pc, #636]	@ (1001bd24 <_vfprintf_r+0xa54>)
1001baa6:	f8c8 2000 	str.w	r2, [r8]
1001baaa:	3301      	adds	r3, #1
1001baac:	3401      	adds	r4, #1
1001baae:	2201      	movs	r2, #1
1001bab0:	2b07      	cmp	r3, #7
1001bab2:	9434      	str	r4, [sp, #208]	@ 0xd0
1001bab4:	9333      	str	r3, [sp, #204]	@ 0xcc
1001bab6:	f8c8 2004 	str.w	r2, [r8, #4]
1001baba:	f300 84af 	bgt.w	1001c41c <_vfprintf_r+0x114c>
1001babe:	f108 0808 	add.w	r8, r8, #8
1001bac2:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001bac4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001bac6:	4293      	cmp	r3, r2
1001bac8:	f280 82cf 	bge.w	1001c06a <_vfprintf_r+0xd9a>
1001bacc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001bace:	9a19      	ldr	r2, [sp, #100]	@ 0x64
1001bad0:	441c      	add	r4, r3
1001bad2:	e9c8 2300 	strd	r2, r3, [r8]
1001bad6:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001bad8:	9434      	str	r4, [sp, #208]	@ 0xd0
1001bada:	3301      	adds	r3, #1
1001badc:	2b07      	cmp	r3, #7
1001bade:	9333      	str	r3, [sp, #204]	@ 0xcc
1001bae0:	f300 83cb 	bgt.w	1001c27a <_vfprintf_r+0xfaa>
1001bae4:	f108 0808 	add.w	r8, r8, #8
1001bae8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001baea:	1e5d      	subs	r5, r3, #1
1001baec:	2d00      	cmp	r5, #0
1001baee:	f77f adc0 	ble.w	1001b672 <_vfprintf_r+0x3a2>
1001baf2:	2d10      	cmp	r5, #16
1001baf4:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001baf6:	f340 84fa 	ble.w	1001c4ee <_vfprintf_r+0x121e>
1001bafa:	4f8b      	ldr	r7, [pc, #556]	@ (1001bd28 <_vfprintf_r+0xa58>)
1001bafc:	9715      	str	r7, [sp, #84]	@ 0x54
1001bafe:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
1001bb02:	2610      	movs	r6, #16
1001bb04:	e005      	b.n	1001bb12 <_vfprintf_r+0x842>
1001bb06:	f108 0808 	add.w	r8, r8, #8
1001bb0a:	3d10      	subs	r5, #16
1001bb0c:	2d10      	cmp	r5, #16
1001bb0e:	f340 84f0 	ble.w	1001c4f2 <_vfprintf_r+0x1222>
1001bb12:	3301      	adds	r3, #1
1001bb14:	3410      	adds	r4, #16
1001bb16:	2b07      	cmp	r3, #7
1001bb18:	e9c8 7600 	strd	r7, r6, [r8]
1001bb1c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001bb20:	ddf1      	ble.n	1001bb06 <_vfprintf_r+0x836>
1001bb22:	aa32      	add	r2, sp, #200	@ 0xc8
1001bb24:	4651      	mov	r1, sl
1001bb26:	4658      	mov	r0, fp
1001bb28:	f001 fa72 	bl	1001d010 <__sprint_r>
1001bb2c:	2800      	cmp	r0, #0
1001bb2e:	f47f ad27 	bne.w	1001b580 <_vfprintf_r+0x2b0>
1001bb32:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001bb36:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001bb3a:	e7e6      	b.n	1001bb0a <_vfprintf_r+0x83a>
1001bb3c:	464c      	mov	r4, r9
1001bb3e:	2901      	cmp	r1, #1
1001bb40:	f000 813b 	beq.w	1001bdba <_vfprintf_r+0xaea>
1001bb44:	2902      	cmp	r1, #2
1001bb46:	ad5e      	add	r5, sp, #376	@ 0x178
1001bb48:	d11e      	bne.n	1001bb88 <_vfprintf_r+0x8b8>
1001bb4a:	981a      	ldr	r0, [sp, #104]	@ 0x68
1001bb4c:	f003 010f 	and.w	r1, r3, #15
1001bb50:	091b      	lsrs	r3, r3, #4
1001bb52:	5c41      	ldrb	r1, [r0, r1]
1001bb54:	f805 1d01 	strb.w	r1, [r5, #-1]!
1001bb58:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
1001bb5c:	0912      	lsrs	r2, r2, #4
1001bb5e:	ea53 0102 	orrs.w	r1, r3, r2
1001bb62:	d1f3      	bne.n	1001bb4c <_vfprintf_r+0x87c>
1001bb64:	ab5e      	add	r3, sp, #376	@ 0x178
1001bb66:	46a1      	mov	r9, r4
1001bb68:	eba3 0b05 	sub.w	fp, r3, r5
1001bb6c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001bb6e:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001bb72:	4559      	cmp	r1, fp
1001bb74:	f04f 0300 	mov.w	r3, #0
1001bb78:	bfb8      	it	lt
1001bb7a:	4659      	movlt	r1, fp
1001bb7c:	930c      	str	r3, [sp, #48]	@ 0x30
1001bb7e:	9106      	str	r1, [sp, #24]
1001bb80:	9314      	str	r3, [sp, #80]	@ 0x50
1001bb82:	9310      	str	r3, [sp, #64]	@ 0x40
1001bb84:	9312      	str	r3, [sp, #72]	@ 0x48
1001bb86:	e5d5      	b.n	1001b734 <_vfprintf_r+0x464>
1001bb88:	f003 0107 	and.w	r1, r3, #7
1001bb8c:	08db      	lsrs	r3, r3, #3
1001bb8e:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
1001bb92:	08d2      	lsrs	r2, r2, #3
1001bb94:	3130      	adds	r1, #48	@ 0x30
1001bb96:	ea53 0602 	orrs.w	r6, r3, r2
1001bb9a:	4628      	mov	r0, r5
1001bb9c:	f805 1d01 	strb.w	r1, [r5, #-1]!
1001bba0:	d1f2      	bne.n	1001bb88 <_vfprintf_r+0x8b8>
1001bba2:	07e6      	lsls	r6, r4, #31
1001bba4:	d5de      	bpl.n	1001bb64 <_vfprintf_r+0x894>
1001bba6:	2930      	cmp	r1, #48	@ 0x30
1001bba8:	d0dc      	beq.n	1001bb64 <_vfprintf_r+0x894>
1001bbaa:	2330      	movs	r3, #48	@ 0x30
1001bbac:	3802      	subs	r0, #2
1001bbae:	f805 3c01 	strb.w	r3, [r5, #-1]
1001bbb2:	ab5e      	add	r3, sp, #376	@ 0x178
1001bbb4:	46a1      	mov	r9, r4
1001bbb6:	eba3 0b00 	sub.w	fp, r3, r0
1001bbba:	4605      	mov	r5, r0
1001bbbc:	e7d6      	b.n	1001bb6c <_vfprintf_r+0x89c>
1001bbbe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001bbc0:	9a06      	ldr	r2, [sp, #24]
1001bbc2:	1a9e      	subs	r6, r3, r2
1001bbc4:	2e00      	cmp	r6, #0
1001bbc6:	f77f ad3c 	ble.w	1001b642 <_vfprintf_r+0x372>
1001bbca:	2e10      	cmp	r6, #16
1001bbcc:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001bbce:	f341 80ad 	ble.w	1001cd2c <_vfprintf_r+0x1a5c>
1001bbd2:	4855      	ldr	r0, [pc, #340]	@ (1001bd28 <_vfprintf_r+0xa58>)
1001bbd4:	f8dd a020 	ldr.w	sl, [sp, #32]
1001bbd8:	9015      	str	r0, [sp, #84]	@ 0x54
1001bbda:	4621      	mov	r1, r4
1001bbdc:	2710      	movs	r7, #16
1001bbde:	461a      	mov	r2, r3
1001bbe0:	4604      	mov	r4, r0
1001bbe2:	e004      	b.n	1001bbee <_vfprintf_r+0x91e>
1001bbe4:	3e10      	subs	r6, #16
1001bbe6:	2e10      	cmp	r6, #16
1001bbe8:	f108 0808 	add.w	r8, r8, #8
1001bbec:	dd16      	ble.n	1001bc1c <_vfprintf_r+0x94c>
1001bbee:	3201      	adds	r2, #1
1001bbf0:	3110      	adds	r1, #16
1001bbf2:	2a07      	cmp	r2, #7
1001bbf4:	e9c8 4700 	strd	r4, r7, [r8]
1001bbf8:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
1001bbfc:	ddf2      	ble.n	1001bbe4 <_vfprintf_r+0x914>
1001bbfe:	9907      	ldr	r1, [sp, #28]
1001bc00:	aa32      	add	r2, sp, #200	@ 0xc8
1001bc02:	4650      	mov	r0, sl
1001bc04:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001bc08:	f001 fa02 	bl	1001d010 <__sprint_r>
1001bc0c:	2800      	cmp	r0, #0
1001bc0e:	f040 83f8 	bne.w	1001c402 <_vfprintf_r+0x1132>
1001bc12:	3e10      	subs	r6, #16
1001bc14:	2e10      	cmp	r6, #16
1001bc16:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
1001bc1a:	dce8      	bgt.n	1001bbee <_vfprintf_r+0x91e>
1001bc1c:	460c      	mov	r4, r1
1001bc1e:	4613      	mov	r3, r2
1001bc20:	3301      	adds	r3, #1
1001bc22:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001bc24:	f8c8 2000 	str.w	r2, [r8]
1001bc28:	4434      	add	r4, r6
1001bc2a:	2b07      	cmp	r3, #7
1001bc2c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001bc30:	f8c8 6004 	str.w	r6, [r8, #4]
1001bc34:	f300 8314 	bgt.w	1001c260 <_vfprintf_r+0xf90>
1001bc38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001bc3a:	eba3 060b 	sub.w	r6, r3, fp
1001bc3e:	2e00      	cmp	r6, #0
1001bc40:	f108 0808 	add.w	r8, r8, #8
1001bc44:	f77f ad03 	ble.w	1001b64e <_vfprintf_r+0x37e>
1001bc48:	4a37      	ldr	r2, [pc, #220]	@ (1001bd28 <_vfprintf_r+0xa58>)
1001bc4a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001bc4c:	9215      	str	r2, [sp, #84]	@ 0x54
1001bc4e:	2e10      	cmp	r6, #16
1001bc50:	dd23      	ble.n	1001bc9a <_vfprintf_r+0x9ca>
1001bc52:	4622      	mov	r2, r4
1001bc54:	f04f 0a10 	mov.w	sl, #16
1001bc58:	e9dd 4707 	ldrd	r4, r7, [sp, #28]
1001bc5c:	e004      	b.n	1001bc68 <_vfprintf_r+0x998>
1001bc5e:	3e10      	subs	r6, #16
1001bc60:	2e10      	cmp	r6, #16
1001bc62:	f108 0808 	add.w	r8, r8, #8
1001bc66:	dd17      	ble.n	1001bc98 <_vfprintf_r+0x9c8>
1001bc68:	3301      	adds	r3, #1
1001bc6a:	492f      	ldr	r1, [pc, #188]	@ (1001bd28 <_vfprintf_r+0xa58>)
1001bc6c:	3210      	adds	r2, #16
1001bc6e:	2b07      	cmp	r3, #7
1001bc70:	e9c8 1a00 	strd	r1, sl, [r8]
1001bc74:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
1001bc78:	ddf1      	ble.n	1001bc5e <_vfprintf_r+0x98e>
1001bc7a:	aa32      	add	r2, sp, #200	@ 0xc8
1001bc7c:	4621      	mov	r1, r4
1001bc7e:	4638      	mov	r0, r7
1001bc80:	f001 f9c6 	bl	1001d010 <__sprint_r>
1001bc84:	2800      	cmp	r0, #0
1001bc86:	f47f ac7a 	bne.w	1001b57e <_vfprintf_r+0x2ae>
1001bc8a:	3e10      	subs	r6, #16
1001bc8c:	2e10      	cmp	r6, #16
1001bc8e:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
1001bc92:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001bc96:	dce7      	bgt.n	1001bc68 <_vfprintf_r+0x998>
1001bc98:	4614      	mov	r4, r2
1001bc9a:	3301      	adds	r3, #1
1001bc9c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001bc9e:	f8c8 2000 	str.w	r2, [r8]
1001bca2:	4434      	add	r4, r6
1001bca4:	2b07      	cmp	r3, #7
1001bca6:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001bcaa:	f8c8 6004 	str.w	r6, [r8, #4]
1001bcae:	f300 81aa 	bgt.w	1001c006 <_vfprintf_r+0xd36>
1001bcb2:	f108 0808 	add.w	r8, r8, #8
1001bcb6:	e4ca      	b.n	1001b64e <_vfprintf_r+0x37e>
1001bcb8:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001bcbc:	aa32      	add	r2, sp, #200	@ 0xc8
1001bcbe:	f001 f9a7 	bl	1001d010 <__sprint_r>
1001bcc2:	2800      	cmp	r0, #0
1001bcc4:	f43f ace9 	beq.w	1001b69a <_vfprintf_r+0x3ca>
1001bcc8:	f8dd b020 	ldr.w	fp, [sp, #32]
1001bccc:	e458      	b.n	1001b580 <_vfprintf_r+0x2b0>
1001bcce:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001bcd0:	9919      	ldr	r1, [sp, #100]	@ 0x64
1001bcd2:	441c      	add	r4, r3
1001bcd4:	e9c8 1300 	strd	r1, r3, [r8]
1001bcd8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001bcda:	9434      	str	r4, [sp, #208]	@ 0xd0
1001bcdc:	3301      	adds	r3, #1
1001bcde:	2b07      	cmp	r3, #7
1001bce0:	9333      	str	r3, [sp, #204]	@ 0xcc
1001bce2:	f300 85bf 	bgt.w	1001c864 <_vfprintf_r+0x1594>
1001bce6:	f108 0808 	add.w	r8, r8, #8
1001bcea:	2a00      	cmp	r2, #0
1001bcec:	f2c0 87ae 	blt.w	1001cc4c <_vfprintf_r+0x197c>
1001bcf0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001bcf2:	f8c8 5000 	str.w	r5, [r8]
1001bcf6:	3301      	adds	r3, #1
1001bcf8:	4414      	add	r4, r2
1001bcfa:	2b07      	cmp	r3, #7
1001bcfc:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001bd00:	f8c8 2004 	str.w	r2, [r8, #4]
1001bd04:	f77f acb3 	ble.w	1001b66e <_vfprintf_r+0x39e>
1001bd08:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001bd0c:	aa32      	add	r2, sp, #200	@ 0xc8
1001bd0e:	f001 f97f 	bl	1001d010 <__sprint_r>
1001bd12:	2800      	cmp	r0, #0
1001bd14:	d1d8      	bne.n	1001bcc8 <_vfprintf_r+0x9f8>
1001bd16:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001bd18:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001bd1c:	e4a9      	b.n	1001b672 <_vfprintf_r+0x3a2>
1001bd1e:	bf00      	nop
1001bd20:	1002a638 	.word	0x1002a638
1001bd24:	1002a668 	.word	0x1002a668
1001bd28:	1002a68c 	.word	0x1002a68c
1001bd2c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001bd2e:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
1001bd30:	2b01      	cmp	r3, #1
1001bd32:	f104 0401 	add.w	r4, r4, #1
1001bd36:	f106 0601 	add.w	r6, r6, #1
1001bd3a:	f108 0708 	add.w	r7, r8, #8
1001bd3e:	f340 811d 	ble.w	1001bf7c <_vfprintf_r+0xcac>
1001bd42:	2301      	movs	r3, #1
1001bd44:	2e07      	cmp	r6, #7
1001bd46:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001bd4a:	f8c8 5000 	str.w	r5, [r8]
1001bd4e:	f8c8 3004 	str.w	r3, [r8, #4]
1001bd52:	f300 82e4 	bgt.w	1001c31e <_vfprintf_r+0x104e>
1001bd56:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001bd58:	9a19      	ldr	r2, [sp, #100]	@ 0x64
1001bd5a:	3601      	adds	r6, #1
1001bd5c:	441c      	add	r4, r3
1001bd5e:	2e07      	cmp	r6, #7
1001bd60:	e9c7 2300 	strd	r2, r3, [r7]
1001bd64:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001bd68:	f300 82cd 	bgt.w	1001c306 <_vfprintf_r+0x1036>
1001bd6c:	3708      	adds	r7, #8
1001bd6e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001bd70:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001bd74:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
1001bd78:	2200      	movs	r2, #0
1001bd7a:	2300      	movs	r3, #0
1001bd7c:	f004 ff68 	bl	10020c50 <__aeabi_dcmpeq>
1001bd80:	2800      	cmp	r0, #0
1001bd82:	f040 8115 	bne.w	1001bfb0 <_vfprintf_r+0xce0>
1001bd86:	3601      	adds	r6, #1
1001bd88:	3501      	adds	r5, #1
1001bd8a:	4444      	add	r4, r8
1001bd8c:	2e07      	cmp	r6, #7
1001bd8e:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001bd92:	603d      	str	r5, [r7, #0]
1001bd94:	f8c7 8004 	str.w	r8, [r7, #4]
1001bd98:	f300 80fe 	bgt.w	1001bf98 <_vfprintf_r+0xcc8>
1001bd9c:	3708      	adds	r7, #8
1001bd9e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001bda0:	607b      	str	r3, [r7, #4]
1001bda2:	3601      	adds	r6, #1
1001bda4:	441c      	add	r4, r3
1001bda6:	2e07      	cmp	r6, #7
1001bda8:	ab2c      	add	r3, sp, #176	@ 0xb0
1001bdaa:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001bdae:	603b      	str	r3, [r7, #0]
1001bdb0:	dcaa      	bgt.n	1001bd08 <_vfprintf_r+0xa38>
1001bdb2:	f107 0808 	add.w	r8, r7, #8
1001bdb6:	e45c      	b.n	1001b672 <_vfprintf_r+0x3a2>
1001bdb8:	464c      	mov	r4, r9
1001bdba:	2b0a      	cmp	r3, #10
1001bdbc:	f172 0100 	sbcs.w	r1, r2, #0
1001bdc0:	f080 82b9 	bcs.w	1001c336 <_vfprintf_r+0x1066>
1001bdc4:	3330      	adds	r3, #48	@ 0x30
1001bdc6:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
1001bdca:	46a1      	mov	r9, r4
1001bdcc:	f04f 0b01 	mov.w	fp, #1
1001bdd0:	f20d 1577 	addw	r5, sp, #375	@ 0x177
1001bdd4:	e6ca      	b.n	1001bb6c <_vfprintf_r+0x89c>
1001bdd6:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001bdda:	aa32      	add	r2, sp, #200	@ 0xc8
1001bddc:	9315      	str	r3, [sp, #84]	@ 0x54
1001bdde:	f001 f917 	bl	1001d010 <__sprint_r>
1001bde2:	2800      	cmp	r0, #0
1001bde4:	f47f af70 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001bde8:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001bdea:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001bdec:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001bdf0:	e412      	b.n	1001b618 <_vfprintf_r+0x348>
1001bdf2:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001bdf6:	aa32      	add	r2, sp, #200	@ 0xc8
1001bdf8:	f001 f90a 	bl	1001d010 <__sprint_r>
1001bdfc:	2800      	cmp	r0, #0
1001bdfe:	f47f af63 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001be02:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001be04:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001be08:	e418      	b.n	1001b63c <_vfprintf_r+0x36c>
1001be0a:	2d10      	cmp	r5, #16
1001be0c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001be0e:	f340 8752 	ble.w	1001ccb6 <_vfprintf_r+0x19e6>
1001be12:	4fbb      	ldr	r7, [pc, #748]	@ (1001c100 <_vfprintf_r+0xe30>)
1001be14:	9715      	str	r7, [sp, #84]	@ 0x54
1001be16:	e9dd a907 	ldrd	sl, r9, [sp, #28]
1001be1a:	2610      	movs	r6, #16
1001be1c:	e004      	b.n	1001be28 <_vfprintf_r+0xb58>
1001be1e:	3d10      	subs	r5, #16
1001be20:	2d10      	cmp	r5, #16
1001be22:	f108 0808 	add.w	r8, r8, #8
1001be26:	dd16      	ble.n	1001be56 <_vfprintf_r+0xb86>
1001be28:	3301      	adds	r3, #1
1001be2a:	3410      	adds	r4, #16
1001be2c:	2b07      	cmp	r3, #7
1001be2e:	e9c8 7600 	strd	r7, r6, [r8]
1001be32:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001be36:	ddf2      	ble.n	1001be1e <_vfprintf_r+0xb4e>
1001be38:	aa32      	add	r2, sp, #200	@ 0xc8
1001be3a:	4651      	mov	r1, sl
1001be3c:	4648      	mov	r0, r9
1001be3e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001be42:	f001 f8e5 	bl	1001d010 <__sprint_r>
1001be46:	2800      	cmp	r0, #0
1001be48:	f040 82f5 	bne.w	1001c436 <_vfprintf_r+0x1166>
1001be4c:	3d10      	subs	r5, #16
1001be4e:	2d10      	cmp	r5, #16
1001be50:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001be54:	dce8      	bgt.n	1001be28 <_vfprintf_r+0xb58>
1001be56:	3301      	adds	r3, #1
1001be58:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001be5a:	442c      	add	r4, r5
1001be5c:	2b07      	cmp	r3, #7
1001be5e:	e9c8 2500 	strd	r2, r5, [r8]
1001be62:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001be66:	f77f ac0d 	ble.w	1001b684 <_vfprintf_r+0x3b4>
1001be6a:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001be6e:	aa32      	add	r2, sp, #200	@ 0xc8
1001be70:	f001 f8ce 	bl	1001d010 <__sprint_r>
1001be74:	2800      	cmp	r0, #0
1001be76:	f47f af27 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001be7a:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001be7c:	e402      	b.n	1001b684 <_vfprintf_r+0x3b4>
1001be7e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001be80:	2a00      	cmp	r2, #0
1001be82:	f340 80fd 	ble.w	1001c080 <_vfprintf_r+0xdb0>
1001be86:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
1001be8a:	429f      	cmp	r7, r3
1001be8c:	bfa8      	it	ge
1001be8e:	461f      	movge	r7, r3
1001be90:	2f00      	cmp	r7, #0
1001be92:	eb05 0b03 	add.w	fp, r5, r3
1001be96:	dd0b      	ble.n	1001beb0 <_vfprintf_r+0xbe0>
1001be98:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001be9a:	3301      	adds	r3, #1
1001be9c:	443c      	add	r4, r7
1001be9e:	2b07      	cmp	r3, #7
1001bea0:	e9c8 5700 	strd	r5, r7, [r8]
1001bea4:	9434      	str	r4, [sp, #208]	@ 0xd0
1001bea6:	9333      	str	r3, [sp, #204]	@ 0xcc
1001bea8:	f300 866f 	bgt.w	1001cb8a <_vfprintf_r+0x18ba>
1001beac:	f108 0808 	add.w	r8, r8, #8
1001beb0:	9e12      	ldr	r6, [sp, #72]	@ 0x48
1001beb2:	2f00      	cmp	r7, #0
1001beb4:	bfa8      	it	ge
1001beb6:	1bf6      	subge	r6, r6, r7
1001beb8:	2e00      	cmp	r6, #0
1001beba:	f300 8347 	bgt.w	1001c54c <_vfprintf_r+0x127c>
1001bebe:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
1001bec2:	f419 6f80 	tst.w	r9, #1024	@ 0x400
1001bec6:	44aa      	add	sl, r5
1001bec8:	f040 857a 	bne.w	1001c9c0 <_vfprintf_r+0x16f0>
1001becc:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001bece:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001bed0:	429d      	cmp	r5, r3
1001bed2:	db03      	blt.n	1001bedc <_vfprintf_r+0xc0c>
1001bed4:	f019 0f01 	tst.w	r9, #1
1001bed8:	f000 8404 	beq.w	1001c6e4 <_vfprintf_r+0x1414>
1001bedc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001bede:	9a19      	ldr	r2, [sp, #100]	@ 0x64
1001bee0:	441c      	add	r4, r3
1001bee2:	e9c8 2300 	strd	r2, r3, [r8]
1001bee6:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001bee8:	9434      	str	r4, [sp, #208]	@ 0xd0
1001beea:	3301      	adds	r3, #1
1001beec:	2b07      	cmp	r3, #7
1001beee:	9333      	str	r3, [sp, #204]	@ 0xcc
1001bef0:	f300 865a 	bgt.w	1001cba8 <_vfprintf_r+0x18d8>
1001bef4:	f108 0808 	add.w	r8, r8, #8
1001bef8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001befa:	ebab 060a 	sub.w	r6, fp, sl
1001befe:	1b5d      	subs	r5, r3, r5
1001bf00:	42ae      	cmp	r6, r5
1001bf02:	bfa8      	it	ge
1001bf04:	462e      	movge	r6, r5
1001bf06:	2e00      	cmp	r6, #0
1001bf08:	dd0d      	ble.n	1001bf26 <_vfprintf_r+0xc56>
1001bf0a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001bf0c:	f8c8 a000 	str.w	sl, [r8]
1001bf10:	3301      	adds	r3, #1
1001bf12:	4434      	add	r4, r6
1001bf14:	2b07      	cmp	r3, #7
1001bf16:	f8c8 6004 	str.w	r6, [r8, #4]
1001bf1a:	9434      	str	r4, [sp, #208]	@ 0xd0
1001bf1c:	9333      	str	r3, [sp, #204]	@ 0xcc
1001bf1e:	f300 8655 	bgt.w	1001cbcc <_vfprintf_r+0x18fc>
1001bf22:	f108 0808 	add.w	r8, r8, #8
1001bf26:	2e00      	cmp	r6, #0
1001bf28:	bfa8      	it	ge
1001bf2a:	1bad      	subge	r5, r5, r6
1001bf2c:	2d00      	cmp	r5, #0
1001bf2e:	f77f aba0 	ble.w	1001b672 <_vfprintf_r+0x3a2>
1001bf32:	2d10      	cmp	r5, #16
1001bf34:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001bf36:	f340 82da 	ble.w	1001c4ee <_vfprintf_r+0x121e>
1001bf3a:	4f72      	ldr	r7, [pc, #456]	@ (1001c104 <_vfprintf_r+0xe34>)
1001bf3c:	9715      	str	r7, [sp, #84]	@ 0x54
1001bf3e:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
1001bf42:	2610      	movs	r6, #16
1001bf44:	e005      	b.n	1001bf52 <_vfprintf_r+0xc82>
1001bf46:	f108 0808 	add.w	r8, r8, #8
1001bf4a:	3d10      	subs	r5, #16
1001bf4c:	2d10      	cmp	r5, #16
1001bf4e:	f340 82d0 	ble.w	1001c4f2 <_vfprintf_r+0x1222>
1001bf52:	3301      	adds	r3, #1
1001bf54:	3410      	adds	r4, #16
1001bf56:	2b07      	cmp	r3, #7
1001bf58:	e9c8 7600 	strd	r7, r6, [r8]
1001bf5c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001bf60:	ddf1      	ble.n	1001bf46 <_vfprintf_r+0xc76>
1001bf62:	aa32      	add	r2, sp, #200	@ 0xc8
1001bf64:	4651      	mov	r1, sl
1001bf66:	4658      	mov	r0, fp
1001bf68:	f001 f852 	bl	1001d010 <__sprint_r>
1001bf6c:	2800      	cmp	r0, #0
1001bf6e:	f47f ab07 	bne.w	1001b580 <_vfprintf_r+0x2b0>
1001bf72:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001bf76:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001bf7a:	e7e6      	b.n	1001bf4a <_vfprintf_r+0xc7a>
1001bf7c:	f019 0f01 	tst.w	r9, #1
1001bf80:	f47f aedf 	bne.w	1001bd42 <_vfprintf_r+0xa72>
1001bf84:	2301      	movs	r3, #1
1001bf86:	2e07      	cmp	r6, #7
1001bf88:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001bf8c:	f8c8 5000 	str.w	r5, [r8]
1001bf90:	f8c8 3004 	str.w	r3, [r8, #4]
1001bf94:	f77f af03 	ble.w	1001bd9e <_vfprintf_r+0xace>
1001bf98:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001bf9c:	aa32      	add	r2, sp, #200	@ 0xc8
1001bf9e:	f001 f837 	bl	1001d010 <__sprint_r>
1001bfa2:	2800      	cmp	r0, #0
1001bfa4:	f47f ae90 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001bfa8:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001bfac:	af35      	add	r7, sp, #212	@ 0xd4
1001bfae:	e6f6      	b.n	1001bd9e <_vfprintf_r+0xace>
1001bfb0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001bfb2:	2b01      	cmp	r3, #1
1001bfb4:	f77f aef3 	ble.w	1001bd9e <_vfprintf_r+0xace>
1001bfb8:	2b11      	cmp	r3, #17
1001bfba:	4b52      	ldr	r3, [pc, #328]	@ (1001c104 <_vfprintf_r+0xe34>)
1001bfbc:	9315      	str	r3, [sp, #84]	@ 0x54
1001bfbe:	f340 82b9 	ble.w	1001c534 <_vfprintf_r+0x1264>
1001bfc2:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
1001bfc6:	e9dd ba07 	ldrd	fp, sl, [sp, #28]
1001bfca:	2510      	movs	r5, #16
1001bfcc:	4699      	mov	r9, r3
1001bfce:	e006      	b.n	1001bfde <_vfprintf_r+0xd0e>
1001bfd0:	3708      	adds	r7, #8
1001bfd2:	f1a8 0810 	sub.w	r8, r8, #16
1001bfd6:	f1b8 0f10 	cmp.w	r8, #16
1001bfda:	f340 82a9 	ble.w	1001c530 <_vfprintf_r+0x1260>
1001bfde:	3601      	adds	r6, #1
1001bfe0:	3410      	adds	r4, #16
1001bfe2:	2e07      	cmp	r6, #7
1001bfe4:	e9c7 9500 	strd	r9, r5, [r7]
1001bfe8:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001bfec:	ddf0      	ble.n	1001bfd0 <_vfprintf_r+0xd00>
1001bfee:	aa32      	add	r2, sp, #200	@ 0xc8
1001bff0:	4659      	mov	r1, fp
1001bff2:	4650      	mov	r0, sl
1001bff4:	f001 f80c 	bl	1001d010 <__sprint_r>
1001bff8:	2800      	cmp	r0, #0
1001bffa:	f040 8202 	bne.w	1001c402 <_vfprintf_r+0x1132>
1001bffe:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001c002:	af35      	add	r7, sp, #212	@ 0xd4
1001c004:	e7e5      	b.n	1001bfd2 <_vfprintf_r+0xd02>
1001c006:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001c00a:	aa32      	add	r2, sp, #200	@ 0xc8
1001c00c:	f001 f800 	bl	1001d010 <__sprint_r>
1001c010:	2800      	cmp	r0, #0
1001c012:	f47f ae59 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001c016:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001c018:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001c01c:	f7ff bb17 	b.w	1001b64e <_vfprintf_r+0x37e>
1001c020:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001c022:	f851 3b04 	ldr.w	r3, [r1], #4
1001c026:	910d      	str	r1, [sp, #52]	@ 0x34
1001c028:	f014 0110 	ands.w	r1, r4, #16
1001c02c:	d155      	bne.n	1001c0da <_vfprintf_r+0xe0a>
1001c02e:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
1001c032:	d04d      	beq.n	1001c0d0 <_vfprintf_r+0xe00>
1001c034:	460a      	mov	r2, r1
1001c036:	b29b      	uxth	r3, r3
1001c038:	2101      	movs	r1, #1
1001c03a:	e4b7      	b.n	1001b9ac <_vfprintf_r+0x6dc>
1001c03c:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001c03e:	f851 3b04 	ldr.w	r3, [r1], #4
1001c042:	910d      	str	r1, [sp, #52]	@ 0x34
1001c044:	f019 0110 	ands.w	r1, r9, #16
1001c048:	f47f acad 	bne.w	1001b9a6 <_vfprintf_r+0x6d6>
1001c04c:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
1001c050:	f000 82a9 	beq.w	1001c5a6 <_vfprintf_r+0x12d6>
1001c054:	b29b      	uxth	r3, r3
1001c056:	460a      	mov	r2, r1
1001c058:	e4a5      	b.n	1001b9a6 <_vfprintf_r+0x6d6>
1001c05a:	9d07      	ldr	r5, [sp, #28]
1001c05c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
1001c05e:	f7f9 fee7 	bl	10015e30 <__retarget_lock_acquire_recursive>
1001c062:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
1001c066:	f7ff b959 	b.w	1001b31c <_vfprintf_r+0x4c>
1001c06a:	f019 0f01 	tst.w	r9, #1
1001c06e:	f43f ab00 	beq.w	1001b672 <_vfprintf_r+0x3a2>
1001c072:	e52b      	b.n	1001bacc <_vfprintf_r+0x7fc>
1001c074:	930d      	str	r3, [sp, #52]	@ 0x34
1001c076:	7823      	ldrb	r3, [r4, #0]
1001c078:	f7ff b9a2 	b.w	1001b3c0 <_vfprintf_r+0xf0>
1001c07c:	ad5e      	add	r5, sp, #376	@ 0x178
1001c07e:	e575      	b.n	1001bb6c <_vfprintf_r+0x89c>
1001c080:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001c082:	4921      	ldr	r1, [pc, #132]	@ (1001c108 <_vfprintf_r+0xe38>)
1001c084:	f8c8 1000 	str.w	r1, [r8]
1001c088:	3301      	adds	r3, #1
1001c08a:	3401      	adds	r4, #1
1001c08c:	2101      	movs	r1, #1
1001c08e:	2b07      	cmp	r3, #7
1001c090:	9434      	str	r4, [sp, #208]	@ 0xd0
1001c092:	9333      	str	r3, [sp, #204]	@ 0xcc
1001c094:	f8c8 1004 	str.w	r1, [r8, #4]
1001c098:	f300 8551 	bgt.w	1001cb3e <_vfprintf_r+0x186e>
1001c09c:	f108 0808 	add.w	r8, r8, #8
1001c0a0:	2a00      	cmp	r2, #0
1001c0a2:	f47f ae14 	bne.w	1001bcce <_vfprintf_r+0x9fe>
1001c0a6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001c0a8:	f009 0301 	and.w	r3, r9, #1
1001c0ac:	4313      	orrs	r3, r2
1001c0ae:	f43f aae0 	beq.w	1001b672 <_vfprintf_r+0x3a2>
1001c0b2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001c0b4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
1001c0b6:	441c      	add	r4, r3
1001c0b8:	e9c8 2300 	strd	r2, r3, [r8]
1001c0bc:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001c0be:	9434      	str	r4, [sp, #208]	@ 0xd0
1001c0c0:	3301      	adds	r3, #1
1001c0c2:	2b07      	cmp	r3, #7
1001c0c4:	9333      	str	r3, [sp, #204]	@ 0xcc
1001c0c6:	f300 83cd 	bgt.w	1001c864 <_vfprintf_r+0x1594>
1001c0ca:	f108 0808 	add.w	r8, r8, #8
1001c0ce:	e60f      	b.n	1001bcf0 <_vfprintf_r+0xa20>
1001c0d0:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
1001c0d4:	bf1c      	itt	ne
1001c0d6:	b2db      	uxtbne	r3, r3
1001c0d8:	4602      	movne	r2, r0
1001c0da:	2101      	movs	r1, #1
1001c0dc:	e466      	b.n	1001b9ac <_vfprintf_r+0x6dc>
1001c0de:	f419 7f00 	tst.w	r9, #512	@ 0x200
1001c0e2:	f040 8307 	bne.w	1001c6f4 <_vfprintf_r+0x1424>
1001c0e6:	17da      	asrs	r2, r3, #31
1001c0e8:	4611      	mov	r1, r2
1001c0ea:	2900      	cmp	r1, #0
1001c0ec:	f6bf abdb 	bge.w	1001b8a6 <_vfprintf_r+0x5d6>
1001c0f0:	425b      	negs	r3, r3
1001c0f2:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
1001c0f6:	464c      	mov	r4, r9
1001c0f8:	202d      	movs	r0, #45	@ 0x2d
1001c0fa:	2101      	movs	r1, #1
1001c0fc:	e457      	b.n	1001b9ae <_vfprintf_r+0x6de>
1001c0fe:	bf00      	nop
1001c100:	1002a69c 	.word	0x1002a69c
1001c104:	1002a68c 	.word	0x1002a68c
1001c108:	1002a668 	.word	0x1002a668
1001c10c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
1001c10e:	7823      	ldrb	r3, [r4, #0]
1001c110:	2a00      	cmp	r2, #0
1001c112:	f43f a955 	beq.w	1001b3c0 <_vfprintf_r+0xf0>
1001c116:	7812      	ldrb	r2, [r2, #0]
1001c118:	2a00      	cmp	r2, #0
1001c11a:	f43f a951 	beq.w	1001b3c0 <_vfprintf_r+0xf0>
1001c11e:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
1001c122:	f7ff b94d 	b.w	1001b3c0 <_vfprintf_r+0xf0>
1001c126:	f019 0f10 	tst.w	r9, #16
1001c12a:	f040 81fb 	bne.w	1001c524 <_vfprintf_r+0x1254>
1001c12e:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001c132:	f040 82e5 	bne.w	1001c700 <_vfprintf_r+0x1430>
1001c136:	f419 7f00 	tst.w	r9, #512	@ 0x200
1001c13a:	f000 81f3 	beq.w	1001c524 <_vfprintf_r+0x1254>
1001c13e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001c140:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001c142:	681b      	ldr	r3, [r3, #0]
1001c144:	701a      	strb	r2, [r3, #0]
1001c146:	e49b      	b.n	1001ba80 <_vfprintf_r+0x7b0>
1001c148:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001c14c:	4602      	mov	r2, r0
1001c14e:	460b      	mov	r3, r1
1001c150:	f004 fdb0 	bl	10020cb4 <__aeabi_dcmpun>
1001c154:	2800      	cmp	r0, #0
1001c156:	f040 8638 	bne.w	1001cdca <_vfprintf_r+0x1afa>
1001c15a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001c15c:	2b61      	cmp	r3, #97	@ 0x61
1001c15e:	f000 8521 	beq.w	1001cba4 <_vfprintf_r+0x18d4>
1001c162:	2b41      	cmp	r3, #65	@ 0x41
1001c164:	f000 82e3 	beq.w	1001c72e <_vfprintf_r+0x145e>
1001c168:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001c16a:	3301      	adds	r3, #1
1001c16c:	f000 8617 	beq.w	1001cd9e <_vfprintf_r+0x1ace>
1001c170:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001c172:	f023 0320 	bic.w	r3, r3, #32
1001c176:	2b47      	cmp	r3, #71	@ 0x47
1001c178:	d104      	bne.n	1001c184 <_vfprintf_r+0xeb4>
1001c17a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001c17c:	2b00      	cmp	r3, #0
1001c17e:	bf08      	it	eq
1001c180:	2301      	moveq	r3, #1
1001c182:	9309      	str	r3, [sp, #36]	@ 0x24
1001c184:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
1001c188:	f449 7080 	orr.w	r0, r9, #256	@ 0x100
1001c18c:	2a00      	cmp	r2, #0
1001c18e:	9015      	str	r0, [sp, #84]	@ 0x54
1001c190:	f8cd 9018 	str.w	r9, [sp, #24]
1001c194:	f04f 0300 	mov.w	r3, #0
1001c198:	f2c0 84df 	blt.w	1001cb5a <_vfprintf_r+0x188a>
1001c19c:	e9cd 1224 	strd	r1, r2, [sp, #144]	@ 0x90
1001c1a0:	931f      	str	r3, [sp, #124]	@ 0x7c
1001c1a2:	930c      	str	r3, [sp, #48]	@ 0x30
1001c1a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001c1a6:	3b41      	subs	r3, #65	@ 0x41
1001c1a8:	2b25      	cmp	r3, #37	@ 0x25
1001c1aa:	f200 8203 	bhi.w	1001c5b4 <_vfprintf_r+0x12e4>
1001c1ae:	e8df f013 	tbh	[pc, r3, lsl #1]
1001c1b2:	0374      	.short	0x0374
1001c1b4:	02010201 	.word	0x02010201
1001c1b8:	036d0201 	.word	0x036d0201
1001c1bc:	02010371 	.word	0x02010371
1001c1c0:	02010201 	.word	0x02010201
1001c1c4:	02010201 	.word	0x02010201
1001c1c8:	02010201 	.word	0x02010201
1001c1cc:	02010201 	.word	0x02010201
1001c1d0:	02010201 	.word	0x02010201
1001c1d4:	02010201 	.word	0x02010201
1001c1d8:	02010201 	.word	0x02010201
1001c1dc:	02010201 	.word	0x02010201
1001c1e0:	02010201 	.word	0x02010201
1001c1e4:	02010201 	.word	0x02010201
1001c1e8:	02010201 	.word	0x02010201
1001c1ec:	02010201 	.word	0x02010201
1001c1f0:	02010201 	.word	0x02010201
1001c1f4:	02010201 	.word	0x02010201
1001c1f8:	036d0201 	.word	0x036d0201
1001c1fc:	0371      	.short	0x0371
1001c1fe:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001c202:	4bc3      	ldr	r3, [pc, #780]	@ (1001c510 <_vfprintf_r+0x1240>)
1001c204:	931a      	str	r3, [sp, #104]	@ 0x68
1001c206:	f019 0220 	ands.w	r2, r9, #32
1001c20a:	d06a      	beq.n	1001c2e2 <_vfprintf_r+0x1012>
1001c20c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001c20e:	3307      	adds	r3, #7
1001c210:	f023 0307 	bic.w	r3, r3, #7
1001c214:	4619      	mov	r1, r3
1001c216:	685a      	ldr	r2, [r3, #4]
1001c218:	f851 3b08 	ldr.w	r3, [r1], #8
1001c21c:	910d      	str	r1, [sp, #52]	@ 0x34
1001c21e:	f019 0f01 	tst.w	r9, #1
1001c222:	d00a      	beq.n	1001c23a <_vfprintf_r+0xf6a>
1001c224:	ea53 0102 	orrs.w	r1, r3, r2
1001c228:	d007      	beq.n	1001c23a <_vfprintf_r+0xf6a>
1001c22a:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001c22c:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
1001c230:	2130      	movs	r1, #48	@ 0x30
1001c232:	f049 0902 	orr.w	r9, r9, #2
1001c236:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
1001c23a:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
1001c23e:	2102      	movs	r1, #2
1001c240:	f7ff bbb4 	b.w	1001b9ac <_vfprintf_r+0x6dc>
1001c244:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001c248:	464c      	mov	r4, r9
1001c24a:	f7ff bbd0 	b.w	1001b9ee <_vfprintf_r+0x71e>
1001c24e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001c252:	f7ff bb9b 	b.w	1001b98c <_vfprintf_r+0x6bc>
1001c256:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001c25a:	4bae      	ldr	r3, [pc, #696]	@ (1001c514 <_vfprintf_r+0x1244>)
1001c25c:	931a      	str	r3, [sp, #104]	@ 0x68
1001c25e:	e7d2      	b.n	1001c206 <_vfprintf_r+0xf36>
1001c260:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001c264:	aa32      	add	r2, sp, #200	@ 0xc8
1001c266:	f000 fed3 	bl	1001d010 <__sprint_r>
1001c26a:	2800      	cmp	r0, #0
1001c26c:	f47f ad2c 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001c270:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001c272:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001c276:	f7ff b9e4 	b.w	1001b642 <_vfprintf_r+0x372>
1001c27a:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001c27e:	aa32      	add	r2, sp, #200	@ 0xc8
1001c280:	f000 fec6 	bl	1001d010 <__sprint_r>
1001c284:	2800      	cmp	r0, #0
1001c286:	f47f ad1f 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001c28a:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001c28c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001c290:	e42a      	b.n	1001bae8 <_vfprintf_r+0x818>
1001c292:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001c294:	950c      	str	r5, [sp, #48]	@ 0x30
1001c296:	2b06      	cmp	r3, #6
1001c298:	4629      	mov	r1, r5
1001c29a:	bf28      	it	cs
1001c29c:	2306      	movcs	r3, #6
1001c29e:	9509      	str	r5, [sp, #36]	@ 0x24
1001c2a0:	462a      	mov	r2, r5
1001c2a2:	9306      	str	r3, [sp, #24]
1001c2a4:	4d9c      	ldr	r5, [pc, #624]	@ (1001c518 <_vfprintf_r+0x1248>)
1001c2a6:	960d      	str	r6, [sp, #52]	@ 0x34
1001c2a8:	469b      	mov	fp, r3
1001c2aa:	9114      	str	r1, [sp, #80]	@ 0x50
1001c2ac:	9110      	str	r1, [sp, #64]	@ 0x40
1001c2ae:	9112      	str	r1, [sp, #72]	@ 0x48
1001c2b0:	f7ff ba40 	b.w	1001b734 <_vfprintf_r+0x464>
1001c2b4:	2208      	movs	r2, #8
1001c2b6:	2100      	movs	r1, #0
1001c2b8:	a830      	add	r0, sp, #192	@ 0xc0
1001c2ba:	f7f9 fd27 	bl	10015d0c <memset>
1001c2be:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001c2c0:	9808      	ldr	r0, [sp, #32]
1001c2c2:	681a      	ldr	r2, [r3, #0]
1001c2c4:	ad45      	add	r5, sp, #276	@ 0x114
1001c2c6:	ab30      	add	r3, sp, #192	@ 0xc0
1001c2c8:	4629      	mov	r1, r5
1001c2ca:	f001 ff37 	bl	1001e13c <_wcrtomb_r>
1001c2ce:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001c2d2:	4683      	mov	fp, r0
1001c2d4:	f000 8544 	beq.w	1001cd60 <_vfprintf_r+0x1a90>
1001c2d8:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
1001c2dc:	9306      	str	r3, [sp, #24]
1001c2de:	f7ff ba93 	b.w	1001b808 <_vfprintf_r+0x538>
1001c2e2:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001c2e4:	f851 3b04 	ldr.w	r3, [r1], #4
1001c2e8:	910d      	str	r1, [sp, #52]	@ 0x34
1001c2ea:	f019 0110 	ands.w	r1, r9, #16
1001c2ee:	d196      	bne.n	1001c21e <_vfprintf_r+0xf4e>
1001c2f0:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
1001c2f4:	f000 8151 	beq.w	1001c59a <_vfprintf_r+0x12ca>
1001c2f8:	b29b      	uxth	r3, r3
1001c2fa:	460a      	mov	r2, r1
1001c2fc:	e78f      	b.n	1001c21e <_vfprintf_r+0xf4e>
1001c2fe:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001c302:	ad5e      	add	r5, sp, #376	@ 0x178
1001c304:	e432      	b.n	1001bb6c <_vfprintf_r+0x89c>
1001c306:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001c30a:	aa32      	add	r2, sp, #200	@ 0xc8
1001c30c:	f000 fe80 	bl	1001d010 <__sprint_r>
1001c310:	2800      	cmp	r0, #0
1001c312:	f47f acd9 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001c316:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001c31a:	af35      	add	r7, sp, #212	@ 0xd4
1001c31c:	e527      	b.n	1001bd6e <_vfprintf_r+0xa9e>
1001c31e:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001c322:	aa32      	add	r2, sp, #200	@ 0xc8
1001c324:	f000 fe74 	bl	1001d010 <__sprint_r>
1001c328:	2800      	cmp	r0, #0
1001c32a:	f47f accd 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001c32e:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001c332:	af35      	add	r7, sp, #212	@ 0xd4
1001c334:	e50f      	b.n	1001bd56 <_vfprintf_r+0xa86>
1001c336:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
1001c33a:	2100      	movs	r1, #0
1001c33c:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
1001c340:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 1001c51c <_vfprintf_r+0x124c>
1001c344:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
1001c348:	9406      	str	r4, [sp, #24]
1001c34a:	ad5e      	add	r5, sp, #376	@ 0x178
1001c34c:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
1001c350:	2705      	movs	r7, #5
1001c352:	468c      	mov	ip, r1
1001c354:	465e      	mov	r6, fp
1001c356:	e005      	b.n	1001c364 <_vfprintf_r+0x1094>
1001c358:	2b0a      	cmp	r3, #10
1001c35a:	f172 0200 	sbcs.w	r2, r2, #0
1001c35e:	d333      	bcc.n	1001c3c8 <_vfprintf_r+0x10f8>
1001c360:	465b      	mov	r3, fp
1001c362:	4622      	mov	r2, r4
1001c364:	1899      	adds	r1, r3, r2
1001c366:	f141 0100 	adc.w	r1, r1, #0
1001c36a:	fba9 0401 	umull	r0, r4, r9, r1
1001c36e:	f024 0003 	bic.w	r0, r4, #3
1001c372:	eb00 0094 	add.w	r0, r0, r4, lsr #2
1001c376:	1a09      	subs	r1, r1, r0
1001c378:	1a58      	subs	r0, r3, r1
1001c37a:	f162 0e00 	sbc.w	lr, r2, #0
1001c37e:	fb0a f400 	mul.w	r4, sl, r0
1001c382:	fba0 b009 	umull	fp, r0, r0, r9
1001c386:	fb09 440e 	mla	r4, r9, lr, r4
1001c38a:	f00b 0e01 	and.w	lr, fp, #1
1001c38e:	4404      	add	r4, r0
1001c390:	fbae 0e07 	umull	r0, lr, lr, r7
1001c394:	1840      	adds	r0, r0, r1
1001c396:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
1001c39a:	3030      	adds	r0, #48	@ 0x30
1001c39c:	f805 0c01 	strb.w	r0, [r5, #-1]
1001c3a0:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
1001c3a4:	f10c 0c01 	add.w	ip, ip, #1
1001c3a8:	3d01      	subs	r5, #1
1001c3aa:	0864      	lsrs	r4, r4, #1
1001c3ac:	2e00      	cmp	r6, #0
1001c3ae:	d0d3      	beq.n	1001c358 <_vfprintf_r+0x1088>
1001c3b0:	f898 1000 	ldrb.w	r1, [r8]
1001c3b4:	458c      	cmp	ip, r1
1001c3b6:	d1cf      	bne.n	1001c358 <_vfprintf_r+0x1088>
1001c3b8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
1001c3bc:	d0cc      	beq.n	1001c358 <_vfprintf_r+0x1088>
1001c3be:	2b0a      	cmp	r3, #10
1001c3c0:	f172 0200 	sbcs.w	r2, r2, #0
1001c3c4:	f080 82c5 	bcs.w	1001c952 <_vfprintf_r+0x1682>
1001c3c8:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
1001c3cc:	9c06      	ldr	r4, [sp, #24]
1001c3ce:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
1001c3d2:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
1001c3d6:	f7ff bbc5 	b.w	1001bb64 <_vfprintf_r+0x894>
1001c3da:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001c3de:	aa32      	add	r2, sp, #200	@ 0xc8
1001c3e0:	9315      	str	r3, [sp, #84]	@ 0x54
1001c3e2:	f000 fe15 	bl	1001d010 <__sprint_r>
1001c3e6:	2800      	cmp	r0, #0
1001c3e8:	f47f ac6e 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001c3ec:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001c3f0:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001c3f2:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001c3f4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001c3f8:	f7ff b8fc 	b.w	1001b5f4 <_vfprintf_r+0x324>
1001c3fc:	46a3      	mov	fp, r4
1001c3fe:	f7ff b8bf 	b.w	1001b580 <_vfprintf_r+0x2b0>
1001c402:	46d3      	mov	fp, sl
1001c404:	f7ff b8bc 	b.w	1001b580 <_vfprintf_r+0x2b0>
1001c408:	4658      	mov	r0, fp
1001c40a:	f7fa f9d7 	bl	100167bc <__sinit>
1001c40e:	f7fe bf7c 	b.w	1001b30a <_vfprintf_r+0x3a>
1001c412:	2901      	cmp	r1, #1
1001c414:	464c      	mov	r4, r9
1001c416:	f47f ab95 	bne.w	1001bb44 <_vfprintf_r+0x874>
1001c41a:	e4d3      	b.n	1001bdc4 <_vfprintf_r+0xaf4>
1001c41c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001c420:	aa32      	add	r2, sp, #200	@ 0xc8
1001c422:	f000 fdf5 	bl	1001d010 <__sprint_r>
1001c426:	2800      	cmp	r0, #0
1001c428:	f47f ac4e 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001c42c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001c42e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001c432:	f7ff bb46 	b.w	1001bac2 <_vfprintf_r+0x7f2>
1001c436:	46cb      	mov	fp, r9
1001c438:	f7ff b8a2 	b.w	1001b580 <_vfprintf_r+0x2b0>
1001c43c:	af30      	add	r7, sp, #192	@ 0xc0
1001c43e:	2208      	movs	r2, #8
1001c440:	2100      	movs	r1, #0
1001c442:	4638      	mov	r0, r7
1001c444:	952b      	str	r5, [sp, #172]	@ 0xac
1001c446:	f7f9 fc61 	bl	10015d0c <memset>
1001c44a:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
1001c44e:	f1ba 3fff 	cmp.w	sl, #4294967295	@ 0xffffffff
1001c452:	f000 8270 	beq.w	1001c936 <_vfprintf_r+0x1666>
1001c456:	2400      	movs	r4, #0
1001c458:	f8cd 9018 	str.w	r9, [sp, #24]
1001c45c:	46a3      	mov	fp, r4
1001c45e:	f8dd 9020 	ldr.w	r9, [sp, #32]
1001c462:	e00c      	b.n	1001c47e <_vfprintf_r+0x11ae>
1001c464:	a945      	add	r1, sp, #276	@ 0x114
1001c466:	4648      	mov	r0, r9
1001c468:	f001 fe68 	bl	1001e13c <_wcrtomb_r>
1001c46c:	1c41      	adds	r1, r0, #1
1001c46e:	4458      	add	r0, fp
1001c470:	f000 8476 	beq.w	1001cd60 <_vfprintf_r+0x1a90>
1001c474:	4550      	cmp	r0, sl
1001c476:	dc08      	bgt.n	1001c48a <_vfprintf_r+0x11ba>
1001c478:	f000 84c3 	beq.w	1001ce02 <_vfprintf_r+0x1b32>
1001c47c:	4683      	mov	fp, r0
1001c47e:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
1001c480:	5912      	ldr	r2, [r2, r4]
1001c482:	463b      	mov	r3, r7
1001c484:	3404      	adds	r4, #4
1001c486:	2a00      	cmp	r2, #0
1001c488:	d1ec      	bne.n	1001c464 <_vfprintf_r+0x1194>
1001c48a:	f8dd 9018 	ldr.w	r9, [sp, #24]
1001c48e:	f1bb 0f00 	cmp.w	fp, #0
1001c492:	f000 8343 	beq.w	1001cb1c <_vfprintf_r+0x184c>
1001c496:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
1001c49a:	f340 83fa 	ble.w	1001cc92 <_vfprintf_r+0x19c2>
1001c49e:	9808      	ldr	r0, [sp, #32]
1001c4a0:	f10b 0101 	add.w	r1, fp, #1
1001c4a4:	f7f9 f8c4 	bl	10015630 <_malloc_r>
1001c4a8:	4605      	mov	r5, r0
1001c4aa:	2800      	cmp	r0, #0
1001c4ac:	f000 8458 	beq.w	1001cd60 <_vfprintf_r+0x1a90>
1001c4b0:	900c      	str	r0, [sp, #48]	@ 0x30
1001c4b2:	2208      	movs	r2, #8
1001c4b4:	2100      	movs	r1, #0
1001c4b6:	4638      	mov	r0, r7
1001c4b8:	f7f9 fc28 	bl	10015d0c <memset>
1001c4bc:	9808      	ldr	r0, [sp, #32]
1001c4be:	9700      	str	r7, [sp, #0]
1001c4c0:	465b      	mov	r3, fp
1001c4c2:	aa2b      	add	r2, sp, #172	@ 0xac
1001c4c4:	4629      	mov	r1, r5
1001c4c6:	f002 fcb9 	bl	1001ee3c <_wcsrtombs_r>
1001c4ca:	4583      	cmp	fp, r0
1001c4cc:	f040 8519 	bne.w	1001cf02 <_vfprintf_r+0x1c32>
1001c4d0:	2300      	movs	r3, #0
1001c4d2:	f805 300b 	strb.w	r3, [r5, fp]
1001c4d6:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
1001c4da:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001c4de:	960d      	str	r6, [sp, #52]	@ 0x34
1001c4e0:	9309      	str	r3, [sp, #36]	@ 0x24
1001c4e2:	9106      	str	r1, [sp, #24]
1001c4e4:	9314      	str	r3, [sp, #80]	@ 0x50
1001c4e6:	9310      	str	r3, [sp, #64]	@ 0x40
1001c4e8:	9312      	str	r3, [sp, #72]	@ 0x48
1001c4ea:	f7ff b923 	b.w	1001b734 <_vfprintf_r+0x464>
1001c4ee:	4a0c      	ldr	r2, [pc, #48]	@ (1001c520 <_vfprintf_r+0x1250>)
1001c4f0:	9215      	str	r2, [sp, #84]	@ 0x54
1001c4f2:	3301      	adds	r3, #1
1001c4f4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001c4f6:	f8c8 2000 	str.w	r2, [r8]
1001c4fa:	442c      	add	r4, r5
1001c4fc:	2b07      	cmp	r3, #7
1001c4fe:	f8c8 5004 	str.w	r5, [r8, #4]
1001c502:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001c506:	f77f a8b2 	ble.w	1001b66e <_vfprintf_r+0x39e>
1001c50a:	f7ff bbfd 	b.w	1001bd08 <_vfprintf_r+0xa38>
1001c50e:	bf00      	nop
1001c510:	1002a64c 	.word	0x1002a64c
1001c514:	1002a638 	.word	0x1002a638
1001c518:	1002a660 	.word	0x1002a660
1001c51c:	cccccccd 	.word	0xcccccccd
1001c520:	1002a68c 	.word	0x1002a68c
1001c524:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001c526:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001c528:	681b      	ldr	r3, [r3, #0]
1001c52a:	601a      	str	r2, [r3, #0]
1001c52c:	f7ff baa8 	b.w	1001ba80 <_vfprintf_r+0x7b0>
1001c530:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
1001c534:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001c536:	603b      	str	r3, [r7, #0]
1001c538:	3601      	adds	r6, #1
1001c53a:	4444      	add	r4, r8
1001c53c:	2e07      	cmp	r6, #7
1001c53e:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001c542:	f8c7 8004 	str.w	r8, [r7, #4]
1001c546:	f77f ac29 	ble.w	1001bd9c <_vfprintf_r+0xacc>
1001c54a:	e525      	b.n	1001bf98 <_vfprintf_r+0xcc8>
1001c54c:	2e10      	cmp	r6, #16
1001c54e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001c550:	f340 84ad 	ble.w	1001ceae <_vfprintf_r+0x1bde>
1001c554:	4898      	ldr	r0, [pc, #608]	@ (1001c7b8 <_vfprintf_r+0x14e8>)
1001c556:	9015      	str	r0, [sp, #84]	@ 0x54
1001c558:	4642      	mov	r2, r8
1001c55a:	4621      	mov	r1, r4
1001c55c:	46a8      	mov	r8, r5
1001c55e:	e9dd 4a07 	ldrd	r4, sl, [sp, #28]
1001c562:	2710      	movs	r7, #16
1001c564:	4605      	mov	r5, r0
1001c566:	e004      	b.n	1001c572 <_vfprintf_r+0x12a2>
1001c568:	3208      	adds	r2, #8
1001c56a:	3e10      	subs	r6, #16
1001c56c:	2e10      	cmp	r6, #16
1001c56e:	f340 81ca 	ble.w	1001c906 <_vfprintf_r+0x1636>
1001c572:	3301      	adds	r3, #1
1001c574:	3110      	adds	r1, #16
1001c576:	2b07      	cmp	r3, #7
1001c578:	e9c2 5700 	strd	r5, r7, [r2]
1001c57c:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
1001c580:	ddf2      	ble.n	1001c568 <_vfprintf_r+0x1298>
1001c582:	aa32      	add	r2, sp, #200	@ 0xc8
1001c584:	4621      	mov	r1, r4
1001c586:	4650      	mov	r0, sl
1001c588:	f000 fd42 	bl	1001d010 <__sprint_r>
1001c58c:	2800      	cmp	r0, #0
1001c58e:	f47f af38 	bne.w	1001c402 <_vfprintf_r+0x1132>
1001c592:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
1001c596:	aa35      	add	r2, sp, #212	@ 0xd4
1001c598:	e7e7      	b.n	1001c56a <_vfprintf_r+0x129a>
1001c59a:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
1001c59e:	bf1c      	itt	ne
1001c5a0:	b2db      	uxtbne	r3, r3
1001c5a2:	4602      	movne	r2, r0
1001c5a4:	e63b      	b.n	1001c21e <_vfprintf_r+0xf4e>
1001c5a6:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
1001c5aa:	bf1c      	itt	ne
1001c5ac:	b2db      	uxtbne	r3, r3
1001c5ae:	4602      	movne	r2, r0
1001c5b0:	f7ff b9f9 	b.w	1001b9a6 <_vfprintf_r+0x6d6>
1001c5b4:	9e09      	ldr	r6, [sp, #36]	@ 0x24
1001c5b6:	2302      	movs	r3, #2
1001c5b8:	e9cd 3600 	strd	r3, r6, [sp]
1001c5bc:	ab30      	add	r3, sp, #192	@ 0xc0
1001c5be:	9304      	str	r3, [sp, #16]
1001c5c0:	ab2b      	add	r3, sp, #172	@ 0xac
1001c5c2:	9303      	str	r3, [sp, #12]
1001c5c4:	ab29      	add	r3, sp, #164	@ 0xa4
1001c5c6:	9302      	str	r3, [sp, #8]
1001c5c8:	9808      	ldr	r0, [sp, #32]
1001c5ca:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
1001c5ce:	f002 fcdb 	bl	1001ef88 <_dtoa_r>
1001c5d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001c5d4:	2b67      	cmp	r3, #103	@ 0x67
1001c5d6:	4605      	mov	r5, r0
1001c5d8:	f000 8177 	beq.w	1001c8ca <_vfprintf_r+0x15fa>
1001c5dc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001c5de:	2b47      	cmp	r3, #71	@ 0x47
1001c5e0:	f000 8173 	beq.w	1001c8ca <_vfprintf_r+0x15fa>
1001c5e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001c5e6:	f023 0720 	bic.w	r7, r3, #32
1001c5ea:	2f46      	cmp	r7, #70	@ 0x46
1001c5ec:	eb00 0406 	add.w	r4, r0, r6
1001c5f0:	d105      	bne.n	1001c5fe <_vfprintf_r+0x132e>
1001c5f2:	7803      	ldrb	r3, [r0, #0]
1001c5f4:	2b30      	cmp	r3, #48	@ 0x30
1001c5f6:	f000 83db 	beq.w	1001cdb0 <_vfprintf_r+0x1ae0>
1001c5fa:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
1001c5fc:	4434      	add	r4, r6
1001c5fe:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001c602:	2200      	movs	r2, #0
1001c604:	2300      	movs	r3, #0
1001c606:	f004 fb23 	bl	10020c50 <__aeabi_dcmpeq>
1001c60a:	2800      	cmp	r0, #0
1001c60c:	f000 81cc 	beq.w	1001c9a8 <_vfprintf_r+0x16d8>
1001c610:	4623      	mov	r3, r4
1001c612:	1b5b      	subs	r3, r3, r5
1001c614:	9313      	str	r3, [sp, #76]	@ 0x4c
1001c616:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001c618:	9212      	str	r2, [sp, #72]	@ 0x48
1001c61a:	2f47      	cmp	r7, #71	@ 0x47
1001c61c:	f000 815d 	beq.w	1001c8da <_vfprintf_r+0x160a>
1001c620:	2f46      	cmp	r7, #70	@ 0x46
1001c622:	f000 82e3 	beq.w	1001cbec <_vfprintf_r+0x191c>
1001c626:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001c628:	1e53      	subs	r3, r2, #1
1001c62a:	2961      	cmp	r1, #97	@ 0x61
1001c62c:	9329      	str	r3, [sp, #164]	@ 0xa4
1001c62e:	f000 8441 	beq.w	1001ceb4 <_vfprintf_r+0x1be4>
1001c632:	2941      	cmp	r1, #65	@ 0x41
1001c634:	f040 815c 	bne.w	1001c8f0 <_vfprintf_r+0x1620>
1001c638:	2150      	movs	r1, #80	@ 0x50
1001c63a:	2001      	movs	r0, #1
1001c63c:	2b00      	cmp	r3, #0
1001c63e:	bfb6      	itet	lt
1001c640:	f1c2 0301 	rsblt	r3, r2, #1
1001c644:	222b      	movge	r2, #43	@ 0x2b
1001c646:	222d      	movlt	r2, #45	@ 0x2d
1001c648:	2b09      	cmp	r3, #9
1001c64a:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
1001c64e:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
1001c652:	f340 8377 	ble.w	1001cd44 <_vfprintf_r+0x1a74>
1001c656:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
1001c65a:	4e58      	ldr	r6, [pc, #352]	@ (1001c7bc <_vfprintf_r+0x14ec>)
1001c65c:	4622      	mov	r2, r4
1001c65e:	4610      	mov	r0, r2
1001c660:	fba6 1203 	umull	r1, r2, r6, r3
1001c664:	08d2      	lsrs	r2, r2, #3
1001c666:	eb02 0182 	add.w	r1, r2, r2, lsl #2
1001c66a:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
1001c66e:	3130      	adds	r1, #48	@ 0x30
1001c670:	f800 1c01 	strb.w	r1, [r0, #-1]
1001c674:	4619      	mov	r1, r3
1001c676:	2963      	cmp	r1, #99	@ 0x63
1001c678:	4613      	mov	r3, r2
1001c67a:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
1001c67e:	dcee      	bgt.n	1001c65e <_vfprintf_r+0x138e>
1001c680:	3330      	adds	r3, #48	@ 0x30
1001c682:	f802 3c01 	strb.w	r3, [r2, #-1]
1001c686:	1e83      	subs	r3, r0, #2
1001c688:	42a3      	cmp	r3, r4
1001c68a:	f080 840c 	bcs.w	1001cea6 <_vfprintf_r+0x1bd6>
1001c68e:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
1001c692:	f813 1b01 	ldrb.w	r1, [r3], #1
1001c696:	f802 1f01 	strb.w	r1, [r2, #1]!
1001c69a:	42a3      	cmp	r3, r4
1001c69c:	d1f9      	bne.n	1001c692 <_vfprintf_r+0x13c2>
1001c69e:	ab5e      	add	r3, sp, #376	@ 0x178
1001c6a0:	1a18      	subs	r0, r3, r0
1001c6a2:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
1001c6a6:	931c      	str	r3, [sp, #112]	@ 0x70
1001c6a8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001c6aa:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
1001c6ac:	2b01      	cmp	r3, #1
1001c6ae:	eb03 0b02 	add.w	fp, r3, r2
1001c6b2:	f340 8378 	ble.w	1001cda6 <_vfprintf_r+0x1ad6>
1001c6b6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001c6b8:	449b      	add	fp, r3
1001c6ba:	9b06      	ldr	r3, [sp, #24]
1001c6bc:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
1001c6c0:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
1001c6c4:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
1001c6c8:	2300      	movs	r3, #0
1001c6ca:	9314      	str	r3, [sp, #80]	@ 0x50
1001c6cc:	9206      	str	r2, [sp, #24]
1001c6ce:	9310      	str	r3, [sp, #64]	@ 0x40
1001c6d0:	9312      	str	r3, [sp, #72]	@ 0x48
1001c6d2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
1001c6d4:	2b00      	cmp	r3, #0
1001c6d6:	f040 810f 	bne.w	1001c8f8 <_vfprintf_r+0x1628>
1001c6da:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001c6de:	9309      	str	r3, [sp, #36]	@ 0x24
1001c6e0:	f7ff b828 	b.w	1001b734 <_vfprintf_r+0x464>
1001c6e4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001c6e6:	ebab 060a 	sub.w	r6, fp, sl
1001c6ea:	1b5d      	subs	r5, r3, r5
1001c6ec:	42ae      	cmp	r6, r5
1001c6ee:	bfa8      	it	ge
1001c6f0:	462e      	movge	r6, r5
1001c6f2:	e418      	b.n	1001bf26 <_vfprintf_r+0xc56>
1001c6f4:	f343 12c0 	sbfx	r2, r3, #7, #1
1001c6f8:	4611      	mov	r1, r2
1001c6fa:	b25b      	sxtb	r3, r3
1001c6fc:	f7ff b8d0 	b.w	1001b8a0 <_vfprintf_r+0x5d0>
1001c700:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001c702:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001c704:	681b      	ldr	r3, [r3, #0]
1001c706:	801a      	strh	r2, [r3, #0]
1001c708:	f7ff b9ba 	b.w	1001ba80 <_vfprintf_r+0x7b0>
1001c70c:	9907      	ldr	r1, [sp, #28]
1001c70e:	aa32      	add	r2, sp, #200	@ 0xc8
1001c710:	4658      	mov	r0, fp
1001c712:	f000 fc7d 	bl	1001d010 <__sprint_r>
1001c716:	2800      	cmp	r0, #0
1001c718:	f43e af22 	beq.w	1001b560 <_vfprintf_r+0x290>
1001c71c:	f7fe bf36 	b.w	1001b58c <_vfprintf_r+0x2bc>
1001c720:	4628      	mov	r0, r5
1001c722:	960d      	str	r6, [sp, #52]	@ 0x34
1001c724:	f7fa f92c 	bl	10016980 <strlen>
1001c728:	4683      	mov	fp, r0
1001c72a:	f7ff b89c 	b.w	1001b866 <_vfprintf_r+0x596>
1001c72e:	2358      	movs	r3, #88	@ 0x58
1001c730:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
1001c734:	2330      	movs	r3, #48	@ 0x30
1001c736:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
1001c73a:	f049 0302 	orr.w	r3, r9, #2
1001c73e:	9306      	str	r3, [sp, #24]
1001c740:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001c742:	2b63      	cmp	r3, #99	@ 0x63
1001c744:	f300 82f6 	bgt.w	1001cd34 <_vfprintf_r+0x1a64>
1001c748:	2300      	movs	r3, #0
1001c74a:	930c      	str	r3, [sp, #48]	@ 0x30
1001c74c:	ad45      	add	r5, sp, #276	@ 0x114
1001c74e:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
1001c752:	9315      	str	r3, [sp, #84]	@ 0x54
1001c754:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001c756:	2b00      	cmp	r3, #0
1001c758:	f2c0 8200 	blt.w	1001cb5c <_vfprintf_r+0x188c>
1001c75c:	2300      	movs	r3, #0
1001c75e:	931f      	str	r3, [sp, #124]	@ 0x7c
1001c760:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
1001c764:	e9cd 3424 	strd	r3, r4, [sp, #144]	@ 0x90
1001c768:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001c76a:	2b61      	cmp	r3, #97	@ 0x61
1001c76c:	f47f ad1a 	bne.w	1001c1a4 <_vfprintf_r+0xed4>
1001c770:	aa29      	add	r2, sp, #164	@ 0xa4
1001c772:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001c776:	f003 fb81 	bl	1001fe7c <frexp>
1001c77a:	2200      	movs	r2, #0
1001c77c:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
1001c780:	f003 fffe 	bl	10020780 <__aeabi_dmul>
1001c784:	4602      	mov	r2, r0
1001c786:	460b      	mov	r3, r1
1001c788:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
1001c78c:	2200      	movs	r2, #0
1001c78e:	2300      	movs	r3, #0
1001c790:	f004 fa5e 	bl	10020c50 <__aeabi_dcmpeq>
1001c794:	2800      	cmp	r0, #0
1001c796:	f040 82f8 	bne.w	1001cd8a <_vfprintf_r+0x1aba>
1001c79a:	4b09      	ldr	r3, [pc, #36]	@ (1001c7c0 <_vfprintf_r+0x14f0>)
1001c79c:	9312      	str	r3, [sp, #72]	@ 0x48
1001c79e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001c7a0:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
1001c7a4:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
1001c7a8:	462e      	mov	r6, r5
1001c7aa:	9514      	str	r5, [sp, #80]	@ 0x50
1001c7ac:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001c7b0:	464d      	mov	r5, r9
1001c7b2:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
1001c7b6:	e00b      	b.n	1001c7d0 <_vfprintf_r+0x1500>
1001c7b8:	1002a68c 	.word	0x1002a68c
1001c7bc:	cccccccd 	.word	0xcccccccd
1001c7c0:	1002a638 	.word	0x1002a638
1001c7c4:	2200      	movs	r2, #0
1001c7c6:	2300      	movs	r3, #0
1001c7c8:	f004 fa42 	bl	10020c50 <__aeabi_dcmpeq>
1001c7cc:	b9f0      	cbnz	r0, 1001c80c <_vfprintf_r+0x153c>
1001c7ce:	463d      	mov	r5, r7
1001c7d0:	4ba9      	ldr	r3, [pc, #676]	@ (1001ca78 <_vfprintf_r+0x17a8>)
1001c7d2:	2200      	movs	r2, #0
1001c7d4:	4640      	mov	r0, r8
1001c7d6:	4649      	mov	r1, r9
1001c7d8:	f003 ffd2 	bl	10020780 <__aeabi_dmul>
1001c7dc:	4689      	mov	r9, r1
1001c7de:	4680      	mov	r8, r0
1001c7e0:	f004 fa7e 	bl	10020ce0 <__aeabi_d2iz>
1001c7e4:	4604      	mov	r4, r0
1001c7e6:	f003 ff61 	bl	100206ac <__aeabi_i2d>
1001c7ea:	4602      	mov	r2, r0
1001c7ec:	460b      	mov	r3, r1
1001c7ee:	4640      	mov	r0, r8
1001c7f0:	4649      	mov	r1, r9
1001c7f2:	f003 fe0d 	bl	10020410 <__aeabi_dsub>
1001c7f6:	f81b 3004 	ldrb.w	r3, [fp, r4]
1001c7fa:	1c6a      	adds	r2, r5, #1
1001c7fc:	46b2      	mov	sl, r6
1001c7fe:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
1001c802:	f806 3b01 	strb.w	r3, [r6], #1
1001c806:	4680      	mov	r8, r0
1001c808:	4689      	mov	r9, r1
1001c80a:	d1db      	bne.n	1001c7c4 <_vfprintf_r+0x14f4>
1001c80c:	46cb      	mov	fp, r9
1001c80e:	4657      	mov	r7, sl
1001c810:	46c2      	mov	sl, r8
1001c812:	4b9a      	ldr	r3, [pc, #616]	@ (1001ca7c <_vfprintf_r+0x17ac>)
1001c814:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
1001c818:	2200      	movs	r2, #0
1001c81a:	4650      	mov	r0, sl
1001c81c:	4659      	mov	r1, fp
1001c81e:	46a9      	mov	r9, r5
1001c820:	9d14      	ldr	r5, [sp, #80]	@ 0x50
1001c822:	f004 fa3d 	bl	10020ca0 <__aeabi_dcmpgt>
1001c826:	2800      	cmp	r0, #0
1001c828:	f040 8264 	bne.w	1001ccf4 <_vfprintf_r+0x1a24>
1001c82c:	4b93      	ldr	r3, [pc, #588]	@ (1001ca7c <_vfprintf_r+0x17ac>)
1001c82e:	4650      	mov	r0, sl
1001c830:	4659      	mov	r1, fp
1001c832:	2200      	movs	r2, #0
1001c834:	f004 fa0c 	bl	10020c50 <__aeabi_dcmpeq>
1001c838:	b110      	cbz	r0, 1001c840 <_vfprintf_r+0x1570>
1001c83a:	07e3      	lsls	r3, r4, #31
1001c83c:	f100 825a 	bmi.w	1001ccf4 <_vfprintf_r+0x1a24>
1001c840:	f1b9 0f00 	cmp.w	r9, #0
1001c844:	f2c0 8270 	blt.w	1001cd28 <_vfprintf_r+0x1a58>
1001c848:	f109 0301 	add.w	r3, r9, #1
1001c84c:	4433      	add	r3, r6
1001c84e:	2230      	movs	r2, #48	@ 0x30
1001c850:	f806 2b01 	strb.w	r2, [r6], #1
1001c854:	42b3      	cmp	r3, r6
1001c856:	d1fb      	bne.n	1001c850 <_vfprintf_r+0x1580>
1001c858:	1b5b      	subs	r3, r3, r5
1001c85a:	9313      	str	r3, [sp, #76]	@ 0x4c
1001c85c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001c85e:	f023 0720 	bic.w	r7, r3, #32
1001c862:	e6d8      	b.n	1001c616 <_vfprintf_r+0x1346>
1001c864:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001c868:	aa32      	add	r2, sp, #200	@ 0xc8
1001c86a:	f000 fbd1 	bl	1001d010 <__sprint_r>
1001c86e:	2800      	cmp	r0, #0
1001c870:	f47f aa2a 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001c874:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001c878:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001c87a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001c87e:	f7ff ba34 	b.w	1001bcea <_vfprintf_r+0xa1a>
1001c882:	6d88      	ldr	r0, [r1, #88]	@ 0x58
1001c884:	f7f9 fad6 	bl	10015e34 <__retarget_lock_release_recursive>
1001c888:	f7fe be3c 	b.w	1001b504 <_vfprintf_r+0x234>
1001c88c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001c88e:	1c5e      	adds	r6, r3, #1
1001c890:	2302      	movs	r3, #2
1001c892:	e691      	b.n	1001c5b8 <_vfprintf_r+0x12e8>
1001c894:	9e09      	ldr	r6, [sp, #36]	@ 0x24
1001c896:	2303      	movs	r3, #3
1001c898:	e68e      	b.n	1001c5b8 <_vfprintf_r+0x12e8>
1001c89a:	aa29      	add	r2, sp, #164	@ 0xa4
1001c89c:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001c8a0:	f003 faec 	bl	1001fe7c <frexp>
1001c8a4:	2200      	movs	r2, #0
1001c8a6:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
1001c8aa:	f003 ff69 	bl	10020780 <__aeabi_dmul>
1001c8ae:	4602      	mov	r2, r0
1001c8b0:	460b      	mov	r3, r1
1001c8b2:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
1001c8b6:	2200      	movs	r2, #0
1001c8b8:	2300      	movs	r3, #0
1001c8ba:	f004 f9c9 	bl	10020c50 <__aeabi_dcmpeq>
1001c8be:	2800      	cmp	r0, #0
1001c8c0:	f040 8263 	bne.w	1001cd8a <_vfprintf_r+0x1aba>
1001c8c4:	4b6e      	ldr	r3, [pc, #440]	@ (1001ca80 <_vfprintf_r+0x17b0>)
1001c8c6:	9312      	str	r3, [sp, #72]	@ 0x48
1001c8c8:	e769      	b.n	1001c79e <_vfprintf_r+0x14ce>
1001c8ca:	9b06      	ldr	r3, [sp, #24]
1001c8cc:	07df      	lsls	r7, r3, #31
1001c8ce:	f100 81e4 	bmi.w	1001cc9a <_vfprintf_r+0x19ca>
1001c8d2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001c8d4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001c8d6:	1b5b      	subs	r3, r3, r5
1001c8d8:	9313      	str	r3, [sp, #76]	@ 0x4c
1001c8da:	1cd3      	adds	r3, r2, #3
1001c8dc:	9212      	str	r2, [sp, #72]	@ 0x48
1001c8de:	db02      	blt.n	1001c8e6 <_vfprintf_r+0x1616>
1001c8e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001c8e2:	4293      	cmp	r3, r2
1001c8e4:	da44      	bge.n	1001c970 <_vfprintf_r+0x16a0>
1001c8e6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001c8e8:	3b02      	subs	r3, #2
1001c8ea:	930e      	str	r3, [sp, #56]	@ 0x38
1001c8ec:	1e53      	subs	r3, r2, #1
1001c8ee:	9329      	str	r3, [sp, #164]	@ 0xa4
1001c8f0:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
1001c8f4:	2000      	movs	r0, #0
1001c8f6:	e6a1      	b.n	1001c63c <_vfprintf_r+0x136c>
1001c8f8:	222d      	movs	r2, #45	@ 0x2d
1001c8fa:	2300      	movs	r3, #0
1001c8fc:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001c900:	9309      	str	r3, [sp, #36]	@ 0x24
1001c902:	f7fe bf1a 	b.w	1001b73a <_vfprintf_r+0x46a>
1001c906:	4645      	mov	r5, r8
1001c908:	460c      	mov	r4, r1
1001c90a:	4690      	mov	r8, r2
1001c90c:	3301      	adds	r3, #1
1001c90e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001c910:	f8c8 2000 	str.w	r2, [r8]
1001c914:	4434      	add	r4, r6
1001c916:	2b07      	cmp	r3, #7
1001c918:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001c91c:	f8c8 6004 	str.w	r6, [r8, #4]
1001c920:	f300 8226 	bgt.w	1001cd70 <_vfprintf_r+0x1aa0>
1001c924:	f108 0808 	add.w	r8, r8, #8
1001c928:	f7ff bac9 	b.w	1001bebe <_vfprintf_r+0xbee>
1001c92c:	222d      	movs	r2, #45	@ 0x2d
1001c92e:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001c932:	f7fe beee 	b.w	1001b712 <_vfprintf_r+0x442>
1001c936:	2300      	movs	r3, #0
1001c938:	9808      	ldr	r0, [sp, #32]
1001c93a:	9700      	str	r7, [sp, #0]
1001c93c:	aa2b      	add	r2, sp, #172	@ 0xac
1001c93e:	4619      	mov	r1, r3
1001c940:	f002 fa7c 	bl	1001ee3c <_wcsrtombs_r>
1001c944:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001c948:	4683      	mov	fp, r0
1001c94a:	f000 8209 	beq.w	1001cd60 <_vfprintf_r+0x1a90>
1001c94e:	952b      	str	r5, [sp, #172]	@ 0xac
1001c950:	e59d      	b.n	1001c48e <_vfprintf_r+0x11be>
1001c952:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
1001c954:	991d      	ldr	r1, [sp, #116]	@ 0x74
1001c956:	1aed      	subs	r5, r5, r3
1001c958:	461a      	mov	r2, r3
1001c95a:	4628      	mov	r0, r5
1001c95c:	f7f7 f900 	bl	10013b60 <strncpy>
1001c960:	f898 3001 	ldrb.w	r3, [r8, #1]
1001c964:	b10b      	cbz	r3, 1001c96a <_vfprintf_r+0x169a>
1001c966:	f108 0801 	add.w	r8, r8, #1
1001c96a:	f04f 0c00 	mov.w	ip, #0
1001c96e:	e4f7      	b.n	1001c360 <_vfprintf_r+0x1090>
1001c970:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001c972:	4293      	cmp	r3, r2
1001c974:	f300 8194 	bgt.w	1001cca0 <_vfprintf_r+0x19d0>
1001c978:	9b06      	ldr	r3, [sp, #24]
1001c97a:	07dc      	lsls	r4, r3, #31
1001c97c:	f140 824a 	bpl.w	1001ce14 <_vfprintf_r+0x1b44>
1001c980:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001c982:	eb02 0b03 	add.w	fp, r2, r3
1001c986:	9b06      	ldr	r3, [sp, #24]
1001c988:	0558      	lsls	r0, r3, #21
1001c98a:	d502      	bpl.n	1001c992 <_vfprintf_r+0x16c2>
1001c98c:	2a00      	cmp	r2, #0
1001c98e:	f300 824a 	bgt.w	1001ce26 <_vfprintf_r+0x1b56>
1001c992:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001c996:	9306      	str	r3, [sp, #24]
1001c998:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001c99c:	2367      	movs	r3, #103	@ 0x67
1001c99e:	930e      	str	r3, [sp, #56]	@ 0x38
1001c9a0:	2300      	movs	r3, #0
1001c9a2:	9314      	str	r3, [sp, #80]	@ 0x50
1001c9a4:	9310      	str	r3, [sp, #64]	@ 0x40
1001c9a6:	e694      	b.n	1001c6d2 <_vfprintf_r+0x1402>
1001c9a8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001c9aa:	42a3      	cmp	r3, r4
1001c9ac:	f4bf ae31 	bcs.w	1001c612 <_vfprintf_r+0x1342>
1001c9b0:	2130      	movs	r1, #48	@ 0x30
1001c9b2:	1c5a      	adds	r2, r3, #1
1001c9b4:	9230      	str	r2, [sp, #192]	@ 0xc0
1001c9b6:	7019      	strb	r1, [r3, #0]
1001c9b8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001c9ba:	429c      	cmp	r4, r3
1001c9bc:	d8f9      	bhi.n	1001c9b2 <_vfprintf_r+0x16e2>
1001c9be:	e628      	b.n	1001c612 <_vfprintf_r+0x1342>
1001c9c0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001c9c2:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
1001c9c6:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
1001c9ca:	4642      	mov	r2, r8
1001c9cc:	4621      	mov	r1, r4
1001c9ce:	4f2d      	ldr	r7, [pc, #180]	@ (1001ca84 <_vfprintf_r+0x17b4>)
1001c9d0:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
1001c9d4:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
1001c9d8:	f8dd b020 	ldr.w	fp, [sp, #32]
1001c9dc:	4654      	mov	r4, sl
1001c9de:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
1001c9e2:	b37b      	cbz	r3, 1001ca44 <_vfprintf_r+0x1774>
1001c9e4:	f1b9 0f00 	cmp.w	r9, #0
1001c9e8:	f000 8085 	beq.w	1001caf6 <_vfprintf_r+0x1826>
1001c9ec:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
1001c9f0:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001c9f2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001c9f4:	3001      	adds	r0, #1
1001c9f6:	4441      	add	r1, r8
1001c9f8:	2807      	cmp	r0, #7
1001c9fa:	e9c2 3800 	strd	r3, r8, [r2]
1001c9fe:	9134      	str	r1, [sp, #208]	@ 0xd0
1001ca00:	9033      	str	r0, [sp, #204]	@ 0xcc
1001ca02:	dc6d      	bgt.n	1001cae0 <_vfprintf_r+0x1810>
1001ca04:	3208      	adds	r2, #8
1001ca06:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001ca08:	f89a 0000 	ldrb.w	r0, [sl]
1001ca0c:	1b1e      	subs	r6, r3, r4
1001ca0e:	4286      	cmp	r6, r0
1001ca10:	bfa8      	it	ge
1001ca12:	4606      	movge	r6, r0
1001ca14:	2e00      	cmp	r6, #0
1001ca16:	dd0b      	ble.n	1001ca30 <_vfprintf_r+0x1760>
1001ca18:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001ca1a:	3001      	adds	r0, #1
1001ca1c:	4431      	add	r1, r6
1001ca1e:	2807      	cmp	r0, #7
1001ca20:	e9c2 4600 	strd	r4, r6, [r2]
1001ca24:	9134      	str	r1, [sp, #208]	@ 0xd0
1001ca26:	9033      	str	r0, [sp, #204]	@ 0xcc
1001ca28:	dc6b      	bgt.n	1001cb02 <_vfprintf_r+0x1832>
1001ca2a:	f89a 0000 	ldrb.w	r0, [sl]
1001ca2e:	3208      	adds	r2, #8
1001ca30:	2e00      	cmp	r6, #0
1001ca32:	bfac      	ite	ge
1001ca34:	1b85      	subge	r5, r0, r6
1001ca36:	4605      	movlt	r5, r0
1001ca38:	2d00      	cmp	r5, #0
1001ca3a:	dc14      	bgt.n	1001ca66 <_vfprintf_r+0x1796>
1001ca3c:	4404      	add	r4, r0
1001ca3e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001ca40:	2b00      	cmp	r3, #0
1001ca42:	d1cf      	bne.n	1001c9e4 <_vfprintf_r+0x1714>
1001ca44:	f1b9 0f00 	cmp.w	r9, #0
1001ca48:	d1d0      	bne.n	1001c9ec <_vfprintf_r+0x171c>
1001ca4a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001ca4e:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
1001ca52:	46a2      	mov	sl, r4
1001ca54:	45da      	cmp	sl, fp
1001ca56:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
1001ca5a:	4690      	mov	r8, r2
1001ca5c:	460c      	mov	r4, r1
1001ca5e:	bf28      	it	cs
1001ca60:	46da      	movcs	sl, fp
1001ca62:	f7ff ba33 	b.w	1001becc <_vfprintf_r+0xbfc>
1001ca66:	2d10      	cmp	r5, #16
1001ca68:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001ca6a:	f340 821a 	ble.w	1001cea2 <_vfprintf_r+0x1bd2>
1001ca6e:	4623      	mov	r3, r4
1001ca70:	463e      	mov	r6, r7
1001ca72:	462c      	mov	r4, r5
1001ca74:	461d      	mov	r5, r3
1001ca76:	e00c      	b.n	1001ca92 <_vfprintf_r+0x17c2>
1001ca78:	40300000 	.word	0x40300000
1001ca7c:	3fe00000 	.word	0x3fe00000
1001ca80:	1002a64c 	.word	0x1002a64c
1001ca84:	1002a68c 	.word	0x1002a68c
1001ca88:	3c10      	subs	r4, #16
1001ca8a:	2c10      	cmp	r4, #16
1001ca8c:	f102 0208 	add.w	r2, r2, #8
1001ca90:	dd16      	ble.n	1001cac0 <_vfprintf_r+0x17f0>
1001ca92:	3001      	adds	r0, #1
1001ca94:	3110      	adds	r1, #16
1001ca96:	2310      	movs	r3, #16
1001ca98:	2807      	cmp	r0, #7
1001ca9a:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
1001ca9e:	6017      	str	r7, [r2, #0]
1001caa0:	6053      	str	r3, [r2, #4]
1001caa2:	ddf1      	ble.n	1001ca88 <_vfprintf_r+0x17b8>
1001caa4:	9907      	ldr	r1, [sp, #28]
1001caa6:	aa32      	add	r2, sp, #200	@ 0xc8
1001caa8:	4658      	mov	r0, fp
1001caaa:	f000 fab1 	bl	1001d010 <__sprint_r>
1001caae:	2800      	cmp	r0, #0
1001cab0:	f47e ad66 	bne.w	1001b580 <_vfprintf_r+0x2b0>
1001cab4:	3c10      	subs	r4, #16
1001cab6:	2c10      	cmp	r4, #16
1001cab8:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
1001cabc:	aa35      	add	r2, sp, #212	@ 0xd4
1001cabe:	dce8      	bgt.n	1001ca92 <_vfprintf_r+0x17c2>
1001cac0:	462b      	mov	r3, r5
1001cac2:	4625      	mov	r5, r4
1001cac4:	461c      	mov	r4, r3
1001cac6:	3001      	adds	r0, #1
1001cac8:	4429      	add	r1, r5
1001caca:	2807      	cmp	r0, #7
1001cacc:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
1001cad0:	6016      	str	r6, [r2, #0]
1001cad2:	6055      	str	r5, [r2, #4]
1001cad4:	dc4b      	bgt.n	1001cb6e <_vfprintf_r+0x189e>
1001cad6:	f89a 0000 	ldrb.w	r0, [sl]
1001cada:	3208      	adds	r2, #8
1001cadc:	4404      	add	r4, r0
1001cade:	e7ae      	b.n	1001ca3e <_vfprintf_r+0x176e>
1001cae0:	9907      	ldr	r1, [sp, #28]
1001cae2:	aa32      	add	r2, sp, #200	@ 0xc8
1001cae4:	4658      	mov	r0, fp
1001cae6:	f000 fa93 	bl	1001d010 <__sprint_r>
1001caea:	2800      	cmp	r0, #0
1001caec:	f47e ad48 	bne.w	1001b580 <_vfprintf_r+0x2b0>
1001caf0:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001caf2:	aa35      	add	r2, sp, #212	@ 0xd4
1001caf4:	e787      	b.n	1001ca06 <_vfprintf_r+0x1736>
1001caf6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001caf8:	3b01      	subs	r3, #1
1001cafa:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
1001cafe:	9310      	str	r3, [sp, #64]	@ 0x40
1001cb00:	e776      	b.n	1001c9f0 <_vfprintf_r+0x1720>
1001cb02:	9907      	ldr	r1, [sp, #28]
1001cb04:	aa32      	add	r2, sp, #200	@ 0xc8
1001cb06:	4658      	mov	r0, fp
1001cb08:	f000 fa82 	bl	1001d010 <__sprint_r>
1001cb0c:	2800      	cmp	r0, #0
1001cb0e:	f47e ad37 	bne.w	1001b580 <_vfprintf_r+0x2b0>
1001cb12:	f89a 0000 	ldrb.w	r0, [sl]
1001cb16:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001cb18:	aa35      	add	r2, sp, #212	@ 0xd4
1001cb1a:	e789      	b.n	1001ca30 <_vfprintf_r+0x1760>
1001cb1c:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001cb20:	960d      	str	r6, [sp, #52]	@ 0x34
1001cb22:	f8cd b018 	str.w	fp, [sp, #24]
1001cb26:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
1001cb2a:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
1001cb2e:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
1001cb32:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
1001cb36:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
1001cb3a:	f7fe bdfb 	b.w	1001b734 <_vfprintf_r+0x464>
1001cb3e:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001cb42:	aa32      	add	r2, sp, #200	@ 0xc8
1001cb44:	f000 fa64 	bl	1001d010 <__sprint_r>
1001cb48:	2800      	cmp	r0, #0
1001cb4a:	f47f a8bd 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001cb4e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001cb50:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001cb52:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001cb56:	f7ff baa3 	b.w	1001c0a0 <_vfprintf_r+0xdd0>
1001cb5a:	930c      	str	r3, [sp, #48]	@ 0x30
1001cb5c:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
1001cb60:	9324      	str	r3, [sp, #144]	@ 0x90
1001cb62:	f104 4300 	add.w	r3, r4, #2147483648	@ 0x80000000
1001cb66:	9325      	str	r3, [sp, #148]	@ 0x94
1001cb68:	232d      	movs	r3, #45	@ 0x2d
1001cb6a:	931f      	str	r3, [sp, #124]	@ 0x7c
1001cb6c:	e5fc      	b.n	1001c768 <_vfprintf_r+0x1498>
1001cb6e:	9907      	ldr	r1, [sp, #28]
1001cb70:	aa32      	add	r2, sp, #200	@ 0xc8
1001cb72:	4658      	mov	r0, fp
1001cb74:	f000 fa4c 	bl	1001d010 <__sprint_r>
1001cb78:	2800      	cmp	r0, #0
1001cb7a:	f47e ad01 	bne.w	1001b580 <_vfprintf_r+0x2b0>
1001cb7e:	f89a 0000 	ldrb.w	r0, [sl]
1001cb82:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001cb84:	aa35      	add	r2, sp, #212	@ 0xd4
1001cb86:	4404      	add	r4, r0
1001cb88:	e759      	b.n	1001ca3e <_vfprintf_r+0x176e>
1001cb8a:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001cb8e:	aa32      	add	r2, sp, #200	@ 0xc8
1001cb90:	f000 fa3e 	bl	1001d010 <__sprint_r>
1001cb94:	2800      	cmp	r0, #0
1001cb96:	f47f a897 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001cb9a:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001cb9c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001cba0:	f7ff b986 	b.w	1001beb0 <_vfprintf_r+0xbe0>
1001cba4:	2378      	movs	r3, #120	@ 0x78
1001cba6:	e5c3      	b.n	1001c730 <_vfprintf_r+0x1460>
1001cba8:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001cbac:	aa32      	add	r2, sp, #200	@ 0xc8
1001cbae:	f000 fa2f 	bl	1001d010 <__sprint_r>
1001cbb2:	2800      	cmp	r0, #0
1001cbb4:	f47f a888 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001cbb8:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001cbba:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001cbbc:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001cbc0:	f7ff b99a 	b.w	1001bef8 <_vfprintf_r+0xc28>
1001cbc4:	49ab      	ldr	r1, [pc, #684]	@ (1001ce74 <_vfprintf_r+0x1ba4>)
1001cbc6:	9115      	str	r1, [sp, #84]	@ 0x54
1001cbc8:	f7fe bdeb 	b.w	1001b7a2 <_vfprintf_r+0x4d2>
1001cbcc:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001cbd0:	aa32      	add	r2, sp, #200	@ 0xc8
1001cbd2:	f000 fa1d 	bl	1001d010 <__sprint_r>
1001cbd6:	2800      	cmp	r0, #0
1001cbd8:	f47f a876 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001cbdc:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001cbde:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001cbe0:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001cbe2:	1b5d      	subs	r5, r3, r5
1001cbe4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001cbe8:	f7ff b99d 	b.w	1001bf26 <_vfprintf_r+0xc56>
1001cbec:	9b06      	ldr	r3, [sp, #24]
1001cbee:	9912      	ldr	r1, [sp, #72]	@ 0x48
1001cbf0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001cbf2:	f003 0301 	and.w	r3, r3, #1
1001cbf6:	2900      	cmp	r1, #0
1001cbf8:	ea43 0302 	orr.w	r3, r3, r2
1001cbfc:	f340 815d 	ble.w	1001ceba <_vfprintf_r+0x1bea>
1001cc00:	2b00      	cmp	r3, #0
1001cc02:	f040 8109 	bne.w	1001ce18 <_vfprintf_r+0x1b48>
1001cc06:	2366      	movs	r3, #102	@ 0x66
1001cc08:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001cc0c:	930e      	str	r3, [sp, #56]	@ 0x38
1001cc0e:	9b06      	ldr	r3, [sp, #24]
1001cc10:	055a      	lsls	r2, r3, #21
1001cc12:	f100 810a 	bmi.w	1001ce2a <_vfprintf_r+0x1b5a>
1001cc16:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001cc1a:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001cc1e:	9306      	str	r3, [sp, #24]
1001cc20:	e6be      	b.n	1001c9a0 <_vfprintf_r+0x16d0>
1001cc22:	2200      	movs	r2, #0
1001cc24:	9209      	str	r2, [sp, #36]	@ 0x24
1001cc26:	f7fe bbcc 	b.w	1001b3c2 <_vfprintf_r+0xf2>
1001cc2a:	9b07      	ldr	r3, [sp, #28]
1001cc2c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
1001cc2e:	07df      	lsls	r7, r3, #31
1001cc30:	d407      	bmi.n	1001cc42 <_vfprintf_r+0x1972>
1001cc32:	9b07      	ldr	r3, [sp, #28]
1001cc34:	899b      	ldrh	r3, [r3, #12]
1001cc36:	059e      	lsls	r6, r3, #22
1001cc38:	d403      	bmi.n	1001cc42 <_vfprintf_r+0x1972>
1001cc3a:	9b07      	ldr	r3, [sp, #28]
1001cc3c:	6d98      	ldr	r0, [r3, #88]	@ 0x58
1001cc3e:	f7f9 f8f9 	bl	10015e34 <__retarget_lock_release_recursive>
1001cc42:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001cc46:	930a      	str	r3, [sp, #40]	@ 0x28
1001cc48:	f7fe bcab 	b.w	1001b5a2 <_vfprintf_r+0x2d2>
1001cc4c:	4256      	negs	r6, r2
1001cc4e:	3210      	adds	r2, #16
1001cc50:	4a89      	ldr	r2, [pc, #548]	@ (1001ce78 <_vfprintf_r+0x1ba8>)
1001cc52:	9215      	str	r2, [sp, #84]	@ 0x54
1001cc54:	da34      	bge.n	1001ccc0 <_vfprintf_r+0x19f0>
1001cc56:	46aa      	mov	sl, r5
1001cc58:	2710      	movs	r7, #16
1001cc5a:	4615      	mov	r5, r2
1001cc5c:	e004      	b.n	1001cc68 <_vfprintf_r+0x1998>
1001cc5e:	f108 0808 	add.w	r8, r8, #8
1001cc62:	3e10      	subs	r6, #16
1001cc64:	2e10      	cmp	r6, #16
1001cc66:	dd2a      	ble.n	1001ccbe <_vfprintf_r+0x19ee>
1001cc68:	3301      	adds	r3, #1
1001cc6a:	3410      	adds	r4, #16
1001cc6c:	2b07      	cmp	r3, #7
1001cc6e:	e9c8 5700 	strd	r5, r7, [r8]
1001cc72:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001cc76:	ddf2      	ble.n	1001cc5e <_vfprintf_r+0x198e>
1001cc78:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001cc7c:	aa32      	add	r2, sp, #200	@ 0xc8
1001cc7e:	f000 f9c7 	bl	1001d010 <__sprint_r>
1001cc82:	2800      	cmp	r0, #0
1001cc84:	f47f a820 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001cc88:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001cc8c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001cc90:	e7e7      	b.n	1001cc62 <_vfprintf_r+0x1992>
1001cc92:	2300      	movs	r3, #0
1001cc94:	930c      	str	r3, [sp, #48]	@ 0x30
1001cc96:	ad45      	add	r5, sp, #276	@ 0x114
1001cc98:	e40b      	b.n	1001c4b2 <_vfprintf_r+0x11e2>
1001cc9a:	19ac      	adds	r4, r5, r6
1001cc9c:	2747      	movs	r7, #71	@ 0x47
1001cc9e:	e4ae      	b.n	1001c5fe <_vfprintf_r+0x132e>
1001cca0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001cca2:	9a18      	ldr	r2, [sp, #96]	@ 0x60
1001cca4:	eb03 0b02 	add.w	fp, r3, r2
1001cca8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001ccaa:	2b00      	cmp	r3, #0
1001ccac:	f340 80ee 	ble.w	1001ce8c <_vfprintf_r+0x1bbc>
1001ccb0:	2367      	movs	r3, #103	@ 0x67
1001ccb2:	930e      	str	r3, [sp, #56]	@ 0x38
1001ccb4:	e7ab      	b.n	1001cc0e <_vfprintf_r+0x193e>
1001ccb6:	4a6f      	ldr	r2, [pc, #444]	@ (1001ce74 <_vfprintf_r+0x1ba4>)
1001ccb8:	9215      	str	r2, [sp, #84]	@ 0x54
1001ccba:	f7ff b8cc 	b.w	1001be56 <_vfprintf_r+0xb86>
1001ccbe:	4655      	mov	r5, sl
1001ccc0:	3301      	adds	r3, #1
1001ccc2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001ccc4:	f8c8 2000 	str.w	r2, [r8]
1001ccc8:	4434      	add	r4, r6
1001ccca:	2b07      	cmp	r3, #7
1001cccc:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001ccd0:	f8c8 6004 	str.w	r6, [r8, #4]
1001ccd4:	f77f a9f9 	ble.w	1001c0ca <_vfprintf_r+0xdfa>
1001ccd8:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001ccdc:	aa32      	add	r2, sp, #200	@ 0xc8
1001ccde:	f000 f997 	bl	1001d010 <__sprint_r>
1001cce2:	2800      	cmp	r0, #0
1001cce4:	f47e aff0 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001cce8:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001ccec:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001ccf0:	f7fe bffe 	b.w	1001bcf0 <_vfprintf_r+0xa20>
1001ccf4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001ccf6:	9730      	str	r7, [sp, #192]	@ 0xc0
1001ccf8:	7bd9      	ldrb	r1, [r3, #15]
1001ccfa:	f816 2c01 	ldrb.w	r2, [r6, #-1]
1001ccfe:	428a      	cmp	r2, r1
1001cd00:	4633      	mov	r3, r6
1001cd02:	d109      	bne.n	1001cd18 <_vfprintf_r+0x1a48>
1001cd04:	2030      	movs	r0, #48	@ 0x30
1001cd06:	f803 0c01 	strb.w	r0, [r3, #-1]
1001cd0a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001cd0c:	1e5a      	subs	r2, r3, #1
1001cd0e:	9230      	str	r2, [sp, #192]	@ 0xc0
1001cd10:	f813 2c01 	ldrb.w	r2, [r3, #-1]
1001cd14:	4291      	cmp	r1, r2
1001cd16:	d0f6      	beq.n	1001cd06 <_vfprintf_r+0x1a36>
1001cd18:	2a39      	cmp	r2, #57	@ 0x39
1001cd1a:	bf0b      	itete	eq
1001cd1c:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
1001cd1e:	3201      	addne	r2, #1
1001cd20:	7a92      	ldrbeq	r2, [r2, #10]
1001cd22:	b2d2      	uxtbne	r2, r2
1001cd24:	f803 2c01 	strb.w	r2, [r3, #-1]
1001cd28:	4633      	mov	r3, r6
1001cd2a:	e595      	b.n	1001c858 <_vfprintf_r+0x1588>
1001cd2c:	4a52      	ldr	r2, [pc, #328]	@ (1001ce78 <_vfprintf_r+0x1ba8>)
1001cd2e:	9215      	str	r2, [sp, #84]	@ 0x54
1001cd30:	f7fe bf76 	b.w	1001bc20 <_vfprintf_r+0x950>
1001cd34:	9808      	ldr	r0, [sp, #32]
1001cd36:	1c59      	adds	r1, r3, #1
1001cd38:	f7f8 fc7a 	bl	10015630 <_malloc_r>
1001cd3c:	4605      	mov	r5, r0
1001cd3e:	b178      	cbz	r0, 1001cd60 <_vfprintf_r+0x1a90>
1001cd40:	900c      	str	r0, [sp, #48]	@ 0x30
1001cd42:	e504      	b.n	1001c74e <_vfprintf_r+0x147e>
1001cd44:	2800      	cmp	r0, #0
1001cd46:	d162      	bne.n	1001ce0e <_vfprintf_r+0x1b3e>
1001cd48:	2230      	movs	r2, #48	@ 0x30
1001cd4a:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
1001cd4e:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
1001cd52:	3330      	adds	r3, #48	@ 0x30
1001cd54:	f802 3b01 	strb.w	r3, [r2], #1
1001cd58:	ab2c      	add	r3, sp, #176	@ 0xb0
1001cd5a:	1ad3      	subs	r3, r2, r3
1001cd5c:	931c      	str	r3, [sp, #112]	@ 0x70
1001cd5e:	e4a3      	b.n	1001c6a8 <_vfprintf_r+0x13d8>
1001cd60:	9a07      	ldr	r2, [sp, #28]
1001cd62:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
1001cd66:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001cd6a:	8193      	strh	r3, [r2, #12]
1001cd6c:	f7fe bc11 	b.w	1001b592 <_vfprintf_r+0x2c2>
1001cd70:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001cd74:	aa32      	add	r2, sp, #200	@ 0xc8
1001cd76:	f000 f94b 	bl	1001d010 <__sprint_r>
1001cd7a:	2800      	cmp	r0, #0
1001cd7c:	f47e afa4 	bne.w	1001bcc8 <_vfprintf_r+0x9f8>
1001cd80:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001cd82:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001cd86:	f7ff b89a 	b.w	1001bebe <_vfprintf_r+0xbee>
1001cd8a:	4b3c      	ldr	r3, [pc, #240]	@ (1001ce7c <_vfprintf_r+0x1bac>)
1001cd8c:	4a3c      	ldr	r2, [pc, #240]	@ (1001ce80 <_vfprintf_r+0x1bb0>)
1001cd8e:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001cd90:	2961      	cmp	r1, #97	@ 0x61
1001cd92:	bf18      	it	ne
1001cd94:	461a      	movne	r2, r3
1001cd96:	2301      	movs	r3, #1
1001cd98:	9212      	str	r2, [sp, #72]	@ 0x48
1001cd9a:	9329      	str	r3, [sp, #164]	@ 0xa4
1001cd9c:	e4ff      	b.n	1001c79e <_vfprintf_r+0x14ce>
1001cd9e:	2306      	movs	r3, #6
1001cda0:	9309      	str	r3, [sp, #36]	@ 0x24
1001cda2:	f7ff b9ef 	b.w	1001c184 <_vfprintf_r+0xeb4>
1001cda6:	9b06      	ldr	r3, [sp, #24]
1001cda8:	07de      	lsls	r6, r3, #31
1001cdaa:	f57f ac86 	bpl.w	1001c6ba <_vfprintf_r+0x13ea>
1001cdae:	e482      	b.n	1001c6b6 <_vfprintf_r+0x13e6>
1001cdb0:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001cdb4:	2200      	movs	r2, #0
1001cdb6:	2300      	movs	r3, #0
1001cdb8:	f003 ff4a 	bl	10020c50 <__aeabi_dcmpeq>
1001cdbc:	2800      	cmp	r0, #0
1001cdbe:	f47f ac1c 	bne.w	1001c5fa <_vfprintf_r+0x132a>
1001cdc2:	f1c6 0601 	rsb	r6, r6, #1
1001cdc6:	9629      	str	r6, [sp, #164]	@ 0xa4
1001cdc8:	e418      	b.n	1001c5fc <_vfprintf_r+0x132c>
1001cdca:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001cdcc:	4d2d      	ldr	r5, [pc, #180]	@ (1001ce84 <_vfprintf_r+0x1bb4>)
1001cdce:	2b00      	cmp	r3, #0
1001cdd0:	bfb4      	ite	lt
1001cdd2:	222d      	movlt	r2, #45	@ 0x2d
1001cdd4:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
1001cdd8:	4b2b      	ldr	r3, [pc, #172]	@ (1001ce88 <_vfprintf_r+0x1bb8>)
1001cdda:	bfb8      	it	lt
1001cddc:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
1001cde0:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
1001cde4:	f7fe bc99 	b.w	1001b71a <_vfprintf_r+0x44a>
1001cde8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001cdea:	9306      	str	r3, [sp, #24]
1001cdec:	469b      	mov	fp, r3
1001cdee:	2373      	movs	r3, #115	@ 0x73
1001cdf0:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001cdf4:	960d      	str	r6, [sp, #52]	@ 0x34
1001cdf6:	9009      	str	r0, [sp, #36]	@ 0x24
1001cdf8:	9014      	str	r0, [sp, #80]	@ 0x50
1001cdfa:	9010      	str	r0, [sp, #64]	@ 0x40
1001cdfc:	930e      	str	r3, [sp, #56]	@ 0x38
1001cdfe:	f7fe bc99 	b.w	1001b734 <_vfprintf_r+0x464>
1001ce02:	f8dd 9018 	ldr.w	r9, [sp, #24]
1001ce06:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001ce0a:	f7ff bb40 	b.w	1001c48e <_vfprintf_r+0x11be>
1001ce0e:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
1001ce12:	e79e      	b.n	1001cd52 <_vfprintf_r+0x1a82>
1001ce14:	4693      	mov	fp, r2
1001ce16:	e5b6      	b.n	1001c986 <_vfprintf_r+0x16b6>
1001ce18:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001ce1a:	18cf      	adds	r7, r1, r3
1001ce1c:	443a      	add	r2, r7
1001ce1e:	2366      	movs	r3, #102	@ 0x66
1001ce20:	4693      	mov	fp, r2
1001ce22:	930e      	str	r3, [sp, #56]	@ 0x38
1001ce24:	e6f3      	b.n	1001cc0e <_vfprintf_r+0x193e>
1001ce26:	2367      	movs	r3, #103	@ 0x67
1001ce28:	930e      	str	r3, [sp, #56]	@ 0x38
1001ce2a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
1001ce2c:	780b      	ldrb	r3, [r1, #0]
1001ce2e:	2bff      	cmp	r3, #255	@ 0xff
1001ce30:	d063      	beq.n	1001cefa <_vfprintf_r+0x1c2a>
1001ce32:	2400      	movs	r4, #0
1001ce34:	9a12      	ldr	r2, [sp, #72]	@ 0x48
1001ce36:	4620      	mov	r0, r4
1001ce38:	e003      	b.n	1001ce42 <_vfprintf_r+0x1b72>
1001ce3a:	3001      	adds	r0, #1
1001ce3c:	3101      	adds	r1, #1
1001ce3e:	2bff      	cmp	r3, #255	@ 0xff
1001ce40:	d008      	beq.n	1001ce54 <_vfprintf_r+0x1b84>
1001ce42:	4293      	cmp	r3, r2
1001ce44:	da06      	bge.n	1001ce54 <_vfprintf_r+0x1b84>
1001ce46:	1ad2      	subs	r2, r2, r3
1001ce48:	784b      	ldrb	r3, [r1, #1]
1001ce4a:	2b00      	cmp	r3, #0
1001ce4c:	d1f5      	bne.n	1001ce3a <_vfprintf_r+0x1b6a>
1001ce4e:	780b      	ldrb	r3, [r1, #0]
1001ce50:	3401      	adds	r4, #1
1001ce52:	e7f4      	b.n	1001ce3e <_vfprintf_r+0x1b6e>
1001ce54:	911b      	str	r1, [sp, #108]	@ 0x6c
1001ce56:	9212      	str	r2, [sp, #72]	@ 0x48
1001ce58:	9010      	str	r0, [sp, #64]	@ 0x40
1001ce5a:	9414      	str	r4, [sp, #80]	@ 0x50
1001ce5c:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
1001ce60:	9a10      	ldr	r2, [sp, #64]	@ 0x40
1001ce62:	4413      	add	r3, r2
1001ce64:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
1001ce66:	fb02 bb03 	mla	fp, r2, r3, fp
1001ce6a:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001ce6e:	9306      	str	r3, [sp, #24]
1001ce70:	e42f      	b.n	1001c6d2 <_vfprintf_r+0x1402>
1001ce72:	bf00      	nop
1001ce74:	1002a69c 	.word	0x1002a69c
1001ce78:	1002a68c 	.word	0x1002a68c
1001ce7c:	1002a64c 	.word	0x1002a64c
1001ce80:	1002a638 	.word	0x1002a638
1001ce84:	1002a630 	.word	0x1002a630
1001ce88:	1002a634 	.word	0x1002a634
1001ce8c:	f1c3 0301 	rsb	r3, r3, #1
1001ce90:	449b      	add	fp, r3
1001ce92:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001ce96:	9306      	str	r3, [sp, #24]
1001ce98:	2367      	movs	r3, #103	@ 0x67
1001ce9a:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001ce9e:	930e      	str	r3, [sp, #56]	@ 0x38
1001cea0:	e57e      	b.n	1001c9a0 <_vfprintf_r+0x16d0>
1001cea2:	4e1c      	ldr	r6, [pc, #112]	@ (1001cf14 <_vfprintf_r+0x1c44>)
1001cea4:	e60f      	b.n	1001cac6 <_vfprintf_r+0x17f6>
1001cea6:	2302      	movs	r3, #2
1001cea8:	931c      	str	r3, [sp, #112]	@ 0x70
1001ceaa:	f7ff bbfd 	b.w	1001c6a8 <_vfprintf_r+0x13d8>
1001ceae:	4a19      	ldr	r2, [pc, #100]	@ (1001cf14 <_vfprintf_r+0x1c44>)
1001ceb0:	9215      	str	r2, [sp, #84]	@ 0x54
1001ceb2:	e52b      	b.n	1001c90c <_vfprintf_r+0x163c>
1001ceb4:	2170      	movs	r1, #112	@ 0x70
1001ceb6:	f7ff bbc0 	b.w	1001c63a <_vfprintf_r+0x136a>
1001ceba:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001cebe:	b933      	cbnz	r3, 1001cece <_vfprintf_r+0x1bfe>
1001cec0:	f04f 0b01 	mov.w	fp, #1
1001cec4:	2366      	movs	r3, #102	@ 0x66
1001cec6:	f8cd b018 	str.w	fp, [sp, #24]
1001ceca:	930e      	str	r3, [sp, #56]	@ 0x38
1001cecc:	e568      	b.n	1001c9a0 <_vfprintf_r+0x16d0>
1001cece:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001ced0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001ced4:	1c5f      	adds	r7, r3, #1
1001ced6:	44bb      	add	fp, r7
1001ced8:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001cedc:	9306      	str	r3, [sp, #24]
1001cede:	2366      	movs	r3, #102	@ 0x66
1001cee0:	930e      	str	r3, [sp, #56]	@ 0x38
1001cee2:	e55d      	b.n	1001c9a0 <_vfprintf_r+0x16d0>
1001cee4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001cee6:	7863      	ldrb	r3, [r4, #1]
1001cee8:	460c      	mov	r4, r1
1001ceea:	f852 1b04 	ldr.w	r1, [r2], #4
1001ceee:	920d      	str	r2, [sp, #52]	@ 0x34
1001cef0:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
1001cef4:	9109      	str	r1, [sp, #36]	@ 0x24
1001cef6:	f7fe ba63 	b.w	1001b3c0 <_vfprintf_r+0xf0>
1001cefa:	2300      	movs	r3, #0
1001cefc:	9314      	str	r3, [sp, #80]	@ 0x50
1001cefe:	9310      	str	r3, [sp, #64]	@ 0x40
1001cf00:	e7ac      	b.n	1001ce5c <_vfprintf_r+0x1b8c>
1001cf02:	e9dd 2b07 	ldrd	r2, fp, [sp, #28]
1001cf06:	8993      	ldrh	r3, [r2, #12]
1001cf08:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001cf0c:	8193      	strh	r3, [r2, #12]
1001cf0e:	f7fe bb37 	b.w	1001b580 <_vfprintf_r+0x2b0>
1001cf12:	bf00      	nop
1001cf14:	1002a68c 	.word	0x1002a68c

1001cf18 <__sbprintf>:
1001cf18:	b5f0      	push	{r4, r5, r6, r7, lr}
1001cf1a:	461f      	mov	r7, r3
1001cf1c:	898b      	ldrh	r3, [r1, #12]
1001cf1e:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
1001cf22:	f023 0302 	bic.w	r3, r3, #2
1001cf26:	f8ad 300c 	strh.w	r3, [sp, #12]
1001cf2a:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
1001cf2c:	9319      	str	r3, [sp, #100]	@ 0x64
1001cf2e:	89cb      	ldrh	r3, [r1, #14]
1001cf30:	f8ad 300e 	strh.w	r3, [sp, #14]
1001cf34:	69cb      	ldr	r3, [r1, #28]
1001cf36:	9307      	str	r3, [sp, #28]
1001cf38:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
1001cf3a:	9309      	str	r3, [sp, #36]	@ 0x24
1001cf3c:	ab1a      	add	r3, sp, #104	@ 0x68
1001cf3e:	9300      	str	r3, [sp, #0]
1001cf40:	9304      	str	r3, [sp, #16]
1001cf42:	f44f 6380 	mov.w	r3, #1024	@ 0x400
1001cf46:	4615      	mov	r5, r2
1001cf48:	4606      	mov	r6, r0
1001cf4a:	9302      	str	r3, [sp, #8]
1001cf4c:	9305      	str	r3, [sp, #20]
1001cf4e:	a816      	add	r0, sp, #88	@ 0x58
1001cf50:	2300      	movs	r3, #0
1001cf52:	460c      	mov	r4, r1
1001cf54:	9306      	str	r3, [sp, #24]
1001cf56:	f7f8 ff67 	bl	10015e28 <__retarget_lock_init_recursive>
1001cf5a:	462a      	mov	r2, r5
1001cf5c:	463b      	mov	r3, r7
1001cf5e:	4669      	mov	r1, sp
1001cf60:	4630      	mov	r0, r6
1001cf62:	f7fe f9b5 	bl	1001b2d0 <_vfprintf_r>
1001cf66:	1e05      	subs	r5, r0, #0
1001cf68:	db07      	blt.n	1001cf7a <__sbprintf+0x62>
1001cf6a:	4669      	mov	r1, sp
1001cf6c:	4630      	mov	r0, r6
1001cf6e:	f7f9 fb1d 	bl	100165ac <_fflush_r>
1001cf72:	2800      	cmp	r0, #0
1001cf74:	bf18      	it	ne
1001cf76:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
1001cf7a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
1001cf7e:	065b      	lsls	r3, r3, #25
1001cf80:	d503      	bpl.n	1001cf8a <__sbprintf+0x72>
1001cf82:	89a3      	ldrh	r3, [r4, #12]
1001cf84:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001cf88:	81a3      	strh	r3, [r4, #12]
1001cf8a:	9816      	ldr	r0, [sp, #88]	@ 0x58
1001cf8c:	f7f8 ff4e 	bl	10015e2c <__retarget_lock_close_recursive>
1001cf90:	4628      	mov	r0, r5
1001cf92:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
1001cf96:	bdf0      	pop	{r4, r5, r6, r7, pc}

1001cf98 <__sprint_r.part.0>:
1001cf98:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001cf9c:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
1001cf9e:	049c      	lsls	r4, r3, #18
1001cfa0:	4690      	mov	r8, r2
1001cfa2:	d52e      	bpl.n	1001d002 <__sprint_r.part.0+0x6a>
1001cfa4:	6893      	ldr	r3, [r2, #8]
1001cfa6:	6812      	ldr	r2, [r2, #0]
1001cfa8:	b34b      	cbz	r3, 1001cffe <__sprint_r.part.0+0x66>
1001cfaa:	460d      	mov	r5, r1
1001cfac:	4606      	mov	r6, r0
1001cfae:	f102 0908 	add.w	r9, r2, #8
1001cfb2:	e959 2a02 	ldrd	r2, sl, [r9, #-8]
1001cfb6:	ea5f 079a 	movs.w	r7, sl, lsr #2
1001cfba:	d016      	beq.n	1001cfea <__sprint_r.part.0+0x52>
1001cfbc:	f1a2 0b04 	sub.w	fp, r2, #4
1001cfc0:	2400      	movs	r4, #0
1001cfc2:	e001      	b.n	1001cfc8 <__sprint_r.part.0+0x30>
1001cfc4:	42a7      	cmp	r7, r4
1001cfc6:	d00e      	beq.n	1001cfe6 <__sprint_r.part.0+0x4e>
1001cfc8:	f85b 1f04 	ldr.w	r1, [fp, #4]!
1001cfcc:	462a      	mov	r2, r5
1001cfce:	4630      	mov	r0, r6
1001cfd0:	f002 fff0 	bl	1001ffb4 <_fputwc_r>
1001cfd4:	1c43      	adds	r3, r0, #1
1001cfd6:	f104 0401 	add.w	r4, r4, #1
1001cfda:	d1f3      	bne.n	1001cfc4 <__sprint_r.part.0+0x2c>
1001cfdc:	2300      	movs	r3, #0
1001cfde:	e9c8 3301 	strd	r3, r3, [r8, #4]
1001cfe2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001cfe6:	f8d8 3008 	ldr.w	r3, [r8, #8]
1001cfea:	f02a 0a03 	bic.w	sl, sl, #3
1001cfee:	eba3 030a 	sub.w	r3, r3, sl
1001cff2:	f8c8 3008 	str.w	r3, [r8, #8]
1001cff6:	f109 0908 	add.w	r9, r9, #8
1001cffa:	2b00      	cmp	r3, #0
1001cffc:	d1d9      	bne.n	1001cfb2 <__sprint_r.part.0+0x1a>
1001cffe:	2000      	movs	r0, #0
1001d000:	e7ec      	b.n	1001cfdc <__sprint_r.part.0+0x44>
1001d002:	f7fc f87b 	bl	100190fc <__sfvwrite_r>
1001d006:	2300      	movs	r3, #0
1001d008:	e9c8 3301 	strd	r3, r3, [r8, #4]
1001d00c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

1001d010 <__sprint_r>:
1001d010:	b410      	push	{r4}
1001d012:	6894      	ldr	r4, [r2, #8]
1001d014:	b114      	cbz	r4, 1001d01c <__sprint_r+0xc>
1001d016:	bc10      	pop	{r4}
1001d018:	f7ff bfbe 	b.w	1001cf98 <__sprint_r.part.0>
1001d01c:	4620      	mov	r0, r4
1001d01e:	6054      	str	r4, [r2, #4]
1001d020:	bc10      	pop	{r4}
1001d022:	4770      	bx	lr

1001d024 <_vfiprintf_r>:
1001d024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001d028:	b0c7      	sub	sp, #284	@ 0x11c
1001d02a:	af16      	add	r7, sp, #88	@ 0x58
1001d02c:	4683      	mov	fp, r0
1001d02e:	9103      	str	r1, [sp, #12]
1001d030:	9206      	str	r2, [sp, #24]
1001d032:	2100      	movs	r1, #0
1001d034:	2208      	movs	r2, #8
1001d036:	4638      	mov	r0, r7
1001d038:	461c      	mov	r4, r3
1001d03a:	930a      	str	r3, [sp, #40]	@ 0x28
1001d03c:	f7f8 fe66 	bl	10015d0c <memset>
1001d040:	f1bb 0f00 	cmp.w	fp, #0
1001d044:	d004      	beq.n	1001d050 <_vfiprintf_r+0x2c>
1001d046:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
1001d04a:	2b00      	cmp	r3, #0
1001d04c:	f000 86bb 	beq.w	1001ddc6 <_vfiprintf_r+0xda2>
1001d050:	9a03      	ldr	r2, [sp, #12]
1001d052:	6e53      	ldr	r3, [r2, #100]	@ 0x64
1001d054:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
1001d058:	07db      	lsls	r3, r3, #31
1001d05a:	d402      	bmi.n	1001d062 <_vfiprintf_r+0x3e>
1001d05c:	0596      	lsls	r6, r2, #22
1001d05e:	f140 859f 	bpl.w	1001dba0 <_vfiprintf_r+0xb7c>
1001d062:	0495      	lsls	r5, r2, #18
1001d064:	d407      	bmi.n	1001d076 <_vfiprintf_r+0x52>
1001d066:	9903      	ldr	r1, [sp, #12]
1001d068:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
1001d06a:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
1001d06e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
1001d072:	818a      	strh	r2, [r1, #12]
1001d074:	664b      	str	r3, [r1, #100]	@ 0x64
1001d076:	0710      	lsls	r0, r2, #28
1001d078:	f140 80c9 	bpl.w	1001d20e <_vfiprintf_r+0x1ea>
1001d07c:	9b03      	ldr	r3, [sp, #12]
1001d07e:	691b      	ldr	r3, [r3, #16]
1001d080:	2b00      	cmp	r3, #0
1001d082:	f000 80c4 	beq.w	1001d20e <_vfiprintf_r+0x1ea>
1001d086:	f002 031a 	and.w	r3, r2, #26
1001d08a:	2b0a      	cmp	r3, #10
1001d08c:	f000 80ce 	beq.w	1001d22c <_vfiprintf_r+0x208>
1001d090:	2300      	movs	r3, #0
1001d092:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
1001d096:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
1001d09a:	aa1d      	add	r2, sp, #116	@ 0x74
1001d09c:	f8df a260 	ldr.w	sl, [pc, #608]	@ 1001d300 <_vfiprintf_r+0x2dc>
1001d0a0:	930d      	str	r3, [sp, #52]	@ 0x34
1001d0a2:	921a      	str	r2, [sp, #104]	@ 0x68
1001d0a4:	4691      	mov	r9, r2
1001d0a6:	9310      	str	r3, [sp, #64]	@ 0x40
1001d0a8:	9307      	str	r3, [sp, #28]
1001d0aa:	9d06      	ldr	r5, [sp, #24]
1001d0ac:	f8da 40e4 	ldr.w	r4, [sl, #228]	@ 0xe4
1001d0b0:	f7f8 fec2 	bl	10015e38 <__locale_mb_cur_max>
1001d0b4:	462a      	mov	r2, r5
1001d0b6:	4603      	mov	r3, r0
1001d0b8:	a914      	add	r1, sp, #80	@ 0x50
1001d0ba:	9700      	str	r7, [sp, #0]
1001d0bc:	4658      	mov	r0, fp
1001d0be:	47a0      	blx	r4
1001d0c0:	2800      	cmp	r0, #0
1001d0c2:	f000 80d2 	beq.w	1001d26a <_vfiprintf_r+0x246>
1001d0c6:	f2c0 80c8 	blt.w	1001d25a <_vfiprintf_r+0x236>
1001d0ca:	9a14      	ldr	r2, [sp, #80]	@ 0x50
1001d0cc:	2a25      	cmp	r2, #37	@ 0x25
1001d0ce:	4603      	mov	r3, r0
1001d0d0:	d001      	beq.n	1001d0d6 <_vfiprintf_r+0xb2>
1001d0d2:	441d      	add	r5, r3
1001d0d4:	e7ea      	b.n	1001d0ac <_vfiprintf_r+0x88>
1001d0d6:	9b06      	ldr	r3, [sp, #24]
1001d0d8:	1aee      	subs	r6, r5, r3
1001d0da:	4604      	mov	r4, r0
1001d0dc:	f040 80c9 	bne.w	1001d272 <_vfiprintf_r+0x24e>
1001d0e0:	2300      	movs	r3, #0
1001d0e2:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001d0e6:	786a      	ldrb	r2, [r5, #1]
1001d0e8:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001d0ec:	9308      	str	r3, [sp, #32]
1001d0ee:	1c6c      	adds	r4, r5, #1
1001d0f0:	9105      	str	r1, [sp, #20]
1001d0f2:	9302      	str	r3, [sp, #8]
1001d0f4:	3401      	adds	r4, #1
1001d0f6:	f1a2 0320 	sub.w	r3, r2, #32
1001d0fa:	2b5a      	cmp	r3, #90	@ 0x5a
1001d0fc:	f200 8102 	bhi.w	1001d304 <_vfiprintf_r+0x2e0>
1001d100:	e8df f013 	tbh	[pc, r3, lsl #1]
1001d104:	01000303 	.word	0x01000303
1001d108:	02fd0100 	.word	0x02fd0100
1001d10c:	01000100 	.word	0x01000100
1001d110:	006b0100 	.word	0x006b0100
1001d114:	01000100 	.word	0x01000100
1001d118:	032d0218 	.word	0x032d0218
1001d11c:	02230100 	.word	0x02230100
1001d120:	01000313 	.word	0x01000313
1001d124:	005b030d 	.word	0x005b030d
1001d128:	005b005b 	.word	0x005b005b
1001d12c:	005b005b 	.word	0x005b005b
1001d130:	005b005b 	.word	0x005b005b
1001d134:	005b005b 	.word	0x005b005b
1001d138:	01000100 	.word	0x01000100
1001d13c:	01000100 	.word	0x01000100
1001d140:	01000100 	.word	0x01000100
1001d144:	01000100 	.word	0x01000100
1001d148:	01ce0100 	.word	0x01ce0100
1001d14c:	0100025d 	.word	0x0100025d
1001d150:	01000100 	.word	0x01000100
1001d154:	01000100 	.word	0x01000100
1001d158:	01000100 	.word	0x01000100
1001d15c:	01000100 	.word	0x01000100
1001d160:	02290100 	.word	0x02290100
1001d164:	01000100 	.word	0x01000100
1001d168:	01a60100 	.word	0x01a60100
1001d16c:	02760100 	.word	0x02760100
1001d170:	01000100 	.word	0x01000100
1001d174:	0100058e 	.word	0x0100058e
1001d178:	01000100 	.word	0x01000100
1001d17c:	01000100 	.word	0x01000100
1001d180:	01000100 	.word	0x01000100
1001d184:	01000100 	.word	0x01000100
1001d188:	01ce0100 	.word	0x01ce0100
1001d18c:	010001f3 	.word	0x010001f3
1001d190:	01000100 	.word	0x01000100
1001d194:	01f302c4 	.word	0x01f302c4
1001d198:	0100007f 	.word	0x0100007f
1001d19c:	01000332 	.word	0x01000332
1001d1a0:	058b02ee 	.word	0x058b02ee
1001d1a4:	007f02cd 	.word	0x007f02cd
1001d1a8:	01a60100 	.word	0x01a60100
1001d1ac:	0588007d 	.word	0x0588007d
1001d1b0:	01000100 	.word	0x01000100
1001d1b4:	010005b1 	.word	0x010005b1
1001d1b8:	007d      	.short	0x007d
1001d1ba:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
1001d1be:	2200      	movs	r2, #0
1001d1c0:	4611      	mov	r1, r2
1001d1c2:	f814 2b01 	ldrb.w	r2, [r4], #1
1001d1c6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001d1ca:	eb03 0141 	add.w	r1, r3, r1, lsl #1
1001d1ce:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
1001d1d2:	2b09      	cmp	r3, #9
1001d1d4:	d9f5      	bls.n	1001d1c2 <_vfiprintf_r+0x19e>
1001d1d6:	9108      	str	r1, [sp, #32]
1001d1d8:	e78d      	b.n	1001d0f6 <_vfiprintf_r+0xd2>
1001d1da:	4658      	mov	r0, fp
1001d1dc:	f7f8 fe32 	bl	10015e44 <_localeconv_r>
1001d1e0:	6843      	ldr	r3, [r0, #4]
1001d1e2:	9310      	str	r3, [sp, #64]	@ 0x40
1001d1e4:	4618      	mov	r0, r3
1001d1e6:	f7f9 fbcb 	bl	10016980 <strlen>
1001d1ea:	900f      	str	r0, [sp, #60]	@ 0x3c
1001d1ec:	4605      	mov	r5, r0
1001d1ee:	4658      	mov	r0, fp
1001d1f0:	f7f8 fe28 	bl	10015e44 <_localeconv_r>
1001d1f4:	6883      	ldr	r3, [r0, #8]
1001d1f6:	930e      	str	r3, [sp, #56]	@ 0x38
1001d1f8:	2d00      	cmp	r5, #0
1001d1fa:	f040 84e5 	bne.w	1001dbc8 <_vfiprintf_r+0xba4>
1001d1fe:	7822      	ldrb	r2, [r4, #0]
1001d200:	e778      	b.n	1001d0f4 <_vfiprintf_r+0xd0>
1001d202:	9b02      	ldr	r3, [sp, #8]
1001d204:	7822      	ldrb	r2, [r4, #0]
1001d206:	f043 0320 	orr.w	r3, r3, #32
1001d20a:	9302      	str	r3, [sp, #8]
1001d20c:	e772      	b.n	1001d0f4 <_vfiprintf_r+0xd0>
1001d20e:	9d03      	ldr	r5, [sp, #12]
1001d210:	4658      	mov	r0, fp
1001d212:	4629      	mov	r1, r5
1001d214:	f000 ffb8 	bl	1001e188 <__swsetup_r>
1001d218:	2800      	cmp	r0, #0
1001d21a:	f040 86a6 	bne.w	1001df6a <_vfiprintf_r+0xf46>
1001d21e:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
1001d222:	f002 031a 	and.w	r3, r2, #26
1001d226:	2b0a      	cmp	r3, #10
1001d228:	f47f af32 	bne.w	1001d090 <_vfiprintf_r+0x6c>
1001d22c:	9903      	ldr	r1, [sp, #12]
1001d22e:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
1001d232:	2b00      	cmp	r3, #0
1001d234:	f6ff af2c 	blt.w	1001d090 <_vfiprintf_r+0x6c>
1001d238:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
1001d23a:	07db      	lsls	r3, r3, #31
1001d23c:	d402      	bmi.n	1001d244 <_vfiprintf_r+0x220>
1001d23e:	0597      	lsls	r7, r2, #22
1001d240:	f140 865e 	bpl.w	1001df00 <_vfiprintf_r+0xedc>
1001d244:	9a06      	ldr	r2, [sp, #24]
1001d246:	9903      	ldr	r1, [sp, #12]
1001d248:	4623      	mov	r3, r4
1001d24a:	4658      	mov	r0, fp
1001d24c:	f000 fec0 	bl	1001dfd0 <__sbprintf>
1001d250:	9007      	str	r0, [sp, #28]
1001d252:	9807      	ldr	r0, [sp, #28]
1001d254:	b047      	add	sp, #284	@ 0x11c
1001d256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001d25a:	2208      	movs	r2, #8
1001d25c:	2100      	movs	r1, #0
1001d25e:	4638      	mov	r0, r7
1001d260:	f7f8 fd54 	bl	10015d0c <memset>
1001d264:	2301      	movs	r3, #1
1001d266:	441d      	add	r5, r3
1001d268:	e720      	b.n	1001d0ac <_vfiprintf_r+0x88>
1001d26a:	9b06      	ldr	r3, [sp, #24]
1001d26c:	1aee      	subs	r6, r5, r3
1001d26e:	4604      	mov	r4, r0
1001d270:	d012      	beq.n	1001d298 <_vfiprintf_r+0x274>
1001d272:	9b06      	ldr	r3, [sp, #24]
1001d274:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
1001d276:	e9c9 3600 	strd	r3, r6, [r9]
1001d27a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
1001d27c:	3301      	adds	r3, #1
1001d27e:	4432      	add	r2, r6
1001d280:	2b07      	cmp	r3, #7
1001d282:	921c      	str	r2, [sp, #112]	@ 0x70
1001d284:	931b      	str	r3, [sp, #108]	@ 0x6c
1001d286:	dc11      	bgt.n	1001d2ac <_vfiprintf_r+0x288>
1001d288:	f109 0908 	add.w	r9, r9, #8
1001d28c:	9b07      	ldr	r3, [sp, #28]
1001d28e:	4433      	add	r3, r6
1001d290:	9307      	str	r3, [sp, #28]
1001d292:	2c00      	cmp	r4, #0
1001d294:	f47f af24 	bne.w	1001d0e0 <_vfiprintf_r+0xbc>
1001d298:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001d29a:	2b00      	cmp	r3, #0
1001d29c:	f040 8650 	bne.w	1001df40 <_vfiprintf_r+0xf1c>
1001d2a0:	9b03      	ldr	r3, [sp, #12]
1001d2a2:	2200      	movs	r2, #0
1001d2a4:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001d2a8:	921b      	str	r2, [sp, #108]	@ 0x6c
1001d2aa:	e01c      	b.n	1001d2e6 <_vfiprintf_r+0x2c2>
1001d2ac:	2a00      	cmp	r2, #0
1001d2ae:	f000 842f 	beq.w	1001db10 <_vfiprintf_r+0xaec>
1001d2b2:	9903      	ldr	r1, [sp, #12]
1001d2b4:	aa1a      	add	r2, sp, #104	@ 0x68
1001d2b6:	4658      	mov	r0, fp
1001d2b8:	f7ff fe6e 	bl	1001cf98 <__sprint_r.part.0>
1001d2bc:	b980      	cbnz	r0, 1001d2e0 <_vfiprintf_r+0x2bc>
1001d2be:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001d2c2:	e7e3      	b.n	1001d28c <_vfiprintf_r+0x268>
1001d2c4:	9903      	ldr	r1, [sp, #12]
1001d2c6:	aa1a      	add	r2, sp, #104	@ 0x68
1001d2c8:	4658      	mov	r0, fp
1001d2ca:	f7ff fe65 	bl	1001cf98 <__sprint_r.part.0>
1001d2ce:	2800      	cmp	r0, #0
1001d2d0:	f000 80a9 	beq.w	1001d426 <_vfiprintf_r+0x402>
1001d2d4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001d2d6:	b11b      	cbz	r3, 1001d2e0 <_vfiprintf_r+0x2bc>
1001d2d8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1001d2da:	4658      	mov	r0, fp
1001d2dc:	f7fa fdf4 	bl	10017ec8 <_free_r>
1001d2e0:	9b03      	ldr	r3, [sp, #12]
1001d2e2:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001d2e6:	9a03      	ldr	r2, [sp, #12]
1001d2e8:	6e52      	ldr	r2, [r2, #100]	@ 0x64
1001d2ea:	07d1      	lsls	r1, r2, #31
1001d2ec:	f140 80a6 	bpl.w	1001d43c <_vfiprintf_r+0x418>
1001d2f0:	065b      	lsls	r3, r3, #25
1001d2f2:	f100 8646 	bmi.w	1001df82 <_vfiprintf_r+0xf5e>
1001d2f6:	9807      	ldr	r0, [sp, #28]
1001d2f8:	b047      	add	sp, #284	@ 0x11c
1001d2fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001d2fe:	bf00      	nop
1001d300:	20000424 	.word	0x20000424
1001d304:	9406      	str	r4, [sp, #24]
1001d306:	2a00      	cmp	r2, #0
1001d308:	d0c6      	beq.n	1001d298 <_vfiprintf_r+0x274>
1001d30a:	2300      	movs	r3, #0
1001d30c:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001d310:	2301      	movs	r3, #1
1001d312:	f88d 20b4 	strb.w	r2, [sp, #180]	@ 0xb4
1001d316:	9304      	str	r3, [sp, #16]
1001d318:	9309      	str	r3, [sp, #36]	@ 0x24
1001d31a:	ac2d      	add	r4, sp, #180	@ 0xb4
1001d31c:	2300      	movs	r3, #0
1001d31e:	930b      	str	r3, [sp, #44]	@ 0x2c
1001d320:	9305      	str	r3, [sp, #20]
1001d322:	9b02      	ldr	r3, [sp, #8]
1001d324:	f013 0302 	ands.w	r3, r3, #2
1001d328:	d002      	beq.n	1001d330 <_vfiprintf_r+0x30c>
1001d32a:	9a04      	ldr	r2, [sp, #16]
1001d32c:	3202      	adds	r2, #2
1001d32e:	9204      	str	r2, [sp, #16]
1001d330:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001d334:	9d02      	ldr	r5, [sp, #8]
1001d336:	1c50      	adds	r0, r2, #1
1001d338:	f015 0584 	ands.w	r5, r5, #132	@ 0x84
1001d33c:	4601      	mov	r1, r0
1001d33e:	950c      	str	r5, [sp, #48]	@ 0x30
1001d340:	d105      	bne.n	1001d34e <_vfiprintf_r+0x32a>
1001d342:	9d08      	ldr	r5, [sp, #32]
1001d344:	9e04      	ldr	r6, [sp, #16]
1001d346:	1bad      	subs	r5, r5, r6
1001d348:	2d00      	cmp	r5, #0
1001d34a:	f300 8331 	bgt.w	1001d9b0 <_vfiprintf_r+0x98c>
1001d34e:	f89d 004b 	ldrb.w	r0, [sp, #75]	@ 0x4b
1001d352:	b188      	cbz	r0, 1001d378 <_vfiprintf_r+0x354>
1001d354:	2201      	movs	r2, #1
1001d356:	f10c 0c01 	add.w	ip, ip, #1
1001d35a:	f8c9 2004 	str.w	r2, [r9, #4]
1001d35e:	2907      	cmp	r1, #7
1001d360:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
1001d364:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
1001d368:	f8c9 2000 	str.w	r2, [r9]
1001d36c:	f300 82e1 	bgt.w	1001d932 <_vfiprintf_r+0x90e>
1001d370:	460a      	mov	r2, r1
1001d372:	f109 0908 	add.w	r9, r9, #8
1001d376:	3101      	adds	r1, #1
1001d378:	b1eb      	cbz	r3, 1001d3b6 <_vfiprintf_r+0x392>
1001d37a:	ab13      	add	r3, sp, #76	@ 0x4c
1001d37c:	f10c 0c02 	add.w	ip, ip, #2
1001d380:	f8c9 3000 	str.w	r3, [r9]
1001d384:	2907      	cmp	r1, #7
1001d386:	f04f 0302 	mov.w	r3, #2
1001d38a:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
1001d38e:	f8c9 3004 	str.w	r3, [r9, #4]
1001d392:	f340 82ec 	ble.w	1001d96e <_vfiprintf_r+0x94a>
1001d396:	f1bc 0f00 	cmp.w	ip, #0
1001d39a:	f000 83da 	beq.w	1001db52 <_vfiprintf_r+0xb2e>
1001d39e:	9903      	ldr	r1, [sp, #12]
1001d3a0:	aa1a      	add	r2, sp, #104	@ 0x68
1001d3a2:	4658      	mov	r0, fp
1001d3a4:	f7ff fdf8 	bl	1001cf98 <__sprint_r.part.0>
1001d3a8:	2800      	cmp	r0, #0
1001d3aa:	d193      	bne.n	1001d2d4 <_vfiprintf_r+0x2b0>
1001d3ac:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001d3b0:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001d3b4:	1c51      	adds	r1, r2, #1
1001d3b6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001d3b8:	2b80      	cmp	r3, #128	@ 0x80
1001d3ba:	f000 8213 	beq.w	1001d7e4 <_vfiprintf_r+0x7c0>
1001d3be:	9b05      	ldr	r3, [sp, #20]
1001d3c0:	9809      	ldr	r0, [sp, #36]	@ 0x24
1001d3c2:	1a1d      	subs	r5, r3, r0
1001d3c4:	2d00      	cmp	r5, #0
1001d3c6:	f300 8268 	bgt.w	1001d89a <_vfiprintf_r+0x876>
1001d3ca:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001d3cc:	f8c9 4000 	str.w	r4, [r9]
1001d3d0:	eb02 030c 	add.w	r3, r2, ip
1001d3d4:	2907      	cmp	r1, #7
1001d3d6:	e9cd 131b 	strd	r1, r3, [sp, #108]	@ 0x6c
1001d3da:	f8c9 2004 	str.w	r2, [r9, #4]
1001d3de:	f340 81fe 	ble.w	1001d7de <_vfiprintf_r+0x7ba>
1001d3e2:	2b00      	cmp	r3, #0
1001d3e4:	f000 832b 	beq.w	1001da3e <_vfiprintf_r+0xa1a>
1001d3e8:	9903      	ldr	r1, [sp, #12]
1001d3ea:	aa1a      	add	r2, sp, #104	@ 0x68
1001d3ec:	4658      	mov	r0, fp
1001d3ee:	f7ff fdd3 	bl	1001cf98 <__sprint_r.part.0>
1001d3f2:	2800      	cmp	r0, #0
1001d3f4:	f47f af6e 	bne.w	1001d2d4 <_vfiprintf_r+0x2b0>
1001d3f8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001d3fa:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001d3fe:	9a02      	ldr	r2, [sp, #8]
1001d400:	0750      	lsls	r0, r2, #29
1001d402:	d505      	bpl.n	1001d410 <_vfiprintf_r+0x3ec>
1001d404:	9a08      	ldr	r2, [sp, #32]
1001d406:	9904      	ldr	r1, [sp, #16]
1001d408:	1a54      	subs	r4, r2, r1
1001d40a:	2c00      	cmp	r4, #0
1001d40c:	f300 8322 	bgt.w	1001da54 <_vfiprintf_r+0xa30>
1001d410:	e9dd 2107 	ldrd	r2, r1, [sp, #28]
1001d414:	9804      	ldr	r0, [sp, #16]
1001d416:	4281      	cmp	r1, r0
1001d418:	bfac      	ite	ge
1001d41a:	1852      	addge	r2, r2, r1
1001d41c:	1812      	addlt	r2, r2, r0
1001d41e:	9207      	str	r2, [sp, #28]
1001d420:	2b00      	cmp	r3, #0
1001d422:	f47f af4f 	bne.w	1001d2c4 <_vfiprintf_r+0x2a0>
1001d426:	2300      	movs	r3, #0
1001d428:	931b      	str	r3, [sp, #108]	@ 0x6c
1001d42a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001d42c:	b11b      	cbz	r3, 1001d436 <_vfiprintf_r+0x412>
1001d42e:	4619      	mov	r1, r3
1001d430:	4658      	mov	r0, fp
1001d432:	f7fa fd49 	bl	10017ec8 <_free_r>
1001d436:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001d43a:	e636      	b.n	1001d0aa <_vfiprintf_r+0x86>
1001d43c:	059a      	lsls	r2, r3, #22
1001d43e:	f53f af57 	bmi.w	1001d2f0 <_vfiprintf_r+0x2cc>
1001d442:	9c03      	ldr	r4, [sp, #12]
1001d444:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001d446:	f7f8 fcf5 	bl	10015e34 <__retarget_lock_release_recursive>
1001d44a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001d44e:	e74f      	b.n	1001d2f0 <_vfiprintf_r+0x2cc>
1001d450:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
1001d452:	9406      	str	r4, [sp, #24]
1001d454:	f856 4b04 	ldr.w	r4, [r6], #4
1001d458:	2300      	movs	r3, #0
1001d45a:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001d45e:	2c00      	cmp	r4, #0
1001d460:	f000 84c9 	beq.w	1001ddf6 <_vfiprintf_r+0xdd2>
1001d464:	2a53      	cmp	r2, #83	@ 0x53
1001d466:	f000 8421 	beq.w	1001dcac <_vfiprintf_r+0xc88>
1001d46a:	9b02      	ldr	r3, [sp, #8]
1001d46c:	f013 0510 	ands.w	r5, r3, #16
1001d470:	f040 841c 	bne.w	1001dcac <_vfiprintf_r+0xc88>
1001d474:	9b05      	ldr	r3, [sp, #20]
1001d476:	1c5a      	adds	r2, r3, #1
1001d478:	f000 854e 	beq.w	1001df18 <_vfiprintf_r+0xef4>
1001d47c:	461a      	mov	r2, r3
1001d47e:	4629      	mov	r1, r5
1001d480:	4620      	mov	r0, r4
1001d482:	f002 fca5 	bl	1001fdd0 <memchr>
1001d486:	900b      	str	r0, [sp, #44]	@ 0x2c
1001d488:	2800      	cmp	r0, #0
1001d48a:	f000 853e 	beq.w	1001df0a <_vfiprintf_r+0xee6>
1001d48e:	1b03      	subs	r3, r0, r4
1001d490:	9309      	str	r3, [sp, #36]	@ 0x24
1001d492:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
1001d496:	9505      	str	r5, [sp, #20]
1001d498:	960a      	str	r6, [sp, #40]	@ 0x28
1001d49a:	9304      	str	r3, [sp, #16]
1001d49c:	950b      	str	r5, [sp, #44]	@ 0x2c
1001d49e:	e18d      	b.n	1001d7bc <_vfiprintf_r+0x798>
1001d4a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001d4a2:	9406      	str	r4, [sp, #24]
1001d4a4:	2a43      	cmp	r2, #67	@ 0x43
1001d4a6:	f103 0504 	add.w	r5, r3, #4
1001d4aa:	d003      	beq.n	1001d4b4 <_vfiprintf_r+0x490>
1001d4ac:	9b02      	ldr	r3, [sp, #8]
1001d4ae:	06de      	lsls	r6, r3, #27
1001d4b0:	f140 83e4 	bpl.w	1001dc7c <_vfiprintf_r+0xc58>
1001d4b4:	2208      	movs	r2, #8
1001d4b6:	2100      	movs	r1, #0
1001d4b8:	a818      	add	r0, sp, #96	@ 0x60
1001d4ba:	f7f8 fc27 	bl	10015d0c <memset>
1001d4be:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001d4c0:	ac2d      	add	r4, sp, #180	@ 0xb4
1001d4c2:	681a      	ldr	r2, [r3, #0]
1001d4c4:	4621      	mov	r1, r4
1001d4c6:	ab18      	add	r3, sp, #96	@ 0x60
1001d4c8:	4658      	mov	r0, fp
1001d4ca:	f000 fe37 	bl	1001e13c <_wcrtomb_r>
1001d4ce:	4603      	mov	r3, r0
1001d4d0:	3301      	adds	r3, #1
1001d4d2:	9009      	str	r0, [sp, #36]	@ 0x24
1001d4d4:	f000 8541 	beq.w	1001df5a <_vfiprintf_r+0xf36>
1001d4d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001d4da:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
1001d4de:	9304      	str	r3, [sp, #16]
1001d4e0:	2300      	movs	r3, #0
1001d4e2:	950a      	str	r5, [sp, #40]	@ 0x28
1001d4e4:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001d4e8:	e718      	b.n	1001d31c <_vfiprintf_r+0x2f8>
1001d4ea:	9b02      	ldr	r3, [sp, #8]
1001d4ec:	9406      	str	r4, [sp, #24]
1001d4ee:	069c      	lsls	r4, r3, #26
1001d4f0:	d56d      	bpl.n	1001d5ce <_vfiprintf_r+0x5aa>
1001d4f2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001d4f4:	3307      	adds	r3, #7
1001d4f6:	f023 0307 	bic.w	r3, r3, #7
1001d4fa:	4619      	mov	r1, r3
1001d4fc:	685a      	ldr	r2, [r3, #4]
1001d4fe:	f851 3b08 	ldr.w	r3, [r1], #8
1001d502:	910a      	str	r1, [sp, #40]	@ 0x28
1001d504:	4611      	mov	r1, r2
1001d506:	2a00      	cmp	r2, #0
1001d508:	f2c0 8137 	blt.w	1001d77a <_vfiprintf_r+0x756>
1001d50c:	9a05      	ldr	r2, [sp, #20]
1001d50e:	3201      	adds	r2, #1
1001d510:	f000 8140 	beq.w	1001d794 <_vfiprintf_r+0x770>
1001d514:	9a02      	ldr	r2, [sp, #8]
1001d516:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
1001d51a:	9202      	str	r2, [sp, #8]
1001d51c:	ea53 0201 	orrs.w	r2, r3, r1
1001d520:	f040 8138 	bne.w	1001d794 <_vfiprintf_r+0x770>
1001d524:	9b05      	ldr	r3, [sp, #20]
1001d526:	2b00      	cmp	r3, #0
1001d528:	f040 8508 	bne.w	1001df3c <_vfiprintf_r+0xf18>
1001d52c:	9304      	str	r3, [sp, #16]
1001d52e:	9309      	str	r3, [sp, #36]	@ 0x24
1001d530:	ac46      	add	r4, sp, #280	@ 0x118
1001d532:	e141      	b.n	1001d7b8 <_vfiprintf_r+0x794>
1001d534:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001d536:	f853 2b04 	ldr.w	r2, [r3], #4
1001d53a:	9208      	str	r2, [sp, #32]
1001d53c:	2a00      	cmp	r2, #0
1001d53e:	f280 8327 	bge.w	1001db90 <_vfiprintf_r+0xb6c>
1001d542:	9a08      	ldr	r2, [sp, #32]
1001d544:	930a      	str	r3, [sp, #40]	@ 0x28
1001d546:	4252      	negs	r2, r2
1001d548:	9208      	str	r2, [sp, #32]
1001d54a:	9b02      	ldr	r3, [sp, #8]
1001d54c:	7822      	ldrb	r2, [r4, #0]
1001d54e:	f043 0304 	orr.w	r3, r3, #4
1001d552:	9302      	str	r3, [sp, #8]
1001d554:	e5ce      	b.n	1001d0f4 <_vfiprintf_r+0xd0>
1001d556:	9b02      	ldr	r3, [sp, #8]
1001d558:	9406      	str	r4, [sp, #24]
1001d55a:	f043 0210 	orr.w	r2, r3, #16
1001d55e:	f012 0120 	ands.w	r1, r2, #32
1001d562:	f000 82e7 	beq.w	1001db34 <_vfiprintf_r+0xb10>
1001d566:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001d568:	3307      	adds	r3, #7
1001d56a:	f023 0307 	bic.w	r3, r3, #7
1001d56e:	4618      	mov	r0, r3
1001d570:	6859      	ldr	r1, [r3, #4]
1001d572:	f850 3b08 	ldr.w	r3, [r0], #8
1001d576:	900a      	str	r0, [sp, #40]	@ 0x28
1001d578:	f422 6480 	bic.w	r4, r2, #1024	@ 0x400
1001d57c:	9402      	str	r4, [sp, #8]
1001d57e:	9c05      	ldr	r4, [sp, #20]
1001d580:	2000      	movs	r0, #0
1001d582:	3401      	adds	r4, #1
1001d584:	f88d 004b 	strb.w	r0, [sp, #75]	@ 0x4b
1001d588:	d05d      	beq.n	1001d646 <_vfiprintf_r+0x622>
1001d58a:	ea53 0401 	orrs.w	r4, r3, r1
1001d58e:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
1001d592:	f040 8414 	bne.w	1001ddbe <_vfiprintf_r+0xd9a>
1001d596:	9c02      	ldr	r4, [sp, #8]
1001d598:	9202      	str	r2, [sp, #8]
1001d59a:	9b05      	ldr	r3, [sp, #20]
1001d59c:	2b00      	cmp	r3, #0
1001d59e:	d14a      	bne.n	1001d636 <_vfiprintf_r+0x612>
1001d5a0:	2800      	cmp	r0, #0
1001d5a2:	f040 82f0 	bne.w	1001db86 <_vfiprintf_r+0xb62>
1001d5a6:	f014 0201 	ands.w	r2, r4, #1
1001d5aa:	9209      	str	r2, [sp, #36]	@ 0x24
1001d5ac:	f000 82f4 	beq.w	1001db98 <_vfiprintf_r+0xb74>
1001d5b0:	2330      	movs	r3, #48	@ 0x30
1001d5b2:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
1001d5b6:	9204      	str	r2, [sp, #16]
1001d5b8:	f20d 1417 	addw	r4, sp, #279	@ 0x117
1001d5bc:	e0fc      	b.n	1001d7b8 <_vfiprintf_r+0x794>
1001d5be:	9b02      	ldr	r3, [sp, #8]
1001d5c0:	9406      	str	r4, [sp, #24]
1001d5c2:	f043 0310 	orr.w	r3, r3, #16
1001d5c6:	9302      	str	r3, [sp, #8]
1001d5c8:	9b02      	ldr	r3, [sp, #8]
1001d5ca:	069c      	lsls	r4, r3, #26
1001d5cc:	d491      	bmi.n	1001d4f2 <_vfiprintf_r+0x4ce>
1001d5ce:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001d5d0:	f852 3b04 	ldr.w	r3, [r2], #4
1001d5d4:	920a      	str	r2, [sp, #40]	@ 0x28
1001d5d6:	9a02      	ldr	r2, [sp, #8]
1001d5d8:	06d0      	lsls	r0, r2, #27
1001d5da:	f100 82f2 	bmi.w	1001dbc2 <_vfiprintf_r+0xb9e>
1001d5de:	9a02      	ldr	r2, [sp, #8]
1001d5e0:	0651      	lsls	r1, r2, #25
1001d5e2:	f140 82ea 	bpl.w	1001dbba <_vfiprintf_r+0xb96>
1001d5e6:	f343 31c0 	sbfx	r1, r3, #15, #1
1001d5ea:	460a      	mov	r2, r1
1001d5ec:	b21b      	sxth	r3, r3
1001d5ee:	e78a      	b.n	1001d506 <_vfiprintf_r+0x4e2>
1001d5f0:	9b02      	ldr	r3, [sp, #8]
1001d5f2:	9406      	str	r4, [sp, #24]
1001d5f4:	f043 0410 	orr.w	r4, r3, #16
1001d5f8:	f014 0120 	ands.w	r1, r4, #32
1001d5fc:	f000 828b 	beq.w	1001db16 <_vfiprintf_r+0xaf2>
1001d600:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001d602:	3307      	adds	r3, #7
1001d604:	f023 0307 	bic.w	r3, r3, #7
1001d608:	461a      	mov	r2, r3
1001d60a:	6859      	ldr	r1, [r3, #4]
1001d60c:	f852 3b08 	ldr.w	r3, [r2], #8
1001d610:	920a      	str	r2, [sp, #40]	@ 0x28
1001d612:	2200      	movs	r2, #0
1001d614:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
1001d618:	9a05      	ldr	r2, [sp, #20]
1001d61a:	3201      	adds	r2, #1
1001d61c:	f000 83d1 	beq.w	1001ddc2 <_vfiprintf_r+0xd9e>
1001d620:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
1001d624:	9202      	str	r2, [sp, #8]
1001d626:	ea53 0201 	orrs.w	r2, r3, r1
1001d62a:	f040 80b3 	bne.w	1001d794 <_vfiprintf_r+0x770>
1001d62e:	9b05      	ldr	r3, [sp, #20]
1001d630:	2001      	movs	r0, #1
1001d632:	2b00      	cmp	r3, #0
1001d634:	d0b4      	beq.n	1001d5a0 <_vfiprintf_r+0x57c>
1001d636:	2801      	cmp	r0, #1
1001d638:	f000 8480 	beq.w	1001df3c <_vfiprintf_r+0xf18>
1001d63c:	2300      	movs	r3, #0
1001d63e:	2802      	cmp	r0, #2
1001d640:	4619      	mov	r1, r3
1001d642:	f000 8199 	beq.w	1001d978 <_vfiprintf_r+0x954>
1001d646:	ac46      	add	r4, sp, #280	@ 0x118
1001d648:	f003 0207 	and.w	r2, r3, #7
1001d64c:	08db      	lsrs	r3, r3, #3
1001d64e:	ea43 7341 	orr.w	r3, r3, r1, lsl #29
1001d652:	08c9      	lsrs	r1, r1, #3
1001d654:	3230      	adds	r2, #48	@ 0x30
1001d656:	ea53 0501 	orrs.w	r5, r3, r1
1001d65a:	4620      	mov	r0, r4
1001d65c:	f804 2d01 	strb.w	r2, [r4, #-1]!
1001d660:	d1f2      	bne.n	1001d648 <_vfiprintf_r+0x624>
1001d662:	9b02      	ldr	r3, [sp, #8]
1001d664:	07dd      	lsls	r5, r3, #31
1001d666:	f140 8195 	bpl.w	1001d994 <_vfiprintf_r+0x970>
1001d66a:	2a30      	cmp	r2, #48	@ 0x30
1001d66c:	f000 8192 	beq.w	1001d994 <_vfiprintf_r+0x970>
1001d670:	2330      	movs	r3, #48	@ 0x30
1001d672:	9a05      	ldr	r2, [sp, #20]
1001d674:	f804 3c01 	strb.w	r3, [r4, #-1]
1001d678:	3802      	subs	r0, #2
1001d67a:	ab46      	add	r3, sp, #280	@ 0x118
1001d67c:	1a1b      	subs	r3, r3, r0
1001d67e:	429a      	cmp	r2, r3
1001d680:	bfb8      	it	lt
1001d682:	461a      	movlt	r2, r3
1001d684:	9309      	str	r3, [sp, #36]	@ 0x24
1001d686:	4604      	mov	r4, r0
1001d688:	9204      	str	r2, [sp, #16]
1001d68a:	e095      	b.n	1001d7b8 <_vfiprintf_r+0x794>
1001d68c:	7822      	ldrb	r2, [r4, #0]
1001d68e:	9b02      	ldr	r3, [sp, #8]
1001d690:	2a68      	cmp	r2, #104	@ 0x68
1001d692:	f000 839d 	beq.w	1001ddd0 <_vfiprintf_r+0xdac>
1001d696:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001d69a:	9302      	str	r3, [sp, #8]
1001d69c:	e52a      	b.n	1001d0f4 <_vfiprintf_r+0xd0>
1001d69e:	9b02      	ldr	r3, [sp, #8]
1001d6a0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001d6a2:	9406      	str	r4, [sp, #24]
1001d6a4:	f043 0302 	orr.w	r3, r3, #2
1001d6a8:	9302      	str	r3, [sp, #8]
1001d6aa:	f852 3b04 	ldr.w	r3, [r2], #4
1001d6ae:	920a      	str	r2, [sp, #40]	@ 0x28
1001d6b0:	f647 0230 	movw	r2, #30768	@ 0x7830
1001d6b4:	f8ad 204c 	strh.w	r2, [sp, #76]	@ 0x4c
1001d6b8:	4abb      	ldr	r2, [pc, #748]	@ (1001d9a8 <_vfiprintf_r+0x984>)
1001d6ba:	920d      	str	r2, [sp, #52]	@ 0x34
1001d6bc:	2100      	movs	r1, #0
1001d6be:	2200      	movs	r2, #0
1001d6c0:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
1001d6c4:	9a05      	ldr	r2, [sp, #20]
1001d6c6:	3201      	adds	r2, #1
1001d6c8:	f000 8156 	beq.w	1001d978 <_vfiprintf_r+0x954>
1001d6cc:	9c02      	ldr	r4, [sp, #8]
1001d6ce:	ea53 0001 	orrs.w	r0, r3, r1
1001d6d2:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
1001d6d6:	9202      	str	r2, [sp, #8]
1001d6d8:	f040 814e 	bne.w	1001d978 <_vfiprintf_r+0x954>
1001d6dc:	2002      	movs	r0, #2
1001d6de:	e75c      	b.n	1001d59a <_vfiprintf_r+0x576>
1001d6e0:	9b02      	ldr	r3, [sp, #8]
1001d6e2:	9406      	str	r4, [sp, #24]
1001d6e4:	069e      	lsls	r6, r3, #26
1001d6e6:	f140 827e 	bpl.w	1001dbe6 <_vfiprintf_r+0xbc2>
1001d6ea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001d6ec:	9a07      	ldr	r2, [sp, #28]
1001d6ee:	681b      	ldr	r3, [r3, #0]
1001d6f0:	601a      	str	r2, [r3, #0]
1001d6f2:	17d2      	asrs	r2, r2, #31
1001d6f4:	605a      	str	r2, [r3, #4]
1001d6f6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001d6f8:	3304      	adds	r3, #4
1001d6fa:	930a      	str	r3, [sp, #40]	@ 0x28
1001d6fc:	e4d5      	b.n	1001d0aa <_vfiprintf_r+0x86>
1001d6fe:	9b02      	ldr	r3, [sp, #8]
1001d700:	7822      	ldrb	r2, [r4, #0]
1001d702:	f043 0301 	orr.w	r3, r3, #1
1001d706:	9302      	str	r3, [sp, #8]
1001d708:	e4f4      	b.n	1001d0f4 <_vfiprintf_r+0xd0>
1001d70a:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
1001d70e:	7822      	ldrb	r2, [r4, #0]
1001d710:	2b00      	cmp	r3, #0
1001d712:	f47f acef 	bne.w	1001d0f4 <_vfiprintf_r+0xd0>
1001d716:	2320      	movs	r3, #32
1001d718:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001d71c:	e4ea      	b.n	1001d0f4 <_vfiprintf_r+0xd0>
1001d71e:	9b02      	ldr	r3, [sp, #8]
1001d720:	7822      	ldrb	r2, [r4, #0]
1001d722:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1001d726:	9302      	str	r3, [sp, #8]
1001d728:	e4e4      	b.n	1001d0f4 <_vfiprintf_r+0xd0>
1001d72a:	4621      	mov	r1, r4
1001d72c:	f811 2b01 	ldrb.w	r2, [r1], #1
1001d730:	2a2a      	cmp	r2, #42	@ 0x2a
1001d732:	f000 8433 	beq.w	1001df9c <_vfiprintf_r+0xf78>
1001d736:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
1001d73a:	2b09      	cmp	r3, #9
1001d73c:	460c      	mov	r4, r1
1001d73e:	f200 83f6 	bhi.w	1001df2e <_vfiprintf_r+0xf0a>
1001d742:	2200      	movs	r2, #0
1001d744:	4611      	mov	r1, r2
1001d746:	f814 2b01 	ldrb.w	r2, [r4], #1
1001d74a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001d74e:	eb03 0141 	add.w	r1, r3, r1, lsl #1
1001d752:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
1001d756:	2b09      	cmp	r3, #9
1001d758:	d9f5      	bls.n	1001d746 <_vfiprintf_r+0x722>
1001d75a:	9105      	str	r1, [sp, #20]
1001d75c:	e4cb      	b.n	1001d0f6 <_vfiprintf_r+0xd2>
1001d75e:	232b      	movs	r3, #43	@ 0x2b
1001d760:	7822      	ldrb	r2, [r4, #0]
1001d762:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001d766:	e4c5      	b.n	1001d0f4 <_vfiprintf_r+0xd0>
1001d768:	7822      	ldrb	r2, [r4, #0]
1001d76a:	9b02      	ldr	r3, [sp, #8]
1001d76c:	2a6c      	cmp	r2, #108	@ 0x6c
1001d76e:	f000 8336 	beq.w	1001ddde <_vfiprintf_r+0xdba>
1001d772:	f043 0310 	orr.w	r3, r3, #16
1001d776:	9302      	str	r3, [sp, #8]
1001d778:	e4bc      	b.n	1001d0f4 <_vfiprintf_r+0xd0>
1001d77a:	222d      	movs	r2, #45	@ 0x2d
1001d77c:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
1001d780:	9a05      	ldr	r2, [sp, #20]
1001d782:	425b      	negs	r3, r3
1001d784:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001d788:	3201      	adds	r2, #1
1001d78a:	d003      	beq.n	1001d794 <_vfiprintf_r+0x770>
1001d78c:	9a02      	ldr	r2, [sp, #8]
1001d78e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
1001d792:	9202      	str	r2, [sp, #8]
1001d794:	2b0a      	cmp	r3, #10
1001d796:	f171 0200 	sbcs.w	r2, r1, #0
1001d79a:	f080 82bd 	bcs.w	1001dd18 <_vfiprintf_r+0xcf4>
1001d79e:	3330      	adds	r3, #48	@ 0x30
1001d7a0:	b2db      	uxtb	r3, r3
1001d7a2:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
1001d7a6:	9b05      	ldr	r3, [sp, #20]
1001d7a8:	2b01      	cmp	r3, #1
1001d7aa:	bfb8      	it	lt
1001d7ac:	2301      	movlt	r3, #1
1001d7ae:	9304      	str	r3, [sp, #16]
1001d7b0:	2301      	movs	r3, #1
1001d7b2:	9309      	str	r3, [sp, #36]	@ 0x24
1001d7b4:	f20d 1417 	addw	r4, sp, #279	@ 0x117
1001d7b8:	2300      	movs	r3, #0
1001d7ba:	930b      	str	r3, [sp, #44]	@ 0x2c
1001d7bc:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
1001d7c0:	2b00      	cmp	r3, #0
1001d7c2:	f43f adae 	beq.w	1001d322 <_vfiprintf_r+0x2fe>
1001d7c6:	9b04      	ldr	r3, [sp, #16]
1001d7c8:	3301      	adds	r3, #1
1001d7ca:	9304      	str	r3, [sp, #16]
1001d7cc:	e5a9      	b.n	1001d322 <_vfiprintf_r+0x2fe>
1001d7ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001d7d0:	941d      	str	r4, [sp, #116]	@ 0x74
1001d7d2:	2201      	movs	r2, #1
1001d7d4:	931e      	str	r3, [sp, #120]	@ 0x78
1001d7d6:	931c      	str	r3, [sp, #112]	@ 0x70
1001d7d8:	921b      	str	r2, [sp, #108]	@ 0x6c
1001d7da:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001d7de:	f109 0908 	add.w	r9, r9, #8
1001d7e2:	e60c      	b.n	1001d3fe <_vfiprintf_r+0x3da>
1001d7e4:	9b08      	ldr	r3, [sp, #32]
1001d7e6:	9804      	ldr	r0, [sp, #16]
1001d7e8:	1a1d      	subs	r5, r3, r0
1001d7ea:	2d00      	cmp	r5, #0
1001d7ec:	f77f ade7 	ble.w	1001d3be <_vfiprintf_r+0x39a>
1001d7f0:	2d10      	cmp	r5, #16
1001d7f2:	f340 83cb 	ble.w	1001df8c <_vfiprintf_r+0xf68>
1001d7f6:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 1001d9ac <_vfiprintf_r+0x988>
1001d7fa:	4643      	mov	r3, r8
1001d7fc:	2610      	movs	r6, #16
1001d7fe:	46a0      	mov	r8, r4
1001d800:	4661      	mov	r1, ip
1001d802:	461c      	mov	r4, r3
1001d804:	e007      	b.n	1001d816 <_vfiprintf_r+0x7f2>
1001d806:	f102 0c02 	add.w	ip, r2, #2
1001d80a:	f109 0908 	add.w	r9, r9, #8
1001d80e:	4602      	mov	r2, r0
1001d810:	3d10      	subs	r5, #16
1001d812:	2d10      	cmp	r5, #16
1001d814:	dd1a      	ble.n	1001d84c <_vfiprintf_r+0x828>
1001d816:	1c50      	adds	r0, r2, #1
1001d818:	3110      	adds	r1, #16
1001d81a:	2807      	cmp	r0, #7
1001d81c:	e9c9 4600 	strd	r4, r6, [r9]
1001d820:	e9cd 011b 	strd	r0, r1, [sp, #108]	@ 0x6c
1001d824:	ddef      	ble.n	1001d806 <_vfiprintf_r+0x7e2>
1001d826:	aa1a      	add	r2, sp, #104	@ 0x68
1001d828:	2900      	cmp	r1, #0
1001d82a:	d07c      	beq.n	1001d926 <_vfiprintf_r+0x902>
1001d82c:	9903      	ldr	r1, [sp, #12]
1001d82e:	4658      	mov	r0, fp
1001d830:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001d834:	f7ff fbb0 	bl	1001cf98 <__sprint_r.part.0>
1001d838:	2800      	cmp	r0, #0
1001d83a:	f47f ad4b 	bne.w	1001d2d4 <_vfiprintf_r+0x2b0>
1001d83e:	e9dd 211b 	ldrd	r2, r1, [sp, #108]	@ 0x6c
1001d842:	3d10      	subs	r5, #16
1001d844:	2d10      	cmp	r5, #16
1001d846:	f102 0c01 	add.w	ip, r2, #1
1001d84a:	dce4      	bgt.n	1001d816 <_vfiprintf_r+0x7f2>
1001d84c:	4623      	mov	r3, r4
1001d84e:	4660      	mov	r0, ip
1001d850:	4644      	mov	r4, r8
1001d852:	468c      	mov	ip, r1
1001d854:	4698      	mov	r8, r3
1001d856:	44ac      	add	ip, r5
1001d858:	2807      	cmp	r0, #7
1001d85a:	e9cd 0c1b 	strd	r0, ip, [sp, #108]	@ 0x6c
1001d85e:	f8c9 8000 	str.w	r8, [r9]
1001d862:	f8c9 5004 	str.w	r5, [r9, #4]
1001d866:	f340 81a3 	ble.w	1001dbb0 <_vfiprintf_r+0xb8c>
1001d86a:	f1bc 0f00 	cmp.w	ip, #0
1001d86e:	f000 8327 	beq.w	1001dec0 <_vfiprintf_r+0xe9c>
1001d872:	9903      	ldr	r1, [sp, #12]
1001d874:	aa1a      	add	r2, sp, #104	@ 0x68
1001d876:	4658      	mov	r0, fp
1001d878:	f7ff fb8e 	bl	1001cf98 <__sprint_r.part.0>
1001d87c:	2800      	cmp	r0, #0
1001d87e:	f47f ad29 	bne.w	1001d2d4 <_vfiprintf_r+0x2b0>
1001d882:	9b05      	ldr	r3, [sp, #20]
1001d884:	9809      	ldr	r0, [sp, #36]	@ 0x24
1001d886:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001d88a:	1a1d      	subs	r5, r3, r0
1001d88c:	2d00      	cmp	r5, #0
1001d88e:	f102 0101 	add.w	r1, r2, #1
1001d892:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001d896:	f77f ad98 	ble.w	1001d3ca <_vfiprintf_r+0x3a6>
1001d89a:	2d10      	cmp	r5, #16
1001d89c:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 1001d9ac <_vfiprintf_r+0x988>
1001d8a0:	dd2d      	ble.n	1001d8fe <_vfiprintf_r+0x8da>
1001d8a2:	462b      	mov	r3, r5
1001d8a4:	2610      	movs	r6, #16
1001d8a6:	4625      	mov	r5, r4
1001d8a8:	4660      	mov	r0, ip
1001d8aa:	461c      	mov	r4, r3
1001d8ac:	e007      	b.n	1001d8be <_vfiprintf_r+0x89a>
1001d8ae:	f102 0c02 	add.w	ip, r2, #2
1001d8b2:	f109 0908 	add.w	r9, r9, #8
1001d8b6:	460a      	mov	r2, r1
1001d8b8:	3c10      	subs	r4, #16
1001d8ba:	2c10      	cmp	r4, #16
1001d8bc:	dd1a      	ble.n	1001d8f4 <_vfiprintf_r+0x8d0>
1001d8be:	1c51      	adds	r1, r2, #1
1001d8c0:	4b3a      	ldr	r3, [pc, #232]	@ (1001d9ac <_vfiprintf_r+0x988>)
1001d8c2:	3010      	adds	r0, #16
1001d8c4:	2907      	cmp	r1, #7
1001d8c6:	e9c9 3600 	strd	r3, r6, [r9]
1001d8ca:	e9cd 101b 	strd	r1, r0, [sp, #108]	@ 0x6c
1001d8ce:	ddee      	ble.n	1001d8ae <_vfiprintf_r+0x88a>
1001d8d0:	aa1a      	add	r2, sp, #104	@ 0x68
1001d8d2:	b310      	cbz	r0, 1001d91a <_vfiprintf_r+0x8f6>
1001d8d4:	9903      	ldr	r1, [sp, #12]
1001d8d6:	4658      	mov	r0, fp
1001d8d8:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001d8dc:	f7ff fb5c 	bl	1001cf98 <__sprint_r.part.0>
1001d8e0:	2800      	cmp	r0, #0
1001d8e2:	f47f acf7 	bne.w	1001d2d4 <_vfiprintf_r+0x2b0>
1001d8e6:	e9dd 201b 	ldrd	r2, r0, [sp, #108]	@ 0x6c
1001d8ea:	3c10      	subs	r4, #16
1001d8ec:	2c10      	cmp	r4, #16
1001d8ee:	f102 0c01 	add.w	ip, r2, #1
1001d8f2:	dce4      	bgt.n	1001d8be <_vfiprintf_r+0x89a>
1001d8f4:	4623      	mov	r3, r4
1001d8f6:	4661      	mov	r1, ip
1001d8f8:	462c      	mov	r4, r5
1001d8fa:	4684      	mov	ip, r0
1001d8fc:	461d      	mov	r5, r3
1001d8fe:	44ac      	add	ip, r5
1001d900:	2907      	cmp	r1, #7
1001d902:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
1001d906:	f8c9 8000 	str.w	r8, [r9]
1001d90a:	f8c9 5004 	str.w	r5, [r9, #4]
1001d90e:	f300 80ec 	bgt.w	1001daea <_vfiprintf_r+0xac6>
1001d912:	f109 0908 	add.w	r9, r9, #8
1001d916:	3101      	adds	r1, #1
1001d918:	e557      	b.n	1001d3ca <_vfiprintf_r+0x3a6>
1001d91a:	f04f 0c01 	mov.w	ip, #1
1001d91e:	4602      	mov	r2, r0
1001d920:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001d924:	e7c8      	b.n	1001d8b8 <_vfiprintf_r+0x894>
1001d926:	f04f 0c01 	mov.w	ip, #1
1001d92a:	460a      	mov	r2, r1
1001d92c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001d930:	e76e      	b.n	1001d810 <_vfiprintf_r+0x7ec>
1001d932:	f1bc 0f00 	cmp.w	ip, #0
1001d936:	d00f      	beq.n	1001d958 <_vfiprintf_r+0x934>
1001d938:	9903      	ldr	r1, [sp, #12]
1001d93a:	9311      	str	r3, [sp, #68]	@ 0x44
1001d93c:	aa1a      	add	r2, sp, #104	@ 0x68
1001d93e:	4658      	mov	r0, fp
1001d940:	f7ff fb2a 	bl	1001cf98 <__sprint_r.part.0>
1001d944:	2800      	cmp	r0, #0
1001d946:	f47f acc5 	bne.w	1001d2d4 <_vfiprintf_r+0x2b0>
1001d94a:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001d94e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
1001d950:	1c51      	adds	r1, r2, #1
1001d952:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001d956:	e50f      	b.n	1001d378 <_vfiprintf_r+0x354>
1001d958:	2b00      	cmp	r3, #0
1001d95a:	f000 8155 	beq.w	1001dc08 <_vfiprintf_r+0xbe4>
1001d95e:	2302      	movs	r3, #2
1001d960:	931e      	str	r3, [sp, #120]	@ 0x78
1001d962:	469c      	mov	ip, r3
1001d964:	ab13      	add	r3, sp, #76	@ 0x4c
1001d966:	931d      	str	r3, [sp, #116]	@ 0x74
1001d968:	2101      	movs	r1, #1
1001d96a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001d96e:	460a      	mov	r2, r1
1001d970:	f109 0908 	add.w	r9, r9, #8
1001d974:	3101      	adds	r1, #1
1001d976:	e51e      	b.n	1001d3b6 <_vfiprintf_r+0x392>
1001d978:	980d      	ldr	r0, [sp, #52]	@ 0x34
1001d97a:	ac46      	add	r4, sp, #280	@ 0x118
1001d97c:	f003 020f 	and.w	r2, r3, #15
1001d980:	091b      	lsrs	r3, r3, #4
1001d982:	5c82      	ldrb	r2, [r0, r2]
1001d984:	f804 2d01 	strb.w	r2, [r4, #-1]!
1001d988:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
1001d98c:	0909      	lsrs	r1, r1, #4
1001d98e:	ea53 0201 	orrs.w	r2, r3, r1
1001d992:	d1f3      	bne.n	1001d97c <_vfiprintf_r+0x958>
1001d994:	9a05      	ldr	r2, [sp, #20]
1001d996:	ab46      	add	r3, sp, #280	@ 0x118
1001d998:	1b1b      	subs	r3, r3, r4
1001d99a:	429a      	cmp	r2, r3
1001d99c:	bfb8      	it	lt
1001d99e:	461a      	movlt	r2, r3
1001d9a0:	9309      	str	r3, [sp, #36]	@ 0x24
1001d9a2:	9204      	str	r2, [sp, #16]
1001d9a4:	e708      	b.n	1001d7b8 <_vfiprintf_r+0x794>
1001d9a6:	bf00      	nop
1001d9a8:	1002a638 	.word	0x1002a638
1001d9ac:	1002a6ac 	.word	0x1002a6ac
1001d9b0:	2d10      	cmp	r5, #16
1001d9b2:	f340 82c0 	ble.w	1001df36 <_vfiprintf_r+0xf12>
1001d9b6:	4eae      	ldr	r6, [pc, #696]	@ (1001dc70 <_vfiprintf_r+0xc4c>)
1001d9b8:	9311      	str	r3, [sp, #68]	@ 0x44
1001d9ba:	4649      	mov	r1, r9
1001d9bc:	f04f 0810 	mov.w	r8, #16
1001d9c0:	46a1      	mov	r9, r4
1001d9c2:	4634      	mov	r4, r6
1001d9c4:	4666      	mov	r6, ip
1001d9c6:	e007      	b.n	1001d9d8 <_vfiprintf_r+0x9b4>
1001d9c8:	f102 0e02 	add.w	lr, r2, #2
1001d9cc:	3108      	adds	r1, #8
1001d9ce:	4602      	mov	r2, r0
1001d9d0:	3d10      	subs	r5, #16
1001d9d2:	2d10      	cmp	r5, #16
1001d9d4:	dd18      	ble.n	1001da08 <_vfiprintf_r+0x9e4>
1001d9d6:	1c50      	adds	r0, r2, #1
1001d9d8:	3610      	adds	r6, #16
1001d9da:	2807      	cmp	r0, #7
1001d9dc:	e9c1 4800 	strd	r4, r8, [r1]
1001d9e0:	e9cd 061b 	strd	r0, r6, [sp, #108]	@ 0x6c
1001d9e4:	ddf0      	ble.n	1001d9c8 <_vfiprintf_r+0x9a4>
1001d9e6:	9903      	ldr	r1, [sp, #12]
1001d9e8:	aa1a      	add	r2, sp, #104	@ 0x68
1001d9ea:	4658      	mov	r0, fp
1001d9ec:	b316      	cbz	r6, 1001da34 <_vfiprintf_r+0xa10>
1001d9ee:	f7ff fad3 	bl	1001cf98 <__sprint_r.part.0>
1001d9f2:	2800      	cmp	r0, #0
1001d9f4:	f47f ac6e 	bne.w	1001d2d4 <_vfiprintf_r+0x2b0>
1001d9f8:	e9dd 261b 	ldrd	r2, r6, [sp, #108]	@ 0x6c
1001d9fc:	3d10      	subs	r5, #16
1001d9fe:	2d10      	cmp	r5, #16
1001da00:	f102 0e01 	add.w	lr, r2, #1
1001da04:	a91d      	add	r1, sp, #116	@ 0x74
1001da06:	dce6      	bgt.n	1001d9d6 <_vfiprintf_r+0x9b2>
1001da08:	9b11      	ldr	r3, [sp, #68]	@ 0x44
1001da0a:	46b4      	mov	ip, r6
1001da0c:	4626      	mov	r6, r4
1001da0e:	464c      	mov	r4, r9
1001da10:	4689      	mov	r9, r1
1001da12:	44ac      	add	ip, r5
1001da14:	f1be 0f07 	cmp.w	lr, #7
1001da18:	e9cd ec1b 	strd	lr, ip, [sp, #108]	@ 0x6c
1001da1c:	f8c9 6000 	str.w	r6, [r9]
1001da20:	f8c9 5004 	str.w	r5, [r9, #4]
1001da24:	f300 809a 	bgt.w	1001db5c <_vfiprintf_r+0xb38>
1001da28:	f109 0908 	add.w	r9, r9, #8
1001da2c:	f10e 0101 	add.w	r1, lr, #1
1001da30:	4672      	mov	r2, lr
1001da32:	e48c      	b.n	1001d34e <_vfiprintf_r+0x32a>
1001da34:	4632      	mov	r2, r6
1001da36:	f04f 0e01 	mov.w	lr, #1
1001da3a:	a91d      	add	r1, sp, #116	@ 0x74
1001da3c:	e7c8      	b.n	1001d9d0 <_vfiprintf_r+0x9ac>
1001da3e:	9a02      	ldr	r2, [sp, #8]
1001da40:	931b      	str	r3, [sp, #108]	@ 0x6c
1001da42:	0754      	lsls	r4, r2, #29
1001da44:	d548      	bpl.n	1001dad8 <_vfiprintf_r+0xab4>
1001da46:	9a08      	ldr	r2, [sp, #32]
1001da48:	9904      	ldr	r1, [sp, #16]
1001da4a:	1a54      	subs	r4, r2, r1
1001da4c:	2c00      	cmp	r4, #0
1001da4e:	dd43      	ble.n	1001dad8 <_vfiprintf_r+0xab4>
1001da50:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001da54:	2c10      	cmp	r4, #16
1001da56:	991b      	ldr	r1, [sp, #108]	@ 0x6c
1001da58:	f340 827c 	ble.w	1001df54 <_vfiprintf_r+0xf30>
1001da5c:	4e84      	ldr	r6, [pc, #528]	@ (1001dc70 <_vfiprintf_r+0xc4c>)
1001da5e:	f8dd 800c 	ldr.w	r8, [sp, #12]
1001da62:	2510      	movs	r5, #16
1001da64:	e006      	b.n	1001da74 <_vfiprintf_r+0xa50>
1001da66:	1c88      	adds	r0, r1, #2
1001da68:	f109 0908 	add.w	r9, r9, #8
1001da6c:	4611      	mov	r1, r2
1001da6e:	3c10      	subs	r4, #16
1001da70:	2c10      	cmp	r4, #16
1001da72:	dd19      	ble.n	1001daa8 <_vfiprintf_r+0xa84>
1001da74:	1c4a      	adds	r2, r1, #1
1001da76:	3310      	adds	r3, #16
1001da78:	2a07      	cmp	r2, #7
1001da7a:	e9c9 6500 	strd	r6, r5, [r9]
1001da7e:	e9cd 231b 	strd	r2, r3, [sp, #108]	@ 0x6c
1001da82:	ddf0      	ble.n	1001da66 <_vfiprintf_r+0xa42>
1001da84:	aa1a      	add	r2, sp, #104	@ 0x68
1001da86:	b313      	cbz	r3, 1001dace <_vfiprintf_r+0xaaa>
1001da88:	4641      	mov	r1, r8
1001da8a:	4658      	mov	r0, fp
1001da8c:	f7ff fa84 	bl	1001cf98 <__sprint_r.part.0>
1001da90:	2800      	cmp	r0, #0
1001da92:	f47f ac1f 	bne.w	1001d2d4 <_vfiprintf_r+0x2b0>
1001da96:	e9dd 131b 	ldrd	r1, r3, [sp, #108]	@ 0x6c
1001da9a:	3c10      	subs	r4, #16
1001da9c:	2c10      	cmp	r4, #16
1001da9e:	f101 0001 	add.w	r0, r1, #1
1001daa2:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001daa6:	dce5      	bgt.n	1001da74 <_vfiprintf_r+0xa50>
1001daa8:	4423      	add	r3, r4
1001daaa:	2807      	cmp	r0, #7
1001daac:	e9c9 6400 	strd	r6, r4, [r9]
1001dab0:	e9cd 031b 	strd	r0, r3, [sp, #108]	@ 0x6c
1001dab4:	f77f acac 	ble.w	1001d410 <_vfiprintf_r+0x3ec>
1001dab8:	b173      	cbz	r3, 1001dad8 <_vfiprintf_r+0xab4>
1001daba:	9903      	ldr	r1, [sp, #12]
1001dabc:	aa1a      	add	r2, sp, #104	@ 0x68
1001dabe:	4658      	mov	r0, fp
1001dac0:	f7ff fa6a 	bl	1001cf98 <__sprint_r.part.0>
1001dac4:	2800      	cmp	r0, #0
1001dac6:	f47f ac05 	bne.w	1001d2d4 <_vfiprintf_r+0x2b0>
1001daca:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001dacc:	e4a0      	b.n	1001d410 <_vfiprintf_r+0x3ec>
1001dace:	2001      	movs	r0, #1
1001dad0:	4619      	mov	r1, r3
1001dad2:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001dad6:	e7ca      	b.n	1001da6e <_vfiprintf_r+0xa4a>
1001dad8:	e9dd 3207 	ldrd	r3, r2, [sp, #28]
1001dadc:	9904      	ldr	r1, [sp, #16]
1001dade:	428a      	cmp	r2, r1
1001dae0:	bfac      	ite	ge
1001dae2:	189b      	addge	r3, r3, r2
1001dae4:	185b      	addlt	r3, r3, r1
1001dae6:	9307      	str	r3, [sp, #28]
1001dae8:	e49d      	b.n	1001d426 <_vfiprintf_r+0x402>
1001daea:	f1bc 0f00 	cmp.w	ip, #0
1001daee:	f43f ae6e 	beq.w	1001d7ce <_vfiprintf_r+0x7aa>
1001daf2:	9903      	ldr	r1, [sp, #12]
1001daf4:	aa1a      	add	r2, sp, #104	@ 0x68
1001daf6:	4658      	mov	r0, fp
1001daf8:	f7ff fa4e 	bl	1001cf98 <__sprint_r.part.0>
1001dafc:	2800      	cmp	r0, #0
1001dafe:	f47f abe9 	bne.w	1001d2d4 <_vfiprintf_r+0x2b0>
1001db02:	991b      	ldr	r1, [sp, #108]	@ 0x6c
1001db04:	f8dd c070 	ldr.w	ip, [sp, #112]	@ 0x70
1001db08:	3101      	adds	r1, #1
1001db0a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001db0e:	e45c      	b.n	1001d3ca <_vfiprintf_r+0x3a6>
1001db10:	921b      	str	r2, [sp, #108]	@ 0x6c
1001db12:	f7ff bbd4 	b.w	1001d2be <_vfiprintf_r+0x29a>
1001db16:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001db18:	f852 3b04 	ldr.w	r3, [r2], #4
1001db1c:	920a      	str	r2, [sp, #40]	@ 0x28
1001db1e:	f014 0210 	ands.w	r2, r4, #16
1001db22:	f47f ad76 	bne.w	1001d612 <_vfiprintf_r+0x5ee>
1001db26:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
1001db2a:	f000 816e 	beq.w	1001de0a <_vfiprintf_r+0xde6>
1001db2e:	b29b      	uxth	r3, r3
1001db30:	4611      	mov	r1, r2
1001db32:	e56e      	b.n	1001d612 <_vfiprintf_r+0x5ee>
1001db34:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001db36:	f850 3b04 	ldr.w	r3, [r0], #4
1001db3a:	900a      	str	r0, [sp, #40]	@ 0x28
1001db3c:	f012 0010 	ands.w	r0, r2, #16
1001db40:	f47f ad1a 	bne.w	1001d578 <_vfiprintf_r+0x554>
1001db44:	f012 0440 	ands.w	r4, r2, #64	@ 0x40
1001db48:	f000 8167 	beq.w	1001de1a <_vfiprintf_r+0xdf6>
1001db4c:	b29b      	uxth	r3, r3
1001db4e:	4601      	mov	r1, r0
1001db50:	e512      	b.n	1001d578 <_vfiprintf_r+0x554>
1001db52:	2101      	movs	r1, #1
1001db54:	4662      	mov	r2, ip
1001db56:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001db5a:	e42c      	b.n	1001d3b6 <_vfiprintf_r+0x392>
1001db5c:	f1bc 0f00 	cmp.w	ip, #0
1001db60:	f000 8095 	beq.w	1001dc8e <_vfiprintf_r+0xc6a>
1001db64:	9903      	ldr	r1, [sp, #12]
1001db66:	9311      	str	r3, [sp, #68]	@ 0x44
1001db68:	aa1a      	add	r2, sp, #104	@ 0x68
1001db6a:	4658      	mov	r0, fp
1001db6c:	f7ff fa14 	bl	1001cf98 <__sprint_r.part.0>
1001db70:	2800      	cmp	r0, #0
1001db72:	f47f abaf 	bne.w	1001d2d4 <_vfiprintf_r+0x2b0>
1001db76:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001db7a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
1001db7c:	1c51      	adds	r1, r2, #1
1001db7e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001db82:	f7ff bbe4 	b.w	1001d34e <_vfiprintf_r+0x32a>
1001db86:	9b05      	ldr	r3, [sp, #20]
1001db88:	9304      	str	r3, [sp, #16]
1001db8a:	9309      	str	r3, [sp, #36]	@ 0x24
1001db8c:	ac46      	add	r4, sp, #280	@ 0x118
1001db8e:	e613      	b.n	1001d7b8 <_vfiprintf_r+0x794>
1001db90:	7822      	ldrb	r2, [r4, #0]
1001db92:	930a      	str	r3, [sp, #40]	@ 0x28
1001db94:	f7ff baae 	b.w	1001d0f4 <_vfiprintf_r+0xd0>
1001db98:	9b05      	ldr	r3, [sp, #20]
1001db9a:	9304      	str	r3, [sp, #16]
1001db9c:	ac46      	add	r4, sp, #280	@ 0x118
1001db9e:	e60b      	b.n	1001d7b8 <_vfiprintf_r+0x794>
1001dba0:	9d03      	ldr	r5, [sp, #12]
1001dba2:	6da8      	ldr	r0, [r5, #88]	@ 0x58
1001dba4:	f7f8 f944 	bl	10015e30 <__retarget_lock_acquire_recursive>
1001dba8:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
1001dbac:	f7ff ba59 	b.w	1001d062 <_vfiprintf_r+0x3e>
1001dbb0:	f109 0908 	add.w	r9, r9, #8
1001dbb4:	1c41      	adds	r1, r0, #1
1001dbb6:	4602      	mov	r2, r0
1001dbb8:	e401      	b.n	1001d3be <_vfiprintf_r+0x39a>
1001dbba:	9a02      	ldr	r2, [sp, #8]
1001dbbc:	0592      	lsls	r2, r2, #22
1001dbbe:	f100 8185 	bmi.w	1001decc <_vfiprintf_r+0xea8>
1001dbc2:	17d9      	asrs	r1, r3, #31
1001dbc4:	460a      	mov	r2, r1
1001dbc6:	e49e      	b.n	1001d506 <_vfiprintf_r+0x4e2>
1001dbc8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001dbca:	7822      	ldrb	r2, [r4, #0]
1001dbcc:	2b00      	cmp	r3, #0
1001dbce:	f43f aa91 	beq.w	1001d0f4 <_vfiprintf_r+0xd0>
1001dbd2:	781b      	ldrb	r3, [r3, #0]
1001dbd4:	2b00      	cmp	r3, #0
1001dbd6:	f43f aa8d 	beq.w	1001d0f4 <_vfiprintf_r+0xd0>
1001dbda:	9b02      	ldr	r3, [sp, #8]
1001dbdc:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
1001dbe0:	9302      	str	r3, [sp, #8]
1001dbe2:	f7ff ba87 	b.w	1001d0f4 <_vfiprintf_r+0xd0>
1001dbe6:	9b02      	ldr	r3, [sp, #8]
1001dbe8:	06dd      	lsls	r5, r3, #27
1001dbea:	f100 80ff 	bmi.w	1001ddec <_vfiprintf_r+0xdc8>
1001dbee:	9b02      	ldr	r3, [sp, #8]
1001dbf0:	065c      	lsls	r4, r3, #25
1001dbf2:	f100 8177 	bmi.w	1001dee4 <_vfiprintf_r+0xec0>
1001dbf6:	9b02      	ldr	r3, [sp, #8]
1001dbf8:	0598      	lsls	r0, r3, #22
1001dbfa:	f140 80f7 	bpl.w	1001ddec <_vfiprintf_r+0xdc8>
1001dbfe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001dc00:	9a07      	ldr	r2, [sp, #28]
1001dc02:	681b      	ldr	r3, [r3, #0]
1001dc04:	701a      	strb	r2, [r3, #0]
1001dc06:	e576      	b.n	1001d6f6 <_vfiprintf_r+0x6d2>
1001dc08:	4662      	mov	r2, ip
1001dc0a:	2101      	movs	r1, #1
1001dc0c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001dc10:	f7ff bbd1 	b.w	1001d3b6 <_vfiprintf_r+0x392>
1001dc14:	9406      	str	r4, [sp, #24]
1001dc16:	9c02      	ldr	r4, [sp, #8]
1001dc18:	e4ee      	b.n	1001d5f8 <_vfiprintf_r+0x5d4>
1001dc1a:	9a02      	ldr	r2, [sp, #8]
1001dc1c:	9406      	str	r4, [sp, #24]
1001dc1e:	e49e      	b.n	1001d55e <_vfiprintf_r+0x53a>
1001dc20:	4b14      	ldr	r3, [pc, #80]	@ (1001dc74 <_vfiprintf_r+0xc50>)
1001dc22:	9406      	str	r4, [sp, #24]
1001dc24:	930d      	str	r3, [sp, #52]	@ 0x34
1001dc26:	9b02      	ldr	r3, [sp, #8]
1001dc28:	f013 0120 	ands.w	r1, r3, #32
1001dc2c:	d064      	beq.n	1001dcf8 <_vfiprintf_r+0xcd4>
1001dc2e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001dc30:	3307      	adds	r3, #7
1001dc32:	f023 0307 	bic.w	r3, r3, #7
1001dc36:	4618      	mov	r0, r3
1001dc38:	6859      	ldr	r1, [r3, #4]
1001dc3a:	f850 3b08 	ldr.w	r3, [r0], #8
1001dc3e:	900a      	str	r0, [sp, #40]	@ 0x28
1001dc40:	9c02      	ldr	r4, [sp, #8]
1001dc42:	07e6      	lsls	r6, r4, #31
1001dc44:	d50a      	bpl.n	1001dc5c <_vfiprintf_r+0xc38>
1001dc46:	ea53 0001 	orrs.w	r0, r3, r1
1001dc4a:	d007      	beq.n	1001dc5c <_vfiprintf_r+0xc38>
1001dc4c:	f88d 204d 	strb.w	r2, [sp, #77]	@ 0x4d
1001dc50:	f044 0202 	orr.w	r2, r4, #2
1001dc54:	9202      	str	r2, [sp, #8]
1001dc56:	2230      	movs	r2, #48	@ 0x30
1001dc58:	f88d 204c 	strb.w	r2, [sp, #76]	@ 0x4c
1001dc5c:	9a02      	ldr	r2, [sp, #8]
1001dc5e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
1001dc62:	9202      	str	r2, [sp, #8]
1001dc64:	e52b      	b.n	1001d6be <_vfiprintf_r+0x69a>
1001dc66:	4b04      	ldr	r3, [pc, #16]	@ (1001dc78 <_vfiprintf_r+0xc54>)
1001dc68:	9406      	str	r4, [sp, #24]
1001dc6a:	930d      	str	r3, [sp, #52]	@ 0x34
1001dc6c:	e7db      	b.n	1001dc26 <_vfiprintf_r+0xc02>
1001dc6e:	bf00      	nop
1001dc70:	1002a6bc 	.word	0x1002a6bc
1001dc74:	1002a64c 	.word	0x1002a64c
1001dc78:	1002a638 	.word	0x1002a638
1001dc7c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001dc7e:	681b      	ldr	r3, [r3, #0]
1001dc80:	f88d 30b4 	strb.w	r3, [sp, #180]	@ 0xb4
1001dc84:	2301      	movs	r3, #1
1001dc86:	9304      	str	r3, [sp, #16]
1001dc88:	9309      	str	r3, [sp, #36]	@ 0x24
1001dc8a:	ac2d      	add	r4, sp, #180	@ 0xb4
1001dc8c:	e428      	b.n	1001d4e0 <_vfiprintf_r+0x4bc>
1001dc8e:	f89d 204b 	ldrb.w	r2, [sp, #75]	@ 0x4b
1001dc92:	2a00      	cmp	r2, #0
1001dc94:	f000 8120 	beq.w	1001ded8 <_vfiprintf_r+0xeb4>
1001dc98:	2101      	movs	r1, #1
1001dc9a:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
1001dc9e:	911e      	str	r1, [sp, #120]	@ 0x78
1001dca0:	921d      	str	r2, [sp, #116]	@ 0x74
1001dca2:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001dca6:	468c      	mov	ip, r1
1001dca8:	f7ff bb62 	b.w	1001d370 <_vfiprintf_r+0x34c>
1001dcac:	2208      	movs	r2, #8
1001dcae:	2100      	movs	r1, #0
1001dcb0:	a818      	add	r0, sp, #96	@ 0x60
1001dcb2:	9415      	str	r4, [sp, #84]	@ 0x54
1001dcb4:	f7f8 f82a 	bl	10015d0c <memset>
1001dcb8:	f8dd 8014 	ldr.w	r8, [sp, #20]
1001dcbc:	f1b8 3fff 	cmp.w	r8, #4294967295	@ 0xffffffff
1001dcc0:	f000 80b9 	beq.w	1001de36 <_vfiprintf_r+0xe12>
1001dcc4:	2500      	movs	r5, #0
1001dcc6:	9404      	str	r4, [sp, #16]
1001dcc8:	462c      	mov	r4, r5
1001dcca:	e00c      	b.n	1001dce6 <_vfiprintf_r+0xcc2>
1001dccc:	a92d      	add	r1, sp, #180	@ 0xb4
1001dcce:	4658      	mov	r0, fp
1001dcd0:	f000 fa34 	bl	1001e13c <_wcrtomb_r>
1001dcd4:	1c41      	adds	r1, r0, #1
1001dcd6:	4420      	add	r0, r4
1001dcd8:	f000 813f 	beq.w	1001df5a <_vfiprintf_r+0xf36>
1001dcdc:	4540      	cmp	r0, r8
1001dcde:	dc08      	bgt.n	1001dcf2 <_vfiprintf_r+0xcce>
1001dce0:	f000 8158 	beq.w	1001df94 <_vfiprintf_r+0xf70>
1001dce4:	4604      	mov	r4, r0
1001dce6:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001dce8:	5952      	ldr	r2, [r2, r5]
1001dcea:	ab18      	add	r3, sp, #96	@ 0x60
1001dcec:	3504      	adds	r5, #4
1001dcee:	2a00      	cmp	r2, #0
1001dcf0:	d1ec      	bne.n	1001dccc <_vfiprintf_r+0xca8>
1001dcf2:	9409      	str	r4, [sp, #36]	@ 0x24
1001dcf4:	9c04      	ldr	r4, [sp, #16]
1001dcf6:	e0ac      	b.n	1001de52 <_vfiprintf_r+0xe2e>
1001dcf8:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001dcfa:	f850 3b04 	ldr.w	r3, [r0], #4
1001dcfe:	900a      	str	r0, [sp, #40]	@ 0x28
1001dd00:	9802      	ldr	r0, [sp, #8]
1001dd02:	f010 0010 	ands.w	r0, r0, #16
1001dd06:	d19b      	bne.n	1001dc40 <_vfiprintf_r+0xc1c>
1001dd08:	9902      	ldr	r1, [sp, #8]
1001dd0a:	f011 0440 	ands.w	r4, r1, #64	@ 0x40
1001dd0e:	f000 808b 	beq.w	1001de28 <_vfiprintf_r+0xe04>
1001dd12:	b29b      	uxth	r3, r3
1001dd14:	4601      	mov	r1, r0
1001dd16:	e793      	b.n	1001dc40 <_vfiprintf_r+0xc1c>
1001dd18:	9a02      	ldr	r2, [sp, #8]
1001dd1a:	f8cd 9010 	str.w	r9, [sp, #16]
1001dd1e:	ac46      	add	r4, sp, #280	@ 0x118
1001dd20:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
1001dd24:	46a1      	mov	r9, r4
1001dd26:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
1001dd2a:	4ea5      	ldr	r6, [pc, #660]	@ (1001dfc0 <_vfiprintf_r+0xf9c>)
1001dd2c:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
1001dd30:	f04f 0c00 	mov.w	ip, #0
1001dd34:	4614      	mov	r4, r2
1001dd36:	e005      	b.n	1001dd44 <_vfiprintf_r+0xd20>
1001dd38:	2b0a      	cmp	r3, #10
1001dd3a:	f171 0100 	sbcs.w	r1, r1, #0
1001dd3e:	d336      	bcc.n	1001ddae <_vfiprintf_r+0xd8a>
1001dd40:	4643      	mov	r3, r8
1001dd42:	4629      	mov	r1, r5
1001dd44:	185a      	adds	r2, r3, r1
1001dd46:	f142 0200 	adc.w	r2, r2, #0
1001dd4a:	fba6 0502 	umull	r0, r5, r6, r2
1001dd4e:	f025 0003 	bic.w	r0, r5, #3
1001dd52:	eb00 0095 	add.w	r0, r0, r5, lsr #2
1001dd56:	1a12      	subs	r2, r2, r0
1001dd58:	1a98      	subs	r0, r3, r2
1001dd5a:	f04f 35cc 	mov.w	r5, #3435973836	@ 0xcccccccc
1001dd5e:	f161 0e00 	sbc.w	lr, r1, #0
1001dd62:	fb05 f500 	mul.w	r5, r5, r0
1001dd66:	fb06 550e 	mla	r5, r6, lr, r5
1001dd6a:	fba0 8006 	umull	r8, r0, r0, r6
1001dd6e:	4405      	add	r5, r0
1001dd70:	f008 0e01 	and.w	lr, r8, #1
1001dd74:	2005      	movs	r0, #5
1001dd76:	fbae 0e00 	umull	r0, lr, lr, r0
1001dd7a:	1880      	adds	r0, r0, r2
1001dd7c:	ea4f 0858 	mov.w	r8, r8, lsr #1
1001dd80:	3030      	adds	r0, #48	@ 0x30
1001dd82:	f809 0c01 	strb.w	r0, [r9, #-1]
1001dd86:	ea48 78c5 	orr.w	r8, r8, r5, lsl #31
1001dd8a:	f10c 0c01 	add.w	ip, ip, #1
1001dd8e:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
1001dd92:	086d      	lsrs	r5, r5, #1
1001dd94:	2c00      	cmp	r4, #0
1001dd96:	d0cf      	beq.n	1001dd38 <_vfiprintf_r+0xd14>
1001dd98:	f89b 2000 	ldrb.w	r2, [fp]
1001dd9c:	4562      	cmp	r2, ip
1001dd9e:	d1cb      	bne.n	1001dd38 <_vfiprintf_r+0xd14>
1001dda0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
1001dda4:	d0c8      	beq.n	1001dd38 <_vfiprintf_r+0xd14>
1001dda6:	2b0a      	cmp	r3, #10
1001dda8:	f171 0100 	sbcs.w	r1, r1, #0
1001ddac:	d272      	bcs.n	1001de94 <_vfiprintf_r+0xe70>
1001ddae:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
1001ddb2:	464c      	mov	r4, r9
1001ddb4:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001ddb8:	f8dd 9010 	ldr.w	r9, [sp, #16]
1001ddbc:	e5ea      	b.n	1001d994 <_vfiprintf_r+0x970>
1001ddbe:	9202      	str	r2, [sp, #8]
1001ddc0:	e441      	b.n	1001d646 <_vfiprintf_r+0x622>
1001ddc2:	9402      	str	r4, [sp, #8]
1001ddc4:	e4e6      	b.n	1001d794 <_vfiprintf_r+0x770>
1001ddc6:	4658      	mov	r0, fp
1001ddc8:	f7f8 fcf8 	bl	100167bc <__sinit>
1001ddcc:	f7ff b940 	b.w	1001d050 <_vfiprintf_r+0x2c>
1001ddd0:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
1001ddd4:	7862      	ldrb	r2, [r4, #1]
1001ddd6:	9302      	str	r3, [sp, #8]
1001ddd8:	3401      	adds	r4, #1
1001ddda:	f7ff b98b 	b.w	1001d0f4 <_vfiprintf_r+0xd0>
1001ddde:	f043 0320 	orr.w	r3, r3, #32
1001dde2:	7862      	ldrb	r2, [r4, #1]
1001dde4:	9302      	str	r3, [sp, #8]
1001dde6:	3401      	adds	r4, #1
1001dde8:	f7ff b984 	b.w	1001d0f4 <_vfiprintf_r+0xd0>
1001ddec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001ddee:	9a07      	ldr	r2, [sp, #28]
1001ddf0:	681b      	ldr	r3, [r3, #0]
1001ddf2:	601a      	str	r2, [r3, #0]
1001ddf4:	e47f      	b.n	1001d6f6 <_vfiprintf_r+0x6d2>
1001ddf6:	9b05      	ldr	r3, [sp, #20]
1001ddf8:	4c72      	ldr	r4, [pc, #456]	@ (1001dfc4 <_vfiprintf_r+0xfa0>)
1001ddfa:	2b06      	cmp	r3, #6
1001ddfc:	bf28      	it	cs
1001ddfe:	2306      	movcs	r3, #6
1001de00:	e9cd 3609 	strd	r3, r6, [sp, #36]	@ 0x24
1001de04:	9304      	str	r3, [sp, #16]
1001de06:	f7ff ba89 	b.w	1001d31c <_vfiprintf_r+0x2f8>
1001de0a:	f414 7100 	ands.w	r1, r4, #512	@ 0x200
1001de0e:	f43f ac00 	beq.w	1001d612 <_vfiprintf_r+0x5ee>
1001de12:	b2db      	uxtb	r3, r3
1001de14:	4601      	mov	r1, r0
1001de16:	f7ff bbfc 	b.w	1001d612 <_vfiprintf_r+0x5ee>
1001de1a:	f412 7100 	ands.w	r1, r2, #512	@ 0x200
1001de1e:	bf1c      	itt	ne
1001de20:	b2db      	uxtbne	r3, r3
1001de22:	4621      	movne	r1, r4
1001de24:	f7ff bba8 	b.w	1001d578 <_vfiprintf_r+0x554>
1001de28:	9902      	ldr	r1, [sp, #8]
1001de2a:	f411 7100 	ands.w	r1, r1, #512	@ 0x200
1001de2e:	bf1c      	itt	ne
1001de30:	b2db      	uxtbne	r3, r3
1001de32:	4621      	movne	r1, r4
1001de34:	e704      	b.n	1001dc40 <_vfiprintf_r+0xc1c>
1001de36:	ab18      	add	r3, sp, #96	@ 0x60
1001de38:	9300      	str	r3, [sp, #0]
1001de3a:	2300      	movs	r3, #0
1001de3c:	4619      	mov	r1, r3
1001de3e:	aa15      	add	r2, sp, #84	@ 0x54
1001de40:	4658      	mov	r0, fp
1001de42:	f000 fffb 	bl	1001ee3c <_wcsrtombs_r>
1001de46:	4603      	mov	r3, r0
1001de48:	3301      	adds	r3, #1
1001de4a:	9009      	str	r0, [sp, #36]	@ 0x24
1001de4c:	f000 8085 	beq.w	1001df5a <_vfiprintf_r+0xf36>
1001de50:	9415      	str	r4, [sp, #84]	@ 0x54
1001de52:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001de54:	b373      	cbz	r3, 1001deb4 <_vfiprintf_r+0xe90>
1001de56:	2b63      	cmp	r3, #99	@ 0x63
1001de58:	dc49      	bgt.n	1001deee <_vfiprintf_r+0xeca>
1001de5a:	2300      	movs	r3, #0
1001de5c:	930b      	str	r3, [sp, #44]	@ 0x2c
1001de5e:	ac2d      	add	r4, sp, #180	@ 0xb4
1001de60:	2208      	movs	r2, #8
1001de62:	2100      	movs	r1, #0
1001de64:	a818      	add	r0, sp, #96	@ 0x60
1001de66:	f7f7 ff51 	bl	10015d0c <memset>
1001de6a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
1001de6c:	ab18      	add	r3, sp, #96	@ 0x60
1001de6e:	9300      	str	r3, [sp, #0]
1001de70:	aa15      	add	r2, sp, #84	@ 0x54
1001de72:	462b      	mov	r3, r5
1001de74:	4621      	mov	r1, r4
1001de76:	4658      	mov	r0, fp
1001de78:	f000 ffe0 	bl	1001ee3c <_wcsrtombs_r>
1001de7c:	4285      	cmp	r5, r0
1001de7e:	f040 8098 	bne.w	1001dfb2 <_vfiprintf_r+0xf8e>
1001de82:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001de84:	960a      	str	r6, [sp, #40]	@ 0x28
1001de86:	2300      	movs	r3, #0
1001de88:	54a3      	strb	r3, [r4, r2]
1001de8a:	9305      	str	r3, [sp, #20]
1001de8c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
1001de90:	9304      	str	r3, [sp, #16]
1001de92:	e493      	b.n	1001d7bc <_vfiprintf_r+0x798>
1001de94:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001de96:	9910      	ldr	r1, [sp, #64]	@ 0x40
1001de98:	eba9 0903 	sub.w	r9, r9, r3
1001de9c:	461a      	mov	r2, r3
1001de9e:	4648      	mov	r0, r9
1001dea0:	f7f5 fe5e 	bl	10013b60 <strncpy>
1001dea4:	f89b 3001 	ldrb.w	r3, [fp, #1]
1001dea8:	b10b      	cbz	r3, 1001deae <_vfiprintf_r+0xe8a>
1001deaa:	f10b 0b01 	add.w	fp, fp, #1
1001deae:	f04f 0c00 	mov.w	ip, #0
1001deb2:	e745      	b.n	1001dd40 <_vfiprintf_r+0xd1c>
1001deb4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001deb6:	960a      	str	r6, [sp, #40]	@ 0x28
1001deb8:	e9cd 3304 	strd	r3, r3, [sp, #16]
1001debc:	930b      	str	r3, [sp, #44]	@ 0x2c
1001debe:	e47d      	b.n	1001d7bc <_vfiprintf_r+0x798>
1001dec0:	2101      	movs	r1, #1
1001dec2:	4662      	mov	r2, ip
1001dec4:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001dec8:	f7ff ba79 	b.w	1001d3be <_vfiprintf_r+0x39a>
1001decc:	f343 11c0 	sbfx	r1, r3, #7, #1
1001ded0:	460a      	mov	r2, r1
1001ded2:	b25b      	sxtb	r3, r3
1001ded4:	f7ff bb17 	b.w	1001d506 <_vfiprintf_r+0x4e2>
1001ded8:	4662      	mov	r2, ip
1001deda:	2101      	movs	r1, #1
1001dedc:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001dee0:	f7ff ba4a 	b.w	1001d378 <_vfiprintf_r+0x354>
1001dee4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001dee6:	9a07      	ldr	r2, [sp, #28]
1001dee8:	681b      	ldr	r3, [r3, #0]
1001deea:	801a      	strh	r2, [r3, #0]
1001deec:	e403      	b.n	1001d6f6 <_vfiprintf_r+0x6d2>
1001deee:	1c59      	adds	r1, r3, #1
1001def0:	4658      	mov	r0, fp
1001def2:	f7f7 fb9d 	bl	10015630 <_malloc_r>
1001def6:	4604      	mov	r4, r0
1001def8:	2800      	cmp	r0, #0
1001defa:	d02e      	beq.n	1001df5a <_vfiprintf_r+0xf36>
1001defc:	900b      	str	r0, [sp, #44]	@ 0x2c
1001defe:	e7af      	b.n	1001de60 <_vfiprintf_r+0xe3c>
1001df00:	6d88      	ldr	r0, [r1, #88]	@ 0x58
1001df02:	f7f7 ff97 	bl	10015e34 <__retarget_lock_release_recursive>
1001df06:	f7ff b99d 	b.w	1001d244 <_vfiprintf_r+0x220>
1001df0a:	9b05      	ldr	r3, [sp, #20]
1001df0c:	9304      	str	r3, [sp, #16]
1001df0e:	9309      	str	r3, [sp, #36]	@ 0x24
1001df10:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001df12:	960a      	str	r6, [sp, #40]	@ 0x28
1001df14:	9305      	str	r3, [sp, #20]
1001df16:	e451      	b.n	1001d7bc <_vfiprintf_r+0x798>
1001df18:	4620      	mov	r0, r4
1001df1a:	9505      	str	r5, [sp, #20]
1001df1c:	960a      	str	r6, [sp, #40]	@ 0x28
1001df1e:	f7f8 fd2f 	bl	10016980 <strlen>
1001df22:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
1001df26:	9009      	str	r0, [sp, #36]	@ 0x24
1001df28:	9304      	str	r3, [sp, #16]
1001df2a:	950b      	str	r5, [sp, #44]	@ 0x2c
1001df2c:	e446      	b.n	1001d7bc <_vfiprintf_r+0x798>
1001df2e:	2300      	movs	r3, #0
1001df30:	9305      	str	r3, [sp, #20]
1001df32:	f7ff b8e0 	b.w	1001d0f6 <_vfiprintf_r+0xd2>
1001df36:	4e24      	ldr	r6, [pc, #144]	@ (1001dfc8 <_vfiprintf_r+0xfa4>)
1001df38:	4686      	mov	lr, r0
1001df3a:	e56a      	b.n	1001da12 <_vfiprintf_r+0x9ee>
1001df3c:	2330      	movs	r3, #48	@ 0x30
1001df3e:	e430      	b.n	1001d7a2 <_vfiprintf_r+0x77e>
1001df40:	9903      	ldr	r1, [sp, #12]
1001df42:	aa1a      	add	r2, sp, #104	@ 0x68
1001df44:	4658      	mov	r0, fp
1001df46:	f7ff f827 	bl	1001cf98 <__sprint_r.part.0>
1001df4a:	2800      	cmp	r0, #0
1001df4c:	f43f a9a8 	beq.w	1001d2a0 <_vfiprintf_r+0x27c>
1001df50:	f7ff b9c6 	b.w	1001d2e0 <_vfiprintf_r+0x2bc>
1001df54:	4e1c      	ldr	r6, [pc, #112]	@ (1001dfc8 <_vfiprintf_r+0xfa4>)
1001df56:	1c48      	adds	r0, r1, #1
1001df58:	e5a6      	b.n	1001daa8 <_vfiprintf_r+0xa84>
1001df5a:	9a03      	ldr	r2, [sp, #12]
1001df5c:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
1001df60:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001df64:	8193      	strh	r3, [r2, #12]
1001df66:	f7ff b9be 	b.w	1001d2e6 <_vfiprintf_r+0x2c2>
1001df6a:	9b03      	ldr	r3, [sp, #12]
1001df6c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
1001df6e:	07d9      	lsls	r1, r3, #31
1001df70:	d407      	bmi.n	1001df82 <_vfiprintf_r+0xf5e>
1001df72:	9b03      	ldr	r3, [sp, #12]
1001df74:	899b      	ldrh	r3, [r3, #12]
1001df76:	059a      	lsls	r2, r3, #22
1001df78:	d403      	bmi.n	1001df82 <_vfiprintf_r+0xf5e>
1001df7a:	9b03      	ldr	r3, [sp, #12]
1001df7c:	6d98      	ldr	r0, [r3, #88]	@ 0x58
1001df7e:	f7f7 ff59 	bl	10015e34 <__retarget_lock_release_recursive>
1001df82:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001df86:	9307      	str	r3, [sp, #28]
1001df88:	f7ff b9b5 	b.w	1001d2f6 <_vfiprintf_r+0x2d2>
1001df8c:	f8df 803c 	ldr.w	r8, [pc, #60]	@ 1001dfcc <_vfiprintf_r+0xfa8>
1001df90:	4608      	mov	r0, r1
1001df92:	e460      	b.n	1001d856 <_vfiprintf_r+0x832>
1001df94:	e9dd 4304 	ldrd	r4, r3, [sp, #16]
1001df98:	9309      	str	r3, [sp, #36]	@ 0x24
1001df9a:	e75a      	b.n	1001de52 <_vfiprintf_r+0xe2e>
1001df9c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001df9e:	7862      	ldrb	r2, [r4, #1]
1001dfa0:	460c      	mov	r4, r1
1001dfa2:	f853 1b04 	ldr.w	r1, [r3], #4
1001dfa6:	930a      	str	r3, [sp, #40]	@ 0x28
1001dfa8:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
1001dfac:	9105      	str	r1, [sp, #20]
1001dfae:	f7ff b8a1 	b.w	1001d0f4 <_vfiprintf_r+0xd0>
1001dfb2:	9a03      	ldr	r2, [sp, #12]
1001dfb4:	8993      	ldrh	r3, [r2, #12]
1001dfb6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001dfba:	8193      	strh	r3, [r2, #12]
1001dfbc:	f7ff b98a 	b.w	1001d2d4 <_vfiprintf_r+0x2b0>
1001dfc0:	cccccccd 	.word	0xcccccccd
1001dfc4:	1002a660 	.word	0x1002a660
1001dfc8:	1002a6bc 	.word	0x1002a6bc
1001dfcc:	1002a6ac 	.word	0x1002a6ac

1001dfd0 <__sbprintf>:
1001dfd0:	b5f0      	push	{r4, r5, r6, r7, lr}
1001dfd2:	461f      	mov	r7, r3
1001dfd4:	898b      	ldrh	r3, [r1, #12]
1001dfd6:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
1001dfda:	f023 0302 	bic.w	r3, r3, #2
1001dfde:	f8ad 300c 	strh.w	r3, [sp, #12]
1001dfe2:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
1001dfe4:	9319      	str	r3, [sp, #100]	@ 0x64
1001dfe6:	89cb      	ldrh	r3, [r1, #14]
1001dfe8:	f8ad 300e 	strh.w	r3, [sp, #14]
1001dfec:	69cb      	ldr	r3, [r1, #28]
1001dfee:	9307      	str	r3, [sp, #28]
1001dff0:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
1001dff2:	9309      	str	r3, [sp, #36]	@ 0x24
1001dff4:	ab1a      	add	r3, sp, #104	@ 0x68
1001dff6:	9300      	str	r3, [sp, #0]
1001dff8:	9304      	str	r3, [sp, #16]
1001dffa:	f44f 6380 	mov.w	r3, #1024	@ 0x400
1001dffe:	4615      	mov	r5, r2
1001e000:	4606      	mov	r6, r0
1001e002:	9302      	str	r3, [sp, #8]
1001e004:	9305      	str	r3, [sp, #20]
1001e006:	a816      	add	r0, sp, #88	@ 0x58
1001e008:	2300      	movs	r3, #0
1001e00a:	460c      	mov	r4, r1
1001e00c:	9306      	str	r3, [sp, #24]
1001e00e:	f7f7 ff0b 	bl	10015e28 <__retarget_lock_init_recursive>
1001e012:	462a      	mov	r2, r5
1001e014:	463b      	mov	r3, r7
1001e016:	4669      	mov	r1, sp
1001e018:	4630      	mov	r0, r6
1001e01a:	f7ff f803 	bl	1001d024 <_vfiprintf_r>
1001e01e:	1e05      	subs	r5, r0, #0
1001e020:	db07      	blt.n	1001e032 <__sbprintf+0x62>
1001e022:	4669      	mov	r1, sp
1001e024:	4630      	mov	r0, r6
1001e026:	f7f8 fac1 	bl	100165ac <_fflush_r>
1001e02a:	2800      	cmp	r0, #0
1001e02c:	bf18      	it	ne
1001e02e:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
1001e032:	f8bd 300c 	ldrh.w	r3, [sp, #12]
1001e036:	065b      	lsls	r3, r3, #25
1001e038:	d503      	bpl.n	1001e042 <__sbprintf+0x72>
1001e03a:	89a3      	ldrh	r3, [r4, #12]
1001e03c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001e040:	81a3      	strh	r3, [r4, #12]
1001e042:	9816      	ldr	r0, [sp, #88]	@ 0x58
1001e044:	f7f7 fef2 	bl	10015e2c <__retarget_lock_close_recursive>
1001e048:	4628      	mov	r0, r5
1001e04a:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
1001e04e:	bdf0      	pop	{r4, r5, r6, r7, pc}

1001e050 <__register_exitproc>:
1001e050:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001e054:	4d1b      	ldr	r5, [pc, #108]	@ (1001e0c4 <__register_exitproc+0x74>)
1001e056:	4606      	mov	r6, r0
1001e058:	6828      	ldr	r0, [r5, #0]
1001e05a:	4698      	mov	r8, r3
1001e05c:	460f      	mov	r7, r1
1001e05e:	4691      	mov	r9, r2
1001e060:	f7f7 fee6 	bl	10015e30 <__retarget_lock_acquire_recursive>
1001e064:	4b18      	ldr	r3, [pc, #96]	@ (1001e0c8 <__register_exitproc+0x78>)
1001e066:	681c      	ldr	r4, [r3, #0]
1001e068:	b31c      	cbz	r4, 1001e0b2 <__register_exitproc+0x62>
1001e06a:	6828      	ldr	r0, [r5, #0]
1001e06c:	6865      	ldr	r5, [r4, #4]
1001e06e:	2d1f      	cmp	r5, #31
1001e070:	dc22      	bgt.n	1001e0b8 <__register_exitproc+0x68>
1001e072:	b94e      	cbnz	r6, 1001e088 <__register_exitproc+0x38>
1001e074:	1c6b      	adds	r3, r5, #1
1001e076:	3502      	adds	r5, #2
1001e078:	6063      	str	r3, [r4, #4]
1001e07a:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
1001e07e:	f7f7 fed9 	bl	10015e34 <__retarget_lock_release_recursive>
1001e082:	2000      	movs	r0, #0
1001e084:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1001e088:	eb04 0185 	add.w	r1, r4, r5, lsl #2
1001e08c:	2301      	movs	r3, #1
1001e08e:	f8c1 9088 	str.w	r9, [r1, #136]	@ 0x88
1001e092:	f8d4 2188 	ldr.w	r2, [r4, #392]	@ 0x188
1001e096:	40ab      	lsls	r3, r5
1001e098:	431a      	orrs	r2, r3
1001e09a:	2e02      	cmp	r6, #2
1001e09c:	f8c4 2188 	str.w	r2, [r4, #392]	@ 0x188
1001e0a0:	f8c1 8108 	str.w	r8, [r1, #264]	@ 0x108
1001e0a4:	d1e6      	bne.n	1001e074 <__register_exitproc+0x24>
1001e0a6:	f8d4 218c 	ldr.w	r2, [r4, #396]	@ 0x18c
1001e0aa:	431a      	orrs	r2, r3
1001e0ac:	f8c4 218c 	str.w	r2, [r4, #396]	@ 0x18c
1001e0b0:	e7e0      	b.n	1001e074 <__register_exitproc+0x24>
1001e0b2:	4c06      	ldr	r4, [pc, #24]	@ (1001e0cc <__register_exitproc+0x7c>)
1001e0b4:	601c      	str	r4, [r3, #0]
1001e0b6:	e7d8      	b.n	1001e06a <__register_exitproc+0x1a>
1001e0b8:	f7f7 febc 	bl	10015e34 <__retarget_lock_release_recursive>
1001e0bc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001e0c0:	e7e0      	b.n	1001e084 <__register_exitproc+0x34>
1001e0c2:	bf00      	nop
1001e0c4:	20000420 	.word	0x20000420
1001e0c8:	20001488 	.word	0x20001488
1001e0cc:	200015d8 	.word	0x200015d8

1001e0d0 <__ascii_mbtowc>:
1001e0d0:	b082      	sub	sp, #8
1001e0d2:	b149      	cbz	r1, 1001e0e8 <__ascii_mbtowc+0x18>
1001e0d4:	b15a      	cbz	r2, 1001e0ee <__ascii_mbtowc+0x1e>
1001e0d6:	b16b      	cbz	r3, 1001e0f4 <__ascii_mbtowc+0x24>
1001e0d8:	7813      	ldrb	r3, [r2, #0]
1001e0da:	600b      	str	r3, [r1, #0]
1001e0dc:	7812      	ldrb	r2, [r2, #0]
1001e0de:	1e10      	subs	r0, r2, #0
1001e0e0:	bf18      	it	ne
1001e0e2:	2001      	movne	r0, #1
1001e0e4:	b002      	add	sp, #8
1001e0e6:	4770      	bx	lr
1001e0e8:	a901      	add	r1, sp, #4
1001e0ea:	2a00      	cmp	r2, #0
1001e0ec:	d1f3      	bne.n	1001e0d6 <__ascii_mbtowc+0x6>
1001e0ee:	4610      	mov	r0, r2
1001e0f0:	b002      	add	sp, #8
1001e0f2:	4770      	bx	lr
1001e0f4:	f06f 0001 	mvn.w	r0, #1
1001e0f8:	e7f4      	b.n	1001e0e4 <__ascii_mbtowc+0x14>
1001e0fa:	bf00      	nop

1001e0fc <__assert_func>:
1001e0fc:	b500      	push	{lr}
1001e0fe:	4c0b      	ldr	r4, [pc, #44]	@ (1001e12c <__assert_func+0x30>)
1001e100:	6825      	ldr	r5, [r4, #0]
1001e102:	4614      	mov	r4, r2
1001e104:	68ee      	ldr	r6, [r5, #12]
1001e106:	461a      	mov	r2, r3
1001e108:	b085      	sub	sp, #20
1001e10a:	4603      	mov	r3, r0
1001e10c:	460d      	mov	r5, r1
1001e10e:	b14c      	cbz	r4, 1001e124 <__assert_func+0x28>
1001e110:	4907      	ldr	r1, [pc, #28]	@ (1001e130 <__assert_func+0x34>)
1001e112:	9500      	str	r5, [sp, #0]
1001e114:	e9cd 1401 	strd	r1, r4, [sp, #4]
1001e118:	4630      	mov	r0, r6
1001e11a:	4906      	ldr	r1, [pc, #24]	@ (1001e134 <__assert_func+0x38>)
1001e11c:	f001 fef8 	bl	1001ff10 <fiprintf>
1001e120:	f002 f88c 	bl	1002023c <abort>
1001e124:	4904      	ldr	r1, [pc, #16]	@ (1001e138 <__assert_func+0x3c>)
1001e126:	460c      	mov	r4, r1
1001e128:	e7f3      	b.n	1001e112 <__assert_func+0x16>
1001e12a:	bf00      	nop
1001e12c:	20000590 	.word	0x20000590
1001e130:	1002a6cc 	.word	0x1002a6cc
1001e134:	1002a6dc 	.word	0x1002a6dc
1001e138:	10021458 	.word	0x10021458

1001e13c <_wcrtomb_r>:
1001e13c:	b570      	push	{r4, r5, r6, lr}
1001e13e:	4605      	mov	r5, r0
1001e140:	b084      	sub	sp, #16
1001e142:	b15b      	cbz	r3, 1001e15c <_wcrtomb_r+0x20>
1001e144:	461c      	mov	r4, r3
1001e146:	4b0f      	ldr	r3, [pc, #60]	@ (1001e184 <_wcrtomb_r+0x48>)
1001e148:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
1001e14c:	4623      	mov	r3, r4
1001e14e:	b169      	cbz	r1, 1001e16c <_wcrtomb_r+0x30>
1001e150:	4628      	mov	r0, r5
1001e152:	47b0      	blx	r6
1001e154:	1c43      	adds	r3, r0, #1
1001e156:	d00f      	beq.n	1001e178 <_wcrtomb_r+0x3c>
1001e158:	b004      	add	sp, #16
1001e15a:	bd70      	pop	{r4, r5, r6, pc}
1001e15c:	4b09      	ldr	r3, [pc, #36]	@ (1001e184 <_wcrtomb_r+0x48>)
1001e15e:	f500 7482 	add.w	r4, r0, #260	@ 0x104
1001e162:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
1001e166:	4623      	mov	r3, r4
1001e168:	2900      	cmp	r1, #0
1001e16a:	d1f1      	bne.n	1001e150 <_wcrtomb_r+0x14>
1001e16c:	460a      	mov	r2, r1
1001e16e:	4628      	mov	r0, r5
1001e170:	a901      	add	r1, sp, #4
1001e172:	47b0      	blx	r6
1001e174:	1c43      	adds	r3, r0, #1
1001e176:	d1ef      	bne.n	1001e158 <_wcrtomb_r+0x1c>
1001e178:	2200      	movs	r2, #0
1001e17a:	238a      	movs	r3, #138	@ 0x8a
1001e17c:	6022      	str	r2, [r4, #0]
1001e17e:	602b      	str	r3, [r5, #0]
1001e180:	b004      	add	sp, #16
1001e182:	bd70      	pop	{r4, r5, r6, pc}
1001e184:	20000424 	.word	0x20000424

1001e188 <__swsetup_r>:
1001e188:	b538      	push	{r3, r4, r5, lr}
1001e18a:	4b2e      	ldr	r3, [pc, #184]	@ (1001e244 <__swsetup_r+0xbc>)
1001e18c:	681b      	ldr	r3, [r3, #0]
1001e18e:	4605      	mov	r5, r0
1001e190:	460c      	mov	r4, r1
1001e192:	b113      	cbz	r3, 1001e19a <__swsetup_r+0x12>
1001e194:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
1001e196:	2a00      	cmp	r2, #0
1001e198:	d04b      	beq.n	1001e232 <__swsetup_r+0xaa>
1001e19a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001e19e:	0718      	lsls	r0, r3, #28
1001e1a0:	d51c      	bpl.n	1001e1dc <__swsetup_r+0x54>
1001e1a2:	6922      	ldr	r2, [r4, #16]
1001e1a4:	b322      	cbz	r2, 1001e1f0 <__swsetup_r+0x68>
1001e1a6:	f013 0101 	ands.w	r1, r3, #1
1001e1aa:	d007      	beq.n	1001e1bc <__swsetup_r+0x34>
1001e1ac:	6961      	ldr	r1, [r4, #20]
1001e1ae:	2000      	movs	r0, #0
1001e1b0:	4249      	negs	r1, r1
1001e1b2:	60a0      	str	r0, [r4, #8]
1001e1b4:	61a1      	str	r1, [r4, #24]
1001e1b6:	b13a      	cbz	r2, 1001e1c8 <__swsetup_r+0x40>
1001e1b8:	2000      	movs	r0, #0
1001e1ba:	bd38      	pop	{r3, r4, r5, pc}
1001e1bc:	0798      	lsls	r0, r3, #30
1001e1be:	bf58      	it	pl
1001e1c0:	6961      	ldrpl	r1, [r4, #20]
1001e1c2:	60a1      	str	r1, [r4, #8]
1001e1c4:	2a00      	cmp	r2, #0
1001e1c6:	d1f7      	bne.n	1001e1b8 <__swsetup_r+0x30>
1001e1c8:	0619      	lsls	r1, r3, #24
1001e1ca:	bf58      	it	pl
1001e1cc:	4610      	movpl	r0, r2
1001e1ce:	d5f4      	bpl.n	1001e1ba <__swsetup_r+0x32>
1001e1d0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001e1d4:	81a3      	strh	r3, [r4, #12]
1001e1d6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001e1da:	bd38      	pop	{r3, r4, r5, pc}
1001e1dc:	06d9      	lsls	r1, r3, #27
1001e1de:	d52c      	bpl.n	1001e23a <__swsetup_r+0xb2>
1001e1e0:	075a      	lsls	r2, r3, #29
1001e1e2:	d412      	bmi.n	1001e20a <__swsetup_r+0x82>
1001e1e4:	6922      	ldr	r2, [r4, #16]
1001e1e6:	f043 0308 	orr.w	r3, r3, #8
1001e1ea:	81a3      	strh	r3, [r4, #12]
1001e1ec:	2a00      	cmp	r2, #0
1001e1ee:	d1da      	bne.n	1001e1a6 <__swsetup_r+0x1e>
1001e1f0:	f403 7120 	and.w	r1, r3, #640	@ 0x280
1001e1f4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
1001e1f8:	d0d5      	beq.n	1001e1a6 <__swsetup_r+0x1e>
1001e1fa:	4621      	mov	r1, r4
1001e1fc:	4628      	mov	r0, r5
1001e1fe:	f000 f823 	bl	1001e248 <__smakebuf_r>
1001e202:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001e206:	6922      	ldr	r2, [r4, #16]
1001e208:	e7cd      	b.n	1001e1a6 <__swsetup_r+0x1e>
1001e20a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
1001e20c:	b151      	cbz	r1, 1001e224 <__swsetup_r+0x9c>
1001e20e:	f104 0240 	add.w	r2, r4, #64	@ 0x40
1001e212:	4291      	cmp	r1, r2
1001e214:	d004      	beq.n	1001e220 <__swsetup_r+0x98>
1001e216:	4628      	mov	r0, r5
1001e218:	f7f9 fe56 	bl	10017ec8 <_free_r>
1001e21c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001e220:	2200      	movs	r2, #0
1001e222:	6322      	str	r2, [r4, #48]	@ 0x30
1001e224:	6922      	ldr	r2, [r4, #16]
1001e226:	2100      	movs	r1, #0
1001e228:	e9c4 2100 	strd	r2, r1, [r4]
1001e22c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
1001e230:	e7d9      	b.n	1001e1e6 <__swsetup_r+0x5e>
1001e232:	4618      	mov	r0, r3
1001e234:	f7f8 fac2 	bl	100167bc <__sinit>
1001e238:	e7af      	b.n	1001e19a <__swsetup_r+0x12>
1001e23a:	2209      	movs	r2, #9
1001e23c:	602a      	str	r2, [r5, #0]
1001e23e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001e242:	e7c7      	b.n	1001e1d4 <__swsetup_r+0x4c>
1001e244:	20000590 	.word	0x20000590

1001e248 <__smakebuf_r>:
1001e248:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001e24c:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
1001e250:	460c      	mov	r4, r1
1001e252:	0799      	lsls	r1, r3, #30
1001e254:	b096      	sub	sp, #88	@ 0x58
1001e256:	d508      	bpl.n	1001e26a <__smakebuf_r+0x22>
1001e258:	f104 0343 	add.w	r3, r4, #67	@ 0x43
1001e25c:	2201      	movs	r2, #1
1001e25e:	e9c4 3204 	strd	r3, r2, [r4, #16]
1001e262:	6023      	str	r3, [r4, #0]
1001e264:	b016      	add	sp, #88	@ 0x58
1001e266:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001e26a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
1001e26e:	2900      	cmp	r1, #0
1001e270:	4606      	mov	r6, r0
1001e272:	db26      	blt.n	1001e2c2 <__smakebuf_r+0x7a>
1001e274:	466a      	mov	r2, sp
1001e276:	f7fa fe39 	bl	10018eec <_fstat_r>
1001e27a:	2800      	cmp	r0, #0
1001e27c:	db1f      	blt.n	1001e2be <__smakebuf_r+0x76>
1001e27e:	9d01      	ldr	r5, [sp, #4]
1001e280:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
1001e284:	f5a5 5500 	sub.w	r5, r5, #8192	@ 0x2000
1001e288:	fab5 f585 	clz	r5, r5
1001e28c:	f44f 6880 	mov.w	r8, #1024	@ 0x400
1001e290:	096d      	lsrs	r5, r5, #5
1001e292:	f44f 6700 	mov.w	r7, #2048	@ 0x800
1001e296:	4641      	mov	r1, r8
1001e298:	4630      	mov	r0, r6
1001e29a:	f7f7 f9c9 	bl	10015630 <_malloc_r>
1001e29e:	b1e8      	cbz	r0, 1001e2dc <__smakebuf_r+0x94>
1001e2a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001e2a4:	f8c4 8014 	str.w	r8, [r4, #20]
1001e2a8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1001e2ac:	6020      	str	r0, [r4, #0]
1001e2ae:	6120      	str	r0, [r4, #16]
1001e2b0:	81a3      	strh	r3, [r4, #12]
1001e2b2:	bb3d      	cbnz	r5, 1001e304 <__smakebuf_r+0xbc>
1001e2b4:	433b      	orrs	r3, r7
1001e2b6:	81a3      	strh	r3, [r4, #12]
1001e2b8:	b016      	add	sp, #88	@ 0x58
1001e2ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001e2be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001e2c2:	f013 0580 	ands.w	r5, r3, #128	@ 0x80
1001e2c6:	d019      	beq.n	1001e2fc <__smakebuf_r+0xb4>
1001e2c8:	f04f 0840 	mov.w	r8, #64	@ 0x40
1001e2cc:	2500      	movs	r5, #0
1001e2ce:	4641      	mov	r1, r8
1001e2d0:	4630      	mov	r0, r6
1001e2d2:	462f      	mov	r7, r5
1001e2d4:	f7f7 f9ac 	bl	10015630 <_malloc_r>
1001e2d8:	2800      	cmp	r0, #0
1001e2da:	d1e1      	bne.n	1001e2a0 <__smakebuf_r+0x58>
1001e2dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001e2e0:	059a      	lsls	r2, r3, #22
1001e2e2:	d4bf      	bmi.n	1001e264 <__smakebuf_r+0x1c>
1001e2e4:	f023 0303 	bic.w	r3, r3, #3
1001e2e8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
1001e2ec:	f043 0302 	orr.w	r3, r3, #2
1001e2f0:	2101      	movs	r1, #1
1001e2f2:	e9c4 2104 	strd	r2, r1, [r4, #16]
1001e2f6:	81a3      	strh	r3, [r4, #12]
1001e2f8:	6022      	str	r2, [r4, #0]
1001e2fa:	e7b3      	b.n	1001e264 <__smakebuf_r+0x1c>
1001e2fc:	f44f 6880 	mov.w	r8, #1024	@ 0x400
1001e300:	462f      	mov	r7, r5
1001e302:	e7c8      	b.n	1001e296 <__smakebuf_r+0x4e>
1001e304:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
1001e308:	4630      	mov	r0, r6
1001e30a:	f001 fdef 	bl	1001feec <_isatty_r>
1001e30e:	b910      	cbnz	r0, 1001e316 <__smakebuf_r+0xce>
1001e310:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001e314:	e7ce      	b.n	1001e2b4 <__smakebuf_r+0x6c>
1001e316:	89a3      	ldrh	r3, [r4, #12]
1001e318:	f023 0303 	bic.w	r3, r3, #3
1001e31c:	f043 0301 	orr.w	r3, r3, #1
1001e320:	b21b      	sxth	r3, r3
1001e322:	e7c7      	b.n	1001e2b4 <__smakebuf_r+0x6c>

1001e324 <_putc_r>:
1001e324:	b570      	push	{r4, r5, r6, lr}
1001e326:	460e      	mov	r6, r1
1001e328:	4614      	mov	r4, r2
1001e32a:	4605      	mov	r5, r0
1001e32c:	b110      	cbz	r0, 1001e334 <_putc_r+0x10>
1001e32e:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001e330:	2b00      	cmp	r3, #0
1001e332:	d02f      	beq.n	1001e394 <_putc_r+0x70>
1001e334:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001e336:	07d8      	lsls	r0, r3, #31
1001e338:	d402      	bmi.n	1001e340 <_putc_r+0x1c>
1001e33a:	89a3      	ldrh	r3, [r4, #12]
1001e33c:	0599      	lsls	r1, r3, #22
1001e33e:	d520      	bpl.n	1001e382 <_putc_r+0x5e>
1001e340:	68a3      	ldr	r3, [r4, #8]
1001e342:	3b01      	subs	r3, #1
1001e344:	2b00      	cmp	r3, #0
1001e346:	60a3      	str	r3, [r4, #8]
1001e348:	da19      	bge.n	1001e37e <_putc_r+0x5a>
1001e34a:	69a2      	ldr	r2, [r4, #24]
1001e34c:	4293      	cmp	r3, r2
1001e34e:	db0f      	blt.n	1001e370 <_putc_r+0x4c>
1001e350:	b2f0      	uxtb	r0, r6
1001e352:	280a      	cmp	r0, #10
1001e354:	d00c      	beq.n	1001e370 <_putc_r+0x4c>
1001e356:	6823      	ldr	r3, [r4, #0]
1001e358:	1c5a      	adds	r2, r3, #1
1001e35a:	6022      	str	r2, [r4, #0]
1001e35c:	4605      	mov	r5, r0
1001e35e:	701e      	strb	r6, [r3, #0]
1001e360:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001e362:	07da      	lsls	r2, r3, #31
1001e364:	d402      	bmi.n	1001e36c <_putc_r+0x48>
1001e366:	89a3      	ldrh	r3, [r4, #12]
1001e368:	059b      	lsls	r3, r3, #22
1001e36a:	d50e      	bpl.n	1001e38a <_putc_r+0x66>
1001e36c:	4628      	mov	r0, r5
1001e36e:	bd70      	pop	{r4, r5, r6, pc}
1001e370:	4628      	mov	r0, r5
1001e372:	4622      	mov	r2, r4
1001e374:	4631      	mov	r1, r6
1001e376:	f001 ff0b 	bl	10020190 <__swbuf_r>
1001e37a:	4605      	mov	r5, r0
1001e37c:	e7f0      	b.n	1001e360 <_putc_r+0x3c>
1001e37e:	b2f0      	uxtb	r0, r6
1001e380:	e7e9      	b.n	1001e356 <_putc_r+0x32>
1001e382:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001e384:	f7f7 fd54 	bl	10015e30 <__retarget_lock_acquire_recursive>
1001e388:	e7da      	b.n	1001e340 <_putc_r+0x1c>
1001e38a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001e38c:	f7f7 fd52 	bl	10015e34 <__retarget_lock_release_recursive>
1001e390:	4628      	mov	r0, r5
1001e392:	bd70      	pop	{r4, r5, r6, pc}
1001e394:	f7f8 fa12 	bl	100167bc <__sinit>
1001e398:	e7cc      	b.n	1001e334 <_putc_r+0x10>
1001e39a:	bf00      	nop

1001e39c <_Balloc>:
1001e39c:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001e39e:	b570      	push	{r4, r5, r6, lr}
1001e3a0:	4605      	mov	r5, r0
1001e3a2:	460c      	mov	r4, r1
1001e3a4:	b14b      	cbz	r3, 1001e3ba <_Balloc+0x1e>
1001e3a6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1001e3aa:	b180      	cbz	r0, 1001e3ce <_Balloc+0x32>
1001e3ac:	6802      	ldr	r2, [r0, #0]
1001e3ae:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
1001e3b2:	2300      	movs	r3, #0
1001e3b4:	60c3      	str	r3, [r0, #12]
1001e3b6:	6103      	str	r3, [r0, #16]
1001e3b8:	bd70      	pop	{r4, r5, r6, pc}
1001e3ba:	2221      	movs	r2, #33	@ 0x21
1001e3bc:	2104      	movs	r1, #4
1001e3be:	f000 fd07 	bl	1001edd0 <_calloc_r>
1001e3c2:	4603      	mov	r3, r0
1001e3c4:	6468      	str	r0, [r5, #68]	@ 0x44
1001e3c6:	2800      	cmp	r0, #0
1001e3c8:	d1ed      	bne.n	1001e3a6 <_Balloc+0xa>
1001e3ca:	2000      	movs	r0, #0
1001e3cc:	bd70      	pop	{r4, r5, r6, pc}
1001e3ce:	2101      	movs	r1, #1
1001e3d0:	fa01 f604 	lsl.w	r6, r1, r4
1001e3d4:	1d72      	adds	r2, r6, #5
1001e3d6:	0092      	lsls	r2, r2, #2
1001e3d8:	4628      	mov	r0, r5
1001e3da:	f000 fcf9 	bl	1001edd0 <_calloc_r>
1001e3de:	2800      	cmp	r0, #0
1001e3e0:	d0f3      	beq.n	1001e3ca <_Balloc+0x2e>
1001e3e2:	e9c0 4601 	strd	r4, r6, [r0, #4]
1001e3e6:	e7e4      	b.n	1001e3b2 <_Balloc+0x16>

1001e3e8 <_Bfree>:
1001e3e8:	b131      	cbz	r1, 1001e3f8 <_Bfree+0x10>
1001e3ea:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001e3ec:	684a      	ldr	r2, [r1, #4]
1001e3ee:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
1001e3f2:	6008      	str	r0, [r1, #0]
1001e3f4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
1001e3f8:	4770      	bx	lr
1001e3fa:	bf00      	nop

1001e3fc <__multadd>:
1001e3fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001e400:	690d      	ldr	r5, [r1, #16]
1001e402:	4607      	mov	r7, r0
1001e404:	460e      	mov	r6, r1
1001e406:	461c      	mov	r4, r3
1001e408:	f101 0e14 	add.w	lr, r1, #20
1001e40c:	2000      	movs	r0, #0
1001e40e:	f8de 1000 	ldr.w	r1, [lr]
1001e412:	b28b      	uxth	r3, r1
1001e414:	fb02 4303 	mla	r3, r2, r3, r4
1001e418:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001e41c:	0c09      	lsrs	r1, r1, #16
1001e41e:	fb02 cc01 	mla	ip, r2, r1, ip
1001e422:	3001      	adds	r0, #1
1001e424:	b29b      	uxth	r3, r3
1001e426:	eb03 430c 	add.w	r3, r3, ip, lsl #16
1001e42a:	4285      	cmp	r5, r0
1001e42c:	f84e 3b04 	str.w	r3, [lr], #4
1001e430:	ea4f 441c 	mov.w	r4, ip, lsr #16
1001e434:	dceb      	bgt.n	1001e40e <__multadd+0x12>
1001e436:	b13c      	cbz	r4, 1001e448 <__multadd+0x4c>
1001e438:	68b3      	ldr	r3, [r6, #8]
1001e43a:	42ab      	cmp	r3, r5
1001e43c:	dd07      	ble.n	1001e44e <__multadd+0x52>
1001e43e:	eb06 0385 	add.w	r3, r6, r5, lsl #2
1001e442:	3501      	adds	r5, #1
1001e444:	615c      	str	r4, [r3, #20]
1001e446:	6135      	str	r5, [r6, #16]
1001e448:	4630      	mov	r0, r6
1001e44a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001e44e:	6871      	ldr	r1, [r6, #4]
1001e450:	4638      	mov	r0, r7
1001e452:	3101      	adds	r1, #1
1001e454:	f7ff ffa2 	bl	1001e39c <_Balloc>
1001e458:	4680      	mov	r8, r0
1001e45a:	b1a8      	cbz	r0, 1001e488 <__multadd+0x8c>
1001e45c:	6932      	ldr	r2, [r6, #16]
1001e45e:	3202      	adds	r2, #2
1001e460:	f106 010c 	add.w	r1, r6, #12
1001e464:	0092      	lsls	r2, r2, #2
1001e466:	300c      	adds	r0, #12
1001e468:	f7f8 f9d2 	bl	10016810 <memcpy>
1001e46c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001e46e:	6872      	ldr	r2, [r6, #4]
1001e470:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001e474:	6031      	str	r1, [r6, #0]
1001e476:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
1001e47a:	4646      	mov	r6, r8
1001e47c:	eb06 0385 	add.w	r3, r6, r5, lsl #2
1001e480:	3501      	adds	r5, #1
1001e482:	615c      	str	r4, [r3, #20]
1001e484:	6135      	str	r5, [r6, #16]
1001e486:	e7df      	b.n	1001e448 <__multadd+0x4c>
1001e488:	4b02      	ldr	r3, [pc, #8]	@ (1001e494 <__multadd+0x98>)
1001e48a:	4803      	ldr	r0, [pc, #12]	@ (1001e498 <__multadd+0x9c>)
1001e48c:	4642      	mov	r2, r8
1001e48e:	21ba      	movs	r1, #186	@ 0xba
1001e490:	f7ff fe34 	bl	1001e0fc <__assert_func>
1001e494:	100239f0 	.word	0x100239f0
1001e498:	1002a70c 	.word	0x1002a70c

1001e49c <__s2b>:
1001e49c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001e4a0:	4617      	mov	r7, r2
1001e4a2:	4a27      	ldr	r2, [pc, #156]	@ (1001e540 <__s2b+0xa4>)
1001e4a4:	461e      	mov	r6, r3
1001e4a6:	3308      	adds	r3, #8
1001e4a8:	460c      	mov	r4, r1
1001e4aa:	2e09      	cmp	r6, #9
1001e4ac:	fb82 1203 	smull	r1, r2, r2, r3
1001e4b0:	ea4f 73e3 	mov.w	r3, r3, asr #31
1001e4b4:	4605      	mov	r5, r0
1001e4b6:	ebc3 0362 	rsb	r3, r3, r2, asr #1
1001e4ba:	dd39      	ble.n	1001e530 <__s2b+0x94>
1001e4bc:	f04f 0c01 	mov.w	ip, #1
1001e4c0:	2100      	movs	r1, #0
1001e4c2:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
1001e4c6:	4563      	cmp	r3, ip
1001e4c8:	f101 0101 	add.w	r1, r1, #1
1001e4cc:	dcf9      	bgt.n	1001e4c2 <__s2b+0x26>
1001e4ce:	4628      	mov	r0, r5
1001e4d0:	f7ff ff64 	bl	1001e39c <_Balloc>
1001e4d4:	4601      	mov	r1, r0
1001e4d6:	b368      	cbz	r0, 1001e534 <__s2b+0x98>
1001e4d8:	9b08      	ldr	r3, [sp, #32]
1001e4da:	6143      	str	r3, [r0, #20]
1001e4dc:	2f09      	cmp	r7, #9
1001e4de:	f04f 0301 	mov.w	r3, #1
1001e4e2:	6103      	str	r3, [r0, #16]
1001e4e4:	dc12      	bgt.n	1001e50c <__s2b+0x70>
1001e4e6:	340a      	adds	r4, #10
1001e4e8:	2709      	movs	r7, #9
1001e4ea:	42be      	cmp	r6, r7
1001e4ec:	dd0b      	ble.n	1001e506 <__s2b+0x6a>
1001e4ee:	1bf6      	subs	r6, r6, r7
1001e4f0:	4426      	add	r6, r4
1001e4f2:	f814 3b01 	ldrb.w	r3, [r4], #1
1001e4f6:	220a      	movs	r2, #10
1001e4f8:	3b30      	subs	r3, #48	@ 0x30
1001e4fa:	4628      	mov	r0, r5
1001e4fc:	f7ff ff7e 	bl	1001e3fc <__multadd>
1001e500:	42a6      	cmp	r6, r4
1001e502:	4601      	mov	r1, r0
1001e504:	d1f5      	bne.n	1001e4f2 <__s2b+0x56>
1001e506:	4608      	mov	r0, r1
1001e508:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1001e50c:	f104 0909 	add.w	r9, r4, #9
1001e510:	46c8      	mov	r8, r9
1001e512:	443c      	add	r4, r7
1001e514:	f818 3b01 	ldrb.w	r3, [r8], #1
1001e518:	220a      	movs	r2, #10
1001e51a:	3b30      	subs	r3, #48	@ 0x30
1001e51c:	4628      	mov	r0, r5
1001e51e:	f7ff ff6d 	bl	1001e3fc <__multadd>
1001e522:	45a0      	cmp	r8, r4
1001e524:	4601      	mov	r1, r0
1001e526:	d1f5      	bne.n	1001e514 <__s2b+0x78>
1001e528:	f1a7 0408 	sub.w	r4, r7, #8
1001e52c:	444c      	add	r4, r9
1001e52e:	e7dc      	b.n	1001e4ea <__s2b+0x4e>
1001e530:	2100      	movs	r1, #0
1001e532:	e7cc      	b.n	1001e4ce <__s2b+0x32>
1001e534:	460a      	mov	r2, r1
1001e536:	4b03      	ldr	r3, [pc, #12]	@ (1001e544 <__s2b+0xa8>)
1001e538:	4803      	ldr	r0, [pc, #12]	@ (1001e548 <__s2b+0xac>)
1001e53a:	21d3      	movs	r1, #211	@ 0xd3
1001e53c:	f7ff fdde 	bl	1001e0fc <__assert_func>
1001e540:	38e38e39 	.word	0x38e38e39
1001e544:	100239f0 	.word	0x100239f0
1001e548:	1002a70c 	.word	0x1002a70c

1001e54c <__hi0bits>:
1001e54c:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
1001e550:	4603      	mov	r3, r0
1001e552:	bf36      	itet	cc
1001e554:	0403      	lslcc	r3, r0, #16
1001e556:	2000      	movcs	r0, #0
1001e558:	2010      	movcc	r0, #16
1001e55a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
1001e55e:	bf3c      	itt	cc
1001e560:	021b      	lslcc	r3, r3, #8
1001e562:	3008      	addcc	r0, #8
1001e564:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
1001e568:	bf3c      	itt	cc
1001e56a:	011b      	lslcc	r3, r3, #4
1001e56c:	3004      	addcc	r0, #4
1001e56e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
1001e572:	d303      	bcc.n	1001e57c <__hi0bits+0x30>
1001e574:	2b00      	cmp	r3, #0
1001e576:	db06      	blt.n	1001e586 <__hi0bits+0x3a>
1001e578:	3001      	adds	r0, #1
1001e57a:	4770      	bx	lr
1001e57c:	009b      	lsls	r3, r3, #2
1001e57e:	d403      	bmi.n	1001e588 <__hi0bits+0x3c>
1001e580:	005b      	lsls	r3, r3, #1
1001e582:	d403      	bmi.n	1001e58c <__hi0bits+0x40>
1001e584:	2020      	movs	r0, #32
1001e586:	4770      	bx	lr
1001e588:	3002      	adds	r0, #2
1001e58a:	4770      	bx	lr
1001e58c:	3003      	adds	r0, #3
1001e58e:	4770      	bx	lr

1001e590 <__lo0bits>:
1001e590:	6803      	ldr	r3, [r0, #0]
1001e592:	f013 0207 	ands.w	r2, r3, #7
1001e596:	4601      	mov	r1, r0
1001e598:	d007      	beq.n	1001e5aa <__lo0bits+0x1a>
1001e59a:	07da      	lsls	r2, r3, #31
1001e59c:	d41f      	bmi.n	1001e5de <__lo0bits+0x4e>
1001e59e:	0798      	lsls	r0, r3, #30
1001e5a0:	d521      	bpl.n	1001e5e6 <__lo0bits+0x56>
1001e5a2:	085b      	lsrs	r3, r3, #1
1001e5a4:	600b      	str	r3, [r1, #0]
1001e5a6:	2001      	movs	r0, #1
1001e5a8:	4770      	bx	lr
1001e5aa:	b298      	uxth	r0, r3
1001e5ac:	b1a0      	cbz	r0, 1001e5d8 <__lo0bits+0x48>
1001e5ae:	4610      	mov	r0, r2
1001e5b0:	b2da      	uxtb	r2, r3
1001e5b2:	b90a      	cbnz	r2, 1001e5b8 <__lo0bits+0x28>
1001e5b4:	3008      	adds	r0, #8
1001e5b6:	0a1b      	lsrs	r3, r3, #8
1001e5b8:	071a      	lsls	r2, r3, #28
1001e5ba:	bf04      	itt	eq
1001e5bc:	091b      	lsreq	r3, r3, #4
1001e5be:	3004      	addeq	r0, #4
1001e5c0:	079a      	lsls	r2, r3, #30
1001e5c2:	bf04      	itt	eq
1001e5c4:	089b      	lsreq	r3, r3, #2
1001e5c6:	3002      	addeq	r0, #2
1001e5c8:	07da      	lsls	r2, r3, #31
1001e5ca:	d403      	bmi.n	1001e5d4 <__lo0bits+0x44>
1001e5cc:	085b      	lsrs	r3, r3, #1
1001e5ce:	f100 0001 	add.w	r0, r0, #1
1001e5d2:	d006      	beq.n	1001e5e2 <__lo0bits+0x52>
1001e5d4:	600b      	str	r3, [r1, #0]
1001e5d6:	4770      	bx	lr
1001e5d8:	0c1b      	lsrs	r3, r3, #16
1001e5da:	2010      	movs	r0, #16
1001e5dc:	e7e8      	b.n	1001e5b0 <__lo0bits+0x20>
1001e5de:	2000      	movs	r0, #0
1001e5e0:	4770      	bx	lr
1001e5e2:	2020      	movs	r0, #32
1001e5e4:	4770      	bx	lr
1001e5e6:	089b      	lsrs	r3, r3, #2
1001e5e8:	600b      	str	r3, [r1, #0]
1001e5ea:	2002      	movs	r0, #2
1001e5ec:	4770      	bx	lr
1001e5ee:	bf00      	nop

1001e5f0 <__i2b>:
1001e5f0:	b538      	push	{r3, r4, r5, lr}
1001e5f2:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001e5f4:	4604      	mov	r4, r0
1001e5f6:	460d      	mov	r5, r1
1001e5f8:	b14b      	cbz	r3, 1001e60e <__i2b+0x1e>
1001e5fa:	6858      	ldr	r0, [r3, #4]
1001e5fc:	b1b0      	cbz	r0, 1001e62c <__i2b+0x3c>
1001e5fe:	6802      	ldr	r2, [r0, #0]
1001e600:	605a      	str	r2, [r3, #4]
1001e602:	2200      	movs	r2, #0
1001e604:	2301      	movs	r3, #1
1001e606:	6145      	str	r5, [r0, #20]
1001e608:	60c2      	str	r2, [r0, #12]
1001e60a:	6103      	str	r3, [r0, #16]
1001e60c:	bd38      	pop	{r3, r4, r5, pc}
1001e60e:	2221      	movs	r2, #33	@ 0x21
1001e610:	2104      	movs	r1, #4
1001e612:	f000 fbdd 	bl	1001edd0 <_calloc_r>
1001e616:	4603      	mov	r3, r0
1001e618:	6460      	str	r0, [r4, #68]	@ 0x44
1001e61a:	2800      	cmp	r0, #0
1001e61c:	d1ed      	bne.n	1001e5fa <__i2b+0xa>
1001e61e:	4b09      	ldr	r3, [pc, #36]	@ (1001e644 <__i2b+0x54>)
1001e620:	4809      	ldr	r0, [pc, #36]	@ (1001e648 <__i2b+0x58>)
1001e622:	2200      	movs	r2, #0
1001e624:	f240 1145 	movw	r1, #325	@ 0x145
1001e628:	f7ff fd68 	bl	1001e0fc <__assert_func>
1001e62c:	221c      	movs	r2, #28
1001e62e:	2101      	movs	r1, #1
1001e630:	4620      	mov	r0, r4
1001e632:	f000 fbcd 	bl	1001edd0 <_calloc_r>
1001e636:	2800      	cmp	r0, #0
1001e638:	d0f1      	beq.n	1001e61e <__i2b+0x2e>
1001e63a:	2201      	movs	r2, #1
1001e63c:	2302      	movs	r3, #2
1001e63e:	6042      	str	r2, [r0, #4]
1001e640:	6083      	str	r3, [r0, #8]
1001e642:	e7de      	b.n	1001e602 <__i2b+0x12>
1001e644:	100239f0 	.word	0x100239f0
1001e648:	1002a70c 	.word	0x1002a70c

1001e64c <__multiply>:
1001e64c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001e650:	f8d1 8010 	ldr.w	r8, [r1, #16]
1001e654:	6915      	ldr	r5, [r2, #16]
1001e656:	45a8      	cmp	r8, r5
1001e658:	b085      	sub	sp, #20
1001e65a:	460e      	mov	r6, r1
1001e65c:	4692      	mov	sl, r2
1001e65e:	db05      	blt.n	1001e66c <__multiply+0x20>
1001e660:	462a      	mov	r2, r5
1001e662:	4653      	mov	r3, sl
1001e664:	4645      	mov	r5, r8
1001e666:	468a      	mov	sl, r1
1001e668:	4690      	mov	r8, r2
1001e66a:	461e      	mov	r6, r3
1001e66c:	f8da 3008 	ldr.w	r3, [sl, #8]
1001e670:	f8da 1004 	ldr.w	r1, [sl, #4]
1001e674:	eb05 0408 	add.w	r4, r5, r8
1001e678:	42a3      	cmp	r3, r4
1001e67a:	bfb8      	it	lt
1001e67c:	3101      	addlt	r1, #1
1001e67e:	f7ff fe8d 	bl	1001e39c <_Balloc>
1001e682:	4684      	mov	ip, r0
1001e684:	2800      	cmp	r0, #0
1001e686:	f000 808b 	beq.w	1001e7a0 <__multiply+0x154>
1001e68a:	f100 0714 	add.w	r7, r0, #20
1001e68e:	eb07 0e84 	add.w	lr, r7, r4, lsl #2
1001e692:	4577      	cmp	r7, lr
1001e694:	d205      	bcs.n	1001e6a2 <__multiply+0x56>
1001e696:	463b      	mov	r3, r7
1001e698:	2200      	movs	r2, #0
1001e69a:	f843 2b04 	str.w	r2, [r3], #4
1001e69e:	459e      	cmp	lr, r3
1001e6a0:	d8fb      	bhi.n	1001e69a <__multiply+0x4e>
1001e6a2:	3614      	adds	r6, #20
1001e6a4:	eb06 0888 	add.w	r8, r6, r8, lsl #2
1001e6a8:	f10a 0914 	add.w	r9, sl, #20
1001e6ac:	4546      	cmp	r6, r8
1001e6ae:	eb09 0585 	add.w	r5, r9, r5, lsl #2
1001e6b2:	d266      	bcs.n	1001e782 <__multiply+0x136>
1001e6b4:	eba5 030a 	sub.w	r3, r5, sl
1001e6b8:	3b15      	subs	r3, #21
1001e6ba:	f023 0303 	bic.w	r3, r3, #3
1001e6be:	f10a 0a15 	add.w	sl, sl, #21
1001e6c2:	3304      	adds	r3, #4
1001e6c4:	4555      	cmp	r5, sl
1001e6c6:	bf2c      	ite	cs
1001e6c8:	469b      	movcs	fp, r3
1001e6ca:	f04f 0b04 	movcc.w	fp, #4
1001e6ce:	f8cd e008 	str.w	lr, [sp, #8]
1001e6d2:	9403      	str	r4, [sp, #12]
1001e6d4:	46ae      	mov	lr, r5
1001e6d6:	46e2      	mov	sl, ip
1001e6d8:	e005      	b.n	1001e6e6 <__multiply+0x9a>
1001e6da:	0c09      	lsrs	r1, r1, #16
1001e6dc:	d12a      	bne.n	1001e734 <__multiply+0xe8>
1001e6de:	45b0      	cmp	r8, r6
1001e6e0:	f107 0704 	add.w	r7, r7, #4
1001e6e4:	d94a      	bls.n	1001e77c <__multiply+0x130>
1001e6e6:	f856 1b04 	ldr.w	r1, [r6], #4
1001e6ea:	b28d      	uxth	r5, r1
1001e6ec:	2d00      	cmp	r5, #0
1001e6ee:	d0f4      	beq.n	1001e6da <__multiply+0x8e>
1001e6f0:	46cc      	mov	ip, r9
1001e6f2:	463c      	mov	r4, r7
1001e6f4:	2300      	movs	r3, #0
1001e6f6:	9601      	str	r6, [sp, #4]
1001e6f8:	f85c 0b04 	ldr.w	r0, [ip], #4
1001e6fc:	6821      	ldr	r1, [r4, #0]
1001e6fe:	b286      	uxth	r6, r0
1001e700:	b28a      	uxth	r2, r1
1001e702:	0c00      	lsrs	r0, r0, #16
1001e704:	fb05 2206 	mla	r2, r5, r6, r2
1001e708:	0c09      	lsrs	r1, r1, #16
1001e70a:	441a      	add	r2, r3
1001e70c:	fb05 1100 	mla	r1, r5, r0, r1
1001e710:	eb01 4112 	add.w	r1, r1, r2, lsr #16
1001e714:	b292      	uxth	r2, r2
1001e716:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
1001e71a:	45e6      	cmp	lr, ip
1001e71c:	f844 2b04 	str.w	r2, [r4], #4
1001e720:	ea4f 4311 	mov.w	r3, r1, lsr #16
1001e724:	d8e8      	bhi.n	1001e6f8 <__multiply+0xac>
1001e726:	9e01      	ldr	r6, [sp, #4]
1001e728:	f847 300b 	str.w	r3, [r7, fp]
1001e72c:	f856 1c04 	ldr.w	r1, [r6, #-4]
1001e730:	0c09      	lsrs	r1, r1, #16
1001e732:	d0d4      	beq.n	1001e6de <__multiply+0x92>
1001e734:	683b      	ldr	r3, [r7, #0]
1001e736:	2200      	movs	r2, #0
1001e738:	4648      	mov	r0, r9
1001e73a:	461d      	mov	r5, r3
1001e73c:	463c      	mov	r4, r7
1001e73e:	4694      	mov	ip, r2
1001e740:	8802      	ldrh	r2, [r0, #0]
1001e742:	fb01 c202 	mla	r2, r1, r2, ip
1001e746:	eb02 4215 	add.w	r2, r2, r5, lsr #16
1001e74a:	b29b      	uxth	r3, r3
1001e74c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1001e750:	f844 3b04 	str.w	r3, [r4], #4
1001e754:	f850 3b04 	ldr.w	r3, [r0], #4
1001e758:	6825      	ldr	r5, [r4, #0]
1001e75a:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001e75e:	b2ab      	uxth	r3, r5
1001e760:	fb01 330c 	mla	r3, r1, ip, r3
1001e764:	eb03 4312 	add.w	r3, r3, r2, lsr #16
1001e768:	4586      	cmp	lr, r0
1001e76a:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001e76e:	d8e7      	bhi.n	1001e740 <__multiply+0xf4>
1001e770:	45b0      	cmp	r8, r6
1001e772:	f847 300b 	str.w	r3, [r7, fp]
1001e776:	f107 0704 	add.w	r7, r7, #4
1001e77a:	d8b4      	bhi.n	1001e6e6 <__multiply+0x9a>
1001e77c:	e9dd e402 	ldrd	lr, r4, [sp, #8]
1001e780:	46d4      	mov	ip, sl
1001e782:	2c00      	cmp	r4, #0
1001e784:	dc02      	bgt.n	1001e78c <__multiply+0x140>
1001e786:	e005      	b.n	1001e794 <__multiply+0x148>
1001e788:	3c01      	subs	r4, #1
1001e78a:	d003      	beq.n	1001e794 <__multiply+0x148>
1001e78c:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
1001e790:	2b00      	cmp	r3, #0
1001e792:	d0f9      	beq.n	1001e788 <__multiply+0x13c>
1001e794:	4660      	mov	r0, ip
1001e796:	f8cc 4010 	str.w	r4, [ip, #16]
1001e79a:	b005      	add	sp, #20
1001e79c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001e7a0:	4b03      	ldr	r3, [pc, #12]	@ (1001e7b0 <__multiply+0x164>)
1001e7a2:	4804      	ldr	r0, [pc, #16]	@ (1001e7b4 <__multiply+0x168>)
1001e7a4:	4662      	mov	r2, ip
1001e7a6:	f44f 71b1 	mov.w	r1, #354	@ 0x162
1001e7aa:	f7ff fca7 	bl	1001e0fc <__assert_func>
1001e7ae:	bf00      	nop
1001e7b0:	100239f0 	.word	0x100239f0
1001e7b4:	1002a70c 	.word	0x1002a70c

1001e7b8 <__pow5mult>:
1001e7b8:	f012 0303 	ands.w	r3, r2, #3
1001e7bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001e7c0:	4614      	mov	r4, r2
1001e7c2:	4607      	mov	r7, r0
1001e7c4:	d12c      	bne.n	1001e820 <__pow5mult+0x68>
1001e7c6:	460d      	mov	r5, r1
1001e7c8:	10a4      	asrs	r4, r4, #2
1001e7ca:	d01c      	beq.n	1001e806 <__pow5mult+0x4e>
1001e7cc:	6c3e      	ldr	r6, [r7, #64]	@ 0x40
1001e7ce:	b386      	cbz	r6, 1001e832 <__pow5mult+0x7a>
1001e7d0:	07e3      	lsls	r3, r4, #31
1001e7d2:	f04f 0800 	mov.w	r8, #0
1001e7d6:	d406      	bmi.n	1001e7e6 <__pow5mult+0x2e>
1001e7d8:	1064      	asrs	r4, r4, #1
1001e7da:	d014      	beq.n	1001e806 <__pow5mult+0x4e>
1001e7dc:	6830      	ldr	r0, [r6, #0]
1001e7de:	b1a8      	cbz	r0, 1001e80c <__pow5mult+0x54>
1001e7e0:	4606      	mov	r6, r0
1001e7e2:	07e3      	lsls	r3, r4, #31
1001e7e4:	d5f8      	bpl.n	1001e7d8 <__pow5mult+0x20>
1001e7e6:	4632      	mov	r2, r6
1001e7e8:	4629      	mov	r1, r5
1001e7ea:	4638      	mov	r0, r7
1001e7ec:	f7ff ff2e 	bl	1001e64c <__multiply>
1001e7f0:	b135      	cbz	r5, 1001e800 <__pow5mult+0x48>
1001e7f2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001e7f4:	6869      	ldr	r1, [r5, #4]
1001e7f6:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
1001e7fa:	602a      	str	r2, [r5, #0]
1001e7fc:	f843 5021 	str.w	r5, [r3, r1, lsl #2]
1001e800:	1064      	asrs	r4, r4, #1
1001e802:	4605      	mov	r5, r0
1001e804:	d1ea      	bne.n	1001e7dc <__pow5mult+0x24>
1001e806:	4628      	mov	r0, r5
1001e808:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001e80c:	4632      	mov	r2, r6
1001e80e:	4631      	mov	r1, r6
1001e810:	4638      	mov	r0, r7
1001e812:	f7ff ff1b 	bl	1001e64c <__multiply>
1001e816:	6030      	str	r0, [r6, #0]
1001e818:	f8c0 8000 	str.w	r8, [r0]
1001e81c:	4606      	mov	r6, r0
1001e81e:	e7e0      	b.n	1001e7e2 <__pow5mult+0x2a>
1001e820:	3b01      	subs	r3, #1
1001e822:	4a0f      	ldr	r2, [pc, #60]	@ (1001e860 <__pow5mult+0xa8>)
1001e824:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
1001e828:	2300      	movs	r3, #0
1001e82a:	f7ff fde7 	bl	1001e3fc <__multadd>
1001e82e:	4605      	mov	r5, r0
1001e830:	e7ca      	b.n	1001e7c8 <__pow5mult+0x10>
1001e832:	2101      	movs	r1, #1
1001e834:	4638      	mov	r0, r7
1001e836:	f7ff fdb1 	bl	1001e39c <_Balloc>
1001e83a:	4606      	mov	r6, r0
1001e83c:	b140      	cbz	r0, 1001e850 <__pow5mult+0x98>
1001e83e:	2301      	movs	r3, #1
1001e840:	f240 2271 	movw	r2, #625	@ 0x271
1001e844:	e9c0 3204 	strd	r3, r2, [r0, #16]
1001e848:	2300      	movs	r3, #0
1001e84a:	6438      	str	r0, [r7, #64]	@ 0x40
1001e84c:	6003      	str	r3, [r0, #0]
1001e84e:	e7bf      	b.n	1001e7d0 <__pow5mult+0x18>
1001e850:	4b04      	ldr	r3, [pc, #16]	@ (1001e864 <__pow5mult+0xac>)
1001e852:	4805      	ldr	r0, [pc, #20]	@ (1001e868 <__pow5mult+0xb0>)
1001e854:	4632      	mov	r2, r6
1001e856:	f240 1145 	movw	r1, #325	@ 0x145
1001e85a:	f7ff fc4f 	bl	1001e0fc <__assert_func>
1001e85e:	bf00      	nop
1001e860:	1002a768 	.word	0x1002a768
1001e864:	100239f0 	.word	0x100239f0
1001e868:	1002a70c 	.word	0x1002a70c

1001e86c <__lshift>:
1001e86c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1001e870:	460c      	mov	r4, r1
1001e872:	4690      	mov	r8, r2
1001e874:	6927      	ldr	r7, [r4, #16]
1001e876:	68a3      	ldr	r3, [r4, #8]
1001e878:	6849      	ldr	r1, [r1, #4]
1001e87a:	eb07 1762 	add.w	r7, r7, r2, asr #5
1001e87e:	1c7d      	adds	r5, r7, #1
1001e880:	429d      	cmp	r5, r3
1001e882:	4606      	mov	r6, r0
1001e884:	ea4f 1962 	mov.w	r9, r2, asr #5
1001e888:	dd04      	ble.n	1001e894 <__lshift+0x28>
1001e88a:	005b      	lsls	r3, r3, #1
1001e88c:	429d      	cmp	r5, r3
1001e88e:	f101 0101 	add.w	r1, r1, #1
1001e892:	dcfa      	bgt.n	1001e88a <__lshift+0x1e>
1001e894:	4630      	mov	r0, r6
1001e896:	f7ff fd81 	bl	1001e39c <_Balloc>
1001e89a:	4684      	mov	ip, r0
1001e89c:	2800      	cmp	r0, #0
1001e89e:	d051      	beq.n	1001e944 <__lshift+0xd8>
1001e8a0:	f1b9 0f00 	cmp.w	r9, #0
1001e8a4:	f100 0014 	add.w	r0, r0, #20
1001e8a8:	dd0e      	ble.n	1001e8c8 <__lshift+0x5c>
1001e8aa:	f109 0205 	add.w	r2, r9, #5
1001e8ae:	ea4f 0e82 	mov.w	lr, r2, lsl #2
1001e8b2:	4603      	mov	r3, r0
1001e8b4:	eb0c 0282 	add.w	r2, ip, r2, lsl #2
1001e8b8:	2100      	movs	r1, #0
1001e8ba:	f843 1b04 	str.w	r1, [r3], #4
1001e8be:	4293      	cmp	r3, r2
1001e8c0:	d1fb      	bne.n	1001e8ba <__lshift+0x4e>
1001e8c2:	f1ae 0314 	sub.w	r3, lr, #20
1001e8c6:	4418      	add	r0, r3
1001e8c8:	6921      	ldr	r1, [r4, #16]
1001e8ca:	f104 0314 	add.w	r3, r4, #20
1001e8ce:	f018 081f 	ands.w	r8, r8, #31
1001e8d2:	eb03 0181 	add.w	r1, r3, r1, lsl #2
1001e8d6:	d02d      	beq.n	1001e934 <__lshift+0xc8>
1001e8d8:	f1c8 0920 	rsb	r9, r8, #32
1001e8dc:	4686      	mov	lr, r0
1001e8de:	f04f 0a00 	mov.w	sl, #0
1001e8e2:	681a      	ldr	r2, [r3, #0]
1001e8e4:	fa02 f208 	lsl.w	r2, r2, r8
1001e8e8:	ea42 020a 	orr.w	r2, r2, sl
1001e8ec:	f84e 2b04 	str.w	r2, [lr], #4
1001e8f0:	f853 2b04 	ldr.w	r2, [r3], #4
1001e8f4:	4299      	cmp	r1, r3
1001e8f6:	fa22 fa09 	lsr.w	sl, r2, r9
1001e8fa:	d8f2      	bhi.n	1001e8e2 <__lshift+0x76>
1001e8fc:	1b0b      	subs	r3, r1, r4
1001e8fe:	3b15      	subs	r3, #21
1001e900:	f023 0303 	bic.w	r3, r3, #3
1001e904:	3304      	adds	r3, #4
1001e906:	f104 0215 	add.w	r2, r4, #21
1001e90a:	4291      	cmp	r1, r2
1001e90c:	bf38      	it	cc
1001e90e:	2304      	movcc	r3, #4
1001e910:	f840 a003 	str.w	sl, [r0, r3]
1001e914:	f1ba 0f00 	cmp.w	sl, #0
1001e918:	d100      	bne.n	1001e91c <__lshift+0xb0>
1001e91a:	463d      	mov	r5, r7
1001e91c:	6c73      	ldr	r3, [r6, #68]	@ 0x44
1001e91e:	6862      	ldr	r2, [r4, #4]
1001e920:	f8cc 5010 	str.w	r5, [ip, #16]
1001e924:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001e928:	6021      	str	r1, [r4, #0]
1001e92a:	4660      	mov	r0, ip
1001e92c:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
1001e930:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1001e934:	3804      	subs	r0, #4
1001e936:	f853 2b04 	ldr.w	r2, [r3], #4
1001e93a:	f840 2f04 	str.w	r2, [r0, #4]!
1001e93e:	4299      	cmp	r1, r3
1001e940:	d8f9      	bhi.n	1001e936 <__lshift+0xca>
1001e942:	e7ea      	b.n	1001e91a <__lshift+0xae>
1001e944:	4b03      	ldr	r3, [pc, #12]	@ (1001e954 <__lshift+0xe8>)
1001e946:	4804      	ldr	r0, [pc, #16]	@ (1001e958 <__lshift+0xec>)
1001e948:	4662      	mov	r2, ip
1001e94a:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
1001e94e:	f7ff fbd5 	bl	1001e0fc <__assert_func>
1001e952:	bf00      	nop
1001e954:	100239f0 	.word	0x100239f0
1001e958:	1002a70c 	.word	0x1002a70c

1001e95c <__mcmp>:
1001e95c:	690b      	ldr	r3, [r1, #16]
1001e95e:	4684      	mov	ip, r0
1001e960:	6900      	ldr	r0, [r0, #16]
1001e962:	1ac0      	subs	r0, r0, r3
1001e964:	d115      	bne.n	1001e992 <__mcmp+0x36>
1001e966:	f10c 0c14 	add.w	ip, ip, #20
1001e96a:	3114      	adds	r1, #20
1001e96c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
1001e970:	b410      	push	{r4}
1001e972:	eb01 0383 	add.w	r3, r1, r3, lsl #2
1001e976:	e001      	b.n	1001e97c <__mcmp+0x20>
1001e978:	4594      	cmp	ip, r2
1001e97a:	d208      	bcs.n	1001e98e <__mcmp+0x32>
1001e97c:	f852 4d04 	ldr.w	r4, [r2, #-4]!
1001e980:	f853 1d04 	ldr.w	r1, [r3, #-4]!
1001e984:	428c      	cmp	r4, r1
1001e986:	d0f7      	beq.n	1001e978 <__mcmp+0x1c>
1001e988:	d204      	bcs.n	1001e994 <__mcmp+0x38>
1001e98a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001e98e:	bc10      	pop	{r4}
1001e990:	4770      	bx	lr
1001e992:	4770      	bx	lr
1001e994:	2001      	movs	r0, #1
1001e996:	bc10      	pop	{r4}
1001e998:	4770      	bx	lr
1001e99a:	bf00      	nop

1001e99c <__mdiff>:
1001e99c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001e9a0:	6913      	ldr	r3, [r2, #16]
1001e9a2:	690f      	ldr	r7, [r1, #16]
1001e9a4:	1aff      	subs	r7, r7, r3
1001e9a6:	2f00      	cmp	r7, #0
1001e9a8:	b083      	sub	sp, #12
1001e9aa:	460d      	mov	r5, r1
1001e9ac:	4690      	mov	r8, r2
1001e9ae:	d115      	bne.n	1001e9dc <__mdiff+0x40>
1001e9b0:	f101 0614 	add.w	r6, r1, #20
1001e9b4:	3214      	adds	r2, #20
1001e9b6:	eb02 0283 	add.w	r2, r2, r3, lsl #2
1001e9ba:	eb06 0383 	add.w	r3, r6, r3, lsl #2
1001e9be:	e001      	b.n	1001e9c4 <__mdiff+0x28>
1001e9c0:	429e      	cmp	r6, r3
1001e9c2:	d276      	bcs.n	1001eab2 <__mdiff+0x116>
1001e9c4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
1001e9c8:	f852 1d04 	ldr.w	r1, [r2, #-4]!
1001e9cc:	428c      	cmp	r4, r1
1001e9ce:	d0f7      	beq.n	1001e9c0 <__mdiff+0x24>
1001e9d0:	d206      	bcs.n	1001e9e0 <__mdiff+0x44>
1001e9d2:	462b      	mov	r3, r5
1001e9d4:	2701      	movs	r7, #1
1001e9d6:	4645      	mov	r5, r8
1001e9d8:	4698      	mov	r8, r3
1001e9da:	e001      	b.n	1001e9e0 <__mdiff+0x44>
1001e9dc:	dbf9      	blt.n	1001e9d2 <__mdiff+0x36>
1001e9de:	2700      	movs	r7, #0
1001e9e0:	6869      	ldr	r1, [r5, #4]
1001e9e2:	f7ff fcdb 	bl	1001e39c <_Balloc>
1001e9e6:	4681      	mov	r9, r0
1001e9e8:	2800      	cmp	r0, #0
1001e9ea:	d076      	beq.n	1001eada <__mdiff+0x13e>
1001e9ec:	692e      	ldr	r6, [r5, #16]
1001e9ee:	60c7      	str	r7, [r0, #12]
1001e9f0:	f8d8 0010 	ldr.w	r0, [r8, #16]
1001e9f4:	f105 0b14 	add.w	fp, r5, #20
1001e9f8:	f108 0e14 	add.w	lr, r8, #20
1001e9fc:	f109 0a14 	add.w	sl, r9, #20
1001ea00:	f105 0110 	add.w	r1, r5, #16
1001ea04:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
1001ea08:	eb0b 0286 	add.w	r2, fp, r6, lsl #2
1001ea0c:	4657      	mov	r7, sl
1001ea0e:	f04f 0c00 	mov.w	ip, #0
1001ea12:	f8cd b004 	str.w	fp, [sp, #4]
1001ea16:	f85e 4b04 	ldr.w	r4, [lr], #4
1001ea1a:	f851 5f04 	ldr.w	r5, [r1, #4]!
1001ea1e:	fa1f fb84 	uxth.w	fp, r4
1001ea22:	b2ab      	uxth	r3, r5
1001ea24:	eba3 030b 	sub.w	r3, r3, fp
1001ea28:	0c24      	lsrs	r4, r4, #16
1001ea2a:	4463      	add	r3, ip
1001ea2c:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
1001ea30:	eb04 4423 	add.w	r4, r4, r3, asr #16
1001ea34:	b29b      	uxth	r3, r3
1001ea36:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
1001ea3a:	4570      	cmp	r0, lr
1001ea3c:	f847 3b04 	str.w	r3, [r7], #4
1001ea40:	ea4f 4c24 	mov.w	ip, r4, asr #16
1001ea44:	d8e7      	bhi.n	1001ea16 <__mdiff+0x7a>
1001ea46:	eba0 0108 	sub.w	r1, r0, r8
1001ea4a:	3915      	subs	r1, #21
1001ea4c:	0889      	lsrs	r1, r1, #2
1001ea4e:	1c4c      	adds	r4, r1, #1
1001ea50:	f8dd b004 	ldr.w	fp, [sp, #4]
1001ea54:	f108 0815 	add.w	r8, r8, #21
1001ea58:	00a4      	lsls	r4, r4, #2
1001ea5a:	4540      	cmp	r0, r8
1001ea5c:	bf38      	it	cc
1001ea5e:	2404      	movcc	r4, #4
1001ea60:	eb0b 0504 	add.w	r5, fp, r4
1001ea64:	42aa      	cmp	r2, r5
1001ea66:	4454      	add	r4, sl
1001ea68:	d930      	bls.n	1001eacc <__mdiff+0x130>
1001ea6a:	4627      	mov	r7, r4
1001ea6c:	4628      	mov	r0, r5
1001ea6e:	f850 3b04 	ldr.w	r3, [r0], #4
1001ea72:	fa1c fe83 	uxtah	lr, ip, r3
1001ea76:	0c19      	lsrs	r1, r3, #16
1001ea78:	4463      	add	r3, ip
1001ea7a:	eb01 412e 	add.w	r1, r1, lr, asr #16
1001ea7e:	b29b      	uxth	r3, r3
1001ea80:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1001ea84:	4282      	cmp	r2, r0
1001ea86:	f847 3b04 	str.w	r3, [r7], #4
1001ea8a:	ea4f 4c21 	mov.w	ip, r1, asr #16
1001ea8e:	d8ee      	bhi.n	1001ea6e <__mdiff+0xd2>
1001ea90:	3a01      	subs	r2, #1
1001ea92:	1b52      	subs	r2, r2, r5
1001ea94:	f022 0203 	bic.w	r2, r2, #3
1001ea98:	4414      	add	r4, r2
1001ea9a:	b923      	cbnz	r3, 1001eaa6 <__mdiff+0x10a>
1001ea9c:	f854 3d04 	ldr.w	r3, [r4, #-4]!
1001eaa0:	3e01      	subs	r6, #1
1001eaa2:	2b00      	cmp	r3, #0
1001eaa4:	d0fa      	beq.n	1001ea9c <__mdiff+0x100>
1001eaa6:	4648      	mov	r0, r9
1001eaa8:	f8c9 6010 	str.w	r6, [r9, #16]
1001eaac:	b003      	add	sp, #12
1001eaae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001eab2:	2100      	movs	r1, #0
1001eab4:	f7ff fc72 	bl	1001e39c <_Balloc>
1001eab8:	4681      	mov	r9, r0
1001eaba:	b1a8      	cbz	r0, 1001eae8 <__mdiff+0x14c>
1001eabc:	2201      	movs	r2, #1
1001eabe:	2300      	movs	r3, #0
1001eac0:	e9c0 2304 	strd	r2, r3, [r0, #16]
1001eac4:	4648      	mov	r0, r9
1001eac6:	b003      	add	sp, #12
1001eac8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001eacc:	0089      	lsls	r1, r1, #2
1001eace:	4540      	cmp	r0, r8
1001ead0:	bf38      	it	cc
1001ead2:	2100      	movcc	r1, #0
1001ead4:	eb0a 0401 	add.w	r4, sl, r1
1001ead8:	e7df      	b.n	1001ea9a <__mdiff+0xfe>
1001eada:	4b07      	ldr	r3, [pc, #28]	@ (1001eaf8 <__mdiff+0x15c>)
1001eadc:	4807      	ldr	r0, [pc, #28]	@ (1001eafc <__mdiff+0x160>)
1001eade:	464a      	mov	r2, r9
1001eae0:	f240 2145 	movw	r1, #581	@ 0x245
1001eae4:	f7ff fb0a 	bl	1001e0fc <__assert_func>
1001eae8:	4b03      	ldr	r3, [pc, #12]	@ (1001eaf8 <__mdiff+0x15c>)
1001eaea:	4804      	ldr	r0, [pc, #16]	@ (1001eafc <__mdiff+0x160>)
1001eaec:	464a      	mov	r2, r9
1001eaee:	f240 2137 	movw	r1, #567	@ 0x237
1001eaf2:	f7ff fb03 	bl	1001e0fc <__assert_func>
1001eaf6:	bf00      	nop
1001eaf8:	100239f0 	.word	0x100239f0
1001eafc:	1002a70c 	.word	0x1002a70c

1001eb00 <__ulp>:
1001eb00:	4b11      	ldr	r3, [pc, #68]	@ (1001eb48 <__ulp+0x48>)
1001eb02:	400b      	ands	r3, r1
1001eb04:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
1001eb08:	2b00      	cmp	r3, #0
1001eb0a:	dd03      	ble.n	1001eb14 <__ulp+0x14>
1001eb0c:	2200      	movs	r2, #0
1001eb0e:	4619      	mov	r1, r3
1001eb10:	4610      	mov	r0, r2
1001eb12:	4770      	bx	lr
1001eb14:	425b      	negs	r3, r3
1001eb16:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
1001eb1a:	ea4f 5223 	mov.w	r2, r3, asr #20
1001eb1e:	da06      	bge.n	1001eb2e <__ulp+0x2e>
1001eb20:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
1001eb24:	4113      	asrs	r3, r2
1001eb26:	2200      	movs	r2, #0
1001eb28:	4619      	mov	r1, r3
1001eb2a:	4610      	mov	r0, r2
1001eb2c:	4770      	bx	lr
1001eb2e:	f1a2 0314 	sub.w	r3, r2, #20
1001eb32:	2b1e      	cmp	r3, #30
1001eb34:	bfda      	itte	le
1001eb36:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
1001eb3a:	40da      	lsrle	r2, r3
1001eb3c:	2201      	movgt	r2, #1
1001eb3e:	2300      	movs	r3, #0
1001eb40:	4619      	mov	r1, r3
1001eb42:	4610      	mov	r0, r2
1001eb44:	4770      	bx	lr
1001eb46:	bf00      	nop
1001eb48:	7ff00000 	.word	0x7ff00000

1001eb4c <__b2d>:
1001eb4c:	6902      	ldr	r2, [r0, #16]
1001eb4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001eb52:	f100 0714 	add.w	r7, r0, #20
1001eb56:	eb07 0282 	add.w	r2, r7, r2, lsl #2
1001eb5a:	f1a2 0804 	sub.w	r8, r2, #4
1001eb5e:	f852 6c04 	ldr.w	r6, [r2, #-4]
1001eb62:	4630      	mov	r0, r6
1001eb64:	f7ff fcf2 	bl	1001e54c <__hi0bits>
1001eb68:	f1c0 0320 	rsb	r3, r0, #32
1001eb6c:	280a      	cmp	r0, #10
1001eb6e:	600b      	str	r3, [r1, #0]
1001eb70:	dd33      	ble.n	1001ebda <__b2d+0x8e>
1001eb72:	4547      	cmp	r7, r8
1001eb74:	f1a0 010b 	sub.w	r1, r0, #11
1001eb78:	d219      	bcs.n	1001ebae <__b2d+0x62>
1001eb7a:	f852 3c08 	ldr.w	r3, [r2, #-8]
1001eb7e:	b321      	cbz	r1, 1001ebca <__b2d+0x7e>
1001eb80:	f1c1 0020 	rsb	r0, r1, #32
1001eb84:	408e      	lsls	r6, r1
1001eb86:	fa23 f400 	lsr.w	r4, r3, r0
1001eb8a:	4326      	orrs	r6, r4
1001eb8c:	408b      	lsls	r3, r1
1001eb8e:	f1a2 0108 	sub.w	r1, r2, #8
1001eb92:	f046 557f 	orr.w	r5, r6, #1069547520	@ 0x3fc00000
1001eb96:	428f      	cmp	r7, r1
1001eb98:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001eb9c:	d219      	bcs.n	1001ebd2 <__b2d+0x86>
1001eb9e:	f852 2c0c 	ldr.w	r2, [r2, #-12]
1001eba2:	40c2      	lsrs	r2, r0
1001eba4:	4313      	orrs	r3, r2
1001eba6:	4618      	mov	r0, r3
1001eba8:	4629      	mov	r1, r5
1001ebaa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001ebae:	280b      	cmp	r0, #11
1001ebb0:	d00a      	beq.n	1001ebc8 <__b2d+0x7c>
1001ebb2:	fa06 f101 	lsl.w	r1, r6, r1
1001ebb6:	f041 557f 	orr.w	r5, r1, #1069547520	@ 0x3fc00000
1001ebba:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001ebbe:	2300      	movs	r3, #0
1001ebc0:	4618      	mov	r0, r3
1001ebc2:	4629      	mov	r1, r5
1001ebc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001ebc8:	2300      	movs	r3, #0
1001ebca:	f046 557f 	orr.w	r5, r6, #1069547520	@ 0x3fc00000
1001ebce:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001ebd2:	4618      	mov	r0, r3
1001ebd4:	4629      	mov	r1, r5
1001ebd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001ebda:	4547      	cmp	r7, r8
1001ebdc:	bf38      	it	cc
1001ebde:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
1001ebe2:	f1c0 030b 	rsb	r3, r0, #11
1001ebe6:	fa26 f103 	lsr.w	r1, r6, r3
1001ebea:	bf38      	it	cc
1001ebec:	40da      	lsrcc	r2, r3
1001ebee:	f100 0315 	add.w	r3, r0, #21
1001ebf2:	f041 557f 	orr.w	r5, r1, #1069547520	@ 0x3fc00000
1001ebf6:	bf28      	it	cs
1001ebf8:	2200      	movcs	r2, #0
1001ebfa:	fa06 f303 	lsl.w	r3, r6, r3
1001ebfe:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001ec02:	4313      	orrs	r3, r2
1001ec04:	4618      	mov	r0, r3
1001ec06:	4629      	mov	r1, r5
1001ec08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

1001ec0c <__d2b>:
1001ec0c:	b5f0      	push	{r4, r5, r6, r7, lr}
1001ec0e:	2101      	movs	r1, #1
1001ec10:	b083      	sub	sp, #12
1001ec12:	4616      	mov	r6, r2
1001ec14:	461f      	mov	r7, r3
1001ec16:	f7ff fbc1 	bl	1001e39c <_Balloc>
1001ec1a:	4605      	mov	r5, r0
1001ec1c:	2800      	cmp	r0, #0
1001ec1e:	d047      	beq.n	1001ecb0 <__d2b+0xa4>
1001ec20:	f3c7 540a 	ubfx	r4, r7, #20, #11
1001ec24:	f3c7 0313 	ubfx	r3, r7, #0, #20
1001ec28:	b10c      	cbz	r4, 1001ec2e <__d2b+0x22>
1001ec2a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1001ec2e:	2e00      	cmp	r6, #0
1001ec30:	9301      	str	r3, [sp, #4]
1001ec32:	d114      	bne.n	1001ec5e <__d2b+0x52>
1001ec34:	a801      	add	r0, sp, #4
1001ec36:	f7ff fcab 	bl	1001e590 <__lo0bits>
1001ec3a:	9b01      	ldr	r3, [sp, #4]
1001ec3c:	616b      	str	r3, [r5, #20]
1001ec3e:	2201      	movs	r2, #1
1001ec40:	3020      	adds	r0, #32
1001ec42:	612a      	str	r2, [r5, #16]
1001ec44:	b314      	cbz	r4, 1001ec8c <__d2b+0x80>
1001ec46:	9b08      	ldr	r3, [sp, #32]
1001ec48:	f2a4 4433 	subw	r4, r4, #1075	@ 0x433
1001ec4c:	4404      	add	r4, r0
1001ec4e:	601c      	str	r4, [r3, #0]
1001ec50:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001ec52:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
1001ec56:	6018      	str	r0, [r3, #0]
1001ec58:	4628      	mov	r0, r5
1001ec5a:	b003      	add	sp, #12
1001ec5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001ec5e:	4668      	mov	r0, sp
1001ec60:	9600      	str	r6, [sp, #0]
1001ec62:	f7ff fc95 	bl	1001e590 <__lo0bits>
1001ec66:	9b01      	ldr	r3, [sp, #4]
1001ec68:	b300      	cbz	r0, 1001ecac <__d2b+0xa0>
1001ec6a:	9900      	ldr	r1, [sp, #0]
1001ec6c:	f1c0 0220 	rsb	r2, r0, #32
1001ec70:	fa03 f202 	lsl.w	r2, r3, r2
1001ec74:	40c3      	lsrs	r3, r0
1001ec76:	9301      	str	r3, [sp, #4]
1001ec78:	430a      	orrs	r2, r1
1001ec7a:	2b00      	cmp	r3, #0
1001ec7c:	e9c5 2305 	strd	r2, r3, [r5, #20]
1001ec80:	bf0c      	ite	eq
1001ec82:	2201      	moveq	r2, #1
1001ec84:	2202      	movne	r2, #2
1001ec86:	612a      	str	r2, [r5, #16]
1001ec88:	2c00      	cmp	r4, #0
1001ec8a:	d1dc      	bne.n	1001ec46 <__d2b+0x3a>
1001ec8c:	eb05 0182 	add.w	r1, r5, r2, lsl #2
1001ec90:	f2a0 4332 	subw	r3, r0, #1074	@ 0x432
1001ec94:	6908      	ldr	r0, [r1, #16]
1001ec96:	9908      	ldr	r1, [sp, #32]
1001ec98:	600b      	str	r3, [r1, #0]
1001ec9a:	f7ff fc57 	bl	1001e54c <__hi0bits>
1001ec9e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001eca0:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
1001eca4:	6018      	str	r0, [r3, #0]
1001eca6:	4628      	mov	r0, r5
1001eca8:	b003      	add	sp, #12
1001ecaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001ecac:	9a00      	ldr	r2, [sp, #0]
1001ecae:	e7e4      	b.n	1001ec7a <__d2b+0x6e>
1001ecb0:	4b03      	ldr	r3, [pc, #12]	@ (1001ecc0 <__d2b+0xb4>)
1001ecb2:	4804      	ldr	r0, [pc, #16]	@ (1001ecc4 <__d2b+0xb8>)
1001ecb4:	462a      	mov	r2, r5
1001ecb6:	f240 310f 	movw	r1, #783	@ 0x30f
1001ecba:	f7ff fa1f 	bl	1001e0fc <__assert_func>
1001ecbe:	bf00      	nop
1001ecc0:	100239f0 	.word	0x100239f0
1001ecc4:	1002a70c 	.word	0x1002a70c

1001ecc8 <__ratio>:
1001ecc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1001eccc:	b083      	sub	sp, #12
1001ecce:	460e      	mov	r6, r1
1001ecd0:	4669      	mov	r1, sp
1001ecd2:	4607      	mov	r7, r0
1001ecd4:	f7ff ff3a 	bl	1001eb4c <__b2d>
1001ecd8:	4604      	mov	r4, r0
1001ecda:	460d      	mov	r5, r1
1001ecdc:	4630      	mov	r0, r6
1001ecde:	a901      	add	r1, sp, #4
1001ece0:	f7ff ff34 	bl	1001eb4c <__b2d>
1001ece4:	6933      	ldr	r3, [r6, #16]
1001ece6:	693a      	ldr	r2, [r7, #16]
1001ece8:	1ad2      	subs	r2, r2, r3
1001ecea:	e9dd 3600 	ldrd	r3, r6, [sp]
1001ecee:	1b9b      	subs	r3, r3, r6
1001ecf0:	eb03 1342 	add.w	r3, r3, r2, lsl #5
1001ecf4:	2b00      	cmp	r3, #0
1001ecf6:	dd0b      	ble.n	1001ed10 <__ratio+0x48>
1001ecf8:	eb05 5903 	add.w	r9, r5, r3, lsl #20
1001ecfc:	464d      	mov	r5, r9
1001ecfe:	4602      	mov	r2, r0
1001ed00:	460b      	mov	r3, r1
1001ed02:	4620      	mov	r0, r4
1001ed04:	4629      	mov	r1, r5
1001ed06:	f001 fe65 	bl	100209d4 <__aeabi_ddiv>
1001ed0a:	b003      	add	sp, #12
1001ed0c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1001ed10:	ebc3 3303 	rsb	r3, r3, r3, lsl #12
1001ed14:	eb01 5703 	add.w	r7, r1, r3, lsl #20
1001ed18:	4639      	mov	r1, r7
1001ed1a:	e7f0      	b.n	1001ecfe <__ratio+0x36>

1001ed1c <__copybits>:
1001ed1c:	3901      	subs	r1, #1
1001ed1e:	1149      	asrs	r1, r1, #5
1001ed20:	f101 0c01 	add.w	ip, r1, #1
1001ed24:	6911      	ldr	r1, [r2, #16]
1001ed26:	f102 0314 	add.w	r3, r2, #20
1001ed2a:	eb03 0181 	add.w	r1, r3, r1, lsl #2
1001ed2e:	428b      	cmp	r3, r1
1001ed30:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
1001ed34:	d216      	bcs.n	1001ed64 <__copybits+0x48>
1001ed36:	b510      	push	{r4, lr}
1001ed38:	f1a0 0e04 	sub.w	lr, r0, #4
1001ed3c:	f853 4b04 	ldr.w	r4, [r3], #4
1001ed40:	f84e 4f04 	str.w	r4, [lr, #4]!
1001ed44:	4299      	cmp	r1, r3
1001ed46:	d8f9      	bhi.n	1001ed3c <__copybits+0x20>
1001ed48:	1a8b      	subs	r3, r1, r2
1001ed4a:	3b15      	subs	r3, #21
1001ed4c:	f023 0303 	bic.w	r3, r3, #3
1001ed50:	3304      	adds	r3, #4
1001ed52:	4418      	add	r0, r3
1001ed54:	4584      	cmp	ip, r0
1001ed56:	d904      	bls.n	1001ed62 <__copybits+0x46>
1001ed58:	2300      	movs	r3, #0
1001ed5a:	f840 3b04 	str.w	r3, [r0], #4
1001ed5e:	4584      	cmp	ip, r0
1001ed60:	d8fb      	bhi.n	1001ed5a <__copybits+0x3e>
1001ed62:	bd10      	pop	{r4, pc}
1001ed64:	4584      	cmp	ip, r0
1001ed66:	d905      	bls.n	1001ed74 <__copybits+0x58>
1001ed68:	2300      	movs	r3, #0
1001ed6a:	f840 3b04 	str.w	r3, [r0], #4
1001ed6e:	4584      	cmp	ip, r0
1001ed70:	d8fb      	bhi.n	1001ed6a <__copybits+0x4e>
1001ed72:	4770      	bx	lr
1001ed74:	4770      	bx	lr
1001ed76:	bf00      	nop

1001ed78 <__any_on>:
1001ed78:	6903      	ldr	r3, [r0, #16]
1001ed7a:	114a      	asrs	r2, r1, #5
1001ed7c:	4293      	cmp	r3, r2
1001ed7e:	f100 0014 	add.w	r0, r0, #20
1001ed82:	da09      	bge.n	1001ed98 <__any_on+0x20>
1001ed84:	eb00 0383 	add.w	r3, r0, r3, lsl #2
1001ed88:	e002      	b.n	1001ed90 <__any_on+0x18>
1001ed8a:	f853 2d04 	ldr.w	r2, [r3, #-4]!
1001ed8e:	b9a2      	cbnz	r2, 1001edba <__any_on+0x42>
1001ed90:	4283      	cmp	r3, r0
1001ed92:	d8fa      	bhi.n	1001ed8a <__any_on+0x12>
1001ed94:	2000      	movs	r0, #0
1001ed96:	4770      	bx	lr
1001ed98:	eb00 0382 	add.w	r3, r0, r2, lsl #2
1001ed9c:	ddf8      	ble.n	1001ed90 <__any_on+0x18>
1001ed9e:	f011 011f 	ands.w	r1, r1, #31
1001eda2:	d0f5      	beq.n	1001ed90 <__any_on+0x18>
1001eda4:	b410      	push	{r4}
1001eda6:	f850 4022 	ldr.w	r4, [r0, r2, lsl #2]
1001edaa:	fa24 f201 	lsr.w	r2, r4, r1
1001edae:	408a      	lsls	r2, r1
1001edb0:	4294      	cmp	r4, r2
1001edb2:	d008      	beq.n	1001edc6 <__any_on+0x4e>
1001edb4:	2001      	movs	r0, #1
1001edb6:	bc10      	pop	{r4}
1001edb8:	4770      	bx	lr
1001edba:	2001      	movs	r0, #1
1001edbc:	4770      	bx	lr
1001edbe:	f853 2d04 	ldr.w	r2, [r3, #-4]!
1001edc2:	2a00      	cmp	r2, #0
1001edc4:	d1f6      	bne.n	1001edb4 <__any_on+0x3c>
1001edc6:	4283      	cmp	r3, r0
1001edc8:	d8f9      	bhi.n	1001edbe <__any_on+0x46>
1001edca:	2000      	movs	r0, #0
1001edcc:	bc10      	pop	{r4}
1001edce:	4770      	bx	lr

1001edd0 <_calloc_r>:
1001edd0:	b538      	push	{r3, r4, r5, lr}
1001edd2:	fba1 1402 	umull	r1, r4, r1, r2
1001edd6:	bb54      	cbnz	r4, 1001ee2e <_calloc_r+0x5e>
1001edd8:	f7f6 fc2a 	bl	10015630 <_malloc_r>
1001eddc:	4605      	mov	r5, r0
1001edde:	b350      	cbz	r0, 1001ee36 <_calloc_r+0x66>
1001ede0:	f850 2c04 	ldr.w	r2, [r0, #-4]
1001ede4:	f022 0203 	bic.w	r2, r2, #3
1001ede8:	3a04      	subs	r2, #4
1001edea:	2a24      	cmp	r2, #36	@ 0x24
1001edec:	d810      	bhi.n	1001ee10 <_calloc_r+0x40>
1001edee:	2a13      	cmp	r2, #19
1001edf0:	d913      	bls.n	1001ee1a <_calloc_r+0x4a>
1001edf2:	2a1b      	cmp	r2, #27
1001edf4:	6004      	str	r4, [r0, #0]
1001edf6:	6044      	str	r4, [r0, #4]
1001edf8:	d916      	bls.n	1001ee28 <_calloc_r+0x58>
1001edfa:	2a24      	cmp	r2, #36	@ 0x24
1001edfc:	6084      	str	r4, [r0, #8]
1001edfe:	60c4      	str	r4, [r0, #12]
1001ee00:	bf11      	iteee	ne
1001ee02:	f100 0210 	addne.w	r2, r0, #16
1001ee06:	f100 0218 	addeq.w	r2, r0, #24
1001ee0a:	6104      	streq	r4, [r0, #16]
1001ee0c:	6144      	streq	r4, [r0, #20]
1001ee0e:	e005      	b.n	1001ee1c <_calloc_r+0x4c>
1001ee10:	4621      	mov	r1, r4
1001ee12:	f7f6 ff7b 	bl	10015d0c <memset>
1001ee16:	4628      	mov	r0, r5
1001ee18:	bd38      	pop	{r3, r4, r5, pc}
1001ee1a:	4602      	mov	r2, r0
1001ee1c:	2300      	movs	r3, #0
1001ee1e:	6013      	str	r3, [r2, #0]
1001ee20:	6053      	str	r3, [r2, #4]
1001ee22:	6093      	str	r3, [r2, #8]
1001ee24:	4628      	mov	r0, r5
1001ee26:	bd38      	pop	{r3, r4, r5, pc}
1001ee28:	f100 0208 	add.w	r2, r0, #8
1001ee2c:	e7f6      	b.n	1001ee1c <_calloc_r+0x4c>
1001ee2e:	f7f4 ff55 	bl	10013cdc <__errno>
1001ee32:	230c      	movs	r3, #12
1001ee34:	6003      	str	r3, [r0, #0]
1001ee36:	2500      	movs	r5, #0
1001ee38:	4628      	mov	r0, r5
1001ee3a:	bd38      	pop	{r3, r4, r5, pc}

1001ee3c <_wcsrtombs_r>:
1001ee3c:	b500      	push	{lr}
1001ee3e:	b083      	sub	sp, #12
1001ee40:	f8dd c010 	ldr.w	ip, [sp, #16]
1001ee44:	e9cd 3c00 	strd	r3, ip, [sp]
1001ee48:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001ee4c:	f001 fa74 	bl	10020338 <_wcsnrtombs_r>
1001ee50:	b003      	add	sp, #12
1001ee52:	f85d fb04 	ldr.w	pc, [sp], #4
1001ee56:	bf00      	nop

1001ee58 <quorem>:
1001ee58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001ee5c:	6903      	ldr	r3, [r0, #16]
1001ee5e:	690c      	ldr	r4, [r1, #16]
1001ee60:	42a3      	cmp	r3, r4
1001ee62:	b083      	sub	sp, #12
1001ee64:	f2c0 808a 	blt.w	1001ef7c <quorem+0x124>
1001ee68:	3c01      	subs	r4, #1
1001ee6a:	f101 0514 	add.w	r5, r1, #20
1001ee6e:	f100 0814 	add.w	r8, r0, #20
1001ee72:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
1001ee76:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
1001ee7a:	3301      	adds	r3, #1
1001ee7c:	429a      	cmp	r2, r3
1001ee7e:	468e      	mov	lr, r1
1001ee80:	4681      	mov	r9, r0
1001ee82:	ea4f 0184 	mov.w	r1, r4, lsl #2
1001ee86:	eb05 0784 	add.w	r7, r5, r4, lsl #2
1001ee8a:	eb08 0a84 	add.w	sl, r8, r4, lsl #2
1001ee8e:	fbb2 f6f3 	udiv	r6, r2, r3
1001ee92:	d33a      	bcc.n	1001ef0a <quorem+0xb2>
1001ee94:	e9cd 1500 	strd	r1, r5, [sp]
1001ee98:	2200      	movs	r2, #0
1001ee9a:	46ac      	mov	ip, r5
1001ee9c:	4640      	mov	r0, r8
1001ee9e:	4613      	mov	r3, r2
1001eea0:	f85c 1b04 	ldr.w	r1, [ip], #4
1001eea4:	6805      	ldr	r5, [r0, #0]
1001eea6:	fa1f fb81 	uxth.w	fp, r1
1001eeaa:	fb06 220b 	mla	r2, r6, fp, r2
1001eeae:	0c09      	lsrs	r1, r1, #16
1001eeb0:	ea4f 4b12 	mov.w	fp, r2, lsr #16
1001eeb4:	fb06 bb01 	mla	fp, r6, r1, fp
1001eeb8:	b292      	uxth	r2, r2
1001eeba:	b2a9      	uxth	r1, r5
1001eebc:	1a89      	subs	r1, r1, r2
1001eebe:	4419      	add	r1, r3
1001eec0:	fa1f f38b 	uxth.w	r3, fp
1001eec4:	ebc3 4321 	rsb	r3, r3, r1, asr #16
1001eec8:	eb03 4315 	add.w	r3, r3, r5, lsr #16
1001eecc:	b289      	uxth	r1, r1
1001eece:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
1001eed2:	4567      	cmp	r7, ip
1001eed4:	f840 1b04 	str.w	r1, [r0], #4
1001eed8:	ea4f 421b 	mov.w	r2, fp, lsr #16
1001eedc:	ea4f 4323 	mov.w	r3, r3, asr #16
1001eee0:	d2de      	bcs.n	1001eea0 <quorem+0x48>
1001eee2:	e9dd 1500 	ldrd	r1, r5, [sp]
1001eee6:	f858 3001 	ldr.w	r3, [r8, r1]
1001eeea:	b973      	cbnz	r3, 1001ef0a <quorem+0xb2>
1001eeec:	f1aa 0a04 	sub.w	sl, sl, #4
1001eef0:	45d0      	cmp	r8, sl
1001eef2:	d304      	bcc.n	1001eefe <quorem+0xa6>
1001eef4:	e007      	b.n	1001ef06 <quorem+0xae>
1001eef6:	45d0      	cmp	r8, sl
1001eef8:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
1001eefc:	d203      	bcs.n	1001ef06 <quorem+0xae>
1001eefe:	f85a 3904 	ldr.w	r3, [sl], #-4
1001ef02:	2b00      	cmp	r3, #0
1001ef04:	d0f7      	beq.n	1001eef6 <quorem+0x9e>
1001ef06:	f8c9 4010 	str.w	r4, [r9, #16]
1001ef0a:	4671      	mov	r1, lr
1001ef0c:	4648      	mov	r0, r9
1001ef0e:	f7ff fd25 	bl	1001e95c <__mcmp>
1001ef12:	2800      	cmp	r0, #0
1001ef14:	db2e      	blt.n	1001ef74 <quorem+0x11c>
1001ef16:	4641      	mov	r1, r8
1001ef18:	2200      	movs	r2, #0
1001ef1a:	f855 0b04 	ldr.w	r0, [r5], #4
1001ef1e:	f8d1 c000 	ldr.w	ip, [r1]
1001ef22:	fa1f fe80 	uxth.w	lr, r0
1001ef26:	fa1f f38c 	uxth.w	r3, ip
1001ef2a:	eba3 030e 	sub.w	r3, r3, lr
1001ef2e:	4413      	add	r3, r2
1001ef30:	0c02      	lsrs	r2, r0, #16
1001ef32:	ebc2 4223 	rsb	r2, r2, r3, asr #16
1001ef36:	eb02 421c 	add.w	r2, r2, ip, lsr #16
1001ef3a:	b29b      	uxth	r3, r3
1001ef3c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1001ef40:	42af      	cmp	r7, r5
1001ef42:	f841 3b04 	str.w	r3, [r1], #4
1001ef46:	ea4f 4222 	mov.w	r2, r2, asr #16
1001ef4a:	d2e6      	bcs.n	1001ef1a <quorem+0xc2>
1001ef4c:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
1001ef50:	eb08 0384 	add.w	r3, r8, r4, lsl #2
1001ef54:	b96a      	cbnz	r2, 1001ef72 <quorem+0x11a>
1001ef56:	3b04      	subs	r3, #4
1001ef58:	4598      	cmp	r8, r3
1001ef5a:	d304      	bcc.n	1001ef66 <quorem+0x10e>
1001ef5c:	e007      	b.n	1001ef6e <quorem+0x116>
1001ef5e:	4598      	cmp	r8, r3
1001ef60:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
1001ef64:	d203      	bcs.n	1001ef6e <quorem+0x116>
1001ef66:	f853 2904 	ldr.w	r2, [r3], #-4
1001ef6a:	2a00      	cmp	r2, #0
1001ef6c:	d0f7      	beq.n	1001ef5e <quorem+0x106>
1001ef6e:	f8c9 4010 	str.w	r4, [r9, #16]
1001ef72:	3601      	adds	r6, #1
1001ef74:	4630      	mov	r0, r6
1001ef76:	b003      	add	sp, #12
1001ef78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001ef7c:	2000      	movs	r0, #0
1001ef7e:	b003      	add	sp, #12
1001ef80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001ef84:	0000      	movs	r0, r0
	...

1001ef88 <_dtoa_r>:
1001ef88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001ef8c:	6b81      	ldr	r1, [r0, #56]	@ 0x38
1001ef8e:	b09f      	sub	sp, #124	@ 0x7c
1001ef90:	4616      	mov	r6, r2
1001ef92:	461f      	mov	r7, r3
1001ef94:	e9cd 6704 	strd	r6, r7, [sp, #16]
1001ef98:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
1001ef9a:	9003      	str	r0, [sp, #12]
1001ef9c:	b149      	cbz	r1, 1001efb2 <_dtoa_r+0x2a>
1001ef9e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
1001efa0:	604a      	str	r2, [r1, #4]
1001efa2:	2301      	movs	r3, #1
1001efa4:	4093      	lsls	r3, r2
1001efa6:	4604      	mov	r4, r0
1001efa8:	608b      	str	r3, [r1, #8]
1001efaa:	f7ff fa1d 	bl	1001e3e8 <_Bfree>
1001efae:	2300      	movs	r3, #0
1001efb0:	63a3      	str	r3, [r4, #56]	@ 0x38
1001efb2:	f1b7 0900 	subs.w	r9, r7, #0
1001efb6:	bfb4      	ite	lt
1001efb8:	2301      	movlt	r3, #1
1001efba:	2300      	movge	r3, #0
1001efbc:	602b      	str	r3, [r5, #0]
1001efbe:	4b76      	ldr	r3, [pc, #472]	@ (1001f198 <_dtoa_r+0x210>)
1001efc0:	bfbc      	itt	lt
1001efc2:	f029 4900 	biclt.w	r9, r9, #2147483648	@ 0x80000000
1001efc6:	f8cd 9014 	strlt.w	r9, [sp, #20]
1001efca:	ea33 0309 	bics.w	r3, r3, r9
1001efce:	f000 80aa 	beq.w	1001f126 <_dtoa_r+0x19e>
1001efd2:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
1001efd6:	2200      	movs	r2, #0
1001efd8:	4618      	mov	r0, r3
1001efda:	4621      	mov	r1, r4
1001efdc:	2300      	movs	r3, #0
1001efde:	e9cd 0108 	strd	r0, r1, [sp, #32]
1001efe2:	f001 fe35 	bl	10020c50 <__aeabi_dcmpeq>
1001efe6:	4680      	mov	r8, r0
1001efe8:	b168      	cbz	r0, 1001f006 <_dtoa_r+0x7e>
1001efea:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
1001efec:	2301      	movs	r3, #1
1001efee:	6013      	str	r3, [r2, #0]
1001eff0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
1001eff2:	b113      	cbz	r3, 1001effa <_dtoa_r+0x72>
1001eff4:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
1001eff6:	4b69      	ldr	r3, [pc, #420]	@ (1001f19c <_dtoa_r+0x214>)
1001eff8:	6013      	str	r3, [r2, #0]
1001effa:	4b69      	ldr	r3, [pc, #420]	@ (1001f1a0 <_dtoa_r+0x218>)
1001effc:	930a      	str	r3, [sp, #40]	@ 0x28
1001effe:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001f000:	b01f      	add	sp, #124	@ 0x7c
1001f002:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f006:	ab1c      	add	r3, sp, #112	@ 0x70
1001f008:	9301      	str	r3, [sp, #4]
1001f00a:	ab1d      	add	r3, sp, #116	@ 0x74
1001f00c:	9300      	str	r3, [sp, #0]
1001f00e:	9803      	ldr	r0, [sp, #12]
1001f010:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
1001f014:	f7ff fdfa 	bl	1001ec0c <__d2b>
1001f018:	ea5f 5519 	movs.w	r5, r9, lsr #20
1001f01c:	4682      	mov	sl, r0
1001f01e:	f040 8098 	bne.w	1001f152 <_dtoa_r+0x1ca>
1001f022:	e9dd 851c 	ldrd	r8, r5, [sp, #112]	@ 0x70
1001f026:	4445      	add	r5, r8
1001f028:	f205 4332 	addw	r3, r5, #1074	@ 0x432
1001f02c:	2b20      	cmp	r3, #32
1001f02e:	f340 8383 	ble.w	1001f738 <_dtoa_r+0x7b0>
1001f032:	f1c3 0340 	rsb	r3, r3, #64	@ 0x40
1001f036:	fa09 f903 	lsl.w	r9, r9, r3
1001f03a:	f205 4312 	addw	r3, r5, #1042	@ 0x412
1001f03e:	fa26 f303 	lsr.w	r3, r6, r3
1001f042:	ea49 0003 	orr.w	r0, r9, r3
1001f046:	f001 fb21 	bl	1002068c <__aeabi_ui2d>
1001f04a:	2301      	movs	r3, #1
1001f04c:	3d01      	subs	r5, #1
1001f04e:	f1a1 71f8 	sub.w	r1, r1, #32505856	@ 0x1f00000
1001f052:	9311      	str	r3, [sp, #68]	@ 0x44
1001f054:	4b53      	ldr	r3, [pc, #332]	@ (1001f1a4 <_dtoa_r+0x21c>)
1001f056:	2200      	movs	r2, #0
1001f058:	f001 f9da 	bl	10020410 <__aeabi_dsub>
1001f05c:	a348      	add	r3, pc, #288	@ (adr r3, 1001f180 <_dtoa_r+0x1f8>)
1001f05e:	e9d3 2300 	ldrd	r2, r3, [r3]
1001f062:	f001 fb8d 	bl	10020780 <__aeabi_dmul>
1001f066:	a348      	add	r3, pc, #288	@ (adr r3, 1001f188 <_dtoa_r+0x200>)
1001f068:	e9d3 2300 	ldrd	r2, r3, [r3]
1001f06c:	f001 f9d2 	bl	10020414 <__adddf3>
1001f070:	4606      	mov	r6, r0
1001f072:	4628      	mov	r0, r5
1001f074:	460f      	mov	r7, r1
1001f076:	f001 fb19 	bl	100206ac <__aeabi_i2d>
1001f07a:	a345      	add	r3, pc, #276	@ (adr r3, 1001f190 <_dtoa_r+0x208>)
1001f07c:	e9d3 2300 	ldrd	r2, r3, [r3]
1001f080:	f001 fb7e 	bl	10020780 <__aeabi_dmul>
1001f084:	4602      	mov	r2, r0
1001f086:	460b      	mov	r3, r1
1001f088:	4630      	mov	r0, r6
1001f08a:	4639      	mov	r1, r7
1001f08c:	f001 f9c2 	bl	10020414 <__adddf3>
1001f090:	4606      	mov	r6, r0
1001f092:	460f      	mov	r7, r1
1001f094:	f001 fe24 	bl	10020ce0 <__aeabi_d2iz>
1001f098:	2200      	movs	r2, #0
1001f09a:	4683      	mov	fp, r0
1001f09c:	2300      	movs	r3, #0
1001f09e:	4630      	mov	r0, r6
1001f0a0:	4639      	mov	r1, r7
1001f0a2:	f001 fddf 	bl	10020c64 <__aeabi_dcmplt>
1001f0a6:	2800      	cmp	r0, #0
1001f0a8:	f040 831a 	bne.w	1001f6e0 <_dtoa_r+0x758>
1001f0ac:	eba8 0805 	sub.w	r8, r8, r5
1001f0b0:	f1bb 0f16 	cmp.w	fp, #22
1001f0b4:	f108 34ff 	add.w	r4, r8, #4294967295	@ 0xffffffff
1001f0b8:	f200 818b 	bhi.w	1001f3d2 <_dtoa_r+0x44a>
1001f0bc:	4d3a      	ldr	r5, [pc, #232]	@ (1001f1a8 <_dtoa_r+0x220>)
1001f0be:	eb05 05cb 	add.w	r5, r5, fp, lsl #3
1001f0c2:	e9d5 2300 	ldrd	r2, r3, [r5]
1001f0c6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1001f0ca:	f001 fdcb 	bl	10020c64 <__aeabi_dcmplt>
1001f0ce:	2800      	cmp	r0, #0
1001f0d0:	d070      	beq.n	1001f1b4 <_dtoa_r+0x22c>
1001f0d2:	2300      	movs	r3, #0
1001f0d4:	2c00      	cmp	r4, #0
1001f0d6:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
1001f0da:	9310      	str	r3, [sp, #64]	@ 0x40
1001f0dc:	f2c0 817e 	blt.w	1001f3dc <_dtoa_r+0x454>
1001f0e0:	2300      	movs	r3, #0
1001f0e2:	930b      	str	r3, [sp, #44]	@ 0x2c
1001f0e4:	f1bb 0f00 	cmp.w	fp, #0
1001f0e8:	da6a      	bge.n	1001f1c0 <_dtoa_r+0x238>
1001f0ea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001f0ec:	eba3 030b 	sub.w	r3, r3, fp
1001f0f0:	930b      	str	r3, [sp, #44]	@ 0x2c
1001f0f2:	f1cb 0300 	rsb	r3, fp, #0
1001f0f6:	e9cd b30e 	strd	fp, r3, [sp, #56]	@ 0x38
1001f0fa:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001f0fc:	2b09      	cmp	r3, #9
1001f0fe:	f04f 0b00 	mov.w	fp, #0
1001f102:	d865      	bhi.n	1001f1d0 <_dtoa_r+0x248>
1001f104:	2b05      	cmp	r3, #5
1001f106:	f340 831c 	ble.w	1001f742 <_dtoa_r+0x7ba>
1001f10a:	3b04      	subs	r3, #4
1001f10c:	9328      	str	r3, [sp, #160]	@ 0xa0
1001f10e:	2500      	movs	r5, #0
1001f110:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001f112:	3b02      	subs	r3, #2
1001f114:	2b03      	cmp	r3, #3
1001f116:	f200 8623 	bhi.w	1001fd60 <_dtoa_r+0xdd8>
1001f11a:	e8df f013 	tbh	[pc, r3, lsl #1]
1001f11e:	0460      	.short	0x0460
1001f120:	0454045d 	.word	0x0454045d
1001f124:	0438      	.short	0x0438
1001f126:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
1001f128:	f3c9 0913 	ubfx	r9, r9, #0, #20
1001f12c:	f242 730f 	movw	r3, #9999	@ 0x270f
1001f130:	ea59 0906 	orrs.w	r9, r9, r6
1001f134:	6013      	str	r3, [r2, #0]
1001f136:	d11c      	bne.n	1001f172 <_dtoa_r+0x1ea>
1001f138:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
1001f13a:	2b00      	cmp	r3, #0
1001f13c:	f000 862b 	beq.w	1001fd96 <_dtoa_r+0xe0e>
1001f140:	4b1a      	ldr	r3, [pc, #104]	@ (1001f1ac <_dtoa_r+0x224>)
1001f142:	930a      	str	r3, [sp, #40]	@ 0x28
1001f144:	3308      	adds	r3, #8
1001f146:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
1001f148:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001f14a:	6013      	str	r3, [r2, #0]
1001f14c:	b01f      	add	sp, #124	@ 0x7c
1001f14e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f152:	e9dd 1208 	ldrd	r1, r2, [sp, #32]
1001f156:	f3c2 0313 	ubfx	r3, r2, #0, #20
1001f15a:	4608      	mov	r0, r1
1001f15c:	f043 517f 	orr.w	r1, r3, #1069547520	@ 0x3fc00000
1001f160:	f8cd 8044 	str.w	r8, [sp, #68]	@ 0x44
1001f164:	f2a5 35ff 	subw	r5, r5, #1023	@ 0x3ff
1001f168:	f8dd 8070 	ldr.w	r8, [sp, #112]	@ 0x70
1001f16c:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
1001f170:	e770      	b.n	1001f054 <_dtoa_r+0xcc>
1001f172:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
1001f174:	2b00      	cmp	r3, #0
1001f176:	f040 83e7 	bne.w	1001f948 <_dtoa_r+0x9c0>
1001f17a:	4b0d      	ldr	r3, [pc, #52]	@ (1001f1b0 <_dtoa_r+0x228>)
1001f17c:	930a      	str	r3, [sp, #40]	@ 0x28
1001f17e:	e73e      	b.n	1001effe <_dtoa_r+0x76>
1001f180:	636f4361 	.word	0x636f4361
1001f184:	3fd287a7 	.word	0x3fd287a7
1001f188:	8b60c8b3 	.word	0x8b60c8b3
1001f18c:	3fc68a28 	.word	0x3fc68a28
1001f190:	509f79fb 	.word	0x509f79fb
1001f194:	3fd34413 	.word	0x3fd34413
1001f198:	7ff00000 	.word	0x7ff00000
1001f19c:	1002a669 	.word	0x1002a669
1001f1a0:	1002a668 	.word	0x1002a668
1001f1a4:	3ff80000 	.word	0x3ff80000
1001f1a8:	1002a7a0 	.word	0x1002a7a0
1001f1ac:	1002a868 	.word	0x1002a868
1001f1b0:	1002a874 	.word	0x1002a874
1001f1b4:	f1b8 0f00 	cmp.w	r8, #0
1001f1b8:	f340 8460 	ble.w	1001fa7c <_dtoa_r+0xaf4>
1001f1bc:	9010      	str	r0, [sp, #64]	@ 0x40
1001f1be:	900b      	str	r0, [sp, #44]	@ 0x2c
1001f1c0:	2300      	movs	r3, #0
1001f1c2:	930f      	str	r3, [sp, #60]	@ 0x3c
1001f1c4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001f1c6:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
1001f1ca:	2b09      	cmp	r3, #9
1001f1cc:	445c      	add	r4, fp
1001f1ce:	d999      	bls.n	1001f104 <_dtoa_r+0x17c>
1001f1d0:	2300      	movs	r3, #0
1001f1d2:	e9cd 3328 	strd	r3, r3, [sp, #160]	@ 0xa0
1001f1d6:	2501      	movs	r5, #1
1001f1d8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001f1dc:	950c      	str	r5, [sp, #48]	@ 0x30
1001f1de:	9306      	str	r3, [sp, #24]
1001f1e0:	9b03      	ldr	r3, [sp, #12]
1001f1e2:	2100      	movs	r1, #0
1001f1e4:	63d9      	str	r1, [r3, #60]	@ 0x3c
1001f1e6:	9b06      	ldr	r3, [sp, #24]
1001f1e8:	9318      	str	r3, [sp, #96]	@ 0x60
1001f1ea:	9803      	ldr	r0, [sp, #12]
1001f1ec:	f7ff f8d6 	bl	1001e39c <_Balloc>
1001f1f0:	900a      	str	r0, [sp, #40]	@ 0x28
1001f1f2:	2800      	cmp	r0, #0
1001f1f4:	f000 85bd 	beq.w	1001fd72 <_dtoa_r+0xdea>
1001f1f8:	9b03      	ldr	r3, [sp, #12]
1001f1fa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001f1fc:	639a      	str	r2, [r3, #56]	@ 0x38
1001f1fe:	9b06      	ldr	r3, [sp, #24]
1001f200:	2b0e      	cmp	r3, #14
1001f202:	f200 8115 	bhi.w	1001f430 <_dtoa_r+0x4a8>
1001f206:	2d00      	cmp	r5, #0
1001f208:	f000 8112 	beq.w	1001f430 <_dtoa_r+0x4a8>
1001f20c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001f20e:	2a00      	cmp	r2, #0
1001f210:	f340 843b 	ble.w	1001fa8a <_dtoa_r+0xb02>
1001f214:	4db2      	ldr	r5, [pc, #712]	@ (1001f4e0 <_dtoa_r+0x558>)
1001f216:	f002 030f 	and.w	r3, r2, #15
1001f21a:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
1001f21e:	e9d3 8900 	ldrd	r8, r9, [r3]
1001f222:	4613      	mov	r3, r2
1001f224:	1115      	asrs	r5, r2, #4
1001f226:	05da      	lsls	r2, r3, #23
1001f228:	f140 83fa 	bpl.w	1001fa20 <_dtoa_r+0xa98>
1001f22c:	4bad      	ldr	r3, [pc, #692]	@ (1001f4e4 <_dtoa_r+0x55c>)
1001f22e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1001f232:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
1001f236:	f001 fbcd 	bl	100209d4 <__aeabi_ddiv>
1001f23a:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
1001f23e:	f005 050f 	and.w	r5, r5, #15
1001f242:	2703      	movs	r7, #3
1001f244:	b17d      	cbz	r5, 1001f266 <_dtoa_r+0x2de>
1001f246:	4ea7      	ldr	r6, [pc, #668]	@ (1001f4e4 <_dtoa_r+0x55c>)
1001f248:	07eb      	lsls	r3, r5, #31
1001f24a:	d508      	bpl.n	1001f25e <_dtoa_r+0x2d6>
1001f24c:	4640      	mov	r0, r8
1001f24e:	4649      	mov	r1, r9
1001f250:	e9d6 2300 	ldrd	r2, r3, [r6]
1001f254:	f001 fa94 	bl	10020780 <__aeabi_dmul>
1001f258:	3701      	adds	r7, #1
1001f25a:	4680      	mov	r8, r0
1001f25c:	4689      	mov	r9, r1
1001f25e:	106d      	asrs	r5, r5, #1
1001f260:	f106 0608 	add.w	r6, r6, #8
1001f264:	d1f0      	bne.n	1001f248 <_dtoa_r+0x2c0>
1001f266:	4642      	mov	r2, r8
1001f268:	464b      	mov	r3, r9
1001f26a:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
1001f26e:	f001 fbb1 	bl	100209d4 <__aeabi_ddiv>
1001f272:	4680      	mov	r8, r0
1001f274:	4689      	mov	r9, r1
1001f276:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001f278:	b143      	cbz	r3, 1001f28c <_dtoa_r+0x304>
1001f27a:	4b9b      	ldr	r3, [pc, #620]	@ (1001f4e8 <_dtoa_r+0x560>)
1001f27c:	2200      	movs	r2, #0
1001f27e:	4640      	mov	r0, r8
1001f280:	4649      	mov	r1, r9
1001f282:	f001 fcef 	bl	10020c64 <__aeabi_dcmplt>
1001f286:	2800      	cmp	r0, #0
1001f288:	f040 84f1 	bne.w	1001fc6e <_dtoa_r+0xce6>
1001f28c:	4638      	mov	r0, r7
1001f28e:	f001 fa0d 	bl	100206ac <__aeabi_i2d>
1001f292:	4642      	mov	r2, r8
1001f294:	464b      	mov	r3, r9
1001f296:	f001 fa73 	bl	10020780 <__aeabi_dmul>
1001f29a:	4b94      	ldr	r3, [pc, #592]	@ (1001f4ec <_dtoa_r+0x564>)
1001f29c:	2200      	movs	r2, #0
1001f29e:	f001 f8b9 	bl	10020414 <__adddf3>
1001f2a2:	9b06      	ldr	r3, [sp, #24]
1001f2a4:	4606      	mov	r6, r0
1001f2a6:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
1001f2aa:	2b00      	cmp	r3, #0
1001f2ac:	f000 80a9 	beq.w	1001f402 <_dtoa_r+0x47a>
1001f2b0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001f2b2:	9319      	str	r3, [sp, #100]	@ 0x64
1001f2b4:	9b06      	ldr	r3, [sp, #24]
1001f2b6:	9312      	str	r3, [sp, #72]	@ 0x48
1001f2b8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001f2ba:	4d89      	ldr	r5, [pc, #548]	@ (1001f4e0 <_dtoa_r+0x558>)
1001f2bc:	4649      	mov	r1, r9
1001f2be:	4640      	mov	r0, r8
1001f2c0:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
1001f2c4:	1c5e      	adds	r6, r3, #1
1001f2c6:	f001 fd0b 	bl	10020ce0 <__aeabi_d2iz>
1001f2ca:	9912      	ldr	r1, [sp, #72]	@ 0x48
1001f2cc:	eb05 03c1 	add.w	r3, r5, r1, lsl #3
1001f2d0:	e953 1202 	ldrd	r1, r2, [r3, #-8]
1001f2d4:	4607      	mov	r7, r0
1001f2d6:	e9cd 1216 	strd	r1, r2, [sp, #88]	@ 0x58
1001f2da:	f001 f9e7 	bl	100206ac <__aeabi_i2d>
1001f2de:	4602      	mov	r2, r0
1001f2e0:	460b      	mov	r3, r1
1001f2e2:	4640      	mov	r0, r8
1001f2e4:	4649      	mov	r1, r9
1001f2e6:	f001 f893 	bl	10020410 <__aeabi_dsub>
1001f2ea:	4689      	mov	r9, r1
1001f2ec:	990c      	ldr	r1, [sp, #48]	@ 0x30
1001f2ee:	3730      	adds	r7, #48	@ 0x30
1001f2f0:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	@ 0x58
1001f2f4:	4680      	mov	r8, r0
1001f2f6:	b2ff      	uxtb	r7, r7
1001f2f8:	2900      	cmp	r1, #0
1001f2fa:	f000 8453 	beq.w	1001fba4 <_dtoa_r+0xc1c>
1001f2fe:	497c      	ldr	r1, [pc, #496]	@ (1001f4f0 <_dtoa_r+0x568>)
1001f300:	2000      	movs	r0, #0
1001f302:	f001 fb67 	bl	100209d4 <__aeabi_ddiv>
1001f306:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
1001f30a:	f001 f881 	bl	10020410 <__aeabi_dsub>
1001f30e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
1001f310:	4602      	mov	r2, r0
1001f312:	460b      	mov	r3, r1
1001f314:	e9cd 2314 	strd	r2, r3, [sp, #80]	@ 0x50
1001f318:	702f      	strb	r7, [r5, #0]
1001f31a:	4642      	mov	r2, r8
1001f31c:	464b      	mov	r3, r9
1001f31e:	f001 fcbf 	bl	10020ca0 <__aeabi_dcmpgt>
1001f322:	2800      	cmp	r0, #0
1001f324:	f040 8497 	bne.w	1001fc56 <_dtoa_r+0xcce>
1001f328:	e9cd b41a 	strd	fp, r4, [sp, #104]	@ 0x68
1001f32c:	f8cd a058 	str.w	sl, [sp, #88]	@ 0x58
1001f330:	9d12      	ldr	r5, [sp, #72]	@ 0x48
1001f332:	e9dd ab14 	ldrd	sl, fp, [sp, #80]	@ 0x50
1001f336:	2700      	movs	r7, #0
1001f338:	e02a      	b.n	1001f390 <_dtoa_r+0x408>
1001f33a:	3701      	adds	r7, #1
1001f33c:	42af      	cmp	r7, r5
1001f33e:	f280 84de 	bge.w	1001fcfe <_dtoa_r+0xd76>
1001f342:	4b6c      	ldr	r3, [pc, #432]	@ (1001f4f4 <_dtoa_r+0x56c>)
1001f344:	4650      	mov	r0, sl
1001f346:	4659      	mov	r1, fp
1001f348:	2200      	movs	r2, #0
1001f34a:	f001 fa19 	bl	10020780 <__aeabi_dmul>
1001f34e:	4b69      	ldr	r3, [pc, #420]	@ (1001f4f4 <_dtoa_r+0x56c>)
1001f350:	2200      	movs	r2, #0
1001f352:	4682      	mov	sl, r0
1001f354:	468b      	mov	fp, r1
1001f356:	4640      	mov	r0, r8
1001f358:	4649      	mov	r1, r9
1001f35a:	f001 fa11 	bl	10020780 <__aeabi_dmul>
1001f35e:	4689      	mov	r9, r1
1001f360:	4680      	mov	r8, r0
1001f362:	f001 fcbd 	bl	10020ce0 <__aeabi_d2iz>
1001f366:	4604      	mov	r4, r0
1001f368:	f001 f9a0 	bl	100206ac <__aeabi_i2d>
1001f36c:	4602      	mov	r2, r0
1001f36e:	460b      	mov	r3, r1
1001f370:	4640      	mov	r0, r8
1001f372:	4649      	mov	r1, r9
1001f374:	f001 f84c 	bl	10020410 <__aeabi_dsub>
1001f378:	3430      	adds	r4, #48	@ 0x30
1001f37a:	f806 4b01 	strb.w	r4, [r6], #1
1001f37e:	4652      	mov	r2, sl
1001f380:	465b      	mov	r3, fp
1001f382:	4680      	mov	r8, r0
1001f384:	4689      	mov	r9, r1
1001f386:	f001 fc6d 	bl	10020c64 <__aeabi_dcmplt>
1001f38a:	2800      	cmp	r0, #0
1001f38c:	f040 84b4 	bne.w	1001fcf8 <_dtoa_r+0xd70>
1001f390:	4642      	mov	r2, r8
1001f392:	464b      	mov	r3, r9
1001f394:	4954      	ldr	r1, [pc, #336]	@ (1001f4e8 <_dtoa_r+0x560>)
1001f396:	2000      	movs	r0, #0
1001f398:	f001 f83a 	bl	10020410 <__aeabi_dsub>
1001f39c:	4652      	mov	r2, sl
1001f39e:	465b      	mov	r3, fp
1001f3a0:	f001 fc60 	bl	10020c64 <__aeabi_dcmplt>
1001f3a4:	2800      	cmp	r0, #0
1001f3a6:	d0c8      	beq.n	1001f33a <_dtoa_r+0x3b2>
1001f3a8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001f3aa:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
1001f3ae:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001f3b0:	4637      	mov	r7, r6
1001f3b2:	f103 0801 	add.w	r8, r3, #1
1001f3b6:	e002      	b.n	1001f3be <_dtoa_r+0x436>
1001f3b8:	4297      	cmp	r7, r2
1001f3ba:	f000 847c 	beq.w	1001fcb6 <_dtoa_r+0xd2e>
1001f3be:	463e      	mov	r6, r7
1001f3c0:	f817 3d01 	ldrb.w	r3, [r7, #-1]!
1001f3c4:	2b39      	cmp	r3, #57	@ 0x39
1001f3c6:	d0f7      	beq.n	1001f3b8 <_dtoa_r+0x430>
1001f3c8:	3301      	adds	r3, #1
1001f3ca:	b2db      	uxtb	r3, r3
1001f3cc:	703b      	strb	r3, [r7, #0]
1001f3ce:	4645      	mov	r5, r8
1001f3d0:	e175      	b.n	1001f6be <_dtoa_r+0x736>
1001f3d2:	2301      	movs	r3, #1
1001f3d4:	2c00      	cmp	r4, #0
1001f3d6:	9310      	str	r3, [sp, #64]	@ 0x40
1001f3d8:	f6bf ae82 	bge.w	1001f0e0 <_dtoa_r+0x158>
1001f3dc:	f1c8 0301 	rsb	r3, r8, #1
1001f3e0:	930b      	str	r3, [sp, #44]	@ 0x2c
1001f3e2:	2400      	movs	r4, #0
1001f3e4:	e67e      	b.n	1001f0e4 <_dtoa_r+0x15c>
1001f3e6:	4638      	mov	r0, r7
1001f3e8:	f001 f960 	bl	100206ac <__aeabi_i2d>
1001f3ec:	4642      	mov	r2, r8
1001f3ee:	464b      	mov	r3, r9
1001f3f0:	f001 f9c6 	bl	10020780 <__aeabi_dmul>
1001f3f4:	4b3d      	ldr	r3, [pc, #244]	@ (1001f4ec <_dtoa_r+0x564>)
1001f3f6:	2200      	movs	r2, #0
1001f3f8:	f001 f80c 	bl	10020414 <__adddf3>
1001f3fc:	4606      	mov	r6, r0
1001f3fe:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
1001f402:	4b3d      	ldr	r3, [pc, #244]	@ (1001f4f8 <_dtoa_r+0x570>)
1001f404:	4640      	mov	r0, r8
1001f406:	4649      	mov	r1, r9
1001f408:	2200      	movs	r2, #0
1001f40a:	f001 f801 	bl	10020410 <__aeabi_dsub>
1001f40e:	4632      	mov	r2, r6
1001f410:	463b      	mov	r3, r7
1001f412:	4680      	mov	r8, r0
1001f414:	4689      	mov	r9, r1
1001f416:	f001 fc43 	bl	10020ca0 <__aeabi_dcmpgt>
1001f41a:	2800      	cmp	r0, #0
1001f41c:	f040 845a 	bne.w	1001fcd4 <_dtoa_r+0xd4c>
1001f420:	4640      	mov	r0, r8
1001f422:	4649      	mov	r1, r9
1001f424:	4632      	mov	r2, r6
1001f426:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
1001f42a:	f001 fc1b 	bl	10020c64 <__aeabi_dcmplt>
1001f42e:	bb28      	cbnz	r0, 1001f47c <_dtoa_r+0x4f4>
1001f430:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001f432:	2b00      	cmp	r3, #0
1001f434:	f2c0 8092 	blt.w	1001f55c <_dtoa_r+0x5d4>
1001f438:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001f43a:	2a0e      	cmp	r2, #14
1001f43c:	f300 808e 	bgt.w	1001f55c <_dtoa_r+0x5d4>
1001f440:	4d27      	ldr	r5, [pc, #156]	@ (1001f4e0 <_dtoa_r+0x558>)
1001f442:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001f444:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
1001f448:	e9d5 3400 	ldrd	r3, r4, [r5]
1001f44c:	e9cd 3404 	strd	r3, r4, [sp, #16]
1001f450:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001f452:	2b00      	cmp	r3, #0
1001f454:	da19      	bge.n	1001f48a <_dtoa_r+0x502>
1001f456:	9b06      	ldr	r3, [sp, #24]
1001f458:	2b00      	cmp	r3, #0
1001f45a:	dc16      	bgt.n	1001f48a <_dtoa_r+0x502>
1001f45c:	d10e      	bne.n	1001f47c <_dtoa_r+0x4f4>
1001f45e:	4b26      	ldr	r3, [pc, #152]	@ (1001f4f8 <_dtoa_r+0x570>)
1001f460:	2200      	movs	r2, #0
1001f462:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001f466:	f001 f98b 	bl	10020780 <__aeabi_dmul>
1001f46a:	4602      	mov	r2, r0
1001f46c:	460b      	mov	r3, r1
1001f46e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1001f472:	f001 fc01 	bl	10020c78 <__aeabi_dcmple>
1001f476:	2800      	cmp	r0, #0
1001f478:	f000 842c 	beq.w	1001fcd4 <_dtoa_r+0xd4c>
1001f47c:	f04f 0900 	mov.w	r9, #0
1001f480:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
1001f482:	464f      	mov	r7, r9
1001f484:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001f486:	43dd      	mvns	r5, r3
1001f488:	e225      	b.n	1001f8d6 <_dtoa_r+0x94e>
1001f48a:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
1001f48e:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
1001f492:	4622      	mov	r2, r4
1001f494:	462b      	mov	r3, r5
1001f496:	4640      	mov	r0, r8
1001f498:	4649      	mov	r1, r9
1001f49a:	f001 fa9b 	bl	100209d4 <__aeabi_ddiv>
1001f49e:	f001 fc1f 	bl	10020ce0 <__aeabi_d2iz>
1001f4a2:	4606      	mov	r6, r0
1001f4a4:	f001 f902 	bl	100206ac <__aeabi_i2d>
1001f4a8:	4622      	mov	r2, r4
1001f4aa:	462b      	mov	r3, r5
1001f4ac:	f001 f968 	bl	10020780 <__aeabi_dmul>
1001f4b0:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
1001f4b2:	460b      	mov	r3, r1
1001f4b4:	4602      	mov	r2, r0
1001f4b6:	4649      	mov	r1, r9
1001f4b8:	4640      	mov	r0, r8
1001f4ba:	f000 ffa9 	bl	10020410 <__aeabi_dsub>
1001f4be:	f106 0330 	add.w	r3, r6, #48	@ 0x30
1001f4c2:	f807 3b01 	strb.w	r3, [r7], #1
1001f4c6:	9b06      	ldr	r3, [sp, #24]
1001f4c8:	2b01      	cmp	r3, #1
1001f4ca:	f000 8312 	beq.w	1001faf2 <_dtoa_r+0xb6a>
1001f4ce:	2501      	movs	r5, #1
1001f4d0:	f8cd a018 	str.w	sl, [sp, #24]
1001f4d4:	4699      	mov	r9, r3
1001f4d6:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
1001f4da:	46a8      	mov	r8, r5
1001f4dc:	e02c      	b.n	1001f538 <_dtoa_r+0x5b0>
1001f4de:	bf00      	nop
1001f4e0:	1002a7a0 	.word	0x1002a7a0
1001f4e4:	1002a778 	.word	0x1002a778
1001f4e8:	3ff00000 	.word	0x3ff00000
1001f4ec:	401c0000 	.word	0x401c0000
1001f4f0:	3fe00000 	.word	0x3fe00000
1001f4f4:	40240000 	.word	0x40240000
1001f4f8:	40140000 	.word	0x40140000
1001f4fc:	4652      	mov	r2, sl
1001f4fe:	465b      	mov	r3, fp
1001f500:	4620      	mov	r0, r4
1001f502:	4629      	mov	r1, r5
1001f504:	f001 fa66 	bl	100209d4 <__aeabi_ddiv>
1001f508:	f001 fbea 	bl	10020ce0 <__aeabi_d2iz>
1001f50c:	4606      	mov	r6, r0
1001f50e:	f001 f8cd 	bl	100206ac <__aeabi_i2d>
1001f512:	4652      	mov	r2, sl
1001f514:	465b      	mov	r3, fp
1001f516:	f001 f933 	bl	10020780 <__aeabi_dmul>
1001f51a:	f108 0801 	add.w	r8, r8, #1
1001f51e:	460b      	mov	r3, r1
1001f520:	4602      	mov	r2, r0
1001f522:	4629      	mov	r1, r5
1001f524:	4620      	mov	r0, r4
1001f526:	f000 ff73 	bl	10020410 <__aeabi_dsub>
1001f52a:	f106 0330 	add.w	r3, r6, #48	@ 0x30
1001f52e:	45c8      	cmp	r8, r9
1001f530:	f807 3b01 	strb.w	r3, [r7], #1
1001f534:	f000 82db 	beq.w	1001faee <_dtoa_r+0xb66>
1001f538:	4bb9      	ldr	r3, [pc, #740]	@ (1001f820 <_dtoa_r+0x898>)
1001f53a:	2200      	movs	r2, #0
1001f53c:	f001 f920 	bl	10020780 <__aeabi_dmul>
1001f540:	2200      	movs	r2, #0
1001f542:	2300      	movs	r3, #0
1001f544:	4604      	mov	r4, r0
1001f546:	460d      	mov	r5, r1
1001f548:	f001 fb82 	bl	10020c50 <__aeabi_dcmpeq>
1001f54c:	2800      	cmp	r0, #0
1001f54e:	d0d5      	beq.n	1001f4fc <_dtoa_r+0x574>
1001f550:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001f552:	f8dd a018 	ldr.w	sl, [sp, #24]
1001f556:	3501      	adds	r5, #1
1001f558:	463e      	mov	r6, r7
1001f55a:	e0b0      	b.n	1001f6be <_dtoa_r+0x736>
1001f55c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1001f55e:	2a00      	cmp	r2, #0
1001f560:	f040 80d2 	bne.w	1001f708 <_dtoa_r+0x780>
1001f564:	2300      	movs	r3, #0
1001f566:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
1001f568:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
1001f56a:	930c      	str	r3, [sp, #48]	@ 0x30
1001f56c:	461f      	mov	r7, r3
1001f56e:	b156      	cbz	r6, 1001f586 <_dtoa_r+0x5fe>
1001f570:	2c00      	cmp	r4, #0
1001f572:	dd08      	ble.n	1001f586 <_dtoa_r+0x5fe>
1001f574:	42a6      	cmp	r6, r4
1001f576:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1001f578:	4633      	mov	r3, r6
1001f57a:	bfa8      	it	ge
1001f57c:	4623      	movge	r3, r4
1001f57e:	1ad2      	subs	r2, r2, r3
1001f580:	920b      	str	r2, [sp, #44]	@ 0x2c
1001f582:	1af6      	subs	r6, r6, r3
1001f584:	1ae4      	subs	r4, r4, r3
1001f586:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001f588:	b153      	cbz	r3, 1001f5a0 <_dtoa_r+0x618>
1001f58a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001f58c:	b113      	cbz	r3, 1001f594 <_dtoa_r+0x60c>
1001f58e:	2d00      	cmp	r5, #0
1001f590:	f040 82e8 	bne.w	1001fb64 <_dtoa_r+0xbdc>
1001f594:	4651      	mov	r1, sl
1001f596:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
1001f598:	9803      	ldr	r0, [sp, #12]
1001f59a:	f7ff f90d 	bl	1001e7b8 <__pow5mult>
1001f59e:	4682      	mov	sl, r0
1001f5a0:	9803      	ldr	r0, [sp, #12]
1001f5a2:	2101      	movs	r1, #1
1001f5a4:	f7ff f824 	bl	1001e5f0 <__i2b>
1001f5a8:	4681      	mov	r9, r0
1001f5aa:	f1bb 0f00 	cmp.w	fp, #0
1001f5ae:	f040 81b6 	bne.w	1001f91e <_dtoa_r+0x996>
1001f5b2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001f5b4:	2b01      	cmp	r3, #1
1001f5b6:	f340 81cc 	ble.w	1001f952 <_dtoa_r+0x9ca>
1001f5ba:	2001      	movs	r0, #1
1001f5bc:	4420      	add	r0, r4
1001f5be:	f010 001f 	ands.w	r0, r0, #31
1001f5c2:	f000 809a 	beq.w	1001f6fa <_dtoa_r+0x772>
1001f5c6:	f1c0 0320 	rsb	r3, r0, #32
1001f5ca:	2b04      	cmp	r3, #4
1001f5cc:	f340 81da 	ble.w	1001f984 <_dtoa_r+0x9fc>
1001f5d0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001f5d2:	f1c0 001c 	rsb	r0, r0, #28
1001f5d6:	4403      	add	r3, r0
1001f5d8:	930b      	str	r3, [sp, #44]	@ 0x2c
1001f5da:	4406      	add	r6, r0
1001f5dc:	4404      	add	r4, r0
1001f5de:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001f5e0:	2b00      	cmp	r3, #0
1001f5e2:	dd05      	ble.n	1001f5f0 <_dtoa_r+0x668>
1001f5e4:	4651      	mov	r1, sl
1001f5e6:	9803      	ldr	r0, [sp, #12]
1001f5e8:	461a      	mov	r2, r3
1001f5ea:	f7ff f93f 	bl	1001e86c <__lshift>
1001f5ee:	4682      	mov	sl, r0
1001f5f0:	2c00      	cmp	r4, #0
1001f5f2:	dd05      	ble.n	1001f600 <_dtoa_r+0x678>
1001f5f4:	4649      	mov	r1, r9
1001f5f6:	9803      	ldr	r0, [sp, #12]
1001f5f8:	4622      	mov	r2, r4
1001f5fa:	f7ff f937 	bl	1001e86c <__lshift>
1001f5fe:	4681      	mov	r9, r0
1001f600:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001f602:	2b00      	cmp	r3, #0
1001f604:	f040 8170 	bne.w	1001f8e8 <_dtoa_r+0x960>
1001f608:	9b06      	ldr	r3, [sp, #24]
1001f60a:	2b00      	cmp	r3, #0
1001f60c:	f340 8148 	ble.w	1001f8a0 <_dtoa_r+0x918>
1001f610:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001f612:	2b00      	cmp	r3, #0
1001f614:	f040 80a4 	bne.w	1001f760 <_dtoa_r+0x7d8>
1001f618:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001f61a:	3501      	adds	r5, #1
1001f61c:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
1001f620:	9c06      	ldr	r4, [sp, #24]
1001f622:	f8dd b00c 	ldr.w	fp, [sp, #12]
1001f626:	2601      	movs	r6, #1
1001f628:	e007      	b.n	1001f63a <_dtoa_r+0x6b2>
1001f62a:	4651      	mov	r1, sl
1001f62c:	2300      	movs	r3, #0
1001f62e:	220a      	movs	r2, #10
1001f630:	4658      	mov	r0, fp
1001f632:	f7fe fee3 	bl	1001e3fc <__multadd>
1001f636:	3601      	adds	r6, #1
1001f638:	4682      	mov	sl, r0
1001f63a:	4649      	mov	r1, r9
1001f63c:	4650      	mov	r0, sl
1001f63e:	f7ff fc0b 	bl	1001ee58 <quorem>
1001f642:	42a6      	cmp	r6, r4
1001f644:	f100 0330 	add.w	r3, r0, #48	@ 0x30
1001f648:	f808 3b01 	strb.w	r3, [r8], #1
1001f64c:	dbed      	blt.n	1001f62a <_dtoa_r+0x6a2>
1001f64e:	9a06      	ldr	r2, [sp, #24]
1001f650:	2a00      	cmp	r2, #0
1001f652:	bfc8      	it	gt
1001f654:	4616      	movgt	r6, r2
1001f656:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001f658:	bfd8      	it	le
1001f65a:	2601      	movle	r6, #1
1001f65c:	eb02 0b06 	add.w	fp, r2, r6
1001f660:	2400      	movs	r4, #0
1001f662:	4651      	mov	r1, sl
1001f664:	2201      	movs	r2, #1
1001f666:	9803      	ldr	r0, [sp, #12]
1001f668:	9304      	str	r3, [sp, #16]
1001f66a:	f7ff f8ff 	bl	1001e86c <__lshift>
1001f66e:	4649      	mov	r1, r9
1001f670:	4682      	mov	sl, r0
1001f672:	f7ff f973 	bl	1001e95c <__mcmp>
1001f676:	2800      	cmp	r0, #0
1001f678:	f340 81e3 	ble.w	1001fa42 <_dtoa_r+0xaba>
1001f67c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001f67e:	e002      	b.n	1001f686 <_dtoa_r+0x6fe>
1001f680:	455a      	cmp	r2, fp
1001f682:	f000 81e9 	beq.w	1001fa58 <_dtoa_r+0xad0>
1001f686:	465e      	mov	r6, fp
1001f688:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
1001f68c:	f816 3c01 	ldrb.w	r3, [r6, #-1]
1001f690:	2b39      	cmp	r3, #57	@ 0x39
1001f692:	d0f5      	beq.n	1001f680 <_dtoa_r+0x6f8>
1001f694:	3301      	adds	r3, #1
1001f696:	f88b 3000 	strb.w	r3, [fp]
1001f69a:	f8dd 800c 	ldr.w	r8, [sp, #12]
1001f69e:	4649      	mov	r1, r9
1001f6a0:	4640      	mov	r0, r8
1001f6a2:	f7fe fea1 	bl	1001e3e8 <_Bfree>
1001f6a6:	b157      	cbz	r7, 1001f6be <_dtoa_r+0x736>
1001f6a8:	b12c      	cbz	r4, 1001f6b6 <_dtoa_r+0x72e>
1001f6aa:	42bc      	cmp	r4, r7
1001f6ac:	d003      	beq.n	1001f6b6 <_dtoa_r+0x72e>
1001f6ae:	4621      	mov	r1, r4
1001f6b0:	4640      	mov	r0, r8
1001f6b2:	f7fe fe99 	bl	1001e3e8 <_Bfree>
1001f6b6:	9803      	ldr	r0, [sp, #12]
1001f6b8:	4639      	mov	r1, r7
1001f6ba:	f7fe fe95 	bl	1001e3e8 <_Bfree>
1001f6be:	9803      	ldr	r0, [sp, #12]
1001f6c0:	4651      	mov	r1, sl
1001f6c2:	f7fe fe91 	bl	1001e3e8 <_Bfree>
1001f6c6:	2300      	movs	r3, #0
1001f6c8:	7033      	strb	r3, [r6, #0]
1001f6ca:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
1001f6cc:	601d      	str	r5, [r3, #0]
1001f6ce:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
1001f6d0:	2b00      	cmp	r3, #0
1001f6d2:	f43f ac94 	beq.w	1001effe <_dtoa_r+0x76>
1001f6d6:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001f6d8:	601e      	str	r6, [r3, #0]
1001f6da:	b01f      	add	sp, #124	@ 0x7c
1001f6dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f6e0:	4658      	mov	r0, fp
1001f6e2:	f000 ffe3 	bl	100206ac <__aeabi_i2d>
1001f6e6:	4632      	mov	r2, r6
1001f6e8:	463b      	mov	r3, r7
1001f6ea:	f001 fab1 	bl	10020c50 <__aeabi_dcmpeq>
1001f6ee:	2800      	cmp	r0, #0
1001f6f0:	f47f acdc 	bne.w	1001f0ac <_dtoa_r+0x124>
1001f6f4:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
1001f6f8:	e4d8      	b.n	1001f0ac <_dtoa_r+0x124>
1001f6fa:	231c      	movs	r3, #28
1001f6fc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1001f6fe:	441a      	add	r2, r3
1001f700:	920b      	str	r2, [sp, #44]	@ 0x2c
1001f702:	441e      	add	r6, r3
1001f704:	441c      	add	r4, r3
1001f706:	e76a      	b.n	1001f5de <_dtoa_r+0x656>
1001f708:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
1001f70a:	2a01      	cmp	r2, #1
1001f70c:	f340 81a9 	ble.w	1001fa62 <_dtoa_r+0xada>
1001f710:	9a06      	ldr	r2, [sp, #24]
1001f712:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001f714:	1e55      	subs	r5, r2, #1
1001f716:	42ab      	cmp	r3, r5
1001f718:	f2c0 816b 	blt.w	1001f9f2 <_dtoa_r+0xa6a>
1001f71c:	2a00      	cmp	r2, #0
1001f71e:	eba3 0505 	sub.w	r5, r3, r5
1001f722:	f280 82dd 	bge.w	1001fce0 <_dtoa_r+0xd58>
1001f726:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001f728:	9a06      	ldr	r2, [sp, #24]
1001f72a:	1a9e      	subs	r6, r3, r2
1001f72c:	9803      	ldr	r0, [sp, #12]
1001f72e:	2101      	movs	r1, #1
1001f730:	f7fe ff5e 	bl	1001e5f0 <__i2b>
1001f734:	4607      	mov	r7, r0
1001f736:	e71a      	b.n	1001f56e <_dtoa_r+0x5e6>
1001f738:	f1c3 0320 	rsb	r3, r3, #32
1001f73c:	fa06 f003 	lsl.w	r0, r6, r3
1001f740:	e481      	b.n	1001f046 <_dtoa_r+0xbe>
1001f742:	2501      	movs	r5, #1
1001f744:	e4e4      	b.n	1001f110 <_dtoa_r+0x188>
1001f746:	4639      	mov	r1, r7
1001f748:	2300      	movs	r3, #0
1001f74a:	9803      	ldr	r0, [sp, #12]
1001f74c:	220a      	movs	r2, #10
1001f74e:	f7fe fe55 	bl	1001e3fc <__multadd>
1001f752:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001f754:	2b00      	cmp	r3, #0
1001f756:	4607      	mov	r7, r0
1001f758:	f340 82ef 	ble.w	1001fd3a <_dtoa_r+0xdb2>
1001f75c:	950e      	str	r5, [sp, #56]	@ 0x38
1001f75e:	9306      	str	r3, [sp, #24]
1001f760:	2e00      	cmp	r6, #0
1001f762:	f300 813f 	bgt.w	1001f9e4 <_dtoa_r+0xa5c>
1001f766:	f1bb 0f00 	cmp.w	fp, #0
1001f76a:	f040 81df 	bne.w	1001fb2c <_dtoa_r+0xba4>
1001f76e:	46b8      	mov	r8, r7
1001f770:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
1001f772:	9c06      	ldr	r4, [sp, #24]
1001f774:	1e73      	subs	r3, r6, #1
1001f776:	441c      	add	r4, r3
1001f778:	9b04      	ldr	r3, [sp, #16]
1001f77a:	940c      	str	r4, [sp, #48]	@ 0x30
1001f77c:	f003 0301 	and.w	r3, r3, #1
1001f780:	9c03      	ldr	r4, [sp, #12]
1001f782:	930f      	str	r3, [sp, #60]	@ 0x3c
1001f784:	4649      	mov	r1, r9
1001f786:	4650      	mov	r0, sl
1001f788:	f7ff fb66 	bl	1001ee58 <quorem>
1001f78c:	4639      	mov	r1, r7
1001f78e:	4683      	mov	fp, r0
1001f790:	4650      	mov	r0, sl
1001f792:	f7ff f8e3 	bl	1001e95c <__mcmp>
1001f796:	4642      	mov	r2, r8
1001f798:	4649      	mov	r1, r9
1001f79a:	4605      	mov	r5, r0
1001f79c:	4620      	mov	r0, r4
1001f79e:	f7ff f8fd 	bl	1001e99c <__mdiff>
1001f7a2:	68c2      	ldr	r2, [r0, #12]
1001f7a4:	4601      	mov	r1, r0
1001f7a6:	f10b 0330 	add.w	r3, fp, #48	@ 0x30
1001f7aa:	2a00      	cmp	r2, #0
1001f7ac:	d13a      	bne.n	1001f824 <_dtoa_r+0x89c>
1001f7ae:	9008      	str	r0, [sp, #32]
1001f7b0:	4650      	mov	r0, sl
1001f7b2:	930b      	str	r3, [sp, #44]	@ 0x2c
1001f7b4:	f7ff f8d2 	bl	1001e95c <__mcmp>
1001f7b8:	9908      	ldr	r1, [sp, #32]
1001f7ba:	9006      	str	r0, [sp, #24]
1001f7bc:	4620      	mov	r0, r4
1001f7be:	f7fe fe13 	bl	1001e3e8 <_Bfree>
1001f7c2:	9a06      	ldr	r2, [sp, #24]
1001f7c4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001f7c6:	2a00      	cmp	r2, #0
1001f7c8:	d15a      	bne.n	1001f880 <_dtoa_r+0x8f8>
1001f7ca:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
1001f7cc:	b91a      	cbnz	r2, 1001f7d6 <_dtoa_r+0x84e>
1001f7ce:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
1001f7d0:	2a00      	cmp	r2, #0
1001f7d2:	f000 829a 	beq.w	1001fd0a <_dtoa_r+0xd82>
1001f7d6:	2d00      	cmp	r5, #0
1001f7d8:	db45      	blt.n	1001f866 <_dtoa_r+0x8de>
1001f7da:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1001f7dc:	46b3      	mov	fp, r6
1001f7de:	42b2      	cmp	r2, r6
1001f7e0:	f80b 3b01 	strb.w	r3, [fp], #1
1001f7e4:	f000 81b9 	beq.w	1001fb5a <_dtoa_r+0xbd2>
1001f7e8:	4651      	mov	r1, sl
1001f7ea:	2300      	movs	r3, #0
1001f7ec:	220a      	movs	r2, #10
1001f7ee:	4620      	mov	r0, r4
1001f7f0:	f7fe fe04 	bl	1001e3fc <__multadd>
1001f7f4:	4547      	cmp	r7, r8
1001f7f6:	4682      	mov	sl, r0
1001f7f8:	4639      	mov	r1, r7
1001f7fa:	f04f 0300 	mov.w	r3, #0
1001f7fe:	f04f 020a 	mov.w	r2, #10
1001f802:	4620      	mov	r0, r4
1001f804:	d036      	beq.n	1001f874 <_dtoa_r+0x8ec>
1001f806:	f7fe fdf9 	bl	1001e3fc <__multadd>
1001f80a:	4641      	mov	r1, r8
1001f80c:	4607      	mov	r7, r0
1001f80e:	2300      	movs	r3, #0
1001f810:	220a      	movs	r2, #10
1001f812:	4620      	mov	r0, r4
1001f814:	f7fe fdf2 	bl	1001e3fc <__multadd>
1001f818:	465e      	mov	r6, fp
1001f81a:	4680      	mov	r8, r0
1001f81c:	e7b2      	b.n	1001f784 <_dtoa_r+0x7fc>
1001f81e:	bf00      	nop
1001f820:	40240000 	.word	0x40240000
1001f824:	9803      	ldr	r0, [sp, #12]
1001f826:	9306      	str	r3, [sp, #24]
1001f828:	f7fe fdde 	bl	1001e3e8 <_Bfree>
1001f82c:	2d00      	cmp	r5, #0
1001f82e:	9b06      	ldr	r3, [sp, #24]
1001f830:	db06      	blt.n	1001f840 <_dtoa_r+0x8b8>
1001f832:	9a04      	ldr	r2, [sp, #16]
1001f834:	9928      	ldr	r1, [sp, #160]	@ 0xa0
1001f836:	f002 0201 	and.w	r2, r2, #1
1001f83a:	430d      	orrs	r5, r1
1001f83c:	432a      	orrs	r2, r5
1001f83e:	d12a      	bne.n	1001f896 <_dtoa_r+0x90e>
1001f840:	4651      	mov	r1, sl
1001f842:	2201      	movs	r2, #1
1001f844:	9803      	ldr	r0, [sp, #12]
1001f846:	9304      	str	r3, [sp, #16]
1001f848:	f7ff f810 	bl	1001e86c <__lshift>
1001f84c:	4649      	mov	r1, r9
1001f84e:	4682      	mov	sl, r0
1001f850:	f7ff f884 	bl	1001e95c <__mcmp>
1001f854:	2800      	cmp	r0, #0
1001f856:	9b04      	ldr	r3, [sp, #16]
1001f858:	f340 80e8 	ble.w	1001fa2c <_dtoa_r+0xaa4>
1001f85c:	2b39      	cmp	r3, #57	@ 0x39
1001f85e:	f000 822f 	beq.w	1001fcc0 <_dtoa_r+0xd38>
1001f862:	f10b 0331 	add.w	r3, fp, #49	@ 0x31
1001f866:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001f868:	f806 3b01 	strb.w	r3, [r6], #1
1001f86c:	463c      	mov	r4, r7
1001f86e:	3501      	adds	r5, #1
1001f870:	4647      	mov	r7, r8
1001f872:	e712      	b.n	1001f69a <_dtoa_r+0x712>
1001f874:	f7fe fdc2 	bl	1001e3fc <__multadd>
1001f878:	465e      	mov	r6, fp
1001f87a:	4607      	mov	r7, r0
1001f87c:	4680      	mov	r8, r0
1001f87e:	e781      	b.n	1001f784 <_dtoa_r+0x7fc>
1001f880:	2d00      	cmp	r5, #0
1001f882:	f2c0 827d 	blt.w	1001fd80 <_dtoa_r+0xdf8>
1001f886:	9928      	ldr	r1, [sp, #160]	@ 0xa0
1001f888:	430d      	orrs	r5, r1
1001f88a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
1001f88c:	430d      	orrs	r5, r1
1001f88e:	f000 8277 	beq.w	1001fd80 <_dtoa_r+0xdf8>
1001f892:	2a00      	cmp	r2, #0
1001f894:	dda1      	ble.n	1001f7da <_dtoa_r+0x852>
1001f896:	2b39      	cmp	r3, #57	@ 0x39
1001f898:	f000 8212 	beq.w	1001fcc0 <_dtoa_r+0xd38>
1001f89c:	3301      	adds	r3, #1
1001f89e:	e7e2      	b.n	1001f866 <_dtoa_r+0x8de>
1001f8a0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001f8a2:	2b02      	cmp	r3, #2
1001f8a4:	f77f aeb4 	ble.w	1001f610 <_dtoa_r+0x688>
1001f8a8:	9b06      	ldr	r3, [sp, #24]
1001f8aa:	2b00      	cmp	r3, #0
1001f8ac:	f040 811d 	bne.w	1001faea <_dtoa_r+0xb62>
1001f8b0:	4649      	mov	r1, r9
1001f8b2:	2205      	movs	r2, #5
1001f8b4:	9803      	ldr	r0, [sp, #12]
1001f8b6:	f7fe fda1 	bl	1001e3fc <__multadd>
1001f8ba:	4601      	mov	r1, r0
1001f8bc:	4681      	mov	r9, r0
1001f8be:	4650      	mov	r0, sl
1001f8c0:	f7ff f84c 	bl	1001e95c <__mcmp>
1001f8c4:	2800      	cmp	r0, #0
1001f8c6:	f340 8110 	ble.w	1001faea <_dtoa_r+0xb62>
1001f8ca:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
1001f8cc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001f8ce:	2331      	movs	r3, #49	@ 0x31
1001f8d0:	f806 3b01 	strb.w	r3, [r6], #1
1001f8d4:	3501      	adds	r5, #1
1001f8d6:	9803      	ldr	r0, [sp, #12]
1001f8d8:	4649      	mov	r1, r9
1001f8da:	3501      	adds	r5, #1
1001f8dc:	f7fe fd84 	bl	1001e3e8 <_Bfree>
1001f8e0:	2f00      	cmp	r7, #0
1001f8e2:	f47f aee8 	bne.w	1001f6b6 <_dtoa_r+0x72e>
1001f8e6:	e6ea      	b.n	1001f6be <_dtoa_r+0x736>
1001f8e8:	4649      	mov	r1, r9
1001f8ea:	4650      	mov	r0, sl
1001f8ec:	f7ff f836 	bl	1001e95c <__mcmp>
1001f8f0:	2800      	cmp	r0, #0
1001f8f2:	f6bf ae89 	bge.w	1001f608 <_dtoa_r+0x680>
1001f8f6:	4651      	mov	r1, sl
1001f8f8:	2300      	movs	r3, #0
1001f8fa:	9803      	ldr	r0, [sp, #12]
1001f8fc:	220a      	movs	r2, #10
1001f8fe:	f7fe fd7d 	bl	1001e3fc <__multadd>
1001f902:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001f904:	1e5d      	subs	r5, r3, #1
1001f906:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001f908:	4682      	mov	sl, r0
1001f90a:	2b00      	cmp	r3, #0
1001f90c:	f47f af1b 	bne.w	1001f746 <_dtoa_r+0x7be>
1001f910:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001f912:	2b00      	cmp	r3, #0
1001f914:	f340 81ff 	ble.w	1001fd16 <_dtoa_r+0xd8e>
1001f918:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001f91a:	9306      	str	r3, [sp, #24]
1001f91c:	e67e      	b.n	1001f61c <_dtoa_r+0x694>
1001f91e:	4601      	mov	r1, r0
1001f920:	465a      	mov	r2, fp
1001f922:	9803      	ldr	r0, [sp, #12]
1001f924:	f7fe ff48 	bl	1001e7b8 <__pow5mult>
1001f928:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001f92a:	2b01      	cmp	r3, #1
1001f92c:	4681      	mov	r9, r0
1001f92e:	dd6c      	ble.n	1001fa0a <_dtoa_r+0xa82>
1001f930:	f04f 0b00 	mov.w	fp, #0
1001f934:	f8d9 3010 	ldr.w	r3, [r9, #16]
1001f938:	eb09 0383 	add.w	r3, r9, r3, lsl #2
1001f93c:	6918      	ldr	r0, [r3, #16]
1001f93e:	f7fe fe05 	bl	1001e54c <__hi0bits>
1001f942:	f1c0 0020 	rsb	r0, r0, #32
1001f946:	e639      	b.n	1001f5bc <_dtoa_r+0x634>
1001f948:	4b92      	ldr	r3, [pc, #584]	@ (1001fb94 <_dtoa_r+0xc0c>)
1001f94a:	930a      	str	r3, [sp, #40]	@ 0x28
1001f94c:	3303      	adds	r3, #3
1001f94e:	f7ff bbfa 	b.w	1001f146 <_dtoa_r+0x1be>
1001f952:	9b04      	ldr	r3, [sp, #16]
1001f954:	2b00      	cmp	r3, #0
1001f956:	f47f ae30 	bne.w	1001f5ba <_dtoa_r+0x632>
1001f95a:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
1001f95e:	f3c2 0313 	ubfx	r3, r2, #0, #20
1001f962:	2b00      	cmp	r3, #0
1001f964:	f47f ae29 	bne.w	1001f5ba <_dtoa_r+0x632>
1001f968:	4b8b      	ldr	r3, [pc, #556]	@ (1001fb98 <_dtoa_r+0xc10>)
1001f96a:	4013      	ands	r3, r2
1001f96c:	b123      	cbz	r3, 1001f978 <_dtoa_r+0x9f0>
1001f96e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001f970:	3301      	adds	r3, #1
1001f972:	930b      	str	r3, [sp, #44]	@ 0x2c
1001f974:	3401      	adds	r4, #1
1001f976:	2301      	movs	r3, #1
1001f978:	f1bb 0f00 	cmp.w	fp, #0
1001f97c:	f040 81ae 	bne.w	1001fcdc <_dtoa_r+0xd54>
1001f980:	469b      	mov	fp, r3
1001f982:	e61a      	b.n	1001f5ba <_dtoa_r+0x632>
1001f984:	f43f ae2b 	beq.w	1001f5de <_dtoa_r+0x656>
1001f988:	f1c0 033c 	rsb	r3, r0, #60	@ 0x3c
1001f98c:	e6b6      	b.n	1001f6fc <_dtoa_r+0x774>
1001f98e:	2301      	movs	r3, #1
1001f990:	930c      	str	r3, [sp, #48]	@ 0x30
1001f992:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001f994:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001f996:	4413      	add	r3, r2
1001f998:	9318      	str	r3, [sp, #96]	@ 0x60
1001f99a:	3301      	adds	r3, #1
1001f99c:	2b01      	cmp	r3, #1
1001f99e:	461e      	mov	r6, r3
1001f9a0:	9306      	str	r3, [sp, #24]
1001f9a2:	bfb8      	it	lt
1001f9a4:	2601      	movlt	r6, #1
1001f9a6:	2e17      	cmp	r6, #23
1001f9a8:	f340 81d5 	ble.w	1001fd56 <_dtoa_r+0xdce>
1001f9ac:	2201      	movs	r2, #1
1001f9ae:	2304      	movs	r3, #4
1001f9b0:	005b      	lsls	r3, r3, #1
1001f9b2:	f103 0014 	add.w	r0, r3, #20
1001f9b6:	42b0      	cmp	r0, r6
1001f9b8:	4611      	mov	r1, r2
1001f9ba:	f102 0201 	add.w	r2, r2, #1
1001f9be:	d9f7      	bls.n	1001f9b0 <_dtoa_r+0xa28>
1001f9c0:	9b03      	ldr	r3, [sp, #12]
1001f9c2:	63d9      	str	r1, [r3, #60]	@ 0x3c
1001f9c4:	e411      	b.n	1001f1ea <_dtoa_r+0x262>
1001f9c6:	2301      	movs	r3, #1
1001f9c8:	930c      	str	r3, [sp, #48]	@ 0x30
1001f9ca:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001f9cc:	2b00      	cmp	r3, #0
1001f9ce:	dd33      	ble.n	1001fa38 <_dtoa_r+0xab0>
1001f9d0:	9318      	str	r3, [sp, #96]	@ 0x60
1001f9d2:	9306      	str	r3, [sp, #24]
1001f9d4:	461e      	mov	r6, r3
1001f9d6:	e7e6      	b.n	1001f9a6 <_dtoa_r+0xa1e>
1001f9d8:	2300      	movs	r3, #0
1001f9da:	930c      	str	r3, [sp, #48]	@ 0x30
1001f9dc:	e7d9      	b.n	1001f992 <_dtoa_r+0xa0a>
1001f9de:	2300      	movs	r3, #0
1001f9e0:	930c      	str	r3, [sp, #48]	@ 0x30
1001f9e2:	e7f2      	b.n	1001f9ca <_dtoa_r+0xa42>
1001f9e4:	4639      	mov	r1, r7
1001f9e6:	9803      	ldr	r0, [sp, #12]
1001f9e8:	4632      	mov	r2, r6
1001f9ea:	f7fe ff3f 	bl	1001e86c <__lshift>
1001f9ee:	4607      	mov	r7, r0
1001f9f0:	e6b9      	b.n	1001f766 <_dtoa_r+0x7de>
1001f9f2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001f9f4:	9a06      	ldr	r2, [sp, #24]
1001f9f6:	950f      	str	r5, [sp, #60]	@ 0x3c
1001f9f8:	1aeb      	subs	r3, r5, r3
1001f9fa:	449b      	add	fp, r3
1001f9fc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001f9fe:	461e      	mov	r6, r3
1001fa00:	4413      	add	r3, r2
1001fa02:	4414      	add	r4, r2
1001fa04:	930b      	str	r3, [sp, #44]	@ 0x2c
1001fa06:	2500      	movs	r5, #0
1001fa08:	e690      	b.n	1001f72c <_dtoa_r+0x7a4>
1001fa0a:	9b04      	ldr	r3, [sp, #16]
1001fa0c:	2b00      	cmp	r3, #0
1001fa0e:	d18f      	bne.n	1001f930 <_dtoa_r+0x9a8>
1001fa10:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001fa14:	f3c1 0313 	ubfx	r3, r1, #0, #20
1001fa18:	460a      	mov	r2, r1
1001fa1a:	2b00      	cmp	r3, #0
1001fa1c:	d188      	bne.n	1001f930 <_dtoa_r+0x9a8>
1001fa1e:	e7a3      	b.n	1001f968 <_dtoa_r+0x9e0>
1001fa20:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
1001fa24:	2702      	movs	r7, #2
1001fa26:	e9cd 2312 	strd	r2, r3, [sp, #72]	@ 0x48
1001fa2a:	e40b      	b.n	1001f244 <_dtoa_r+0x2bc>
1001fa2c:	f47f af1b 	bne.w	1001f866 <_dtoa_r+0x8de>
1001fa30:	07da      	lsls	r2, r3, #31
1001fa32:	f57f af18 	bpl.w	1001f866 <_dtoa_r+0x8de>
1001fa36:	e711      	b.n	1001f85c <_dtoa_r+0x8d4>
1001fa38:	2301      	movs	r3, #1
1001fa3a:	9329      	str	r3, [sp, #164]	@ 0xa4
1001fa3c:	9306      	str	r3, [sp, #24]
1001fa3e:	f7ff bbcf 	b.w	1001f1e0 <_dtoa_r+0x258>
1001fa42:	d103      	bne.n	1001fa4c <_dtoa_r+0xac4>
1001fa44:	9b04      	ldr	r3, [sp, #16]
1001fa46:	07db      	lsls	r3, r3, #31
1001fa48:	f53f ae18 	bmi.w	1001f67c <_dtoa_r+0x6f4>
1001fa4c:	465e      	mov	r6, fp
1001fa4e:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
1001fa52:	2b30      	cmp	r3, #48	@ 0x30
1001fa54:	d0fa      	beq.n	1001fa4c <_dtoa_r+0xac4>
1001fa56:	e620      	b.n	1001f69a <_dtoa_r+0x712>
1001fa58:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001fa5a:	2331      	movs	r3, #49	@ 0x31
1001fa5c:	3501      	adds	r5, #1
1001fa5e:	7013      	strb	r3, [r2, #0]
1001fa60:	e61b      	b.n	1001f69a <_dtoa_r+0x712>
1001fa62:	9a11      	ldr	r2, [sp, #68]	@ 0x44
1001fa64:	2a00      	cmp	r2, #0
1001fa66:	f000 80f9 	beq.w	1001fc5c <_dtoa_r+0xcd4>
1001fa6a:	f203 4333 	addw	r3, r3, #1075	@ 0x433
1001fa6e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1001fa70:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
1001fa72:	4616      	mov	r6, r2
1001fa74:	441a      	add	r2, r3
1001fa76:	441c      	add	r4, r3
1001fa78:	920b      	str	r2, [sp, #44]	@ 0x2c
1001fa7a:	e657      	b.n	1001f72c <_dtoa_r+0x7a4>
1001fa7c:	f1c8 0301 	rsb	r3, r8, #1
1001fa80:	4604      	mov	r4, r0
1001fa82:	930b      	str	r3, [sp, #44]	@ 0x2c
1001fa84:	9010      	str	r0, [sp, #64]	@ 0x40
1001fa86:	f7ff bb9b 	b.w	1001f1c0 <_dtoa_r+0x238>
1001fa8a:	f000 80eb 	beq.w	1001fc64 <_dtoa_r+0xcdc>
1001fa8e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001fa90:	4d42      	ldr	r5, [pc, #264]	@ (1001fb9c <_dtoa_r+0xc14>)
1001fa92:	425e      	negs	r6, r3
1001fa94:	f006 030f 	and.w	r3, r6, #15
1001fa98:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
1001fa9c:	e9d3 2300 	ldrd	r2, r3, [r3]
1001faa0:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1001faa4:	f000 fe6c 	bl	10020780 <__aeabi_dmul>
1001faa8:	1135      	asrs	r5, r6, #4
1001faaa:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
1001faae:	f000 814d 	beq.w	1001fd4c <_dtoa_r+0xdc4>
1001fab2:	4e3b      	ldr	r6, [pc, #236]	@ (1001fba0 <_dtoa_r+0xc18>)
1001fab4:	2300      	movs	r3, #0
1001fab6:	2702      	movs	r7, #2
1001fab8:	4680      	mov	r8, r0
1001faba:	4689      	mov	r9, r1
1001fabc:	07e8      	lsls	r0, r5, #31
1001fabe:	d509      	bpl.n	1001fad4 <_dtoa_r+0xb4c>
1001fac0:	e9d6 2300 	ldrd	r2, r3, [r6]
1001fac4:	4640      	mov	r0, r8
1001fac6:	4649      	mov	r1, r9
1001fac8:	f000 fe5a 	bl	10020780 <__aeabi_dmul>
1001facc:	3701      	adds	r7, #1
1001face:	4680      	mov	r8, r0
1001fad0:	4689      	mov	r9, r1
1001fad2:	2301      	movs	r3, #1
1001fad4:	106d      	asrs	r5, r5, #1
1001fad6:	f106 0608 	add.w	r6, r6, #8
1001fada:	d1ef      	bne.n	1001fabc <_dtoa_r+0xb34>
1001fadc:	2b00      	cmp	r3, #0
1001fade:	f47f abca 	bne.w	1001f276 <_dtoa_r+0x2ee>
1001fae2:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	@ 0x48
1001fae6:	f7ff bbc6 	b.w	1001f276 <_dtoa_r+0x2ee>
1001faea:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
1001faec:	e4ca      	b.n	1001f484 <_dtoa_r+0x4fc>
1001faee:	f8dd a018 	ldr.w	sl, [sp, #24]
1001faf2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001faf4:	4602      	mov	r2, r0
1001faf6:	460b      	mov	r3, r1
1001faf8:	f000 fc8c 	bl	10020414 <__adddf3>
1001fafc:	4602      	mov	r2, r0
1001fafe:	460b      	mov	r3, r1
1001fb00:	e9cd 2306 	strd	r2, r3, [sp, #24]
1001fb04:	3501      	adds	r5, #1
1001fb06:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001fb0a:	46a8      	mov	r8, r5
1001fb0c:	f001 f8c8 	bl	10020ca0 <__aeabi_dcmpgt>
1001fb10:	b940      	cbnz	r0, 1001fb24 <_dtoa_r+0xb9c>
1001fb12:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001fb16:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1001fb1a:	f001 f899 	bl	10020c50 <__aeabi_dcmpeq>
1001fb1e:	b118      	cbz	r0, 1001fb28 <_dtoa_r+0xba0>
1001fb20:	07f1      	lsls	r1, r6, #31
1001fb22:	d501      	bpl.n	1001fb28 <_dtoa_r+0xba0>
1001fb24:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001fb26:	e44a      	b.n	1001f3be <_dtoa_r+0x436>
1001fb28:	463e      	mov	r6, r7
1001fb2a:	e5c8      	b.n	1001f6be <_dtoa_r+0x736>
1001fb2c:	6879      	ldr	r1, [r7, #4]
1001fb2e:	9803      	ldr	r0, [sp, #12]
1001fb30:	f7fe fc34 	bl	1001e39c <_Balloc>
1001fb34:	4605      	mov	r5, r0
1001fb36:	2800      	cmp	r0, #0
1001fb38:	f000 8126 	beq.w	1001fd88 <_dtoa_r+0xe00>
1001fb3c:	693b      	ldr	r3, [r7, #16]
1001fb3e:	3302      	adds	r3, #2
1001fb40:	009a      	lsls	r2, r3, #2
1001fb42:	f107 010c 	add.w	r1, r7, #12
1001fb46:	300c      	adds	r0, #12
1001fb48:	f7f6 fe62 	bl	10016810 <memcpy>
1001fb4c:	9803      	ldr	r0, [sp, #12]
1001fb4e:	4629      	mov	r1, r5
1001fb50:	2201      	movs	r2, #1
1001fb52:	f7fe fe8b 	bl	1001e86c <__lshift>
1001fb56:	4680      	mov	r8, r0
1001fb58:	e60a      	b.n	1001f770 <_dtoa_r+0x7e8>
1001fb5a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001fb5c:	463c      	mov	r4, r7
1001fb5e:	3501      	adds	r5, #1
1001fb60:	4647      	mov	r7, r8
1001fb62:	e57e      	b.n	1001f662 <_dtoa_r+0x6da>
1001fb64:	f8dd 800c 	ldr.w	r8, [sp, #12]
1001fb68:	4639      	mov	r1, r7
1001fb6a:	462a      	mov	r2, r5
1001fb6c:	4640      	mov	r0, r8
1001fb6e:	f7fe fe23 	bl	1001e7b8 <__pow5mult>
1001fb72:	4652      	mov	r2, sl
1001fb74:	4601      	mov	r1, r0
1001fb76:	4607      	mov	r7, r0
1001fb78:	4640      	mov	r0, r8
1001fb7a:	f7fe fd67 	bl	1001e64c <__multiply>
1001fb7e:	4651      	mov	r1, sl
1001fb80:	4682      	mov	sl, r0
1001fb82:	4640      	mov	r0, r8
1001fb84:	f7fe fc30 	bl	1001e3e8 <_Bfree>
1001fb88:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001fb8a:	1b5b      	subs	r3, r3, r5
1001fb8c:	930f      	str	r3, [sp, #60]	@ 0x3c
1001fb8e:	f43f ad07 	beq.w	1001f5a0 <_dtoa_r+0x618>
1001fb92:	e4ff      	b.n	1001f594 <_dtoa_r+0x60c>
1001fb94:	1002a874 	.word	0x1002a874
1001fb98:	7ff00000 	.word	0x7ff00000
1001fb9c:	1002a7a0 	.word	0x1002a7a0
1001fba0:	1002a778 	.word	0x1002a778
1001fba4:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	@ 0x50
1001fba8:	f000 fdea 	bl	10020780 <__aeabi_dmul>
1001fbac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001fbae:	701f      	strb	r7, [r3, #0]
1001fbb0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001fbb2:	2b01      	cmp	r3, #1
1001fbb4:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
1001fbb8:	f000 80c6 	beq.w	1001fd48 <_dtoa_r+0xdc0>
1001fbbc:	9f12      	ldr	r7, [sp, #72]	@ 0x48
1001fbbe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001fbc0:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
1001fbc4:	441f      	add	r7, r3
1001fbc6:	4b7c      	ldr	r3, [pc, #496]	@ (1001fdb8 <_dtoa_r+0xe30>)
1001fbc8:	2200      	movs	r2, #0
1001fbca:	4640      	mov	r0, r8
1001fbcc:	4649      	mov	r1, r9
1001fbce:	f000 fdd7 	bl	10020780 <__aeabi_dmul>
1001fbd2:	4689      	mov	r9, r1
1001fbd4:	4680      	mov	r8, r0
1001fbd6:	f001 f883 	bl	10020ce0 <__aeabi_d2iz>
1001fbda:	4683      	mov	fp, r0
1001fbdc:	f000 fd66 	bl	100206ac <__aeabi_i2d>
1001fbe0:	f10b 0b30 	add.w	fp, fp, #48	@ 0x30
1001fbe4:	4602      	mov	r2, r0
1001fbe6:	460b      	mov	r3, r1
1001fbe8:	4640      	mov	r0, r8
1001fbea:	4649      	mov	r1, r9
1001fbec:	f000 fc10 	bl	10020410 <__aeabi_dsub>
1001fbf0:	f806 bb01 	strb.w	fp, [r6], #1
1001fbf4:	42b7      	cmp	r7, r6
1001fbf6:	4680      	mov	r8, r0
1001fbf8:	4689      	mov	r9, r1
1001fbfa:	d1e4      	bne.n	1001fbc6 <_dtoa_r+0xc3e>
1001fbfc:	f8dd b044 	ldr.w	fp, [sp, #68]	@ 0x44
1001fc00:	4b6e      	ldr	r3, [pc, #440]	@ (1001fdbc <_dtoa_r+0xe34>)
1001fc02:	2200      	movs	r2, #0
1001fc04:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
1001fc08:	f000 fc04 	bl	10020414 <__adddf3>
1001fc0c:	4602      	mov	r2, r0
1001fc0e:	460b      	mov	r3, r1
1001fc10:	4640      	mov	r0, r8
1001fc12:	4649      	mov	r1, r9
1001fc14:	f001 f844 	bl	10020ca0 <__aeabi_dcmpgt>
1001fc18:	2800      	cmp	r0, #0
1001fc1a:	d167      	bne.n	1001fcec <_dtoa_r+0xd64>
1001fc1c:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
1001fc20:	4966      	ldr	r1, [pc, #408]	@ (1001fdbc <_dtoa_r+0xe34>)
1001fc22:	2000      	movs	r0, #0
1001fc24:	f000 fbf4 	bl	10020410 <__aeabi_dsub>
1001fc28:	4602      	mov	r2, r0
1001fc2a:	460b      	mov	r3, r1
1001fc2c:	4640      	mov	r0, r8
1001fc2e:	4649      	mov	r1, r9
1001fc30:	f001 f818 	bl	10020c64 <__aeabi_dcmplt>
1001fc34:	b948      	cbnz	r0, 1001fc4a <_dtoa_r+0xcc2>
1001fc36:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001fc38:	2b00      	cmp	r3, #0
1001fc3a:	f6ff ac93 	blt.w	1001f564 <_dtoa_r+0x5dc>
1001fc3e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001fc40:	2b0e      	cmp	r3, #14
1001fc42:	f73f ac8f 	bgt.w	1001f564 <_dtoa_r+0x5dc>
1001fc46:	f7ff bbfc 	b.w	1001f442 <_dtoa_r+0x4ba>
1001fc4a:	463e      	mov	r6, r7
1001fc4c:	3f01      	subs	r7, #1
1001fc4e:	f816 3c01 	ldrb.w	r3, [r6, #-1]
1001fc52:	2b30      	cmp	r3, #48	@ 0x30
1001fc54:	d0f9      	beq.n	1001fc4a <_dtoa_r+0xcc2>
1001fc56:	9d19      	ldr	r5, [sp, #100]	@ 0x64
1001fc58:	3501      	adds	r5, #1
1001fc5a:	e530      	b.n	1001f6be <_dtoa_r+0x736>
1001fc5c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001fc5e:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
1001fc62:	e704      	b.n	1001fa6e <_dtoa_r+0xae6>
1001fc64:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
1001fc68:	2702      	movs	r7, #2
1001fc6a:	f7ff bb04 	b.w	1001f276 <_dtoa_r+0x2ee>
1001fc6e:	9b06      	ldr	r3, [sp, #24]
1001fc70:	2b00      	cmp	r3, #0
1001fc72:	f43f abb8 	beq.w	1001f3e6 <_dtoa_r+0x45e>
1001fc76:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001fc78:	2b00      	cmp	r3, #0
1001fc7a:	f77f abd9 	ble.w	1001f430 <_dtoa_r+0x4a8>
1001fc7e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001fc80:	9312      	str	r3, [sp, #72]	@ 0x48
1001fc82:	3a01      	subs	r2, #1
1001fc84:	4b4c      	ldr	r3, [pc, #304]	@ (1001fdb8 <_dtoa_r+0xe30>)
1001fc86:	9219      	str	r2, [sp, #100]	@ 0x64
1001fc88:	4640      	mov	r0, r8
1001fc8a:	2200      	movs	r2, #0
1001fc8c:	4649      	mov	r1, r9
1001fc8e:	f000 fd77 	bl	10020780 <__aeabi_dmul>
1001fc92:	4680      	mov	r8, r0
1001fc94:	4689      	mov	r9, r1
1001fc96:	1c78      	adds	r0, r7, #1
1001fc98:	f000 fd08 	bl	100206ac <__aeabi_i2d>
1001fc9c:	4642      	mov	r2, r8
1001fc9e:	464b      	mov	r3, r9
1001fca0:	f000 fd6e 	bl	10020780 <__aeabi_dmul>
1001fca4:	4b46      	ldr	r3, [pc, #280]	@ (1001fdc0 <_dtoa_r+0xe38>)
1001fca6:	2200      	movs	r2, #0
1001fca8:	f000 fbb4 	bl	10020414 <__adddf3>
1001fcac:	4606      	mov	r6, r0
1001fcae:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
1001fcb2:	f7ff bb01 	b.w	1001f2b8 <_dtoa_r+0x330>
1001fcb6:	f108 0801 	add.w	r8, r8, #1
1001fcba:	2331      	movs	r3, #49	@ 0x31
1001fcbc:	f7ff bb86 	b.w	1001f3cc <_dtoa_r+0x444>
1001fcc0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001fcc2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001fcc4:	46b3      	mov	fp, r6
1001fcc6:	2339      	movs	r3, #57	@ 0x39
1001fcc8:	463c      	mov	r4, r7
1001fcca:	f80b 3b01 	strb.w	r3, [fp], #1
1001fcce:	3501      	adds	r5, #1
1001fcd0:	4647      	mov	r7, r8
1001fcd2:	e4d8      	b.n	1001f686 <_dtoa_r+0x6fe>
1001fcd4:	f04f 0900 	mov.w	r9, #0
1001fcd8:	464f      	mov	r7, r9
1001fcda:	e5f6      	b.n	1001f8ca <_dtoa_r+0x942>
1001fcdc:	469b      	mov	fp, r3
1001fcde:	e629      	b.n	1001f934 <_dtoa_r+0x9ac>
1001fce0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001fce2:	461e      	mov	r6, r3
1001fce4:	4413      	add	r3, r2
1001fce6:	4414      	add	r4, r2
1001fce8:	930b      	str	r3, [sp, #44]	@ 0x2c
1001fcea:	e51f      	b.n	1001f72c <_dtoa_r+0x7a4>
1001fcec:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001fcee:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001fcf0:	f103 0801 	add.w	r8, r3, #1
1001fcf4:	f7ff bb63 	b.w	1001f3be <_dtoa_r+0x436>
1001fcf8:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
1001fcfc:	e7ab      	b.n	1001fc56 <_dtoa_r+0xcce>
1001fcfe:	e9dd b41a 	ldrd	fp, r4, [sp, #104]	@ 0x68
1001fd02:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
1001fd06:	f7ff bb93 	b.w	1001f430 <_dtoa_r+0x4a8>
1001fd0a:	2b39      	cmp	r3, #57	@ 0x39
1001fd0c:	d0d8      	beq.n	1001fcc0 <_dtoa_r+0xd38>
1001fd0e:	2d00      	cmp	r5, #0
1001fd10:	f73f ada7 	bgt.w	1001f862 <_dtoa_r+0x8da>
1001fd14:	e5a7      	b.n	1001f866 <_dtoa_r+0x8de>
1001fd16:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001fd18:	2b02      	cmp	r3, #2
1001fd1a:	dc0a      	bgt.n	1001fd32 <_dtoa_r+0xdaa>
1001fd1c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001fd1e:	9306      	str	r3, [sp, #24]
1001fd20:	4649      	mov	r1, r9
1001fd22:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001fd24:	f7ff f898 	bl	1001ee58 <quorem>
1001fd28:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001fd2a:	f100 0330 	add.w	r3, r0, #48	@ 0x30
1001fd2e:	7013      	strb	r3, [r2, #0]
1001fd30:	e48d      	b.n	1001f64e <_dtoa_r+0x6c6>
1001fd32:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001fd34:	9306      	str	r3, [sp, #24]
1001fd36:	950e      	str	r5, [sp, #56]	@ 0x38
1001fd38:	e5b6      	b.n	1001f8a8 <_dtoa_r+0x920>
1001fd3a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001fd3c:	2b02      	cmp	r3, #2
1001fd3e:	dcf8      	bgt.n	1001fd32 <_dtoa_r+0xdaa>
1001fd40:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001fd42:	950e      	str	r5, [sp, #56]	@ 0x38
1001fd44:	9306      	str	r3, [sp, #24]
1001fd46:	e50b      	b.n	1001f760 <_dtoa_r+0x7d8>
1001fd48:	4637      	mov	r7, r6
1001fd4a:	e759      	b.n	1001fc00 <_dtoa_r+0xc78>
1001fd4c:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	@ 0x48
1001fd50:	2702      	movs	r7, #2
1001fd52:	f7ff ba90 	b.w	1001f276 <_dtoa_r+0x2ee>
1001fd56:	9b03      	ldr	r3, [sp, #12]
1001fd58:	2100      	movs	r1, #0
1001fd5a:	63d9      	str	r1, [r3, #60]	@ 0x3c
1001fd5c:	f7ff ba45 	b.w	1001f1ea <_dtoa_r+0x262>
1001fd60:	9b03      	ldr	r3, [sp, #12]
1001fd62:	2500      	movs	r5, #0
1001fd64:	63dd      	str	r5, [r3, #60]	@ 0x3c
1001fd66:	4629      	mov	r1, r5
1001fd68:	4618      	mov	r0, r3
1001fd6a:	f7fe fb17 	bl	1001e39c <_Balloc>
1001fd6e:	900a      	str	r0, [sp, #40]	@ 0x28
1001fd70:	b9a8      	cbnz	r0, 1001fd9e <_dtoa_r+0xe16>
1001fd72:	4b14      	ldr	r3, [pc, #80]	@ (1001fdc4 <_dtoa_r+0xe3c>)
1001fd74:	4814      	ldr	r0, [pc, #80]	@ (1001fdc8 <_dtoa_r+0xe40>)
1001fd76:	2200      	movs	r2, #0
1001fd78:	f240 11af 	movw	r1, #431	@ 0x1af
1001fd7c:	f7fe f9be 	bl	1001e0fc <__assert_func>
1001fd80:	2a00      	cmp	r2, #0
1001fd82:	f77f ad70 	ble.w	1001f866 <_dtoa_r+0x8de>
1001fd86:	e55b      	b.n	1001f840 <_dtoa_r+0x8b8>
1001fd88:	4b0e      	ldr	r3, [pc, #56]	@ (1001fdc4 <_dtoa_r+0xe3c>)
1001fd8a:	480f      	ldr	r0, [pc, #60]	@ (1001fdc8 <_dtoa_r+0xe40>)
1001fd8c:	462a      	mov	r2, r5
1001fd8e:	f240 21ef 	movw	r1, #751	@ 0x2ef
1001fd92:	f7fe f9b3 	bl	1001e0fc <__assert_func>
1001fd96:	4b0d      	ldr	r3, [pc, #52]	@ (1001fdcc <_dtoa_r+0xe44>)
1001fd98:	930a      	str	r3, [sp, #40]	@ 0x28
1001fd9a:	f7ff b930 	b.w	1001effe <_dtoa_r+0x76>
1001fd9e:	9b03      	ldr	r3, [sp, #12]
1001fda0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001fda2:	639a      	str	r2, [r3, #56]	@ 0x38
1001fda4:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001fda8:	2201      	movs	r2, #1
1001fdaa:	9529      	str	r5, [sp, #164]	@ 0xa4
1001fdac:	9318      	str	r3, [sp, #96]	@ 0x60
1001fdae:	920c      	str	r2, [sp, #48]	@ 0x30
1001fdb0:	9306      	str	r3, [sp, #24]
1001fdb2:	f7ff bb3d 	b.w	1001f430 <_dtoa_r+0x4a8>
1001fdb6:	bf00      	nop
1001fdb8:	40240000 	.word	0x40240000
1001fdbc:	3fe00000 	.word	0x3fe00000
1001fdc0:	401c0000 	.word	0x401c0000
1001fdc4:	100239f0 	.word	0x100239f0
1001fdc8:	1002a878 	.word	0x1002a878
1001fdcc:	1002a868 	.word	0x1002a868

1001fdd0 <memchr>:
1001fdd0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
1001fdd4:	2a10      	cmp	r2, #16
1001fdd6:	db2b      	blt.n	1001fe30 <memchr+0x60>
1001fdd8:	f010 0f07 	tst.w	r0, #7
1001fddc:	d008      	beq.n	1001fdf0 <memchr+0x20>
1001fdde:	f810 3b01 	ldrb.w	r3, [r0], #1
1001fde2:	3a01      	subs	r2, #1
1001fde4:	428b      	cmp	r3, r1
1001fde6:	d02d      	beq.n	1001fe44 <memchr+0x74>
1001fde8:	f010 0f07 	tst.w	r0, #7
1001fdec:	b342      	cbz	r2, 1001fe40 <memchr+0x70>
1001fdee:	d1f6      	bne.n	1001fdde <memchr+0xe>
1001fdf0:	b4f0      	push	{r4, r5, r6, r7}
1001fdf2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
1001fdf6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
1001fdfa:	f022 0407 	bic.w	r4, r2, #7
1001fdfe:	f07f 0700 	mvns.w	r7, #0
1001fe02:	2300      	movs	r3, #0
1001fe04:	e8f0 5602 	ldrd	r5, r6, [r0], #8
1001fe08:	3c08      	subs	r4, #8
1001fe0a:	ea85 0501 	eor.w	r5, r5, r1
1001fe0e:	ea86 0601 	eor.w	r6, r6, r1
1001fe12:	fa85 f547 	uadd8	r5, r5, r7
1001fe16:	faa3 f587 	sel	r5, r3, r7
1001fe1a:	fa86 f647 	uadd8	r6, r6, r7
1001fe1e:	faa5 f687 	sel	r6, r5, r7
1001fe22:	b98e      	cbnz	r6, 1001fe48 <memchr+0x78>
1001fe24:	d1ee      	bne.n	1001fe04 <memchr+0x34>
1001fe26:	bcf0      	pop	{r4, r5, r6, r7}
1001fe28:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
1001fe2c:	f002 0207 	and.w	r2, r2, #7
1001fe30:	b132      	cbz	r2, 1001fe40 <memchr+0x70>
1001fe32:	f810 3b01 	ldrb.w	r3, [r0], #1
1001fe36:	3a01      	subs	r2, #1
1001fe38:	ea83 0301 	eor.w	r3, r3, r1
1001fe3c:	b113      	cbz	r3, 1001fe44 <memchr+0x74>
1001fe3e:	d1f8      	bne.n	1001fe32 <memchr+0x62>
1001fe40:	2000      	movs	r0, #0
1001fe42:	4770      	bx	lr
1001fe44:	3801      	subs	r0, #1
1001fe46:	4770      	bx	lr
1001fe48:	2d00      	cmp	r5, #0
1001fe4a:	bf06      	itte	eq
1001fe4c:	4635      	moveq	r5, r6
1001fe4e:	3803      	subeq	r0, #3
1001fe50:	3807      	subne	r0, #7
1001fe52:	f015 0f01 	tst.w	r5, #1
1001fe56:	d107      	bne.n	1001fe68 <memchr+0x98>
1001fe58:	3001      	adds	r0, #1
1001fe5a:	f415 7f80 	tst.w	r5, #256	@ 0x100
1001fe5e:	bf02      	ittt	eq
1001fe60:	3001      	addeq	r0, #1
1001fe62:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
1001fe66:	3001      	addeq	r0, #1
1001fe68:	bcf0      	pop	{r4, r5, r6, r7}
1001fe6a:	3801      	subs	r0, #1
1001fe6c:	4770      	bx	lr
1001fe6e:	bf00      	nop

1001fe70 <nan>:
1001fe70:	4901      	ldr	r1, [pc, #4]	@ (1001fe78 <nan+0x8>)
1001fe72:	2000      	movs	r0, #0
1001fe74:	4770      	bx	lr
1001fe76:	bf00      	nop
1001fe78:	7ff80000 	.word	0x7ff80000

1001fe7c <frexp>:
1001fe7c:	f8df c060 	ldr.w	ip, [pc, #96]	@ 1001fee0 <frexp+0x64>
1001fe80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001fe82:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
1001fe86:	2700      	movs	r7, #0
1001fe88:	4563      	cmp	r3, ip
1001fe8a:	4604      	mov	r4, r0
1001fe8c:	460d      	mov	r5, r1
1001fe8e:	4616      	mov	r6, r2
1001fe90:	6017      	str	r7, [r2, #0]
1001fe92:	d822      	bhi.n	1001feda <frexp+0x5e>
1001fe94:	4684      	mov	ip, r0
1001fe96:	ea53 0c0c 	orrs.w	ip, r3, ip
1001fe9a:	d01e      	beq.n	1001feda <frexp+0x5e>
1001fe9c:	f8df c044 	ldr.w	ip, [pc, #68]	@ 1001fee4 <frexp+0x68>
1001fea0:	ea01 0c0c 	and.w	ip, r1, ip
1001fea4:	460a      	mov	r2, r1
1001fea6:	f1bc 0f00 	cmp.w	ip, #0
1001feaa:	d109      	bne.n	1001fec0 <frexp+0x44>
1001feac:	4b0e      	ldr	r3, [pc, #56]	@ (1001fee8 <frexp+0x6c>)
1001feae:	2200      	movs	r2, #0
1001feb0:	f000 fc66 	bl	10020780 <__aeabi_dmul>
1001feb4:	f06f 0735 	mvn.w	r7, #53	@ 0x35
1001feb8:	4604      	mov	r4, r0
1001feba:	460a      	mov	r2, r1
1001febc:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
1001fec0:	f022 42ff 	bic.w	r2, r2, #2139095040	@ 0x7f800000
1001fec4:	151b      	asrs	r3, r3, #20
1001fec6:	f422 02e0 	bic.w	r2, r2, #7340032	@ 0x700000
1001feca:	f2a3 33fe 	subw	r3, r3, #1022	@ 0x3fe
1001fece:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
1001fed2:	443b      	add	r3, r7
1001fed4:	f445 1500 	orr.w	r5, r5, #2097152	@ 0x200000
1001fed8:	6033      	str	r3, [r6, #0]
1001feda:	4620      	mov	r0, r4
1001fedc:	4629      	mov	r1, r5
1001fede:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1001fee0:	7fefffff 	.word	0x7fefffff
1001fee4:	7ff00000 	.word	0x7ff00000
1001fee8:	43500000 	.word	0x43500000

1001feec <_isatty_r>:
1001feec:	b538      	push	{r3, r4, r5, lr}
1001feee:	4d07      	ldr	r5, [pc, #28]	@ (1001ff0c <_isatty_r+0x20>)
1001fef0:	2200      	movs	r2, #0
1001fef2:	4604      	mov	r4, r0
1001fef4:	4608      	mov	r0, r1
1001fef6:	602a      	str	r2, [r5, #0]
1001fef8:	f7f1 fde2 	bl	10011ac0 <_isatty>
1001fefc:	1c43      	adds	r3, r0, #1
1001fefe:	d000      	beq.n	1001ff02 <_isatty_r+0x16>
1001ff00:	bd38      	pop	{r3, r4, r5, pc}
1001ff02:	682b      	ldr	r3, [r5, #0]
1001ff04:	2b00      	cmp	r3, #0
1001ff06:	d0fb      	beq.n	1001ff00 <_isatty_r+0x14>
1001ff08:	6023      	str	r3, [r4, #0]
1001ff0a:	bd38      	pop	{r3, r4, r5, pc}
1001ff0c:	20001498 	.word	0x20001498

1001ff10 <fiprintf>:
1001ff10:	b40e      	push	{r1, r2, r3}
1001ff12:	b510      	push	{r4, lr}
1001ff14:	b083      	sub	sp, #12
1001ff16:	ab05      	add	r3, sp, #20
1001ff18:	4c06      	ldr	r4, [pc, #24]	@ (1001ff34 <fiprintf+0x24>)
1001ff1a:	f853 2b04 	ldr.w	r2, [r3], #4
1001ff1e:	9301      	str	r3, [sp, #4]
1001ff20:	4601      	mov	r1, r0
1001ff22:	6820      	ldr	r0, [r4, #0]
1001ff24:	f7fd f87e 	bl	1001d024 <_vfiprintf_r>
1001ff28:	b003      	add	sp, #12
1001ff2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1001ff2e:	b003      	add	sp, #12
1001ff30:	4770      	bx	lr
1001ff32:	bf00      	nop
1001ff34:	20000590 	.word	0x20000590

1001ff38 <__fputwc>:
1001ff38:	b570      	push	{r4, r5, r6, lr}
1001ff3a:	b082      	sub	sp, #8
1001ff3c:	4606      	mov	r6, r0
1001ff3e:	460d      	mov	r5, r1
1001ff40:	4614      	mov	r4, r2
1001ff42:	f7f5 ff79 	bl	10015e38 <__locale_mb_cur_max>
1001ff46:	2801      	cmp	r0, #1
1001ff48:	d102      	bne.n	1001ff50 <__fputwc+0x18>
1001ff4a:	1e6b      	subs	r3, r5, #1
1001ff4c:	2bfe      	cmp	r3, #254	@ 0xfe
1001ff4e:	d926      	bls.n	1001ff9e <__fputwc+0x66>
1001ff50:	f104 035c 	add.w	r3, r4, #92	@ 0x5c
1001ff54:	462a      	mov	r2, r5
1001ff56:	a901      	add	r1, sp, #4
1001ff58:	4630      	mov	r0, r6
1001ff5a:	f7fe f8ef 	bl	1001e13c <_wcrtomb_r>
1001ff5e:	1c43      	adds	r3, r0, #1
1001ff60:	d020      	beq.n	1001ffa4 <__fputwc+0x6c>
1001ff62:	b178      	cbz	r0, 1001ff84 <__fputwc+0x4c>
1001ff64:	68a3      	ldr	r3, [r4, #8]
1001ff66:	f89d 1004 	ldrb.w	r1, [sp, #4]
1001ff6a:	3b01      	subs	r3, #1
1001ff6c:	2b00      	cmp	r3, #0
1001ff6e:	60a3      	str	r3, [r4, #8]
1001ff70:	da04      	bge.n	1001ff7c <__fputwc+0x44>
1001ff72:	69a2      	ldr	r2, [r4, #24]
1001ff74:	4293      	cmp	r3, r2
1001ff76:	db08      	blt.n	1001ff8a <__fputwc+0x52>
1001ff78:	290a      	cmp	r1, #10
1001ff7a:	d006      	beq.n	1001ff8a <__fputwc+0x52>
1001ff7c:	6823      	ldr	r3, [r4, #0]
1001ff7e:	1c5a      	adds	r2, r3, #1
1001ff80:	6022      	str	r2, [r4, #0]
1001ff82:	7019      	strb	r1, [r3, #0]
1001ff84:	4628      	mov	r0, r5
1001ff86:	b002      	add	sp, #8
1001ff88:	bd70      	pop	{r4, r5, r6, pc}
1001ff8a:	4622      	mov	r2, r4
1001ff8c:	4630      	mov	r0, r6
1001ff8e:	f000 f8ff 	bl	10020190 <__swbuf_r>
1001ff92:	3001      	adds	r0, #1
1001ff94:	d1f6      	bne.n	1001ff84 <__fputwc+0x4c>
1001ff96:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001ff9a:	b002      	add	sp, #8
1001ff9c:	bd70      	pop	{r4, r5, r6, pc}
1001ff9e:	f88d 5004 	strb.w	r5, [sp, #4]
1001ffa2:	e7df      	b.n	1001ff64 <__fputwc+0x2c>
1001ffa4:	89a3      	ldrh	r3, [r4, #12]
1001ffa6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001ffaa:	81a3      	strh	r3, [r4, #12]
1001ffac:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001ffb0:	e7f3      	b.n	1001ff9a <__fputwc+0x62>
1001ffb2:	bf00      	nop

1001ffb4 <_fputwc_r>:
1001ffb4:	b530      	push	{r4, r5, lr}
1001ffb6:	4614      	mov	r4, r2
1001ffb8:	6e52      	ldr	r2, [r2, #100]	@ 0x64
1001ffba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001ffbe:	4605      	mov	r5, r0
1001ffc0:	07d0      	lsls	r0, r2, #31
1001ffc2:	b083      	sub	sp, #12
1001ffc4:	d401      	bmi.n	1001ffca <_fputwc_r+0x16>
1001ffc6:	059a      	lsls	r2, r3, #22
1001ffc8:	d51c      	bpl.n	10020004 <_fputwc_r+0x50>
1001ffca:	0498      	lsls	r0, r3, #18
1001ffcc:	d406      	bmi.n	1001ffdc <_fputwc_r+0x28>
1001ffce:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001ffd0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
1001ffd4:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
1001ffd8:	81a3      	strh	r3, [r4, #12]
1001ffda:	6662      	str	r2, [r4, #100]	@ 0x64
1001ffdc:	4622      	mov	r2, r4
1001ffde:	4628      	mov	r0, r5
1001ffe0:	f7ff ffaa 	bl	1001ff38 <__fputwc>
1001ffe4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001ffe6:	07da      	lsls	r2, r3, #31
1001ffe8:	4605      	mov	r5, r0
1001ffea:	d402      	bmi.n	1001fff2 <_fputwc_r+0x3e>
1001ffec:	89a3      	ldrh	r3, [r4, #12]
1001ffee:	059b      	lsls	r3, r3, #22
1001fff0:	d502      	bpl.n	1001fff8 <_fputwc_r+0x44>
1001fff2:	4628      	mov	r0, r5
1001fff4:	b003      	add	sp, #12
1001fff6:	bd30      	pop	{r4, r5, pc}
1001fff8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001fffa:	f7f5 ff1b 	bl	10015e34 <__retarget_lock_release_recursive>
1001fffe:	4628      	mov	r0, r5
10020000:	b003      	add	sp, #12
10020002:	bd30      	pop	{r4, r5, pc}
10020004:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10020006:	9101      	str	r1, [sp, #4]
10020008:	f7f5 ff12 	bl	10015e30 <__retarget_lock_acquire_recursive>
1002000c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10020010:	9901      	ldr	r1, [sp, #4]
10020012:	e7da      	b.n	1001ffca <_fputwc_r+0x16>

10020014 <__submore>:
10020014:	f101 0340 	add.w	r3, r1, #64	@ 0x40
10020018:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1002001c:	460c      	mov	r4, r1
1002001e:	6b09      	ldr	r1, [r1, #48]	@ 0x30
10020020:	4299      	cmp	r1, r3
10020022:	d014      	beq.n	1002004e <__submore+0x3a>
10020024:	6b66      	ldr	r6, [r4, #52]	@ 0x34
10020026:	0077      	lsls	r7, r6, #1
10020028:	463a      	mov	r2, r7
1002002a:	f7f6 fd65 	bl	10016af8 <_realloc_r>
1002002e:	4605      	mov	r5, r0
10020030:	b330      	cbz	r0, 10020080 <__submore+0x6c>
10020032:	eb00 0806 	add.w	r8, r0, r6
10020036:	4601      	mov	r1, r0
10020038:	4632      	mov	r2, r6
1002003a:	4640      	mov	r0, r8
1002003c:	f7f6 fbe8 	bl	10016810 <memcpy>
10020040:	e9c4 570c 	strd	r5, r7, [r4, #48]	@ 0x30
10020044:	f8c4 8000 	str.w	r8, [r4]
10020048:	2000      	movs	r0, #0
1002004a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1002004e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
10020052:	f7f5 faed 	bl	10015630 <_malloc_r>
10020056:	b198      	cbz	r0, 10020080 <__submore+0x6c>
10020058:	f894 3042 	ldrb.w	r3, [r4, #66]	@ 0x42
1002005c:	f44f 6280 	mov.w	r2, #1024	@ 0x400
10020060:	e9c4 020c 	strd	r0, r2, [r4, #48]	@ 0x30
10020064:	f880 33ff 	strb.w	r3, [r0, #1023]	@ 0x3ff
10020068:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
1002006c:	f880 33fe 	strb.w	r3, [r0, #1022]	@ 0x3fe
10020070:	f894 2040 	ldrb.w	r2, [r4, #64]	@ 0x40
10020074:	f880 23fd 	strb.w	r2, [r0, #1021]	@ 0x3fd
10020078:	f200 33fd 	addw	r3, r0, #1021	@ 0x3fd
1002007c:	6023      	str	r3, [r4, #0]
1002007e:	e7e3      	b.n	10020048 <__submore+0x34>
10020080:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10020084:	e7e1      	b.n	1002004a <__submore+0x36>
10020086:	bf00      	nop

10020088 <__ssprint_r>:
10020088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1002008c:	6893      	ldr	r3, [r2, #8]
1002008e:	6817      	ldr	r7, [r2, #0]
10020090:	b083      	sub	sp, #12
10020092:	4692      	mov	sl, r2
10020094:	2b00      	cmp	r3, #0
10020096:	d074      	beq.n	10020182 <__ssprint_r+0xfa>
10020098:	f04f 0b00 	mov.w	fp, #0
1002009c:	688b      	ldr	r3, [r1, #8]
1002009e:	680a      	ldr	r2, [r1, #0]
100200a0:	4681      	mov	r9, r0
100200a2:	460c      	mov	r4, r1
100200a4:	465d      	mov	r5, fp
100200a6:	e045      	b.n	10020134 <__ssprint_r+0xac>
100200a8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100200ac:	f413 6f90 	tst.w	r3, #1152	@ 0x480
100200b0:	d02c      	beq.n	1002010c <__ssprint_r+0x84>
100200b2:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
100200b6:	1a16      	subs	r6, r2, r0
100200b8:	eb01 0241 	add.w	r2, r1, r1, lsl #1
100200bc:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
100200c0:	1c71      	adds	r1, r6, #1
100200c2:	1052      	asrs	r2, r2, #1
100200c4:	4429      	add	r1, r5
100200c6:	4291      	cmp	r1, r2
100200c8:	bf92      	itee	ls
100200ca:	4690      	movls	r8, r2
100200cc:	4688      	movhi	r8, r1
100200ce:	460a      	movhi	r2, r1
100200d0:	055b      	lsls	r3, r3, #21
100200d2:	d539      	bpl.n	10020148 <__ssprint_r+0xc0>
100200d4:	4611      	mov	r1, r2
100200d6:	4648      	mov	r0, r9
100200d8:	f7f5 faaa 	bl	10015630 <_malloc_r>
100200dc:	9001      	str	r0, [sp, #4]
100200de:	2800      	cmp	r0, #0
100200e0:	d03d      	beq.n	1002015e <__ssprint_r+0xd6>
100200e2:	4632      	mov	r2, r6
100200e4:	6921      	ldr	r1, [r4, #16]
100200e6:	f7f6 fb93 	bl	10016810 <memcpy>
100200ea:	89a2      	ldrh	r2, [r4, #12]
100200ec:	9b01      	ldr	r3, [sp, #4]
100200ee:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
100200f2:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
100200f6:	81a2      	strh	r2, [r4, #12]
100200f8:	1998      	adds	r0, r3, r6
100200fa:	eba8 0606 	sub.w	r6, r8, r6
100200fe:	60a6      	str	r6, [r4, #8]
10020100:	f8c4 8014 	str.w	r8, [r4, #20]
10020104:	6123      	str	r3, [r4, #16]
10020106:	6020      	str	r0, [r4, #0]
10020108:	46a8      	mov	r8, r5
1002010a:	462e      	mov	r6, r5
1002010c:	4632      	mov	r2, r6
1002010e:	4659      	mov	r1, fp
10020110:	f7f5 fd7c 	bl	10015c0c <memmove>
10020114:	f8da 1008 	ldr.w	r1, [sl, #8]
10020118:	68a3      	ldr	r3, [r4, #8]
1002011a:	6822      	ldr	r2, [r4, #0]
1002011c:	eba3 0308 	sub.w	r3, r3, r8
10020120:	4432      	add	r2, r6
10020122:	1b49      	subs	r1, r1, r5
10020124:	60a3      	str	r3, [r4, #8]
10020126:	6022      	str	r2, [r4, #0]
10020128:	f8ca 1008 	str.w	r1, [sl, #8]
1002012c:	b349      	cbz	r1, 10020182 <__ssprint_r+0xfa>
1002012e:	e9d7 b500 	ldrd	fp, r5, [r7]
10020132:	3708      	adds	r7, #8
10020134:	4698      	mov	r8, r3
10020136:	4610      	mov	r0, r2
10020138:	2d00      	cmp	r5, #0
1002013a:	d0f8      	beq.n	1002012e <__ssprint_r+0xa6>
1002013c:	429d      	cmp	r5, r3
1002013e:	461e      	mov	r6, r3
10020140:	d2b2      	bcs.n	100200a8 <__ssprint_r+0x20>
10020142:	46a8      	mov	r8, r5
10020144:	462e      	mov	r6, r5
10020146:	e7e1      	b.n	1002010c <__ssprint_r+0x84>
10020148:	4601      	mov	r1, r0
1002014a:	4648      	mov	r0, r9
1002014c:	f7f6 fcd4 	bl	10016af8 <_realloc_r>
10020150:	4603      	mov	r3, r0
10020152:	2800      	cmp	r0, #0
10020154:	d1d0      	bne.n	100200f8 <__ssprint_r+0x70>
10020156:	6921      	ldr	r1, [r4, #16]
10020158:	4648      	mov	r0, r9
1002015a:	f7f7 feb5 	bl	10017ec8 <_free_r>
1002015e:	89a3      	ldrh	r3, [r4, #12]
10020160:	220c      	movs	r2, #12
10020162:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10020166:	f8c9 2000 	str.w	r2, [r9]
1002016a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1002016e:	81a3      	strh	r3, [r4, #12]
10020170:	2200      	movs	r2, #0
10020172:	2300      	movs	r3, #0
10020174:	f8ca 2008 	str.w	r2, [sl, #8]
10020178:	f8ca 3004 	str.w	r3, [sl, #4]
1002017c:	b003      	add	sp, #12
1002017e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10020182:	2000      	movs	r0, #0
10020184:	2300      	movs	r3, #0
10020186:	f8ca 3004 	str.w	r3, [sl, #4]
1002018a:	b003      	add	sp, #12
1002018c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

10020190 <__swbuf_r>:
10020190:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10020192:	460d      	mov	r5, r1
10020194:	4614      	mov	r4, r2
10020196:	4606      	mov	r6, r0
10020198:	b110      	cbz	r0, 100201a0 <__swbuf_r+0x10>
1002019a:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1002019c:	2b00      	cmp	r3, #0
1002019e:	d04a      	beq.n	10020236 <__swbuf_r+0xa6>
100201a0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
100201a4:	69a3      	ldr	r3, [r4, #24]
100201a6:	60a3      	str	r3, [r4, #8]
100201a8:	0710      	lsls	r0, r2, #28
100201aa:	d51b      	bpl.n	100201e4 <__swbuf_r+0x54>
100201ac:	6923      	ldr	r3, [r4, #16]
100201ae:	b1cb      	cbz	r3, 100201e4 <__swbuf_r+0x54>
100201b0:	b2ed      	uxtb	r5, r5
100201b2:	0491      	lsls	r1, r2, #18
100201b4:	462f      	mov	r7, r5
100201b6:	d521      	bpl.n	100201fc <__swbuf_r+0x6c>
100201b8:	6822      	ldr	r2, [r4, #0]
100201ba:	6961      	ldr	r1, [r4, #20]
100201bc:	1ad3      	subs	r3, r2, r3
100201be:	4299      	cmp	r1, r3
100201c0:	dd28      	ble.n	10020214 <__swbuf_r+0x84>
100201c2:	3301      	adds	r3, #1
100201c4:	68a1      	ldr	r1, [r4, #8]
100201c6:	3901      	subs	r1, #1
100201c8:	60a1      	str	r1, [r4, #8]
100201ca:	1c51      	adds	r1, r2, #1
100201cc:	6021      	str	r1, [r4, #0]
100201ce:	7015      	strb	r5, [r2, #0]
100201d0:	6962      	ldr	r2, [r4, #20]
100201d2:	429a      	cmp	r2, r3
100201d4:	d026      	beq.n	10020224 <__swbuf_r+0x94>
100201d6:	89a3      	ldrh	r3, [r4, #12]
100201d8:	07db      	lsls	r3, r3, #31
100201da:	d501      	bpl.n	100201e0 <__swbuf_r+0x50>
100201dc:	2d0a      	cmp	r5, #10
100201de:	d021      	beq.n	10020224 <__swbuf_r+0x94>
100201e0:	4638      	mov	r0, r7
100201e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100201e4:	4621      	mov	r1, r4
100201e6:	4630      	mov	r0, r6
100201e8:	f7fd ffce 	bl	1001e188 <__swsetup_r>
100201ec:	bb00      	cbnz	r0, 10020230 <__swbuf_r+0xa0>
100201ee:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
100201f2:	6923      	ldr	r3, [r4, #16]
100201f4:	b2ed      	uxtb	r5, r5
100201f6:	0491      	lsls	r1, r2, #18
100201f8:	462f      	mov	r7, r5
100201fa:	d4dd      	bmi.n	100201b8 <__swbuf_r+0x28>
100201fc:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
10020200:	81a2      	strh	r2, [r4, #12]
10020202:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10020204:	6961      	ldr	r1, [r4, #20]
10020206:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1002020a:	6662      	str	r2, [r4, #100]	@ 0x64
1002020c:	6822      	ldr	r2, [r4, #0]
1002020e:	1ad3      	subs	r3, r2, r3
10020210:	4299      	cmp	r1, r3
10020212:	dcd6      	bgt.n	100201c2 <__swbuf_r+0x32>
10020214:	4621      	mov	r1, r4
10020216:	4630      	mov	r0, r6
10020218:	f7f6 f9c8 	bl	100165ac <_fflush_r>
1002021c:	b940      	cbnz	r0, 10020230 <__swbuf_r+0xa0>
1002021e:	6822      	ldr	r2, [r4, #0]
10020220:	2301      	movs	r3, #1
10020222:	e7cf      	b.n	100201c4 <__swbuf_r+0x34>
10020224:	4621      	mov	r1, r4
10020226:	4630      	mov	r0, r6
10020228:	f7f6 f9c0 	bl	100165ac <_fflush_r>
1002022c:	2800      	cmp	r0, #0
1002022e:	d0d7      	beq.n	100201e0 <__swbuf_r+0x50>
10020230:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
10020234:	e7d4      	b.n	100201e0 <__swbuf_r+0x50>
10020236:	f7f6 fac1 	bl	100167bc <__sinit>
1002023a:	e7b1      	b.n	100201a0 <__swbuf_r+0x10>

1002023c <abort>:
1002023c:	b508      	push	{r3, lr}
1002023e:	2006      	movs	r0, #6
10020240:	f000 f88c 	bl	1002035c <raise>
10020244:	2001      	movs	r0, #1
10020246:	f000 f8dd 	bl	10020404 <_exit>
1002024a:	bf00      	nop

1002024c <_wcsnrtombs_l>:
1002024c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10020250:	b089      	sub	sp, #36	@ 0x24
10020252:	e9dd 7a13 	ldrd	r7, sl, [sp, #76]	@ 0x4c
10020256:	4686      	mov	lr, r0
10020258:	461e      	mov	r6, r3
1002025a:	2f00      	cmp	r7, #0
1002025c:	d053      	beq.n	10020306 <_wcsnrtombs_l+0xba>
1002025e:	6815      	ldr	r5, [r2, #0]
10020260:	2900      	cmp	r1, #0
10020262:	d055      	beq.n	10020310 <_wcsnrtombs_l+0xc4>
10020264:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10020266:	2b00      	cmp	r3, #0
10020268:	d062      	beq.n	10020330 <_wcsnrtombs_l+0xe4>
1002026a:	1e74      	subs	r4, r6, #1
1002026c:	b32e      	cbz	r6, 100202ba <_wcsnrtombs_l+0x6e>
1002026e:	e9cd e100 	strd	lr, r1, [sp]
10020272:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10020276:	9102      	str	r1, [sp, #8]
10020278:	3d04      	subs	r5, #4
1002027a:	2600      	movs	r6, #0
1002027c:	9203      	str	r2, [sp, #12]
1002027e:	e00a      	b.n	10020296 <_wcsnrtombs_l+0x4a>
10020280:	9b01      	ldr	r3, [sp, #4]
10020282:	b9f3      	cbnz	r3, 100202c2 <_wcsnrtombs_l+0x76>
10020284:	6828      	ldr	r0, [r5, #0]
10020286:	2800      	cmp	r0, #0
10020288:	d031      	beq.n	100202ee <_wcsnrtombs_l+0xa2>
1002028a:	45dc      	cmp	ip, fp
1002028c:	d252      	bcs.n	10020334 <_wcsnrtombs_l+0xe8>
1002028e:	3c01      	subs	r4, #1
10020290:	1c63      	adds	r3, r4, #1
10020292:	4666      	mov	r6, ip
10020294:	d011      	beq.n	100202ba <_wcsnrtombs_l+0x6e>
10020296:	f855 2f04 	ldr.w	r2, [r5, #4]!
1002029a:	9800      	ldr	r0, [sp, #0]
1002029c:	f8da c0e0 	ldr.w	ip, [sl, #224]	@ 0xe0
100202a0:	463b      	mov	r3, r7
100202a2:	a905      	add	r1, sp, #20
100202a4:	e9d7 9800 	ldrd	r9, r8, [r7]
100202a8:	47e0      	blx	ip
100202aa:	1c42      	adds	r2, r0, #1
100202ac:	d034      	beq.n	10020318 <_wcsnrtombs_l+0xcc>
100202ae:	eb00 0c06 	add.w	ip, r0, r6
100202b2:	45dc      	cmp	ip, fp
100202b4:	d9e4      	bls.n	10020280 <_wcsnrtombs_l+0x34>
100202b6:	e9c7 9800 	strd	r9, r8, [r7]
100202ba:	4630      	mov	r0, r6
100202bc:	b009      	add	sp, #36	@ 0x24
100202be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100202c2:	2800      	cmp	r0, #0
100202c4:	dd0c      	ble.n	100202e0 <_wcsnrtombs_l+0x94>
100202c6:	9b02      	ldr	r3, [sp, #8]
100202c8:	4418      	add	r0, r3
100202ca:	1e5a      	subs	r2, r3, #1
100202cc:	a905      	add	r1, sp, #20
100202ce:	f100 3eff 	add.w	lr, r0, #4294967295	@ 0xffffffff
100202d2:	f811 3b01 	ldrb.w	r3, [r1], #1
100202d6:	f802 3f01 	strb.w	r3, [r2, #1]!
100202da:	4596      	cmp	lr, r2
100202dc:	d1f9      	bne.n	100202d2 <_wcsnrtombs_l+0x86>
100202de:	9002      	str	r0, [sp, #8]
100202e0:	9b03      	ldr	r3, [sp, #12]
100202e2:	6828      	ldr	r0, [r5, #0]
100202e4:	681a      	ldr	r2, [r3, #0]
100202e6:	3204      	adds	r2, #4
100202e8:	601a      	str	r2, [r3, #0]
100202ea:	2800      	cmp	r0, #0
100202ec:	d1cd      	bne.n	1002028a <_wcsnrtombs_l+0x3e>
100202ee:	9901      	ldr	r1, [sp, #4]
100202f0:	9a03      	ldr	r2, [sp, #12]
100202f2:	b101      	cbz	r1, 100202f6 <_wcsnrtombs_l+0xaa>
100202f4:	6010      	str	r0, [r2, #0]
100202f6:	f10c 36ff 	add.w	r6, ip, #4294967295	@ 0xffffffff
100202fa:	2200      	movs	r2, #0
100202fc:	4630      	mov	r0, r6
100202fe:	603a      	str	r2, [r7, #0]
10020300:	b009      	add	sp, #36	@ 0x24
10020302:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10020306:	6815      	ldr	r5, [r2, #0]
10020308:	f500 7786 	add.w	r7, r0, #268	@ 0x10c
1002030c:	2900      	cmp	r1, #0
1002030e:	d1a9      	bne.n	10020264 <_wcsnrtombs_l+0x18>
10020310:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10020314:	9312      	str	r3, [sp, #72]	@ 0x48
10020316:	e7a8      	b.n	1002026a <_wcsnrtombs_l+0x1e>
10020318:	f8dd e000 	ldr.w	lr, [sp]
1002031c:	4606      	mov	r6, r0
1002031e:	218a      	movs	r1, #138	@ 0x8a
10020320:	2200      	movs	r2, #0
10020322:	4630      	mov	r0, r6
10020324:	f8ce 1000 	str.w	r1, [lr]
10020328:	603a      	str	r2, [r7, #0]
1002032a:	b009      	add	sp, #36	@ 0x24
1002032c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10020330:	9e12      	ldr	r6, [sp, #72]	@ 0x48
10020332:	e7c2      	b.n	100202ba <_wcsnrtombs_l+0x6e>
10020334:	4666      	mov	r6, ip
10020336:	e7c0      	b.n	100202ba <_wcsnrtombs_l+0x6e>

10020338 <_wcsnrtombs_r>:
10020338:	b510      	push	{r4, lr}
1002033a:	b084      	sub	sp, #16
1002033c:	4c05      	ldr	r4, [pc, #20]	@ (10020354 <_wcsnrtombs_r+0x1c>)
1002033e:	9806      	ldr	r0, [sp, #24]
10020340:	9000      	str	r0, [sp, #0]
10020342:	9807      	ldr	r0, [sp, #28]
10020344:	9001      	str	r0, [sp, #4]
10020346:	4804      	ldr	r0, [pc, #16]	@ (10020358 <_wcsnrtombs_r+0x20>)
10020348:	6800      	ldr	r0, [r0, #0]
1002034a:	9402      	str	r4, [sp, #8]
1002034c:	f7ff ff7e 	bl	1002024c <_wcsnrtombs_l>
10020350:	b004      	add	sp, #16
10020352:	bd10      	pop	{r4, pc}
10020354:	20000424 	.word	0x20000424
10020358:	20000590 	.word	0x20000590

1002035c <raise>:
1002035c:	b538      	push	{r3, r4, r5, lr}
1002035e:	4b14      	ldr	r3, [pc, #80]	@ (100203b0 <raise+0x54>)
10020360:	281f      	cmp	r0, #31
10020362:	681d      	ldr	r5, [r3, #0]
10020364:	d81e      	bhi.n	100203a4 <raise+0x48>
10020366:	f8d5 2118 	ldr.w	r2, [r5, #280]	@ 0x118
1002036a:	4604      	mov	r4, r0
1002036c:	b162      	cbz	r2, 10020388 <raise+0x2c>
1002036e:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
10020372:	b14b      	cbz	r3, 10020388 <raise+0x2c>
10020374:	2b01      	cmp	r3, #1
10020376:	d005      	beq.n	10020384 <raise+0x28>
10020378:	1c59      	adds	r1, r3, #1
1002037a:	d00f      	beq.n	1002039c <raise+0x40>
1002037c:	2100      	movs	r1, #0
1002037e:	f842 1020 	str.w	r1, [r2, r0, lsl #2]
10020382:	4798      	blx	r3
10020384:	2000      	movs	r0, #0
10020386:	bd38      	pop	{r3, r4, r5, pc}
10020388:	4628      	mov	r0, r5
1002038a:	f000 f829 	bl	100203e0 <_getpid_r>
1002038e:	4622      	mov	r2, r4
10020390:	4601      	mov	r1, r0
10020392:	4628      	mov	r0, r5
10020394:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10020398:	f000 b80c 	b.w	100203b4 <_kill_r>
1002039c:	2316      	movs	r3, #22
1002039e:	602b      	str	r3, [r5, #0]
100203a0:	2001      	movs	r0, #1
100203a2:	bd38      	pop	{r3, r4, r5, pc}
100203a4:	2316      	movs	r3, #22
100203a6:	602b      	str	r3, [r5, #0]
100203a8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100203ac:	bd38      	pop	{r3, r4, r5, pc}
100203ae:	bf00      	nop
100203b0:	20000590 	.word	0x20000590

100203b4 <_kill_r>:
100203b4:	b570      	push	{r4, r5, r6, lr}
100203b6:	460c      	mov	r4, r1
100203b8:	4d08      	ldr	r5, [pc, #32]	@ (100203dc <_kill_r+0x28>)
100203ba:	4603      	mov	r3, r0
100203bc:	2600      	movs	r6, #0
100203be:	4620      	mov	r0, r4
100203c0:	4611      	mov	r1, r2
100203c2:	461c      	mov	r4, r3
100203c4:	602e      	str	r6, [r5, #0]
100203c6:	f000 f815 	bl	100203f4 <_kill>
100203ca:	1c43      	adds	r3, r0, #1
100203cc:	d000      	beq.n	100203d0 <_kill_r+0x1c>
100203ce:	bd70      	pop	{r4, r5, r6, pc}
100203d0:	682b      	ldr	r3, [r5, #0]
100203d2:	2b00      	cmp	r3, #0
100203d4:	d0fb      	beq.n	100203ce <_kill_r+0x1a>
100203d6:	6023      	str	r3, [r4, #0]
100203d8:	bd70      	pop	{r4, r5, r6, pc}
100203da:	bf00      	nop
100203dc:	20001498 	.word	0x20001498

100203e0 <_getpid_r>:
100203e0:	f000 b800 	b.w	100203e4 <_getpid>

100203e4 <_getpid>:
100203e4:	4b02      	ldr	r3, [pc, #8]	@ (100203f0 <_getpid+0xc>)
100203e6:	2258      	movs	r2, #88	@ 0x58
100203e8:	601a      	str	r2, [r3, #0]
100203ea:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100203ee:	4770      	bx	lr
100203f0:	20001498 	.word	0x20001498

100203f4 <_kill>:
100203f4:	4b02      	ldr	r3, [pc, #8]	@ (10020400 <_kill+0xc>)
100203f6:	2258      	movs	r2, #88	@ 0x58
100203f8:	601a      	str	r2, [r3, #0]
100203fa:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100203fe:	4770      	bx	lr
10020400:	20001498 	.word	0x20001498

10020404 <_exit>:
10020404:	e7fe      	b.n	10020404 <_exit>
10020406:	bf00      	nop

10020408 <__aeabi_drsub>:
10020408:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
1002040c:	e002      	b.n	10020414 <__adddf3>
1002040e:	bf00      	nop

10020410 <__aeabi_dsub>:
10020410:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

10020414 <__adddf3>:
10020414:	b530      	push	{r4, r5, lr}
10020416:	ea4f 0441 	mov.w	r4, r1, lsl #1
1002041a:	ea4f 0543 	mov.w	r5, r3, lsl #1
1002041e:	ea94 0f05 	teq	r4, r5
10020422:	bf08      	it	eq
10020424:	ea90 0f02 	teqeq	r0, r2
10020428:	bf1f      	itttt	ne
1002042a:	ea54 0c00 	orrsne.w	ip, r4, r0
1002042e:	ea55 0c02 	orrsne.w	ip, r5, r2
10020432:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
10020436:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1002043a:	f000 80e2 	beq.w	10020602 <__adddf3+0x1ee>
1002043e:	ea4f 5454 	mov.w	r4, r4, lsr #21
10020442:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
10020446:	bfb8      	it	lt
10020448:	426d      	neglt	r5, r5
1002044a:	dd0c      	ble.n	10020466 <__adddf3+0x52>
1002044c:	442c      	add	r4, r5
1002044e:	ea80 0202 	eor.w	r2, r0, r2
10020452:	ea81 0303 	eor.w	r3, r1, r3
10020456:	ea82 0000 	eor.w	r0, r2, r0
1002045a:	ea83 0101 	eor.w	r1, r3, r1
1002045e:	ea80 0202 	eor.w	r2, r0, r2
10020462:	ea81 0303 	eor.w	r3, r1, r3
10020466:	2d36      	cmp	r5, #54	@ 0x36
10020468:	bf88      	it	hi
1002046a:	bd30      	pophi	{r4, r5, pc}
1002046c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
10020470:	ea4f 3101 	mov.w	r1, r1, lsl #12
10020474:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
10020478:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
1002047c:	d002      	beq.n	10020484 <__adddf3+0x70>
1002047e:	4240      	negs	r0, r0
10020480:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10020484:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
10020488:	ea4f 3303 	mov.w	r3, r3, lsl #12
1002048c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
10020490:	d002      	beq.n	10020498 <__adddf3+0x84>
10020492:	4252      	negs	r2, r2
10020494:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
10020498:	ea94 0f05 	teq	r4, r5
1002049c:	f000 80a7 	beq.w	100205ee <__adddf3+0x1da>
100204a0:	f1a4 0401 	sub.w	r4, r4, #1
100204a4:	f1d5 0e20 	rsbs	lr, r5, #32
100204a8:	db0d      	blt.n	100204c6 <__adddf3+0xb2>
100204aa:	fa02 fc0e 	lsl.w	ip, r2, lr
100204ae:	fa22 f205 	lsr.w	r2, r2, r5
100204b2:	1880      	adds	r0, r0, r2
100204b4:	f141 0100 	adc.w	r1, r1, #0
100204b8:	fa03 f20e 	lsl.w	r2, r3, lr
100204bc:	1880      	adds	r0, r0, r2
100204be:	fa43 f305 	asr.w	r3, r3, r5
100204c2:	4159      	adcs	r1, r3
100204c4:	e00e      	b.n	100204e4 <__adddf3+0xd0>
100204c6:	f1a5 0520 	sub.w	r5, r5, #32
100204ca:	f10e 0e20 	add.w	lr, lr, #32
100204ce:	2a01      	cmp	r2, #1
100204d0:	fa03 fc0e 	lsl.w	ip, r3, lr
100204d4:	bf28      	it	cs
100204d6:	f04c 0c02 	orrcs.w	ip, ip, #2
100204da:	fa43 f305 	asr.w	r3, r3, r5
100204de:	18c0      	adds	r0, r0, r3
100204e0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
100204e4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
100204e8:	d507      	bpl.n	100204fa <__adddf3+0xe6>
100204ea:	f04f 0e00 	mov.w	lr, #0
100204ee:	f1dc 0c00 	rsbs	ip, ip, #0
100204f2:	eb7e 0000 	sbcs.w	r0, lr, r0
100204f6:	eb6e 0101 	sbc.w	r1, lr, r1
100204fa:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
100204fe:	d31b      	bcc.n	10020538 <__adddf3+0x124>
10020500:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
10020504:	d30c      	bcc.n	10020520 <__adddf3+0x10c>
10020506:	0849      	lsrs	r1, r1, #1
10020508:	ea5f 0030 	movs.w	r0, r0, rrx
1002050c:	ea4f 0c3c 	mov.w	ip, ip, rrx
10020510:	f104 0401 	add.w	r4, r4, #1
10020514:	ea4f 5244 	mov.w	r2, r4, lsl #21
10020518:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
1002051c:	f080 809a 	bcs.w	10020654 <__adddf3+0x240>
10020520:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
10020524:	bf08      	it	eq
10020526:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1002052a:	f150 0000 	adcs.w	r0, r0, #0
1002052e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10020532:	ea41 0105 	orr.w	r1, r1, r5
10020536:	bd30      	pop	{r4, r5, pc}
10020538:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
1002053c:	4140      	adcs	r0, r0
1002053e:	eb41 0101 	adc.w	r1, r1, r1
10020542:	3c01      	subs	r4, #1
10020544:	bf28      	it	cs
10020546:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
1002054a:	d2e9      	bcs.n	10020520 <__adddf3+0x10c>
1002054c:	f091 0f00 	teq	r1, #0
10020550:	bf04      	itt	eq
10020552:	4601      	moveq	r1, r0
10020554:	2000      	moveq	r0, #0
10020556:	fab1 f381 	clz	r3, r1
1002055a:	bf08      	it	eq
1002055c:	3320      	addeq	r3, #32
1002055e:	f1a3 030b 	sub.w	r3, r3, #11
10020562:	f1b3 0220 	subs.w	r2, r3, #32
10020566:	da0c      	bge.n	10020582 <__adddf3+0x16e>
10020568:	320c      	adds	r2, #12
1002056a:	dd08      	ble.n	1002057e <__adddf3+0x16a>
1002056c:	f102 0c14 	add.w	ip, r2, #20
10020570:	f1c2 020c 	rsb	r2, r2, #12
10020574:	fa01 f00c 	lsl.w	r0, r1, ip
10020578:	fa21 f102 	lsr.w	r1, r1, r2
1002057c:	e00c      	b.n	10020598 <__adddf3+0x184>
1002057e:	f102 0214 	add.w	r2, r2, #20
10020582:	bfd8      	it	le
10020584:	f1c2 0c20 	rsble	ip, r2, #32
10020588:	fa01 f102 	lsl.w	r1, r1, r2
1002058c:	fa20 fc0c 	lsr.w	ip, r0, ip
10020590:	bfdc      	itt	le
10020592:	ea41 010c 	orrle.w	r1, r1, ip
10020596:	4090      	lslle	r0, r2
10020598:	1ae4      	subs	r4, r4, r3
1002059a:	bfa2      	ittt	ge
1002059c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
100205a0:	4329      	orrge	r1, r5
100205a2:	bd30      	popge	{r4, r5, pc}
100205a4:	ea6f 0404 	mvn.w	r4, r4
100205a8:	3c1f      	subs	r4, #31
100205aa:	da1c      	bge.n	100205e6 <__adddf3+0x1d2>
100205ac:	340c      	adds	r4, #12
100205ae:	dc0e      	bgt.n	100205ce <__adddf3+0x1ba>
100205b0:	f104 0414 	add.w	r4, r4, #20
100205b4:	f1c4 0220 	rsb	r2, r4, #32
100205b8:	fa20 f004 	lsr.w	r0, r0, r4
100205bc:	fa01 f302 	lsl.w	r3, r1, r2
100205c0:	ea40 0003 	orr.w	r0, r0, r3
100205c4:	fa21 f304 	lsr.w	r3, r1, r4
100205c8:	ea45 0103 	orr.w	r1, r5, r3
100205cc:	bd30      	pop	{r4, r5, pc}
100205ce:	f1c4 040c 	rsb	r4, r4, #12
100205d2:	f1c4 0220 	rsb	r2, r4, #32
100205d6:	fa20 f002 	lsr.w	r0, r0, r2
100205da:	fa01 f304 	lsl.w	r3, r1, r4
100205de:	ea40 0003 	orr.w	r0, r0, r3
100205e2:	4629      	mov	r1, r5
100205e4:	bd30      	pop	{r4, r5, pc}
100205e6:	fa21 f004 	lsr.w	r0, r1, r4
100205ea:	4629      	mov	r1, r5
100205ec:	bd30      	pop	{r4, r5, pc}
100205ee:	f094 0f00 	teq	r4, #0
100205f2:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
100205f6:	bf06      	itte	eq
100205f8:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
100205fc:	3401      	addeq	r4, #1
100205fe:	3d01      	subne	r5, #1
10020600:	e74e      	b.n	100204a0 <__adddf3+0x8c>
10020602:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10020606:	bf18      	it	ne
10020608:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1002060c:	d029      	beq.n	10020662 <__adddf3+0x24e>
1002060e:	ea94 0f05 	teq	r4, r5
10020612:	bf08      	it	eq
10020614:	ea90 0f02 	teqeq	r0, r2
10020618:	d005      	beq.n	10020626 <__adddf3+0x212>
1002061a:	ea54 0c00 	orrs.w	ip, r4, r0
1002061e:	bf04      	itt	eq
10020620:	4619      	moveq	r1, r3
10020622:	4610      	moveq	r0, r2
10020624:	bd30      	pop	{r4, r5, pc}
10020626:	ea91 0f03 	teq	r1, r3
1002062a:	bf1e      	ittt	ne
1002062c:	2100      	movne	r1, #0
1002062e:	2000      	movne	r0, #0
10020630:	bd30      	popne	{r4, r5, pc}
10020632:	ea5f 5c54 	movs.w	ip, r4, lsr #21
10020636:	d105      	bne.n	10020644 <__adddf3+0x230>
10020638:	0040      	lsls	r0, r0, #1
1002063a:	4149      	adcs	r1, r1
1002063c:	bf28      	it	cs
1002063e:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
10020642:	bd30      	pop	{r4, r5, pc}
10020644:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
10020648:	bf3c      	itt	cc
1002064a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
1002064e:	bd30      	popcc	{r4, r5, pc}
10020650:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
10020654:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
10020658:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
1002065c:	f04f 0000 	mov.w	r0, #0
10020660:	bd30      	pop	{r4, r5, pc}
10020662:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10020666:	bf1a      	itte	ne
10020668:	4619      	movne	r1, r3
1002066a:	4610      	movne	r0, r2
1002066c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
10020670:	bf1c      	itt	ne
10020672:	460b      	movne	r3, r1
10020674:	4602      	movne	r2, r0
10020676:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1002067a:	bf06      	itte	eq
1002067c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
10020680:	ea91 0f03 	teqeq	r1, r3
10020684:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
10020688:	bd30      	pop	{r4, r5, pc}
1002068a:	bf00      	nop

1002068c <__aeabi_ui2d>:
1002068c:	f090 0f00 	teq	r0, #0
10020690:	bf04      	itt	eq
10020692:	2100      	moveq	r1, #0
10020694:	4770      	bxeq	lr
10020696:	b530      	push	{r4, r5, lr}
10020698:	f44f 6480 	mov.w	r4, #1024	@ 0x400
1002069c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
100206a0:	f04f 0500 	mov.w	r5, #0
100206a4:	f04f 0100 	mov.w	r1, #0
100206a8:	e750      	b.n	1002054c <__adddf3+0x138>
100206aa:	bf00      	nop

100206ac <__aeabi_i2d>:
100206ac:	f090 0f00 	teq	r0, #0
100206b0:	bf04      	itt	eq
100206b2:	2100      	moveq	r1, #0
100206b4:	4770      	bxeq	lr
100206b6:	b530      	push	{r4, r5, lr}
100206b8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
100206bc:	f104 0432 	add.w	r4, r4, #50	@ 0x32
100206c0:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
100206c4:	bf48      	it	mi
100206c6:	4240      	negmi	r0, r0
100206c8:	f04f 0100 	mov.w	r1, #0
100206cc:	e73e      	b.n	1002054c <__adddf3+0x138>
100206ce:	bf00      	nop

100206d0 <__aeabi_f2d>:
100206d0:	0042      	lsls	r2, r0, #1
100206d2:	ea4f 01e2 	mov.w	r1, r2, asr #3
100206d6:	ea4f 0131 	mov.w	r1, r1, rrx
100206da:	ea4f 7002 	mov.w	r0, r2, lsl #28
100206de:	bf1f      	itttt	ne
100206e0:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
100206e4:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
100206e8:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
100206ec:	4770      	bxne	lr
100206ee:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
100206f2:	bf08      	it	eq
100206f4:	4770      	bxeq	lr
100206f6:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
100206fa:	bf04      	itt	eq
100206fc:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
10020700:	4770      	bxeq	lr
10020702:	b530      	push	{r4, r5, lr}
10020704:	f44f 7460 	mov.w	r4, #896	@ 0x380
10020708:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
1002070c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
10020710:	e71c      	b.n	1002054c <__adddf3+0x138>
10020712:	bf00      	nop

10020714 <__aeabi_ul2d>:
10020714:	ea50 0201 	orrs.w	r2, r0, r1
10020718:	bf08      	it	eq
1002071a:	4770      	bxeq	lr
1002071c:	b530      	push	{r4, r5, lr}
1002071e:	f04f 0500 	mov.w	r5, #0
10020722:	e00a      	b.n	1002073a <__aeabi_l2d+0x16>

10020724 <__aeabi_l2d>:
10020724:	ea50 0201 	orrs.w	r2, r0, r1
10020728:	bf08      	it	eq
1002072a:	4770      	bxeq	lr
1002072c:	b530      	push	{r4, r5, lr}
1002072e:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
10020732:	d502      	bpl.n	1002073a <__aeabi_l2d+0x16>
10020734:	4240      	negs	r0, r0
10020736:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1002073a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
1002073e:	f104 0432 	add.w	r4, r4, #50	@ 0x32
10020742:	ea5f 5c91 	movs.w	ip, r1, lsr #22
10020746:	f43f aed8 	beq.w	100204fa <__adddf3+0xe6>
1002074a:	f04f 0203 	mov.w	r2, #3
1002074e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10020752:	bf18      	it	ne
10020754:	3203      	addne	r2, #3
10020756:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1002075a:	bf18      	it	ne
1002075c:	3203      	addne	r2, #3
1002075e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
10020762:	f1c2 0320 	rsb	r3, r2, #32
10020766:	fa00 fc03 	lsl.w	ip, r0, r3
1002076a:	fa20 f002 	lsr.w	r0, r0, r2
1002076e:	fa01 fe03 	lsl.w	lr, r1, r3
10020772:	ea40 000e 	orr.w	r0, r0, lr
10020776:	fa21 f102 	lsr.w	r1, r1, r2
1002077a:	4414      	add	r4, r2
1002077c:	e6bd      	b.n	100204fa <__adddf3+0xe6>
1002077e:	bf00      	nop

10020780 <__aeabi_dmul>:
10020780:	b570      	push	{r4, r5, r6, lr}
10020782:	f04f 0cff 	mov.w	ip, #255	@ 0xff
10020786:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
1002078a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1002078e:	bf1d      	ittte	ne
10020790:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10020794:	ea94 0f0c 	teqne	r4, ip
10020798:	ea95 0f0c 	teqne	r5, ip
1002079c:	f000 f8de 	bleq	1002095c <__aeabi_dmul+0x1dc>
100207a0:	442c      	add	r4, r5
100207a2:	ea81 0603 	eor.w	r6, r1, r3
100207a6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
100207aa:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
100207ae:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
100207b2:	bf18      	it	ne
100207b4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
100207b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
100207bc:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
100207c0:	d038      	beq.n	10020834 <__aeabi_dmul+0xb4>
100207c2:	fba0 ce02 	umull	ip, lr, r0, r2
100207c6:	f04f 0500 	mov.w	r5, #0
100207ca:	fbe1 e502 	umlal	lr, r5, r1, r2
100207ce:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
100207d2:	fbe0 e503 	umlal	lr, r5, r0, r3
100207d6:	f04f 0600 	mov.w	r6, #0
100207da:	fbe1 5603 	umlal	r5, r6, r1, r3
100207de:	f09c 0f00 	teq	ip, #0
100207e2:	bf18      	it	ne
100207e4:	f04e 0e01 	orrne.w	lr, lr, #1
100207e8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
100207ec:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
100207f0:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
100207f4:	d204      	bcs.n	10020800 <__aeabi_dmul+0x80>
100207f6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
100207fa:	416d      	adcs	r5, r5
100207fc:	eb46 0606 	adc.w	r6, r6, r6
10020800:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
10020804:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
10020808:	ea4f 20c5 	mov.w	r0, r5, lsl #11
1002080c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
10020810:	ea4f 2ece 	mov.w	lr, lr, lsl #11
10020814:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
10020818:	bf88      	it	hi
1002081a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
1002081e:	d81e      	bhi.n	1002085e <__aeabi_dmul+0xde>
10020820:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
10020824:	bf08      	it	eq
10020826:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
1002082a:	f150 0000 	adcs.w	r0, r0, #0
1002082e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10020832:	bd70      	pop	{r4, r5, r6, pc}
10020834:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
10020838:	ea46 0101 	orr.w	r1, r6, r1
1002083c:	ea40 0002 	orr.w	r0, r0, r2
10020840:	ea81 0103 	eor.w	r1, r1, r3
10020844:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
10020848:	bfc2      	ittt	gt
1002084a:	ebd4 050c 	rsbsgt	r5, r4, ip
1002084e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10020852:	bd70      	popgt	{r4, r5, r6, pc}
10020854:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
10020858:	f04f 0e00 	mov.w	lr, #0
1002085c:	3c01      	subs	r4, #1
1002085e:	f300 80ab 	bgt.w	100209b8 <__aeabi_dmul+0x238>
10020862:	f114 0f36 	cmn.w	r4, #54	@ 0x36
10020866:	bfde      	ittt	le
10020868:	2000      	movle	r0, #0
1002086a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
1002086e:	bd70      	pople	{r4, r5, r6, pc}
10020870:	f1c4 0400 	rsb	r4, r4, #0
10020874:	3c20      	subs	r4, #32
10020876:	da35      	bge.n	100208e4 <__aeabi_dmul+0x164>
10020878:	340c      	adds	r4, #12
1002087a:	dc1b      	bgt.n	100208b4 <__aeabi_dmul+0x134>
1002087c:	f104 0414 	add.w	r4, r4, #20
10020880:	f1c4 0520 	rsb	r5, r4, #32
10020884:	fa00 f305 	lsl.w	r3, r0, r5
10020888:	fa20 f004 	lsr.w	r0, r0, r4
1002088c:	fa01 f205 	lsl.w	r2, r1, r5
10020890:	ea40 0002 	orr.w	r0, r0, r2
10020894:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
10020898:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
1002089c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
100208a0:	fa21 f604 	lsr.w	r6, r1, r4
100208a4:	eb42 0106 	adc.w	r1, r2, r6
100208a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100208ac:	bf08      	it	eq
100208ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100208b2:	bd70      	pop	{r4, r5, r6, pc}
100208b4:	f1c4 040c 	rsb	r4, r4, #12
100208b8:	f1c4 0520 	rsb	r5, r4, #32
100208bc:	fa00 f304 	lsl.w	r3, r0, r4
100208c0:	fa20 f005 	lsr.w	r0, r0, r5
100208c4:	fa01 f204 	lsl.w	r2, r1, r4
100208c8:	ea40 0002 	orr.w	r0, r0, r2
100208cc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
100208d0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
100208d4:	f141 0100 	adc.w	r1, r1, #0
100208d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100208dc:	bf08      	it	eq
100208de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100208e2:	bd70      	pop	{r4, r5, r6, pc}
100208e4:	f1c4 0520 	rsb	r5, r4, #32
100208e8:	fa00 f205 	lsl.w	r2, r0, r5
100208ec:	ea4e 0e02 	orr.w	lr, lr, r2
100208f0:	fa20 f304 	lsr.w	r3, r0, r4
100208f4:	fa01 f205 	lsl.w	r2, r1, r5
100208f8:	ea43 0302 	orr.w	r3, r3, r2
100208fc:	fa21 f004 	lsr.w	r0, r1, r4
10020900:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10020904:	fa21 f204 	lsr.w	r2, r1, r4
10020908:	ea20 0002 	bic.w	r0, r0, r2
1002090c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
10020910:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10020914:	bf08      	it	eq
10020916:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1002091a:	bd70      	pop	{r4, r5, r6, pc}
1002091c:	f094 0f00 	teq	r4, #0
10020920:	d10f      	bne.n	10020942 <__aeabi_dmul+0x1c2>
10020922:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
10020926:	0040      	lsls	r0, r0, #1
10020928:	eb41 0101 	adc.w	r1, r1, r1
1002092c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10020930:	bf08      	it	eq
10020932:	3c01      	subeq	r4, #1
10020934:	d0f7      	beq.n	10020926 <__aeabi_dmul+0x1a6>
10020936:	ea41 0106 	orr.w	r1, r1, r6
1002093a:	f095 0f00 	teq	r5, #0
1002093e:	bf18      	it	ne
10020940:	4770      	bxne	lr
10020942:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
10020946:	0052      	lsls	r2, r2, #1
10020948:	eb43 0303 	adc.w	r3, r3, r3
1002094c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
10020950:	bf08      	it	eq
10020952:	3d01      	subeq	r5, #1
10020954:	d0f7      	beq.n	10020946 <__aeabi_dmul+0x1c6>
10020956:	ea43 0306 	orr.w	r3, r3, r6
1002095a:	4770      	bx	lr
1002095c:	ea94 0f0c 	teq	r4, ip
10020960:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10020964:	bf18      	it	ne
10020966:	ea95 0f0c 	teqne	r5, ip
1002096a:	d00c      	beq.n	10020986 <__aeabi_dmul+0x206>
1002096c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10020970:	bf18      	it	ne
10020972:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10020976:	d1d1      	bne.n	1002091c <__aeabi_dmul+0x19c>
10020978:	ea81 0103 	eor.w	r1, r1, r3
1002097c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10020980:	f04f 0000 	mov.w	r0, #0
10020984:	bd70      	pop	{r4, r5, r6, pc}
10020986:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1002098a:	bf06      	itte	eq
1002098c:	4610      	moveq	r0, r2
1002098e:	4619      	moveq	r1, r3
10020990:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10020994:	d019      	beq.n	100209ca <__aeabi_dmul+0x24a>
10020996:	ea94 0f0c 	teq	r4, ip
1002099a:	d102      	bne.n	100209a2 <__aeabi_dmul+0x222>
1002099c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
100209a0:	d113      	bne.n	100209ca <__aeabi_dmul+0x24a>
100209a2:	ea95 0f0c 	teq	r5, ip
100209a6:	d105      	bne.n	100209b4 <__aeabi_dmul+0x234>
100209a8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
100209ac:	bf1c      	itt	ne
100209ae:	4610      	movne	r0, r2
100209b0:	4619      	movne	r1, r3
100209b2:	d10a      	bne.n	100209ca <__aeabi_dmul+0x24a>
100209b4:	ea81 0103 	eor.w	r1, r1, r3
100209b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
100209bc:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
100209c0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
100209c4:	f04f 0000 	mov.w	r0, #0
100209c8:	bd70      	pop	{r4, r5, r6, pc}
100209ca:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
100209ce:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
100209d2:	bd70      	pop	{r4, r5, r6, pc}

100209d4 <__aeabi_ddiv>:
100209d4:	b570      	push	{r4, r5, r6, lr}
100209d6:	f04f 0cff 	mov.w	ip, #255	@ 0xff
100209da:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
100209de:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
100209e2:	bf1d      	ittte	ne
100209e4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
100209e8:	ea94 0f0c 	teqne	r4, ip
100209ec:	ea95 0f0c 	teqne	r5, ip
100209f0:	f000 f8a7 	bleq	10020b42 <__aeabi_ddiv+0x16e>
100209f4:	eba4 0405 	sub.w	r4, r4, r5
100209f8:	ea81 0e03 	eor.w	lr, r1, r3
100209fc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10020a00:	ea4f 3101 	mov.w	r1, r1, lsl #12
10020a04:	f000 8088 	beq.w	10020b18 <__aeabi_ddiv+0x144>
10020a08:	ea4f 3303 	mov.w	r3, r3, lsl #12
10020a0c:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
10020a10:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
10020a14:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
10020a18:	ea4f 2202 	mov.w	r2, r2, lsl #8
10020a1c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
10020a20:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
10020a24:	ea4f 2600 	mov.w	r6, r0, lsl #8
10020a28:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
10020a2c:	429d      	cmp	r5, r3
10020a2e:	bf08      	it	eq
10020a30:	4296      	cmpeq	r6, r2
10020a32:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
10020a36:	f504 7440 	add.w	r4, r4, #768	@ 0x300
10020a3a:	d202      	bcs.n	10020a42 <__aeabi_ddiv+0x6e>
10020a3c:	085b      	lsrs	r3, r3, #1
10020a3e:	ea4f 0232 	mov.w	r2, r2, rrx
10020a42:	1ab6      	subs	r6, r6, r2
10020a44:	eb65 0503 	sbc.w	r5, r5, r3
10020a48:	085b      	lsrs	r3, r3, #1
10020a4a:	ea4f 0232 	mov.w	r2, r2, rrx
10020a4e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
10020a52:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
10020a56:	ebb6 0e02 	subs.w	lr, r6, r2
10020a5a:	eb75 0e03 	sbcs.w	lr, r5, r3
10020a5e:	bf22      	ittt	cs
10020a60:	1ab6      	subcs	r6, r6, r2
10020a62:	4675      	movcs	r5, lr
10020a64:	ea40 000c 	orrcs.w	r0, r0, ip
10020a68:	085b      	lsrs	r3, r3, #1
10020a6a:	ea4f 0232 	mov.w	r2, r2, rrx
10020a6e:	ebb6 0e02 	subs.w	lr, r6, r2
10020a72:	eb75 0e03 	sbcs.w	lr, r5, r3
10020a76:	bf22      	ittt	cs
10020a78:	1ab6      	subcs	r6, r6, r2
10020a7a:	4675      	movcs	r5, lr
10020a7c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
10020a80:	085b      	lsrs	r3, r3, #1
10020a82:	ea4f 0232 	mov.w	r2, r2, rrx
10020a86:	ebb6 0e02 	subs.w	lr, r6, r2
10020a8a:	eb75 0e03 	sbcs.w	lr, r5, r3
10020a8e:	bf22      	ittt	cs
10020a90:	1ab6      	subcs	r6, r6, r2
10020a92:	4675      	movcs	r5, lr
10020a94:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
10020a98:	085b      	lsrs	r3, r3, #1
10020a9a:	ea4f 0232 	mov.w	r2, r2, rrx
10020a9e:	ebb6 0e02 	subs.w	lr, r6, r2
10020aa2:	eb75 0e03 	sbcs.w	lr, r5, r3
10020aa6:	bf22      	ittt	cs
10020aa8:	1ab6      	subcs	r6, r6, r2
10020aaa:	4675      	movcs	r5, lr
10020aac:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
10020ab0:	ea55 0e06 	orrs.w	lr, r5, r6
10020ab4:	d018      	beq.n	10020ae8 <__aeabi_ddiv+0x114>
10020ab6:	ea4f 1505 	mov.w	r5, r5, lsl #4
10020aba:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
10020abe:	ea4f 1606 	mov.w	r6, r6, lsl #4
10020ac2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
10020ac6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
10020aca:	ea4f 02c2 	mov.w	r2, r2, lsl #3
10020ace:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
10020ad2:	d1c0      	bne.n	10020a56 <__aeabi_ddiv+0x82>
10020ad4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10020ad8:	d10b      	bne.n	10020af2 <__aeabi_ddiv+0x11e>
10020ada:	ea41 0100 	orr.w	r1, r1, r0
10020ade:	f04f 0000 	mov.w	r0, #0
10020ae2:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
10020ae6:	e7b6      	b.n	10020a56 <__aeabi_ddiv+0x82>
10020ae8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10020aec:	bf04      	itt	eq
10020aee:	4301      	orreq	r1, r0
10020af0:	2000      	moveq	r0, #0
10020af2:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
10020af6:	bf88      	it	hi
10020af8:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
10020afc:	f63f aeaf 	bhi.w	1002085e <__aeabi_dmul+0xde>
10020b00:	ebb5 0c03 	subs.w	ip, r5, r3
10020b04:	bf04      	itt	eq
10020b06:	ebb6 0c02 	subseq.w	ip, r6, r2
10020b0a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10020b0e:	f150 0000 	adcs.w	r0, r0, #0
10020b12:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10020b16:	bd70      	pop	{r4, r5, r6, pc}
10020b18:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
10020b1c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
10020b20:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
10020b24:	bfc2      	ittt	gt
10020b26:	ebd4 050c 	rsbsgt	r5, r4, ip
10020b2a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10020b2e:	bd70      	popgt	{r4, r5, r6, pc}
10020b30:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
10020b34:	f04f 0e00 	mov.w	lr, #0
10020b38:	3c01      	subs	r4, #1
10020b3a:	e690      	b.n	1002085e <__aeabi_dmul+0xde>
10020b3c:	ea45 0e06 	orr.w	lr, r5, r6
10020b40:	e68d      	b.n	1002085e <__aeabi_dmul+0xde>
10020b42:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10020b46:	ea94 0f0c 	teq	r4, ip
10020b4a:	bf08      	it	eq
10020b4c:	ea95 0f0c 	teqeq	r5, ip
10020b50:	f43f af3b 	beq.w	100209ca <__aeabi_dmul+0x24a>
10020b54:	ea94 0f0c 	teq	r4, ip
10020b58:	d10a      	bne.n	10020b70 <__aeabi_ddiv+0x19c>
10020b5a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10020b5e:	f47f af34 	bne.w	100209ca <__aeabi_dmul+0x24a>
10020b62:	ea95 0f0c 	teq	r5, ip
10020b66:	f47f af25 	bne.w	100209b4 <__aeabi_dmul+0x234>
10020b6a:	4610      	mov	r0, r2
10020b6c:	4619      	mov	r1, r3
10020b6e:	e72c      	b.n	100209ca <__aeabi_dmul+0x24a>
10020b70:	ea95 0f0c 	teq	r5, ip
10020b74:	d106      	bne.n	10020b84 <__aeabi_ddiv+0x1b0>
10020b76:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10020b7a:	f43f aefd 	beq.w	10020978 <__aeabi_dmul+0x1f8>
10020b7e:	4610      	mov	r0, r2
10020b80:	4619      	mov	r1, r3
10020b82:	e722      	b.n	100209ca <__aeabi_dmul+0x24a>
10020b84:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10020b88:	bf18      	it	ne
10020b8a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10020b8e:	f47f aec5 	bne.w	1002091c <__aeabi_dmul+0x19c>
10020b92:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
10020b96:	f47f af0d 	bne.w	100209b4 <__aeabi_dmul+0x234>
10020b9a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
10020b9e:	f47f aeeb 	bne.w	10020978 <__aeabi_dmul+0x1f8>
10020ba2:	e712      	b.n	100209ca <__aeabi_dmul+0x24a>

10020ba4 <__gedf2>:
10020ba4:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
10020ba8:	e006      	b.n	10020bb8 <__cmpdf2+0x4>
10020baa:	bf00      	nop

10020bac <__ledf2>:
10020bac:	f04f 0c01 	mov.w	ip, #1
10020bb0:	e002      	b.n	10020bb8 <__cmpdf2+0x4>
10020bb2:	bf00      	nop

10020bb4 <__cmpdf2>:
10020bb4:	f04f 0c01 	mov.w	ip, #1
10020bb8:	f84d cd04 	str.w	ip, [sp, #-4]!
10020bbc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10020bc0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020bc4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10020bc8:	bf18      	it	ne
10020bca:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
10020bce:	d01b      	beq.n	10020c08 <__cmpdf2+0x54>
10020bd0:	b001      	add	sp, #4
10020bd2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
10020bd6:	bf0c      	ite	eq
10020bd8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
10020bdc:	ea91 0f03 	teqne	r1, r3
10020be0:	bf02      	ittt	eq
10020be2:	ea90 0f02 	teqeq	r0, r2
10020be6:	2000      	moveq	r0, #0
10020be8:	4770      	bxeq	lr
10020bea:	f110 0f00 	cmn.w	r0, #0
10020bee:	ea91 0f03 	teq	r1, r3
10020bf2:	bf58      	it	pl
10020bf4:	4299      	cmppl	r1, r3
10020bf6:	bf08      	it	eq
10020bf8:	4290      	cmpeq	r0, r2
10020bfa:	bf2c      	ite	cs
10020bfc:	17d8      	asrcs	r0, r3, #31
10020bfe:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
10020c02:	f040 0001 	orr.w	r0, r0, #1
10020c06:	4770      	bx	lr
10020c08:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10020c0c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020c10:	d102      	bne.n	10020c18 <__cmpdf2+0x64>
10020c12:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10020c16:	d107      	bne.n	10020c28 <__cmpdf2+0x74>
10020c18:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10020c1c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020c20:	d1d6      	bne.n	10020bd0 <__cmpdf2+0x1c>
10020c22:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10020c26:	d0d3      	beq.n	10020bd0 <__cmpdf2+0x1c>
10020c28:	f85d 0b04 	ldr.w	r0, [sp], #4
10020c2c:	4770      	bx	lr
10020c2e:	bf00      	nop

10020c30 <__aeabi_cdrcmple>:
10020c30:	4684      	mov	ip, r0
10020c32:	4610      	mov	r0, r2
10020c34:	4662      	mov	r2, ip
10020c36:	468c      	mov	ip, r1
10020c38:	4619      	mov	r1, r3
10020c3a:	4663      	mov	r3, ip
10020c3c:	e000      	b.n	10020c40 <__aeabi_cdcmpeq>
10020c3e:	bf00      	nop

10020c40 <__aeabi_cdcmpeq>:
10020c40:	b501      	push	{r0, lr}
10020c42:	f7ff ffb7 	bl	10020bb4 <__cmpdf2>
10020c46:	2800      	cmp	r0, #0
10020c48:	bf48      	it	mi
10020c4a:	f110 0f00 	cmnmi.w	r0, #0
10020c4e:	bd01      	pop	{r0, pc}

10020c50 <__aeabi_dcmpeq>:
10020c50:	f84d ed08 	str.w	lr, [sp, #-8]!
10020c54:	f7ff fff4 	bl	10020c40 <__aeabi_cdcmpeq>
10020c58:	bf0c      	ite	eq
10020c5a:	2001      	moveq	r0, #1
10020c5c:	2000      	movne	r0, #0
10020c5e:	f85d fb08 	ldr.w	pc, [sp], #8
10020c62:	bf00      	nop

10020c64 <__aeabi_dcmplt>:
10020c64:	f84d ed08 	str.w	lr, [sp, #-8]!
10020c68:	f7ff ffea 	bl	10020c40 <__aeabi_cdcmpeq>
10020c6c:	bf34      	ite	cc
10020c6e:	2001      	movcc	r0, #1
10020c70:	2000      	movcs	r0, #0
10020c72:	f85d fb08 	ldr.w	pc, [sp], #8
10020c76:	bf00      	nop

10020c78 <__aeabi_dcmple>:
10020c78:	f84d ed08 	str.w	lr, [sp, #-8]!
10020c7c:	f7ff ffe0 	bl	10020c40 <__aeabi_cdcmpeq>
10020c80:	bf94      	ite	ls
10020c82:	2001      	movls	r0, #1
10020c84:	2000      	movhi	r0, #0
10020c86:	f85d fb08 	ldr.w	pc, [sp], #8
10020c8a:	bf00      	nop

10020c8c <__aeabi_dcmpge>:
10020c8c:	f84d ed08 	str.w	lr, [sp, #-8]!
10020c90:	f7ff ffce 	bl	10020c30 <__aeabi_cdrcmple>
10020c94:	bf94      	ite	ls
10020c96:	2001      	movls	r0, #1
10020c98:	2000      	movhi	r0, #0
10020c9a:	f85d fb08 	ldr.w	pc, [sp], #8
10020c9e:	bf00      	nop

10020ca0 <__aeabi_dcmpgt>:
10020ca0:	f84d ed08 	str.w	lr, [sp, #-8]!
10020ca4:	f7ff ffc4 	bl	10020c30 <__aeabi_cdrcmple>
10020ca8:	bf34      	ite	cc
10020caa:	2001      	movcc	r0, #1
10020cac:	2000      	movcs	r0, #0
10020cae:	f85d fb08 	ldr.w	pc, [sp], #8
10020cb2:	bf00      	nop

10020cb4 <__aeabi_dcmpun>:
10020cb4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10020cb8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020cbc:	d102      	bne.n	10020cc4 <__aeabi_dcmpun+0x10>
10020cbe:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10020cc2:	d10a      	bne.n	10020cda <__aeabi_dcmpun+0x26>
10020cc4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10020cc8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020ccc:	d102      	bne.n	10020cd4 <__aeabi_dcmpun+0x20>
10020cce:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10020cd2:	d102      	bne.n	10020cda <__aeabi_dcmpun+0x26>
10020cd4:	f04f 0000 	mov.w	r0, #0
10020cd8:	4770      	bx	lr
10020cda:	f04f 0001 	mov.w	r0, #1
10020cde:	4770      	bx	lr

10020ce0 <__aeabi_d2iz>:
10020ce0:	ea4f 0241 	mov.w	r2, r1, lsl #1
10020ce4:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
10020ce8:	d215      	bcs.n	10020d16 <__aeabi_d2iz+0x36>
10020cea:	d511      	bpl.n	10020d10 <__aeabi_d2iz+0x30>
10020cec:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
10020cf0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10020cf4:	d912      	bls.n	10020d1c <__aeabi_d2iz+0x3c>
10020cf6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10020cfa:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
10020cfe:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10020d02:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
10020d06:	fa23 f002 	lsr.w	r0, r3, r2
10020d0a:	bf18      	it	ne
10020d0c:	4240      	negne	r0, r0
10020d0e:	4770      	bx	lr
10020d10:	f04f 0000 	mov.w	r0, #0
10020d14:	4770      	bx	lr
10020d16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10020d1a:	d105      	bne.n	10020d28 <__aeabi_d2iz+0x48>
10020d1c:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
10020d20:	bf08      	it	eq
10020d22:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
10020d26:	4770      	bx	lr
10020d28:	f04f 0000 	mov.w	r0, #0
10020d2c:	4770      	bx	lr
10020d2e:	bf00      	nop

10020d30 <__aeabi_d2uiz>:
10020d30:	004a      	lsls	r2, r1, #1
10020d32:	d211      	bcs.n	10020d58 <__aeabi_d2uiz+0x28>
10020d34:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
10020d38:	d211      	bcs.n	10020d5e <__aeabi_d2uiz+0x2e>
10020d3a:	d50d      	bpl.n	10020d58 <__aeabi_d2uiz+0x28>
10020d3c:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
10020d40:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10020d44:	d40e      	bmi.n	10020d64 <__aeabi_d2uiz+0x34>
10020d46:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10020d4a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
10020d4e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10020d52:	fa23 f002 	lsr.w	r0, r3, r2
10020d56:	4770      	bx	lr
10020d58:	f04f 0000 	mov.w	r0, #0
10020d5c:	4770      	bx	lr
10020d5e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10020d62:	d102      	bne.n	10020d6a <__aeabi_d2uiz+0x3a>
10020d64:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10020d68:	4770      	bx	lr
10020d6a:	f04f 0000 	mov.w	r0, #0
10020d6e:	4770      	bx	lr

10020d70 <__aeabi_d2f>:
10020d70:	ea4f 0241 	mov.w	r2, r1, lsl #1
10020d74:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
10020d78:	bf24      	itt	cs
10020d7a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
10020d7e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
10020d82:	d90d      	bls.n	10020da0 <__aeabi_d2f+0x30>
10020d84:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
10020d88:	ea4f 02c0 	mov.w	r2, r0, lsl #3
10020d8c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
10020d90:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
10020d94:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
10020d98:	bf08      	it	eq
10020d9a:	f020 0001 	biceq.w	r0, r0, #1
10020d9e:	4770      	bx	lr
10020da0:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
10020da4:	d121      	bne.n	10020dea <__aeabi_d2f+0x7a>
10020da6:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
10020daa:	bfbc      	itt	lt
10020dac:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
10020db0:	4770      	bxlt	lr
10020db2:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
10020db6:	ea4f 5252 	mov.w	r2, r2, lsr #21
10020dba:	f1c2 0218 	rsb	r2, r2, #24
10020dbe:	f1c2 0c20 	rsb	ip, r2, #32
10020dc2:	fa10 f30c 	lsls.w	r3, r0, ip
10020dc6:	fa20 f002 	lsr.w	r0, r0, r2
10020dca:	bf18      	it	ne
10020dcc:	f040 0001 	orrne.w	r0, r0, #1
10020dd0:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10020dd4:	ea4f 23d3 	mov.w	r3, r3, lsr #11
10020dd8:	fa03 fc0c 	lsl.w	ip, r3, ip
10020ddc:	ea40 000c 	orr.w	r0, r0, ip
10020de0:	fa23 f302 	lsr.w	r3, r3, r2
10020de4:	ea4f 0343 	mov.w	r3, r3, lsl #1
10020de8:	e7cc      	b.n	10020d84 <__aeabi_d2f+0x14>
10020dea:	ea7f 5362 	mvns.w	r3, r2, asr #21
10020dee:	d107      	bne.n	10020e00 <__aeabi_d2f+0x90>
10020df0:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
10020df4:	bf1e      	ittt	ne
10020df6:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
10020dfa:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
10020dfe:	4770      	bxne	lr
10020e00:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
10020e04:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
10020e08:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
10020e0c:	4770      	bx	lr
10020e0e:	bf00      	nop

10020e10 <__aeabi_uldivmod>:
10020e10:	b953      	cbnz	r3, 10020e28 <__aeabi_uldivmod+0x18>
10020e12:	b94a      	cbnz	r2, 10020e28 <__aeabi_uldivmod+0x18>
10020e14:	2900      	cmp	r1, #0
10020e16:	bf08      	it	eq
10020e18:	2800      	cmpeq	r0, #0
10020e1a:	bf1c      	itt	ne
10020e1c:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
10020e20:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
10020e24:	f000 b9a0 	b.w	10021168 <__aeabi_idiv0>
10020e28:	f1ad 0c08 	sub.w	ip, sp, #8
10020e2c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
10020e30:	f000 f83c 	bl	10020eac <__udivmoddi4>
10020e34:	f8dd e004 	ldr.w	lr, [sp, #4]
10020e38:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10020e3c:	b004      	add	sp, #16
10020e3e:	4770      	bx	lr

10020e40 <__aeabi_d2lz>:
10020e40:	b538      	push	{r3, r4, r5, lr}
10020e42:	2200      	movs	r2, #0
10020e44:	2300      	movs	r3, #0
10020e46:	4604      	mov	r4, r0
10020e48:	460d      	mov	r5, r1
10020e4a:	f7ff ff0b 	bl	10020c64 <__aeabi_dcmplt>
10020e4e:	b928      	cbnz	r0, 10020e5c <__aeabi_d2lz+0x1c>
10020e50:	4620      	mov	r0, r4
10020e52:	4629      	mov	r1, r5
10020e54:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10020e58:	f000 b80a 	b.w	10020e70 <__aeabi_d2ulz>
10020e5c:	4620      	mov	r0, r4
10020e5e:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
10020e62:	f000 f805 	bl	10020e70 <__aeabi_d2ulz>
10020e66:	4240      	negs	r0, r0
10020e68:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10020e6c:	bd38      	pop	{r3, r4, r5, pc}
10020e6e:	bf00      	nop

10020e70 <__aeabi_d2ulz>:
10020e70:	b5d0      	push	{r4, r6, r7, lr}
10020e72:	4b0c      	ldr	r3, [pc, #48]	@ (10020ea4 <__aeabi_d2ulz+0x34>)
10020e74:	2200      	movs	r2, #0
10020e76:	4606      	mov	r6, r0
10020e78:	460f      	mov	r7, r1
10020e7a:	f7ff fc81 	bl	10020780 <__aeabi_dmul>
10020e7e:	f7ff ff57 	bl	10020d30 <__aeabi_d2uiz>
10020e82:	4604      	mov	r4, r0
10020e84:	f7ff fc02 	bl	1002068c <__aeabi_ui2d>
10020e88:	4b07      	ldr	r3, [pc, #28]	@ (10020ea8 <__aeabi_d2ulz+0x38>)
10020e8a:	2200      	movs	r2, #0
10020e8c:	f7ff fc78 	bl	10020780 <__aeabi_dmul>
10020e90:	4602      	mov	r2, r0
10020e92:	460b      	mov	r3, r1
10020e94:	4630      	mov	r0, r6
10020e96:	4639      	mov	r1, r7
10020e98:	f7ff faba 	bl	10020410 <__aeabi_dsub>
10020e9c:	f7ff ff48 	bl	10020d30 <__aeabi_d2uiz>
10020ea0:	4621      	mov	r1, r4
10020ea2:	bdd0      	pop	{r4, r6, r7, pc}
10020ea4:	3df00000 	.word	0x3df00000
10020ea8:	41f00000 	.word	0x41f00000

10020eac <__udivmoddi4>:
10020eac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10020eb0:	9d08      	ldr	r5, [sp, #32]
10020eb2:	460c      	mov	r4, r1
10020eb4:	2b00      	cmp	r3, #0
10020eb6:	d14e      	bne.n	10020f56 <__udivmoddi4+0xaa>
10020eb8:	4694      	mov	ip, r2
10020eba:	458c      	cmp	ip, r1
10020ebc:	4686      	mov	lr, r0
10020ebe:	fab2 f282 	clz	r2, r2
10020ec2:	d962      	bls.n	10020f8a <__udivmoddi4+0xde>
10020ec4:	b14a      	cbz	r2, 10020eda <__udivmoddi4+0x2e>
10020ec6:	f1c2 0320 	rsb	r3, r2, #32
10020eca:	4091      	lsls	r1, r2
10020ecc:	fa20 f303 	lsr.w	r3, r0, r3
10020ed0:	fa0c fc02 	lsl.w	ip, ip, r2
10020ed4:	4319      	orrs	r1, r3
10020ed6:	fa00 fe02 	lsl.w	lr, r0, r2
10020eda:	ea4f 471c 	mov.w	r7, ip, lsr #16
10020ede:	fa1f f68c 	uxth.w	r6, ip
10020ee2:	fbb1 f4f7 	udiv	r4, r1, r7
10020ee6:	ea4f 431e 	mov.w	r3, lr, lsr #16
10020eea:	fb07 1114 	mls	r1, r7, r4, r1
10020eee:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10020ef2:	fb04 f106 	mul.w	r1, r4, r6
10020ef6:	4299      	cmp	r1, r3
10020ef8:	d90a      	bls.n	10020f10 <__udivmoddi4+0x64>
10020efa:	eb1c 0303 	adds.w	r3, ip, r3
10020efe:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
10020f02:	f080 8112 	bcs.w	1002112a <__udivmoddi4+0x27e>
10020f06:	4299      	cmp	r1, r3
10020f08:	f240 810f 	bls.w	1002112a <__udivmoddi4+0x27e>
10020f0c:	3c02      	subs	r4, #2
10020f0e:	4463      	add	r3, ip
10020f10:	1a59      	subs	r1, r3, r1
10020f12:	fa1f f38e 	uxth.w	r3, lr
10020f16:	fbb1 f0f7 	udiv	r0, r1, r7
10020f1a:	fb07 1110 	mls	r1, r7, r0, r1
10020f1e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10020f22:	fb00 f606 	mul.w	r6, r0, r6
10020f26:	429e      	cmp	r6, r3
10020f28:	d90a      	bls.n	10020f40 <__udivmoddi4+0x94>
10020f2a:	eb1c 0303 	adds.w	r3, ip, r3
10020f2e:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
10020f32:	f080 80fc 	bcs.w	1002112e <__udivmoddi4+0x282>
10020f36:	429e      	cmp	r6, r3
10020f38:	f240 80f9 	bls.w	1002112e <__udivmoddi4+0x282>
10020f3c:	4463      	add	r3, ip
10020f3e:	3802      	subs	r0, #2
10020f40:	1b9b      	subs	r3, r3, r6
10020f42:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
10020f46:	2100      	movs	r1, #0
10020f48:	b11d      	cbz	r5, 10020f52 <__udivmoddi4+0xa6>
10020f4a:	40d3      	lsrs	r3, r2
10020f4c:	2200      	movs	r2, #0
10020f4e:	e9c5 3200 	strd	r3, r2, [r5]
10020f52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10020f56:	428b      	cmp	r3, r1
10020f58:	d905      	bls.n	10020f66 <__udivmoddi4+0xba>
10020f5a:	b10d      	cbz	r5, 10020f60 <__udivmoddi4+0xb4>
10020f5c:	e9c5 0100 	strd	r0, r1, [r5]
10020f60:	2100      	movs	r1, #0
10020f62:	4608      	mov	r0, r1
10020f64:	e7f5      	b.n	10020f52 <__udivmoddi4+0xa6>
10020f66:	fab3 f183 	clz	r1, r3
10020f6a:	2900      	cmp	r1, #0
10020f6c:	d146      	bne.n	10020ffc <__udivmoddi4+0x150>
10020f6e:	42a3      	cmp	r3, r4
10020f70:	d302      	bcc.n	10020f78 <__udivmoddi4+0xcc>
10020f72:	4290      	cmp	r0, r2
10020f74:	f0c0 80f0 	bcc.w	10021158 <__udivmoddi4+0x2ac>
10020f78:	1a86      	subs	r6, r0, r2
10020f7a:	eb64 0303 	sbc.w	r3, r4, r3
10020f7e:	2001      	movs	r0, #1
10020f80:	2d00      	cmp	r5, #0
10020f82:	d0e6      	beq.n	10020f52 <__udivmoddi4+0xa6>
10020f84:	e9c5 6300 	strd	r6, r3, [r5]
10020f88:	e7e3      	b.n	10020f52 <__udivmoddi4+0xa6>
10020f8a:	2a00      	cmp	r2, #0
10020f8c:	f040 8090 	bne.w	100210b0 <__udivmoddi4+0x204>
10020f90:	eba1 040c 	sub.w	r4, r1, ip
10020f94:	ea4f 481c 	mov.w	r8, ip, lsr #16
10020f98:	fa1f f78c 	uxth.w	r7, ip
10020f9c:	2101      	movs	r1, #1
10020f9e:	fbb4 f6f8 	udiv	r6, r4, r8
10020fa2:	ea4f 431e 	mov.w	r3, lr, lsr #16
10020fa6:	fb08 4416 	mls	r4, r8, r6, r4
10020faa:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
10020fae:	fb07 f006 	mul.w	r0, r7, r6
10020fb2:	4298      	cmp	r0, r3
10020fb4:	d908      	bls.n	10020fc8 <__udivmoddi4+0x11c>
10020fb6:	eb1c 0303 	adds.w	r3, ip, r3
10020fba:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
10020fbe:	d202      	bcs.n	10020fc6 <__udivmoddi4+0x11a>
10020fc0:	4298      	cmp	r0, r3
10020fc2:	f200 80cd 	bhi.w	10021160 <__udivmoddi4+0x2b4>
10020fc6:	4626      	mov	r6, r4
10020fc8:	1a1c      	subs	r4, r3, r0
10020fca:	fa1f f38e 	uxth.w	r3, lr
10020fce:	fbb4 f0f8 	udiv	r0, r4, r8
10020fd2:	fb08 4410 	mls	r4, r8, r0, r4
10020fd6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
10020fda:	fb00 f707 	mul.w	r7, r0, r7
10020fde:	429f      	cmp	r7, r3
10020fe0:	d908      	bls.n	10020ff4 <__udivmoddi4+0x148>
10020fe2:	eb1c 0303 	adds.w	r3, ip, r3
10020fe6:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
10020fea:	d202      	bcs.n	10020ff2 <__udivmoddi4+0x146>
10020fec:	429f      	cmp	r7, r3
10020fee:	f200 80b0 	bhi.w	10021152 <__udivmoddi4+0x2a6>
10020ff2:	4620      	mov	r0, r4
10020ff4:	1bdb      	subs	r3, r3, r7
10020ff6:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
10020ffa:	e7a5      	b.n	10020f48 <__udivmoddi4+0x9c>
10020ffc:	f1c1 0620 	rsb	r6, r1, #32
10021000:	408b      	lsls	r3, r1
10021002:	fa22 f706 	lsr.w	r7, r2, r6
10021006:	431f      	orrs	r7, r3
10021008:	fa20 fc06 	lsr.w	ip, r0, r6
1002100c:	fa04 f301 	lsl.w	r3, r4, r1
10021010:	ea43 030c 	orr.w	r3, r3, ip
10021014:	40f4      	lsrs	r4, r6
10021016:	fa00 f801 	lsl.w	r8, r0, r1
1002101a:	0c38      	lsrs	r0, r7, #16
1002101c:	ea4f 4913 	mov.w	r9, r3, lsr #16
10021020:	fbb4 fef0 	udiv	lr, r4, r0
10021024:	fa1f fc87 	uxth.w	ip, r7
10021028:	fb00 441e 	mls	r4, r0, lr, r4
1002102c:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
10021030:	fb0e f90c 	mul.w	r9, lr, ip
10021034:	45a1      	cmp	r9, r4
10021036:	fa02 f201 	lsl.w	r2, r2, r1
1002103a:	d90a      	bls.n	10021052 <__udivmoddi4+0x1a6>
1002103c:	193c      	adds	r4, r7, r4
1002103e:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
10021042:	f080 8084 	bcs.w	1002114e <__udivmoddi4+0x2a2>
10021046:	45a1      	cmp	r9, r4
10021048:	f240 8081 	bls.w	1002114e <__udivmoddi4+0x2a2>
1002104c:	f1ae 0e02 	sub.w	lr, lr, #2
10021050:	443c      	add	r4, r7
10021052:	eba4 0409 	sub.w	r4, r4, r9
10021056:	fa1f f983 	uxth.w	r9, r3
1002105a:	fbb4 f3f0 	udiv	r3, r4, r0
1002105e:	fb00 4413 	mls	r4, r0, r3, r4
10021062:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
10021066:	fb03 fc0c 	mul.w	ip, r3, ip
1002106a:	45a4      	cmp	ip, r4
1002106c:	d907      	bls.n	1002107e <__udivmoddi4+0x1d2>
1002106e:	193c      	adds	r4, r7, r4
10021070:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
10021074:	d267      	bcs.n	10021146 <__udivmoddi4+0x29a>
10021076:	45a4      	cmp	ip, r4
10021078:	d965      	bls.n	10021146 <__udivmoddi4+0x29a>
1002107a:	3b02      	subs	r3, #2
1002107c:	443c      	add	r4, r7
1002107e:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
10021082:	fba0 9302 	umull	r9, r3, r0, r2
10021086:	eba4 040c 	sub.w	r4, r4, ip
1002108a:	429c      	cmp	r4, r3
1002108c:	46ce      	mov	lr, r9
1002108e:	469c      	mov	ip, r3
10021090:	d351      	bcc.n	10021136 <__udivmoddi4+0x28a>
10021092:	d04e      	beq.n	10021132 <__udivmoddi4+0x286>
10021094:	b155      	cbz	r5, 100210ac <__udivmoddi4+0x200>
10021096:	ebb8 030e 	subs.w	r3, r8, lr
1002109a:	eb64 040c 	sbc.w	r4, r4, ip
1002109e:	fa04 f606 	lsl.w	r6, r4, r6
100210a2:	40cb      	lsrs	r3, r1
100210a4:	431e      	orrs	r6, r3
100210a6:	40cc      	lsrs	r4, r1
100210a8:	e9c5 6400 	strd	r6, r4, [r5]
100210ac:	2100      	movs	r1, #0
100210ae:	e750      	b.n	10020f52 <__udivmoddi4+0xa6>
100210b0:	f1c2 0320 	rsb	r3, r2, #32
100210b4:	fa20 f103 	lsr.w	r1, r0, r3
100210b8:	fa0c fc02 	lsl.w	ip, ip, r2
100210bc:	fa24 f303 	lsr.w	r3, r4, r3
100210c0:	4094      	lsls	r4, r2
100210c2:	430c      	orrs	r4, r1
100210c4:	ea4f 481c 	mov.w	r8, ip, lsr #16
100210c8:	fa00 fe02 	lsl.w	lr, r0, r2
100210cc:	fa1f f78c 	uxth.w	r7, ip
100210d0:	fbb3 f0f8 	udiv	r0, r3, r8
100210d4:	fb08 3110 	mls	r1, r8, r0, r3
100210d8:	0c23      	lsrs	r3, r4, #16
100210da:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
100210de:	fb00 f107 	mul.w	r1, r0, r7
100210e2:	4299      	cmp	r1, r3
100210e4:	d908      	bls.n	100210f8 <__udivmoddi4+0x24c>
100210e6:	eb1c 0303 	adds.w	r3, ip, r3
100210ea:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
100210ee:	d22c      	bcs.n	1002114a <__udivmoddi4+0x29e>
100210f0:	4299      	cmp	r1, r3
100210f2:	d92a      	bls.n	1002114a <__udivmoddi4+0x29e>
100210f4:	3802      	subs	r0, #2
100210f6:	4463      	add	r3, ip
100210f8:	1a5b      	subs	r3, r3, r1
100210fa:	b2a4      	uxth	r4, r4
100210fc:	fbb3 f1f8 	udiv	r1, r3, r8
10021100:	fb08 3311 	mls	r3, r8, r1, r3
10021104:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
10021108:	fb01 f307 	mul.w	r3, r1, r7
1002110c:	42a3      	cmp	r3, r4
1002110e:	d908      	bls.n	10021122 <__udivmoddi4+0x276>
10021110:	eb1c 0404 	adds.w	r4, ip, r4
10021114:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
10021118:	d213      	bcs.n	10021142 <__udivmoddi4+0x296>
1002111a:	42a3      	cmp	r3, r4
1002111c:	d911      	bls.n	10021142 <__udivmoddi4+0x296>
1002111e:	3902      	subs	r1, #2
10021120:	4464      	add	r4, ip
10021122:	1ae4      	subs	r4, r4, r3
10021124:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
10021128:	e739      	b.n	10020f9e <__udivmoddi4+0xf2>
1002112a:	4604      	mov	r4, r0
1002112c:	e6f0      	b.n	10020f10 <__udivmoddi4+0x64>
1002112e:	4608      	mov	r0, r1
10021130:	e706      	b.n	10020f40 <__udivmoddi4+0x94>
10021132:	45c8      	cmp	r8, r9
10021134:	d2ae      	bcs.n	10021094 <__udivmoddi4+0x1e8>
10021136:	ebb9 0e02 	subs.w	lr, r9, r2
1002113a:	eb63 0c07 	sbc.w	ip, r3, r7
1002113e:	3801      	subs	r0, #1
10021140:	e7a8      	b.n	10021094 <__udivmoddi4+0x1e8>
10021142:	4631      	mov	r1, r6
10021144:	e7ed      	b.n	10021122 <__udivmoddi4+0x276>
10021146:	4603      	mov	r3, r0
10021148:	e799      	b.n	1002107e <__udivmoddi4+0x1d2>
1002114a:	4630      	mov	r0, r6
1002114c:	e7d4      	b.n	100210f8 <__udivmoddi4+0x24c>
1002114e:	46d6      	mov	lr, sl
10021150:	e77f      	b.n	10021052 <__udivmoddi4+0x1a6>
10021152:	4463      	add	r3, ip
10021154:	3802      	subs	r0, #2
10021156:	e74d      	b.n	10020ff4 <__udivmoddi4+0x148>
10021158:	4606      	mov	r6, r0
1002115a:	4623      	mov	r3, r4
1002115c:	4608      	mov	r0, r1
1002115e:	e70f      	b.n	10020f80 <__udivmoddi4+0xd4>
10021160:	3e02      	subs	r6, #2
10021162:	4463      	add	r3, ip
10021164:	e730      	b.n	10020fc8 <__udivmoddi4+0x11c>
10021166:	bf00      	nop

10021168 <__aeabi_idiv0>:
10021168:	4770      	bx	lr
1002116a:	bf00      	nop
1002116c:	65642525 	.word	0x65642525
10021170:	3a677562 	.word	0x3a677562
10021174:	00000020 	.word	0x00000020
10021178:	73726946 	.word	0x73726946
1002117c:	6f622074 	.word	0x6f622074
10021180:	202c746f 	.word	0x202c746f
10021184:	74746573 	.word	0x74746573
10021188:	20676e69 	.word	0x20676e69
1002118c:	73616c66 	.word	0x73616c66
10021190:	00002168 	.word	0x00002168
10021194:	00002525 	.word	0x00002525
10021198:	6e692525 	.word	0x6e692525
1002119c:	203a6f66 	.word	0x203a6f66
100211a0:	00000000 	.word	0x00000000
100211a4:	78303e50 	.word	0x78303e50
100211a8:	78383025 	.word	0x78383025
100211ac:	0000000a 	.word	0x0000000a
100211b0:	78303e46 	.word	0x78303e46
100211b4:	78383025 	.word	0x78383025
100211b8:	0000000a 	.word	0x0000000a
100211bc:	75732525 	.word	0x75732525
100211c0:	73656363 	.word	0x73656363
100211c4:	00203a73 	.word	0x00203a73
100211c8:	7473694c 	.word	0x7473694c
100211cc:	00000000 	.word	0x00000000
100211d0:	72652525 	.word	0x72652525
100211d4:	3a726f72 	.word	0x3a726f72
100211d8:	00000020 	.word	0x00000020
100211dc:	6c756f43 	.word	0x6c756f43
100211e0:	6f6e2064 	.word	0x6f6e2064
100211e4:	61762074 	.word	0x61762074
100211e8:	6164696c 	.word	0x6164696c
100211ec:	63206574 	.word	0x63206574
100211f0:	6f706d6f 	.word	0x6f706d6f
100211f4:	746e656e 	.word	0x746e656e
100211f8:	00000000 	.word	0x00000000
100211fc:	706d6f43 	.word	0x706d6f43
10021200:	6e656e6f 	.word	0x6e656e6f
10021204:	44492074 	.word	0x44492074
10021208:	7830203a 	.word	0x7830203a
1002120c:	78383025 	.word	0x78383025
10021210:	766e6920 	.word	0x766e6920
10021214:	64696c61 	.word	0x64696c61
10021218:	0000000a 	.word	0x0000000a
1002121c:	30257830 	.word	0x30257830
10021220:	253e7838 	.word	0x253e7838
10021224:	00000a73 	.word	0x00000a73
10021228:	6c756f43 	.word	0x6c756f43
1002122c:	6f6e2064 	.word	0x6f6e2064
10021230:	6f622074 	.word	0x6f622074
10021234:	6320746f 	.word	0x6320746f
10021238:	6f706d6f 	.word	0x6f706d6f
1002123c:	746e656e 	.word	0x746e656e
10021240:	00000000 	.word	0x00000000
10021244:	78303e43 	.word	0x78303e43
10021248:	78383025 	.word	0x78383025
1002124c:	0000000a 	.word	0x0000000a
10021250:	00007325 	.word	0x00007325
10021254:	6c756f43 	.word	0x6c756f43
10021258:	6f6e2064 	.word	0x6f6e2064
1002125c:	74612074 	.word	0x74612074
10021260:	74736574 	.word	0x74736574
10021264:	6d6f6320 	.word	0x6d6f6320
10021268:	656e6f70 	.word	0x656e6f70
1002126c:	0000746e 	.word	0x0000746e
10021270:	706d6f43 	.word	0x706d6f43
10021274:	6e656e6f 	.word	0x6e656e6f
10021278:	44492074 	.word	0x44492074
1002127c:	0000203a 	.word	0x0000203a
10021280:	00007825 	.word	0x00007825
10021284:	65747441 	.word	0x65747441
10021288:	00007473 	.word	0x00007473
1002128c:	70797243 	.word	0x70797243
10021290:	45206f74 	.word	0x45206f74
10021294:	706d6178 	.word	0x706d6178
10021298:	0021656c 	.word	0x0021656c
1002129c:	72636e45 	.word	0x72636e45
100212a0:	65747079 	.word	0x65747079
100212a4:	61642064 	.word	0x61642064
100212a8:	203a6174 	.word	0x203a6174
100212ac:	00000000 	.word	0x00000000
100212b0:	68736148 	.word	0x68736148
100212b4:	73657220 	.word	0x73657220
100212b8:	3a746c75 	.word	0x3a746c75
100212bc:	00000020 	.word	0x00000020
100212c0:	72636544 	.word	0x72636544
100212c4:	65747079 	.word	0x65747079
100212c8:	656d2064 	.word	0x656d2064
100212cc:	67617373 	.word	0x67617373
100212d0:	25203a65 	.word	0x25203a65
100212d4:	000a0d73 	.word	0x000a0d73
100212d8:	65746e45 	.word	0x65746e45
100212dc:	69702072 	.word	0x69702072
100212e0:	00203a6e 	.word	0x00203a6e
100212e4:	32343935 	.word	0x32343935
100212e8:	00003333 	.word	0x00003333
100212ec:	206e6950 	.word	0x206e6950
100212f0:	65636341 	.word	0x65636341
100212f4:	64657470 	.word	0x64657470
100212f8:	00000021 	.word	0x00000021
100212fc:	61766e49 	.word	0x61766e49
10021300:	2064696c 	.word	0x2064696c
10021304:	214e4950 	.word	0x214e4950
10021308:	00000000 	.word	0x00000000
1002130c:	65746e45 	.word	0x65746e45
10021310:	6f742072 	.word	0x6f742072
10021314:	3a6e656b 	.word	0x3a6e656b
10021318:	00000020 	.word	0x00000020
1002131c:	37353331 	.word	0x37353331
10021320:	36383039 	.word	0x36383039
10021324:	61633234 	.word	0x61633234
10021328:	66656462 	.word	0x66656462
1002132c:	00000000 	.word	0x00000000
10021330:	656b6f54 	.word	0x656b6f54
10021334:	6341206e 	.word	0x6341206e
10021338:	74706563 	.word	0x74706563
1002133c:	00216465 	.word	0x00216465
10021340:	61766e49 	.word	0x61766e49
10021344:	2064696c 	.word	0x2064696c
10021348:	656b6f54 	.word	0x656b6f54
1002134c:	0000216e 	.word	0x0000216e
10021350:	706d6f43 	.word	0x706d6f43
10021354:	6e656e6f 	.word	0x6e656e6f
10021358:	63207374 	.word	0x63207374
1002135c:	646c756f 	.word	0x646c756f
10021360:	746f6e20 	.word	0x746f6e20
10021364:	20656220 	.word	0x20656220
10021368:	696c6176 	.word	0x696c6176
1002136c:	65746164 	.word	0x65746164
10021370:	00000064 	.word	0x00000064
10021374:	206c6c41 	.word	0x206c6c41
10021378:	706d6f43 	.word	0x706d6f43
1002137c:	6e656e6f 	.word	0x6e656e6f
10021380:	76207374 	.word	0x76207374
10021384:	64696c61 	.word	0x64696c61
10021388:	64657461 	.word	0x64657461
1002138c:	00000000 	.word	0x00000000
10021390:	6c696146 	.word	0x6c696146
10021394:	74206465 	.word	0x74206465
10021398:	6f62206f 	.word	0x6f62206f
1002139c:	6120746f 	.word	0x6120746f
100213a0:	63206c6c 	.word	0x63206c6c
100213a4:	6f706d6f 	.word	0x6f706d6f
100213a8:	746e656e 	.word	0x746e656e
100213ac:	00000073 	.word	0x00000073
100213b0:	66746365 	.word	0x66746365
100213b4:	43415020 	.word	0x43415020
100213b8:	654e2045 	.word	0x654e2045
100213bc:	6f592077 	.word	0x6f592077
100213c0:	00006b72 	.word	0x00006b72
100213c4:	253e5041 	.word	0x253e5041
100213c8:	00000a73 	.word	0x00000a73
100213cc:	746f6f42 	.word	0x746f6f42
100213d0:	00000000 	.word	0x00000000
100213d4:	706d6f43 	.word	0x706d6f43
100213d8:	6e656e6f 	.word	0x6e656e6f
100213dc:	44492074 	.word	0x44492074
100213e0:	3a6e4920 	.word	0x3a6e4920
100213e4:	00000020 	.word	0x00000020
100213e8:	706d6f43 	.word	0x706d6f43
100213ec:	6e656e6f 	.word	0x6e656e6f
100213f0:	44492074 	.word	0x44492074
100213f4:	74754f20 	.word	0x74754f20
100213f8:	0000203a 	.word	0x0000203a
100213fc:	6c706552 	.word	0x6c706552
10021400:	64656361 	.word	0x64656361
10021404:	25783020 	.word	0x25783020
10021408:	20783830 	.word	0x20783830
1002140c:	68746977 	.word	0x68746977
10021410:	25783020 	.word	0x25783020
10021414:	0a783830 	.word	0x0a783830
10021418:	00000000 	.word	0x00000000
1002141c:	6c706552 	.word	0x6c706552
10021420:	00656361 	.word	0x00656361
10021424:	706d6f43 	.word	0x706d6f43
10021428:	6e656e6f 	.word	0x6e656e6f
1002142c:	78302074 	.word	0x78302074
10021430:	78383025 	.word	0x78383025
10021434:	20736920 	.word	0x20736920
10021438:	20746f6e 	.word	0x20746f6e
1002143c:	766f7270 	.word	0x766f7270
10021440:	6f697369 	.word	0x6f697369
10021444:	2064656e 	.word	0x2064656e
10021448:	20726f66 	.word	0x20726f66
1002144c:	20656874 	.word	0x20656874
10021450:	74737973 	.word	0x74737973
10021454:	0a0d6d65 	.word	0x0a0d6d65
10021458:	00000000 	.word	0x00000000
1002145c:	6c707041 	.word	0x6c707041
10021460:	74616369 	.word	0x74616369
10021464:	206e6f69 	.word	0x206e6f69
10021468:	636f7250 	.word	0x636f7250
1002146c:	6f737365 	.word	0x6f737365
10021470:	74532072 	.word	0x74532072
10021474:	65747261 	.word	0x65747261
10021478:	00000064 	.word	0x00000064
1002147c:	65746e45 	.word	0x65746e45
10021480:	6f432072 	.word	0x6f432072
10021484:	6e616d6d 	.word	0x6e616d6d
10021488:	00203a64 	.word	0x00203a64
1002148c:	7473696c 	.word	0x7473696c
10021490:	00000000 	.word	0x00000000
10021494:	746f6f62 	.word	0x746f6f62
10021498:	00000000 	.word	0x00000000
1002149c:	6c706572 	.word	0x6c706572
100214a0:	00656361 	.word	0x00656361
100214a4:	65747461 	.word	0x65747461
100214a8:	00007473 	.word	0x00007473
100214ac:	65726e55 	.word	0x65726e55
100214b0:	6e676f63 	.word	0x6e676f63
100214b4:	64657a69 	.word	0x64657a69
100214b8:	6d6f6320 	.word	0x6d6f6320
100214bc:	646e616d 	.word	0x646e616d
100214c0:	73252720 	.word	0x73252720
100214c4:	00000a27 	.word	0x00000a27
100214c8:	63612525 	.word	0x63612525
100214cc:	0a25256b 	.word	0x0a25256b
100214d0:	00000000 	.word	0x00000000
100214d4:	78323025 	.word	0x78323025
100214d8:	00000000 	.word	0x00000000
100214dc:	203e2d20 	.word	0x203e2d20
100214e0:	65746e49 	.word	0x65746e49
100214e4:	70757272 	.word	0x70757272
100214e8:	28202174 	.word	0x28202174
100214ec:	73616c46 	.word	0x73616c46
100214f0:	63612068 	.word	0x63612068
100214f4:	73736563 	.word	0x73736563
100214f8:	69616620 	.word	0x69616620
100214fc:	6572756c 	.word	0x6572756c
10021500:	00000a29 	.word	0x00000a29
10021504:	6c696146 	.word	0x6c696146
10021508:	74206465 	.word	0x74206465
1002150c:	6e69206f 	.word	0x6e69206f
10021510:	61697469 	.word	0x61697469
10021514:	657a696c 	.word	0x657a696c
10021518:	43324920 	.word	0x43324920
1002151c:	0000002e 	.word	0x0000002e

10021520 <Td4>:
10021520:	d56a0952 38a53630 9ea340bf fbd7f381     R.j.06.8.@......
10021530:	8239e37c 87ff2f9b 44438e34 cbe9dec4     |.9../..4.CD....
10021540:	32947b54 3d23c2a6 0b954cee 4ec3fa42     T{.2..#=.L..B..N
10021550:	66a12e08 b224d928 49a25b76 25d18b6d     ...f(.$.v[.Im..%
10021560:	64f6f872 16986886 cc5ca4d4 92b6655d     r..d.h....\.]e..
10021570:	5048706c dab9edfd 5746155e 849d8da7     lpHP....^.FW....
10021580:	00abd890 0ad3bc8c 0558e4f7 0645b3b8     ..........X...E.
10021590:	8f1e2cd0 020f3fca 03bdafc1 6b8a1301     .,...?.........k
100215a0:	4111913a eadc674f cecff297 73e6b4f0     :..AOg.........s
100215b0:	2274ac96 8535ade7 e837f9e2 6edf751c     ..t"..5...7..u.n
100215c0:	711af147 89c5291d 0e62b76f 1bbe18aa     G..q.)..o.b.....
100215d0:	4b3e56fc 2079d2c6 fec0db9a f45acd78     .V>K..y ....x.Z.
100215e0:	33a8dd1f 31c70788 591012b1 5fec8027     ...3...1...Y'.._
100215f0:	a97f5160 0d4ab519 9f7ae52d ef9cc993     `Q....J.-.z.....
10021600:	4d3be0a0 b0f52aae 3cbbebc8 61995383     ..;M.*.....<.S.a
10021610:	7e042b17 26d677ba 631469e1 7d0c2155     .+.~.w.&.i.cU!.}

10021620 <Td>:
10021620:	51f4a750 7e416553 1a17a4c3 3a275e96     P..QSeA~.....^':
10021630:	3bab6bcb 1f9d45f1 acfa58ab 4be30393     .k.;.E...X.....K
10021640:	2030fa55 ad766df6 88cc7691 f5024c25     U.0 .mv..v..%L..
10021650:	4fe5d7fc c52acbd7 26354480 b562a38f     ...O..*..D5&..b.
10021660:	deb15a49 25ba1b67 45ea0e98 5dfec0e1     IZ..g..%...E...]
10021670:	c32f7502 814cf012 8d4697a3 6bd3f9c6     .u/...L...F....k
10021680:	038f5fe7 15929c95 bf6d7aeb 955259da     ._.......zm..YR.
10021690:	d4be832d 587421d3 49e06929 8ec9c844     -....!tX)i.ID...
100216a0:	75c2896a f48e7978 99583e6b 27b971dd     j..uxy..k>X..q.'
100216b0:	bee14fb6 f088ad17 c920ac66 7dce3ab4     .O......f. ..:.}
100216c0:	63df4a18 e51a3182 97513360 62537f45     .J.c.1..`3Q.E.Sb
100216d0:	b16477e0 bb6bae84 fe81a01c f9082b94     .wd...k......+..
100216e0:	70486858 8f45fd19 94de6c87 527bf8b7     XhHp..E..l....{R
100216f0:	ab73d323 724b02e2 e31f8f57 6655ab2a     #.s...KrW...*.Uf
10021700:	b2eb2807 2fb5c203 86c57b9a d33708a5     .(...../.{....7.
10021710:	302887f2 23bfa5b2 02036aba ed16825c     ..(0...#.j..\...
10021720:	8acf1c2b a779b492 f307f2f0 4e69e2a1     +.....y.......iN
10021730:	65daf4cd 0605bed5 d134621f c4a6fe8a     ...e.....b4.....
10021740:	342e539d a2f355a0 058ae132 a4f6eb75     .S.4.U..2...u...
10021750:	0b83ec39 4060efaa 5e719f06 bd6e1051     9.....`@..q^Q.n.
10021760:	3e218af9 96dd063d dd3e05ae 4de6bd46     ..!>=.....>.F..M
10021770:	91548db5 71c45d05 0406d46f 605015ff     ..T..].qo.....P`
10021780:	1998fb24 d6bde997 894043cc 67d99e77     $........C@.w..g
10021790:	b0e842bd 07898b88 e7195b38 79c8eedb     .B......8[.....y
100217a0:	a17c0a47 7c420fe9 f8841ec9 00000000     G.|...B|........
100217b0:	09808683 322bed48 1e1170ac 6c5a724e     ....H.+2.p..NrZl
100217c0:	fd0efffb 0f853856 3daed51e 362d3927     ....V8.....='9-6
100217d0:	0a0fd964 685ca621 9b5b54d1 24362e3a     d...!.\h.T[.:.6$
100217e0:	0c0a67b1 9357e70f b4ee96d2 1b9b919e     .g....W.........
100217f0:	80c0c54f 61dc20a2 5a774b69 1c121a16     O.... .aiKwZ....
10021800:	e293ba0a c0a02ae5 3c22e043 121b171d     .....*..C."<....
10021810:	0e090d0b f28bc7ad 2db6a8b9 141ea9c8     ...........-....
10021820:	57f11985 af75074c ee99ddbb a37f60fd     ...WL.u......`..
10021830:	f701269f 5c72f5bc 44663bc5 5bfb7e34     .&....r\.;fD4~.[
10021840:	8b432976 cb23c6dc b6edfc68 b8e4f163     v)C...#.h...c...
10021850:	d731dcca 42638510 13972240 84c61120     ..1...cB@".. ...
10021860:	854a247d d2bb3df8 aef93211 c729a16d     }$J..=...2..m.).
10021870:	1d9e2f4b dcb230f3 0d8652ec 77c1e3d0     K/...0...R.....w
10021880:	2bb3166c a970b999 119448fa 47e96422     l..+..p..H.."d.G
10021890:	a8fc8cc4 a0f03f1a 567d2cd8 223390ef     .....?...,}V..3"
100218a0:	87494ec7 d938d1c1 8ccaa2fe 98d40b36     .NI...8.....6...
100218b0:	a6f581cf a57ade28 dab78e26 3fadbfa4     ....(.z.&......?
100218c0:	2c3a9de4 5078920d 6a5fcc9b 547e4662     ..:,..xP.._jbF~T
100218d0:	f68d13c2 90d8b8e8 2e39f75e 82c3aff5     ........^.9.....
100218e0:	9f5d80be 69d0937c 6fd52da9 cf2512b3     ..].|..i.-.o..%.
100218f0:	c8ac993b 10187da7 e89c636e db3bbb7b     ;....}..nc..{.;.
10021900:	cd267809 6e5918f4 ec9ab701 834f9aa8     .x&...Yn......O.
10021910:	e6956e65 aaffe67e 21bccf08 ef15e8e6     en..~......!....
10021920:	bae79bd9 4a6f36ce ea9f09d4 29b07cd6     .....6oJ.....|.)
10021930:	31a4b2af 2a3f2331 c6a59430 35a266c0     ...11#?*0....f.5
10021940:	744ebc37 fc82caa6 e090d0b0 33a7d815     7.Nt...........3
10021950:	f104984a 41ecdaf7 7fcd500e 1791f62f     J......A.P../...
10021960:	764dd68d 43efb04d ccaa4d54 e49604df     ..MvM..CTM......
10021970:	9ed1b5e3 4c6a881b c12c1fb8 4665517f     ......jL..,..QeF
10021980:	9d5eea04 018c355d fa877473 fb0b412e     ..^.]5..st...A..
10021990:	b3671d5a 92dbd252 e9105633 6dd64713     Z.g.R...3V...G.m
100219a0:	9ad7618c 37a10c7a 59f8148e eb133c89     .a..z..7...Y.<..
100219b0:	cea927ee b761c935 e11ce5ed 7a47b13c     .'..5.a.....<.Gz
100219c0:	9cd2df59 55f2733f 1814ce79 73c737bf     Y...?s.Uy....7.s
100219d0:	53f7cdea 5ffdaa5b df3d6f14 7844db86     ...S[.._.o=...Dx
100219e0:	caaff381 b968c43e 3824342c c2a3405f     ....>.h.,4$8_@..
100219f0:	161dc372 bce2250c 283c498b ff0d9541     r....%...I<(A...
10021a00:	39a80171 080cb3de d8b4e49c 6456c190     q..9..........Vd
10021a10:	7bcb8461 d532b670 486c5c74 d0b85742     a..{p.2.t\lHBW..
10021a20:	5051f4a7 537e4165 c31a17a4 963a275e     ..QPeA~S....^':.
10021a30:	cb3bab6b f11f9d45 abacfa58 934be303     k.;.E...X.....K.
10021a40:	552030fa f6ad766d 9188cc76 25f5024c     .0 Umv..v...L..%
10021a50:	fc4fe5d7 d7c52acb 80263544 8fb562a3     ..O..*..D5&..b..
10021a60:	49deb15a 6725ba1b 9845ea0e e15dfec0     Z..I..%g..E...].
10021a70:	02c32f75 12814cf0 a38d4697 c66bd3f9     u/...L...F....k.
10021a80:	e7038f5f 9515929c ebbf6d7a da955259     _.......zm..YR..
10021a90:	2dd4be83 d3587421 2949e069 448ec9c8     ...-!tX.i.I)...D
10021aa0:	6a75c289 78f48e79 6b99583e dd27b971     ..ujy..x>X.kq.'.
10021ab0:	b6bee14f 17f088ad 66c920ac b47dce3a     O........ .f:.}.
10021ac0:	1863df4a 82e51a31 60975133 4562537f     J.c.1...3Q.`.SbE
10021ad0:	e0b16477 84bb6bae 1cfe81a0 94f9082b     wd...k......+...
10021ae0:	58704868 198f45fd 8794de6c b7527bf8     hHpX.E..l....{R.
10021af0:	23ab73d3 e2724b02 57e31f8f 2a6655ab     .s.#.Kr....W.Uf*
10021b00:	07b2eb28 032fb5c2 9a86c57b a5d33708     (...../.{....7..
10021b10:	f2302887 b223bfa5 ba02036a 5ced1682     .(0...#.j......\
10021b20:	2b8acf1c 92a779b4 f0f307f2 a14e69e2     ...+.y.......iN.
10021b30:	cd65daf4 d50605be 1fd13462 8ac4a6fe     ..e.....b4......
10021b40:	9d342e53 a0a2f355 32058ae1 75a4f6eb     S.4.U......2...u
10021b50:	390b83ec aa4060ef 065e719f 51bd6e10     ...9.`@..q^..n.Q
10021b60:	f93e218a 3d96dd06 aedd3e05 464de6bd     .!>....=.>....MF
10021b70:	b591548d 0571c45d 6f0406d4 ff605015     .T..].q....o.P`.
10021b80:	241998fb 97d6bde9 cc894043 7767d99e     ...$....C@....gw
10021b90:	bdb0e842 8807898b 38e7195b db79c8ee     B.......[..8..y.
10021ba0:	47a17c0a e97c420f c9f8841e 00000000     .|.G.B|.........
10021bb0:	83098086 48322bed ac1e1170 4e6c5a72     .....+2Hp...rZlN
10021bc0:	fbfd0eff 560f8538 1e3daed5 27362d39     ....8..V..=.9-6'
10021bd0:	640a0fd9 21685ca6 d19b5b54 3a24362e     ...d.\h!T[...6$:
10021be0:	b10c0a67 0f9357e7 d2b4ee96 9e1b9b91     g....W..........
10021bf0:	4f80c0c5 a261dc20 695a774b 161c121a     ...O .a.KwZi....
10021c00:	0ae293ba e5c0a02a 433c22e0 1d121b17     ....*...."<C....
10021c10:	0b0e090d adf28bc7 b92db6a8 c8141ea9     ..........-.....
10021c20:	8557f119 4caf7507 bbee99dd fda37f60     ..W..u.L....`...
10021c30:	9ff70126 bc5c72f5 c544663b 345bfb7e     &....r\.;fD.~.[4
10021c40:	768b4329 dccb23c6 68b6edfc 63b8e4f1     )C.v.#.....h...c
10021c50:	cad731dc 10426385 40139722 2084c611     .1...cB."..@... 
10021c60:	7d854a24 f8d2bb3d 11aef932 6dc729a1     $J.}=...2....).m
10021c70:	4b1d9e2f f3dcb230 ec0d8652 d077c1e3     /..K0...R.....w.
10021c80:	6c2bb316 99a970b9 fa119448 2247e964     ..+l.p..H...d.G"
10021c90:	c4a8fc8c 1aa0f03f d8567d2c ef223390     ....?...,}V..3".
10021ca0:	c787494e c1d938d1 fe8ccaa2 3698d40b     NI...8.........6
10021cb0:	cfa6f581 28a57ade 26dab78e a43fadbf     .....z.(...&..?.
10021cc0:	e42c3a9d 0d507892 9b6a5fcc 62547e46     .:,..xP.._j.F~Tb
10021cd0:	c2f68d13 e890d8b8 5e2e39f7 f582c3af     .........9.^....
10021ce0:	be9f5d80 7c69d093 a96fd52d b3cf2512     .]....i|-.o..%..
10021cf0:	3bc8ac99 a710187d 6ee89c63 7bdb3bbb     ...;}...c..n.;.{
10021d00:	09cd2678 f46e5918 01ec9ab7 a8834f9a     x&...Yn......O..
10021d10:	65e6956e 7eaaffe6 0821bccf e6ef15e8     n..e...~..!.....
10021d20:	d9bae79b ce4a6f36 d4ea9f09 d629b07c     ....6oJ.....|.).
10021d30:	af31a4b2 312a3f23 30c6a594 c035a266     ..1.#?*1...0f.5.
10021d40:	37744ebc a6fc82ca b0e090d0 1533a7d8     .Nt7..........3.
10021d50:	4af10498 f741ecda 0e7fcd50 2f1791f6     ...J..A.P....../
10021d60:	8d764dd6 4d43efb0 54ccaa4d dfe49604     .Mv...CMM..T....
10021d70:	e39ed1b5 1b4c6a88 b8c12c1f 7f466551     .....jL..,..QeF.
10021d80:	049d5eea 5d018c35 73fa8774 2efb0b41     .^..5..]t..sA...
10021d90:	5ab3671d 5292dbd2 33e91056 136dd647     .g.Z...RV..3G.m.
10021da0:	8c9ad761 7a37a10c 8e59f814 89eb133c     a.....7z..Y.<...
10021db0:	eecea927 35b761c9 ede11ce5 3c7a47b1     '....a.5.....Gz<
10021dc0:	599cd2df 3f55f273 791814ce bf73c737     ...Ys.U?...y7.s.
10021dd0:	ea53f7cd 5b5ffdaa 14df3d6f 867844db     ..S..._[o=...Dx.
10021de0:	81caaff3 3eb968c4 2c382434 5fc2a340     .....h.>4$8,@.._
10021df0:	72161dc3 0cbce225 8b283c49 41ff0d95     ...r%...I<(....A
10021e00:	7139a801 de080cb3 9cd8b4e4 906456c1     ..9q.........Vd.
10021e10:	617bcb84 70d532b6 74486c5c 42d0b857     ..{a.2.p\lHtW..B
10021e20:	a75051f4 65537e41 a4c31a17 5e963a27     .QP.A~Se....':.^
10021e30:	6bcb3bab 45f11f9d 58abacfa 03934be3     .;.k...E...X.K..
10021e40:	fa552030 6df6ad76 769188cc 4c25f502     0 U.v..m...v..%L
10021e50:	d7fc4fe5 cbd7c52a 44802635 a38fb562     .O..*...5&.Db...
10021e60:	5a49deb1 1b6725ba 0e9845ea c0e15dfe     ..IZ.%g..E...]..
10021e70:	7502c32f f012814c 97a38d46 f9c66bd3     /..uL...F....k..
10021e80:	5fe7038f 9c951592 7aebbf6d 59da9552     ..._....m..zR..Y
10021e90:	832dd4be 21d35874 692949e0 c8448ec9     ..-.tX.!.I)i..D.
10021ea0:	896a75c2 7978f48e 3e6b9958 71dd27b9     .uj...xyX.k>.'.q
10021eb0:	4fb6bee1 ad17f088 ac66c920 3ab47dce     ...O.... .f..}.:
10021ec0:	4a1863df 3182e51a 33609751 7f456253     .c.J...1Q.`3SbE.
10021ed0:	77e0b164 ae84bb6b a01cfe81 2b94f908     d..wk..........+
10021ee0:	68587048 fd198f45 6c8794de f8b7527b     HpXhE......l{R..
10021ef0:	d323ab73 02e2724b 8f57e31f ab2a6655     s.#.Kr....W.Uf*.
10021f00:	2807b2eb c2032fb5 7b9a86c5 08a5d337     ...(./.....{7...
10021f10:	87f23028 a5b223bf 6aba0203 825ced16     (0...#.....j..\.
10021f20:	1c2b8acf b492a779 f2f0f307 e2a14e69     ..+.y.......iN..
10021f30:	f4cd65da bed50605 621fd134 fe8ac4a6     .e......4..b....
10021f40:	539d342e 55a0a2f3 e132058a eb75a4f6     .4.S...U..2...u.
10021f50:	ec390b83 efaa4060 9f065e71 1051bd6e     ..9.`@..q^..n.Q.
10021f60:	8af93e21 063d96dd 05aedd3e bd464de6     !>....=.>....MF.
10021f70:	8db59154 5d0571c4 d46f0406 15ff6050     T....q.]..o.P`..
10021f80:	fb241998 e997d6bd 43cc8940 9e7767d9     ..$.....@..C.gw.
10021f90:	42bdb0e8 8b880789 5b38e719 eedb79c8     ...B......8[.y..
10021fa0:	0a47a17c 0fe97c42 1ec9f884 00000000     |.G.B|..........
10021fb0:	86830980 ed48322b 70ac1e11 724e6c5a     ....+2H....pZlNr
10021fc0:	fffbfd0e 38560f85 d51e3dae 3927362d     ......V8.=..-6'9
10021fd0:	d9640a0f a621685c 54d19b5b 2e3a2436     ..d.\h!.[..T6$:.
10021fe0:	67b10c0a e70f9357 96d2b4ee 919e1b9b     ...gW...........
10021ff0:	c54f80c0 20a261dc 4b695a77 1a161c12     ..O..a. wZiK....
10022000:	ba0ae293 2ae5c0a0 e0433c22 171d121b     .......*"<C.....
10022010:	0d0b0e09 c7adf28b a8b92db6 a9c8141e     .........-......
10022020:	198557f1 074caf75 ddbbee99 60fda37f     .W..u.L........`
10022030:	269ff701 f5bc5c72 3bc54466 7e345bfb     ...&r\..fD.;.[4~
10022040:	29768b43 c6dccb23 fc68b6ed f163b8e4     C.v)#.....h...c.
10022050:	dccad731 85104263 22401397 112084c6     1...cB....@".. .
10022060:	247d854a 3df8d2bb 3211aef9 a16dc729     J.}$...=...2).m.
10022070:	2f4b1d9e 30f3dcb2 52ec0d86 e3d077c1     ..K/...0...R.w..
10022080:	166c2bb3 b999a970 48fa1194 642247e9     .+l.p......H.G"d
10022090:	8cc4a8fc 3f1aa0f0 2cd8567d 90ef2233     .......?}V.,3"..
100220a0:	4ec78749 d1c1d938 a2fe8cca 0b3698d4     I..N8.........6.
100220b0:	81cfa6f5 de28a57a 8e26dab7 bfa43fad     ....z.(...&..?..
100220c0:	9de42c3a 920d5078 cc9b6a5f 4662547e     :,..xP.._j..~TbF
100220d0:	13c2f68d b8e890d8 f75e2e39 aff582c3     ........9.^.....
100220e0:	80be9f5d 937c69d0 2da96fd5 12b3cf25     ]....i|..o.-%...
100220f0:	993bc8ac 7da71018 636ee89c bb7bdb3b     ..;....}..nc;.{.
10022100:	7809cd26 18f46e59 b701ec9a 9aa8834f     &..xYn......O...
10022110:	6e65e695 e67eaaff cf0821bc e8e6ef15     ..en..~..!......
10022120:	9bd9bae7 36ce4a6f 09d4ea9f 7cd629b0     ....oJ.6.....).|
10022130:	b2af31a4 23312a3f 9430c6a5 66c035a2     .1..?*1#..0..5.f
10022140:	bc37744e caa6fc82 d0b0e090 d81533a7     Nt7..........3..
10022150:	984af104 daf741ec 500e7fcd f62f1791     ..J..A.....P../.
10022160:	d68d764d b04d43ef 4d54ccaa 04dfe496     Mv...CM...TM....
10022170:	b5e39ed1 881b4c6a 1fb8c12c 517f4665     ....jL..,...eF.Q
10022180:	ea049d5e 355d018c 7473fa87 412efb0b     ^.....]5..st...A
10022190:	1d5ab367 d25292db 5633e910 47136dd6     g.Z...R...3V.m.G
100221a0:	618c9ad7 0c7a37a1 148e59f8 3c89eb13     ...a.7z..Y.....<
100221b0:	27eecea9 c935b761 e5ede11c b13c7a47     ...'a.5.....Gz<.
100221c0:	df599cd2 733f55f2 ce791814 37bf73c7     ..Y..U?s..y..s.7
100221d0:	cdea53f7 aa5b5ffd 6f14df3d db867844     .S..._[.=..oDx..
100221e0:	f381caaf c43eb968 342c3824 405fc2a3     ....h.>.$8,4.._@
100221f0:	c372161d 250cbce2 498b283c 9541ff0d     ..r....%<(.I..A.
10022200:	017139a8 b3de080c e49cd8b4 c1906456     .9q.........Vd..
10022210:	84617bcb b670d532 5c74486c 5742d0b8     .{a.2.p.lHt\..BW
10022220:	f4a75051 4165537e 17a4c31a 275e963a     QP..~SeA....:.^'
10022230:	ab6bcb3b 9d45f11f fa58abac e303934b     ;.k...E...X.K...
10022240:	30fa5520 766df6ad cc769188 024c25f5      U.0..mv..v..%L.
10022250:	e5d7fc4f 2acbd7c5 35448026 62a38fb5     O......*&.D5...b
10022260:	b15a49de ba1b6725 ea0e9845 fec0e15d     .IZ.%g..E...]...
10022270:	2f7502c3 4cf01281 4697a38d d3f9c66b     ..u/...L...Fk...
10022280:	8f5fe703 929c9515 6d7aebbf 5259da95     .._.......zm..YR
10022290:	be832dd4 7421d358 e0692949 c9c8448e     .-..X.!tI)i..D..
100222a0:	c2896a75 8e7978f4 583e6b99 b971dd27     uj...xy..k>X'.q.
100222b0:	e14fb6be 88ad17f0 20ac66c9 ce3ab47d     ..O......f. }.:.
100222c0:	df4a1863 1a3182e5 51336097 537f4562     c.J...1..`3QbE.S
100222d0:	6477e0b1 6bae84bb 81a01cfe 082b94f9     ..wd...k......+.
100222e0:	48685870 45fd198f de6c8794 7bf8b752     pXhH...E..l.R..{
100222f0:	73d323ab 4b02e272 1f8f57e3 55ab2a66     .#.sr..K.W..f*.U
10022300:	eb2807b2 b5c2032f c57b9a86 3708a5d3     ..(./.....{....7
10022310:	2887f230 bfa5b223 036aba02 16825ced     0..(#.....j..\..
10022320:	cf1c2b8a 79b492a7 07f2f0f3 69e2a14e     .+.....y....N..i
10022330:	daf4cd65 05bed506 34621fd1 a6fe8ac4     e.........b4....
10022340:	2e539d34 f355a0a2 8ae13205 f6eb75a4     4.S...U..2...u..
10022350:	83ec390b 60efaa40 719f065e 6e1051bd     .9..@..`^..q.Q.n
10022360:	218af93e dd063d96 3e05aedd e6bd464d     >..!.=.....>MF..
10022370:	548db591 c45d0571 06d46f04 5015ff60     ...Tq.]..o..`..P
10022380:	98fb2419 bde997d6 4043cc89 d99e7767     .$........C@gw..
10022390:	e842bdb0 898b8807 195b38e7 c8eedb79     ..B......8[.y...
100223a0:	7c0a47a1 420fe97c 841ec9f8 00000000     .G.||..B........
100223b0:	80868309 2bed4832 1170ac1e 5a724e6c     ....2H.+..p.lNrZ
100223c0:	0efffbfd 8538560f aed51e3d 2d392736     .....V8.=...6'9-
100223d0:	0fd9640a 5ca62168 5b54d19b 362e3a24     .d..h!.\..T[$:.6
100223e0:	0a67b10c 57e70f93 ee96d2b4 9b919e1b     ..g....W........
100223f0:	c0c54f80 dc20a261 774b695a 121a161c     .O..a. .ZiKw....
10022400:	93ba0ae2 a02ae5c0 22e0433c 1b171d12     ......*.<C."....
10022410:	090d0b0e 8bc7adf2 b6a8b92d 1ea9c814     ........-.......
10022420:	f1198557 75074caf 99ddbbee 7f60fda3     W....L.u......`.
10022430:	01269ff7 72f5bc5c 663bc544 fb7e345b     ..&.\..rD.;f[4~.
10022440:	4329768b 23c6dccb edfc68b6 e4f163b8     .v)C...#.h...c..
10022450:	31dccad7 63851042 97224013 c6112084     ...1B..c.@".. ..
10022460:	4a247d85 bb3df8d2 f93211ae 29a16dc7     .}$J..=...2..m.)
10022470:	9e2f4b1d b230f3dc 8652ec0d c1e3d077     .K/...0...R.w...
10022480:	b3166c2b 70b999a9 9448fa11 e9642247     +l.....p..H.G"d.
10022490:	fc8cc4a8 f03f1aa0 7d2cd856 3390ef22     ......?.V.,}"..3
100224a0:	494ec787 38d1c1d9 caa2fe8c d40b3698     ..NI...8.....6..
100224b0:	f581cfa6 7ade28a5 b78e26da adbfa43f     .....(.z.&..?...
100224c0:	3a9de42c 78920d50 5fcc9b6a 7e466254     ,..:P..xj.._TbF~
100224d0:	8d13c2f6 d8b8e890 39f75e2e c3aff582     .........^.9....
100224e0:	5d80be9f d0937c69 d52da96f 2512b3cf     ...]i|..o.-....%
100224f0:	ac993bc8 187da710 9c636ee8 3bbb7bdb     .;....}..nc..{.;
10022500:	267809cd 5918f46e 9ab701ec 4f9aa883     ..x&n..Y.......O
10022510:	956e65e6 ffe67eaa bccf0821 15e8e6ef     .en..~..!.......
10022520:	e79bd9ba 6f36ce4a 9f09d4ea b07cd629     ....J.6o....).|.
10022530:	a4b2af31 3f23312a a59430c6 a266c035     1...*1#?.0..5.f.
10022540:	4ebc3774 82caa6fc 90d0b0e0 a7d81533     t7.N........3...
10022550:	04984af1 ecdaf741 cd500e7f 91f62f17     .J..A.....P../..
10022560:	4dd68d76 efb04d43 aa4d54cc 9604dfe4     v..MCM...TM.....
10022570:	d1b5e39e 6a881b4c 2c1fb8c1 65517f46     ....L..j...,F.Qe
10022580:	5eea049d 8c355d01 877473fa 0b412efb     ...^.]5..st...A.
10022590:	671d5ab3 dbd25292 105633e9 d647136d     .Z.g.R...3V.m.G.
100225a0:	d7618c9a a10c7a37 f8148e59 133c89eb     ..a.7z..Y.....<.
100225b0:	a927eece 61c935b7 1ce5ede1 47b13c7a     ..'..5.a....z<.G
100225c0:	d2df599c f2733f55 14ce7918 c737bf73     .Y..U?s..y..s.7.
100225d0:	f7cdea53 fdaa5b5f 3d6f14df 44db8678     S..._[....o=x..D
100225e0:	aff381ca 68c43eb9 24342c38 a3405fc2     .....>.h8,4$._@.
100225f0:	1dc37216 e2250cbc 3c498b28 0d9541ff     .r....%.(.I<.A..
10022600:	a8017139 0cb3de08 b4e49cd8 56c19064     9q..........d..V
10022610:	cb84617b 32b670d5 6c5c7448 b85742d0     {a...p.2Ht\l.BW.

10022620 <Te>:
10022620:	c66363a5 f87c7c84 ee777799 f67b7b8d     .cc..||..ww..{{.
10022630:	fff2f20d d66b6bbd de6f6fb1 91c5c554     .....kk..oo.T...
10022640:	60303050 02010103 ce6767a9 562b2b7d     P00`.....gg.}++V
10022650:	e7fefe19 b5d7d762 4dababe6 ec76769a     ....b......M.vv.
10022660:	8fcaca45 1f82829d 89c9c940 fa7d7d87     E.......@....}}.
10022670:	effafa15 b25959eb 8e4747c9 fbf0f00b     .....YY..GG.....
10022680:	41adadec b3d4d467 5fa2a2fd 45afafea     ...Ag......_...E
10022690:	239c9cbf 53a4a4f7 e4727296 9bc0c05b     ...#...S.rr.[...
100226a0:	75b7b7c2 e1fdfd1c 3d9393ae 4c26266a     ...u.......=j&&L
100226b0:	6c36365a 7e3f3f41 f5f7f702 83cccc4f     Z66lA??~....O...
100226c0:	6834345c 51a5a5f4 d1e5e534 f9f1f108     \44h...Q4.......
100226d0:	e2717193 abd8d873 62313153 2a15153f     .qq.s...S11b?..*
100226e0:	0804040c 95c7c752 46232365 9dc3c35e     ....R...e##F^...
100226f0:	30181828 379696a1 0a05050f 2f9a9ab5     (..0...7......./
10022700:	0e070709 24121236 1b80809b dfe2e23d     ....6..$....=...
10022710:	cdebeb26 4e272769 7fb2b2cd ea75759f     &...i''N.....uu.
10022720:	1209091b 1d83839e 582c2c74 341a1a2e     ........t,,X...4
10022730:	361b1b2d dc6e6eb2 b45a5aee 5ba0a0fb     -..6.nn..ZZ....[
10022740:	a45252f6 763b3b4d b7d6d661 7db3b3ce     .RR.M;;va......}
10022750:	5229297b dde3e33e 5e2f2f71 13848497     {))R>...q//^....
10022760:	a65353f5 b9d1d168 00000000 c1eded2c     .SS.h.......,...
10022770:	40202060 e3fcfc1f 79b1b1c8 b65b5bed     `  @.......y.[[.
10022780:	d46a6abe 8dcbcb46 67bebed9 7239394b     .jj.F......gK99r
10022790:	944a4ade 984c4cd4 b05858e8 85cfcf4a     .JJ..LL..XX.J...
100227a0:	bbd0d06b c5efef2a 4faaaae5 edfbfb16     k...*......O....
100227b0:	864343c5 9a4d4dd7 66333355 11858594     .CC..MM.U33f....
100227c0:	8a4545cf e9f9f910 04020206 fe7f7f81     .EE.............
100227d0:	a05050f0 783c3c44 259f9fba 4ba8a8e3     .PP.D<<x...%...K
100227e0:	a25151f3 5da3a3fe 804040c0 058f8f8a     .QQ....].@@.....
100227f0:	3f9292ad 219d9dbc 70383848 f1f5f504     ...?...!H88p....
10022800:	63bcbcdf 77b6b6c1 afdada75 42212163     ...c...wu...c!!B
10022810:	20101030 e5ffff1a fdf3f30e bfd2d26d     0.. ........m...
10022820:	81cdcd4c 180c0c14 26131335 c3ecec2f     L.......5..&/...
10022830:	be5f5fe1 359797a2 884444cc 2e171739     .__....5.DD.9...
10022840:	93c4c457 55a7a7f2 fc7e7e82 7a3d3d47     W......U.~~.G==z
10022850:	c86464ac ba5d5de7 3219192b e6737395     .dd..]].+..2.ss.
10022860:	c06060a0 19818198 9e4f4fd1 a3dcdc7f     .``......OO.....
10022870:	44222266 542a2a7e 3b9090ab 0b888883     f""D~**T...;....
10022880:	8c4646ca c7eeee29 6bb8b8d3 2814143c     .FF.)......k<..(
10022890:	a7dede79 bc5e5ee2 160b0b1d addbdb76     y....^^.....v...
100228a0:	dbe0e03b 64323256 743a3a4e 140a0a1e     ;...V22dN::t....
100228b0:	924949db 0c06060a 4824246c b85c5ce4     .II.....l$$H.\\.
100228c0:	9fc2c25d bdd3d36e 43acacef c46262a6     ]...n......C.bb.
100228d0:	399191a8 319595a4 d3e4e437 f279798b     ...9...17....yy.
100228e0:	d5e7e732 8bc8c843 6e373759 da6d6db7     2...C...Y77n.mm.
100228f0:	018d8d8c b1d5d564 9c4e4ed2 49a9a9e0     ....d....NN....I
10022900:	d86c6cb4 ac5656fa f3f4f407 cfeaea25     .ll..VV.....%...
10022910:	ca6565af f47a7a8e 47aeaee9 10080818     .ee..zz....G....
10022920:	6fbabad5 f0787888 4a25256f 5c2e2e72     ...o.xx.o%%Jr..\
10022930:	381c1c24 57a6a6f1 73b4b4c7 97c6c651     $..8...W...sQ...
10022940:	cbe8e823 a1dddd7c e874749c 3e1f1f21     #...|....tt.!..>
10022950:	964b4bdd 61bdbddc 0d8b8b86 0f8a8a85     .KK....a........
10022960:	e0707090 7c3e3e42 71b5b5c4 cc6666aa     .pp.B>>|...q.ff.
10022970:	904848d8 06030305 f7f6f601 1c0e0e12     .HH.............
10022980:	c26161a3 6a35355f ae5757f9 69b9b9d0     .aa._55j.WW....i
10022990:	17868691 99c1c158 3a1d1d27 279e9eb9     ....X...'..:...'
100229a0:	d9e1e138 ebf8f813 2b9898b3 22111133     8..........+3.."
100229b0:	d26969bb a9d9d970 078e8e89 339494a7     .ii.p..........3
100229c0:	2d9b9bb6 3c1e1e22 15878792 c9e9e920     ...-"..<.... ...
100229d0:	87cece49 aa5555ff 50282878 a5dfdf7a     I....UU.x((Pz...
100229e0:	038c8c8f 59a1a1f8 09898980 1a0d0d17     .......Y........
100229f0:	65bfbfda d7e6e631 844242c6 d06868b8     ...e1....BB..hh.
10022a00:	824141c3 299999b0 5a2d2d77 1e0f0f11     .AA....)w--Z....
10022a10:	7bb0b0cb a85454fc 6dbbbbd6 2c16163a     ...{.TT....m:..,
10022a20:	a5c66363 84f87c7c 99ee7777 8df67b7b     cc..||..ww..{{..
10022a30:	0dfff2f2 bdd66b6b b1de6f6f 5491c5c5     ....kk..oo.....T
10022a40:	50603030 03020101 a9ce6767 7d562b2b     00`P....gg..++V}
10022a50:	19e7fefe 62b5d7d7 e64dabab 9aec7676     .......b..M.vv..
10022a60:	458fcaca 9d1f8282 4089c9c9 87fa7d7d     ...E.......@}}..
10022a70:	15effafa ebb25959 c98e4747 0bfbf0f0     ....YY..GG......
10022a80:	ec41adad 67b3d4d4 fd5fa2a2 ea45afaf     ..A....g.._...E.
10022a90:	bf239c9c f753a4a4 96e47272 5b9bc0c0     ..#...S.rr.....[
10022aa0:	c275b7b7 1ce1fdfd ae3d9393 6a4c2626     ..u.......=.&&Lj
10022ab0:	5a6c3636 417e3f3f 02f5f7f7 4f83cccc     66lZ??~A.......O
10022ac0:	5c683434 f451a5a5 34d1e5e5 08f9f1f1     44h\..Q....4....
10022ad0:	93e27171 73abd8d8 53623131 3f2a1515     qq.....s11bS..*?
10022ae0:	0c080404 5295c7c7 65462323 5e9dc3c3     .......R##Fe...^
10022af0:	28301818 a1379696 0f0a0505 b52f9a9a     ..0(..7......./.
10022b00:	090e0707 36241212 9b1b8080 3ddfe2e2     ......$6.......=
10022b10:	26cdebeb 694e2727 cd7fb2b2 9fea7575     ...&''Ni....uu..
10022b20:	1b120909 9e1d8383 74582c2c 2e341a1a     ........,,Xt..4.
10022b30:	2d361b1b b2dc6e6e eeb45a5a fb5ba0a0     ..6-nn..ZZ....[.
10022b40:	f6a45252 4d763b3b 61b7d6d6 ce7db3b3     RR..;;vM...a..}.
10022b50:	7b522929 3edde3e3 715e2f2f 97138484     ))R{...>//^q....
10022b60:	f5a65353 68b9d1d1 00000000 2cc1eded     SS.....h.......,
10022b70:	60402020 1fe3fcfc c879b1b1 edb65b5b       @`......y.[[..
10022b80:	bed46a6a 468dcbcb d967bebe 4b723939     jj.....F..g.99rK
10022b90:	de944a4a d4984c4c e8b05858 4a85cfcf     JJ..LL..XX.....J
10022ba0:	6bbbd0d0 2ac5efef e54faaaa 16edfbfb     ...k...*..O.....
10022bb0:	c5864343 d79a4d4d 55663333 94118585     CC..MM..33fU....
10022bc0:	cf8a4545 10e9f9f9 06040202 81fe7f7f     EE..............
10022bd0:	f0a05050 44783c3c ba259f9f e34ba8a8     PP..<<xD..%...K.
10022be0:	f3a25151 fe5da3a3 c0804040 8a058f8f     QQ....].@@......
10022bf0:	ad3f9292 bc219d9d 48703838 04f1f5f5     ..?...!.88pH....
10022c00:	df63bcbc c177b6b6 75afdada 63422121     ..c...w....u!!Bc
10022c10:	30201010 1ae5ffff 0efdf3f3 6dbfd2d2     .. 0...........m
10022c20:	4c81cdcd 14180c0c 35261313 2fc3ecec     ...L......&5.../
10022c30:	e1be5f5f a2359797 cc884444 392e1717     __....5.DD.....9
10022c40:	5793c4c4 f255a7a7 82fc7e7e 477a3d3d     ...W..U.~~..==zG
10022c50:	acc86464 e7ba5d5d 2b321919 95e67373     dd..]]....2+ss..
10022c60:	a0c06060 98198181 d19e4f4f 7fa3dcdc     ``......OO......
10022c70:	66442222 7e542a2a ab3b9090 830b8888     ""Df**T~..;.....
10022c80:	ca8c4646 29c7eeee d36bb8b8 3c281414     FF.....)..k...(<
10022c90:	79a7dede e2bc5e5e 1d160b0b 76addbdb     ...y^^.........v
10022ca0:	3bdbe0e0 56643232 4e743a3a 1e140a0a     ...;22dV::tN....
10022cb0:	db924949 0a0c0606 6c482424 e4b85c5c     II......$$Hl\\..
10022cc0:	5d9fc2c2 6ebdd3d3 ef43acac a6c46262     ...]...n..C.bb..
10022cd0:	a8399191 a4319595 37d3e4e4 8bf27979     ..9...1....7yy..
10022ce0:	32d5e7e7 438bc8c8 596e3737 b7da6d6d     ...2...C77nYmm..
10022cf0:	8c018d8d 64b1d5d5 d29c4e4e e049a9a9     .......dNN....I.
10022d00:	b4d86c6c faac5656 07f3f4f4 25cfeaea     ll..VV.........%
10022d10:	afca6565 8ef47a7a e947aeae 18100808     ee..zz....G.....
10022d20:	d56fbaba 88f07878 6f4a2525 725c2e2e     ..o.xx..%%Jo..\r
10022d30:	24381c1c f157a6a6 c773b4b4 5197c6c6     ..8$..W...s....Q
10022d40:	23cbe8e8 7ca1dddd 9ce87474 213e1f1f     ...#...|tt....>!
10022d50:	dd964b4b dc61bdbd 860d8b8b 850f8a8a     KK....a.........
10022d60:	90e07070 427c3e3e c471b5b5 aacc6666     pp..>>|B..q.ff..
10022d70:	d8904848 05060303 01f7f6f6 121c0e0e     HH..............
10022d80:	a3c26161 5f6a3535 f9ae5757 d069b9b9     aa..55j_WW....i.
10022d90:	91178686 5899c1c1 273a1d1d b9279e9e     .......X..:'..'.
10022da0:	38d9e1e1 13ebf8f8 b32b9898 33221111     ...8......+..."3
10022db0:	bbd26969 70a9d9d9 89078e8e a7339494     ii.....p......3.
10022dc0:	b62d9b9b 223c1e1e 92158787 20c9e9e9     ..-...<"....... 
10022dd0:	4987cece ffaa5555 78502828 7aa5dfdf     ...IUU..((Px...z
10022de0:	8f038c8c f859a1a1 80098989 171a0d0d     ......Y.........
10022df0:	da65bfbf 31d7e6e6 c6844242 b8d06868     ..e....1BB..hh..
10022e00:	c3824141 b0299999 775a2d2d 111e0f0f     AA....).--Zw....
10022e10:	cb7bb0b0 fca85454 d66dbbbb 3a2c1616     ..{.TT....m...,:
10022e20:	63a5c663 7c84f87c 7799ee77 7b8df67b     c..c|..|w..w{..{
10022e30:	f20dfff2 6bbdd66b 6fb1de6f c55491c5     ....k..ko..o..T.
10022e40:	30506030 01030201 67a9ce67 2b7d562b     0`P0....g..g+V}+
10022e50:	fe19e7fe d762b5d7 abe64dab 769aec76     ......b..M..v..v
10022e60:	ca458fca 829d1f82 c94089c9 7d87fa7d     ..E.......@.}..}
10022e70:	fa15effa 59ebb259 47c98e47 f00bfbf0     ....Y..YG..G....
10022e80:	adec41ad d467b3d4 a2fd5fa2 afea45af     .A....g.._...E..
10022e90:	9cbf239c a4f753a4 7296e472 c05b9bc0     .#...S..r..r..[.
10022ea0:	b7c275b7 fd1ce1fd 93ae3d93 266a4c26     .u.......=..&Lj&
10022eb0:	365a6c36 3f417e3f f702f5f7 cc4f83cc     6lZ6?~A?......O.
10022ec0:	345c6834 a5f451a5 e534d1e5 f108f9f1     4h\4.Q....4.....
10022ed0:	7193e271 d873abd8 31536231 153f2a15     q..q..s.1bS1.*?.
10022ee0:	040c0804 c75295c7 23654623 c35e9dc3     ......R.#Fe#..^.
10022ef0:	18283018 96a13796 050f0a05 9ab52f9a     .0(..7......./..
10022f00:	07090e07 12362412 809b1b80 e23ddfe2     .....$6.......=.
10022f10:	eb26cdeb 27694e27 b2cd7fb2 759fea75     ..&.'Ni'....u..u
10022f20:	091b1209 839e1d83 2c74582c 1a2e341a     ........,Xt,.4..
10022f30:	1b2d361b 6eb2dc6e 5aeeb45a a0fb5ba0     .6-.n..nZ..Z.[..
10022f40:	52f6a452 3b4d763b d661b7d6 b3ce7db3     R..R;vM;..a..}..
10022f50:	297b5229 e33edde3 2f715e2f 84971384     )R{)..>./^q/....
10022f60:	53f5a653 d168b9d1 00000000 ed2cc1ed     S..S..h.......,.
10022f70:	20604020 fc1fe3fc b1c879b1 5bedb65b      @` .....y..[..[
10022f80:	6abed46a cb468dcb bed967be 394b7239     j..j..F..g..9rK9
10022f90:	4ade944a 4cd4984c 58e8b058 cf4a85cf     J..JL..LX..X..J.
10022fa0:	d06bbbd0 ef2ac5ef aae54faa fb16edfb     ..k...*..O......
10022fb0:	43c58643 4dd79a4d 33556633 85941185     C..CM..M3fU3....
10022fc0:	45cf8a45 f910e9f9 02060402 7f81fe7f     E..E............
10022fd0:	50f0a050 3c44783c 9fba259f a8e34ba8     P..P<xD<.%...K..
10022fe0:	51f3a251 a3fe5da3 40c08040 8f8a058f     Q..Q.]..@..@....
10022ff0:	92ad3f92 9dbc219d 38487038 f504f1f5     .?...!..8pH8....
10023000:	bcdf63bc b6c177b6 da75afda 21634221     .c...w....u.!Bc!
10023010:	10302010 ff1ae5ff f30efdf3 d26dbfd2     . 0...........m.
10023020:	cd4c81cd 0c14180c 13352613 ec2fc3ec     ..L......&5.../.
10023030:	5fe1be5f 97a23597 44cc8844 17392e17     _.._.5..D..D..9.
10023040:	c45793c4 a7f255a7 7e82fc7e 3d477a3d     ..W..U..~..~=zG=
10023050:	64acc864 5de7ba5d 192b3219 7395e673     d..d]..].2+.s..s
10023060:	60a0c060 81981981 4fd19e4f dc7fa3dc     `..`....O..O....
10023070:	22664422 2a7e542a 90ab3b90 88830b88     "Df"*T~*.;......
10023080:	46ca8c46 ee29c7ee b8d36bb8 143c2814     F..F..)..k...(<.
10023090:	de79a7de 5ee2bc5e 0b1d160b db76addb     ..y.^..^......v.
100230a0:	e03bdbe0 32566432 3a4e743a 0a1e140a     ..;.2dV2:tN:....
100230b0:	49db9249 060a0c06 246c4824 5ce4b85c     I..I....$Hl$\..\
100230c0:	c25d9fc2 d36ebdd3 acef43ac 62a6c462     ..]...n..C..b..b
100230d0:	91a83991 95a43195 e437d3e4 798bf279     .9...1....7.y..y
100230e0:	e732d5e7 c8438bc8 37596e37 6db7da6d     ..2...C.7nY7m..m
100230f0:	8d8c018d d564b1d5 4ed29c4e a9e049a9     ......d.N..N.I..
10023100:	6cb4d86c 56faac56 f407f3f4 ea25cfea     l..lV..V......%.
10023110:	65afca65 7a8ef47a aee947ae 08181008     e..ez..z.G......
10023120:	bad56fba 7888f078 256f4a25 2e725c2e     .o..x..x%Jo%.\r.
10023130:	1c24381c a6f157a6 b4c773b4 c65197c6     .8$..W...s....Q.
10023140:	e823cbe8 dd7ca1dd 749ce874 1f213e1f     ..#...|.t..t.>!.
10023150:	4bdd964b bddc61bd 8b860d8b 8a850f8a     K..K.a..........
10023160:	7090e070 3e427c3e b5c471b5 66aacc66     p..p>|B>.q..f..f
10023170:	48d89048 03050603 f601f7f6 0e121c0e     H..H............
10023180:	61a3c261 355f6a35 57f9ae57 b9d069b9     a..a5j_5W..W.i..
10023190:	86911786 c15899c1 1d273a1d 9eb9279e     ......X..:'..'..
100231a0:	e138d9e1 f813ebf8 98b32b98 11332211     ..8......+..."3.
100231b0:	69bbd269 d970a9d9 8e89078e 94a73394     i..i..p......3..
100231c0:	9bb62d9b 1e223c1e 87921587 e920c9e9     .-...<"....... .
100231d0:	ce4987ce 55ffaa55 28785028 df7aa5df     ..I.U..U(Px(..z.
100231e0:	8c8f038c a1f859a1 89800989 0d171a0d     .....Y..........
100231f0:	bfda65bf e631d7e6 42c68442 68b8d068     .e....1.B..Bh..h
10023200:	41c38241 99b02999 2d775a2d 0f111e0f     A..A.)..-Zw-....
10023210:	b0cb7bb0 54fca854 bbd66dbb 163a2c16     .{..T..T.m...,:.
10023220:	6363a5c6 7c7c84f8 777799ee 7b7b8df6     ..cc..||..ww..{{
10023230:	f2f20dff 6b6bbdd6 6f6fb1de c5c55491     ......kk..oo.T..
10023240:	30305060 01010302 6767a9ce 2b2b7d56     `P00......ggV}++
10023250:	fefe19e7 d7d762b5 ababe64d 76769aec     .....b..M.....vv
10023260:	caca458f 82829d1f c9c94089 7d7d87fa     .E.......@....}}
10023270:	fafa15ef 5959ebb2 4747c98e f0f00bfb     ......YY..GG....
10023280:	adadec41 d4d467b3 a2a2fd5f afafea45     A....g.._...E...
10023290:	9c9cbf23 a4a4f753 727296e4 c0c05b9b     #...S.....rr.[..
100232a0:	b7b7c275 fdfd1ce1 9393ae3d 26266a4c     u.......=...Lj&&
100232b0:	36365a6c 3f3f417e f7f702f5 cccc4f83     lZ66~A??.....O..
100232c0:	34345c68 a5a5f451 e5e534d1 f1f108f9     h\44Q....4......
100232d0:	717193e2 d8d873ab 31315362 15153f2a     ..qq.s..bS11*?..
100232e0:	04040c08 c7c75295 23236546 c3c35e9d     .....R..Fe##.^..
100232f0:	18182830 9696a137 05050f0a 9a9ab52f     0(..7......./...
10023300:	0707090e 12123624 80809b1b e2e23ddf     ....$6.......=..
10023310:	ebeb26cd 2727694e b2b2cd7f 75759fea     .&..Ni''......uu
10023320:	09091b12 83839e1d 2c2c7458 1a1a2e34     ........Xt,,4...
10023330:	1b1b2d36 6e6eb2dc 5a5aeeb4 a0a0fb5b     6-....nn..ZZ[...
10023340:	5252f6a4 3b3b4d76 d6d661b7 b3b3ce7d     ..RRvM;;.a..}...
10023350:	29297b52 e3e33edd 2f2f715e 84849713     R{)).>..^q//....
10023360:	5353f5a6 d1d168b9 00000000 eded2cc1     ..SS.h.......,..
10023370:	20206040 fcfc1fe3 b1b1c879 5b5bedb6     @`  ....y.....[[
10023380:	6a6abed4 cbcb468d bebed967 39394b72     ..jj.F..g...rK99
10023390:	4a4ade94 4c4cd498 5858e8b0 cfcf4a85     ..JJ..LL..XX.J..
100233a0:	d0d06bbb efef2ac5 aaaae54f fbfb16ed     .k...*..O.......
100233b0:	4343c586 4d4dd79a 33335566 85859411     ..CC..MMfU33....
100233c0:	4545cf8a f9f910e9 02020604 7f7f81fe     ..EE............
100233d0:	5050f0a0 3c3c4478 9f9fba25 a8a8e34b     ..PPxD<<%...K...
100233e0:	5151f3a2 a3a3fe5d 4040c080 8f8f8a05     ..QQ].....@@....
100233f0:	9292ad3f 9d9dbc21 38384870 f5f504f1     ?...!...pH88....
10023400:	bcbcdf63 b6b6c177 dada75af 21216342     c...w....u..Bc!!
10023410:	10103020 ffff1ae5 f3f30efd d2d26dbf      0...........m..
10023420:	cdcd4c81 0c0c1418 13133526 ecec2fc3     .L......&5.../..
10023430:	5f5fe1be 9797a235 4444cc88 1717392e     ..__5.....DD.9..
10023440:	c4c45793 a7a7f255 7e7e82fc 3d3d477a     .W..U.....~~zG==
10023450:	6464acc8 5d5de7ba 19192b32 737395e6     ..dd..]]2+....ss
10023460:	6060a0c0 81819819 4f4fd19e dcdc7fa3     ..``......OO....
10023470:	22226644 2a2a7e54 9090ab3b 8888830b     Df""T~**;.......
10023480:	4646ca8c eeee29c7 b8b8d36b 14143c28     ..FF.)..k...(<..
10023490:	dede79a7 5e5ee2bc 0b0b1d16 dbdb76ad     .y....^^.....v..
100234a0:	e0e03bdb 32325664 3a3a4e74 0a0a1e14     .;..dV22tN::....
100234b0:	4949db92 06060a0c 24246c48 5c5ce4b8     ..II....Hl$$..\\
100234c0:	c2c25d9f d3d36ebd acacef43 6262a6c4     .]...n..C.....bb
100234d0:	9191a839 9595a431 e4e437d3 79798bf2     9...1....7....yy
100234e0:	e7e732d5 c8c8438b 3737596e 6d6db7da     .2...C..nY77..mm
100234f0:	8d8d8c01 d5d564b1 4e4ed29c a9a9e049     .....d....NNI...
10023500:	6c6cb4d8 5656faac f4f407f3 eaea25cf     ..ll..VV.....%..
10023510:	6565afca 7a7a8ef4 aeaee947 08081810     ..ee..zzG.......
10023520:	babad56f 787888f0 25256f4a 2e2e725c     o.....xxJo%%\r..
10023530:	1c1c2438 a6a6f157 b4b4c773 c6c65197     8$..W...s....Q..
10023540:	e8e823cb dddd7ca1 74749ce8 1f1f213e     .#...|....tt>!..
10023550:	4b4bdd96 bdbddc61 8b8b860d 8a8a850f     ..KKa...........
10023560:	707090e0 3e3e427c b5b5c471 6666aacc     ..pp|B>>q.....ff
10023570:	4848d890 03030506 f6f601f7 0e0e121c     ..HH............
10023580:	6161a3c2 35355f6a 5757f9ae b9b9d069     ..aaj_55..WWi...
10023590:	86869117 c1c15899 1d1d273a 9e9eb927     .....X..:'..'...
100235a0:	e1e138d9 f8f813eb 9898b32b 11113322     .8......+..."3..
100235b0:	6969bbd2 d9d970a9 8e8e8907 9494a733     ..ii.p......3...
100235c0:	9b9bb62d 1e1e223c 87879215 e9e920c9     -...<"....... ..
100235d0:	cece4987 5555ffaa 28287850 dfdf7aa5     .I....UUPx((.z..
100235e0:	8c8c8f03 a1a1f859 89898009 0d0d171a     ....Y...........
100235f0:	bfbfda65 e6e631d7 4242c684 6868b8d0     e....1....BB..hh
10023600:	4141c382 9999b029 2d2d775a 0f0f111e     ..AA)...Zw--....
10023610:	b0b0cb7b 5454fca8 bbbbd66d 16163a2c     {.....TTm...,:..

10023620 <rcon>:
10023620:	01000000 02000000 04000000 08000000     ................
10023630:	10000000 20000000 40000000 80000000     ....... ...@....
10023640:	1b000000 36000000 5f43584d 45535341     .......6MXC_ASSE
10023650:	25205452 25232073 28203a64 0a297325     RT %s #%d: (%s).
10023660:	00000000 6361502f 30322d65 652d3432     ..../Pace-2024-e
10023670:	2f667463 6b64736d 62694c2f 69726172     ctf/msdk/Librari
10023680:	422f7365 6472616f 414d2f73 30383758     es/Boards/MAX780
10023690:	462f3030 5f524854 41766552 756f532f     00/FTHR_RevA/Sou
100236a0:	2f656372 72616f62 00632e64 4c494146     rce/board.c.FAIL
100236b0:	00000000                                ....

100236b4 <num_leds>:
100236b4:	00000003                                ....

100236b8 <led_pin>:
100236b8:	40080400 00000001 00010001 40080400     ...@...........@
100236c8:	00000002 00010001 40080400 00000004     ...........@....
100236d8:	00010001                                ....

100236dc <num_pbs>:
100236dc:	00000002                                ....

100236e0 <pb_pin>:
100236e0:	40008000 00000004 00010100 40009000     ...@...........@
100236f0:	00000080 00010100 6361502f 30322d65     ......../Pace-20
10023700:	652d3432 2f667463 6b64736d 62694c2f     24-ectf/msdk/Lib
10023710:	69726172 4d2f7365 44637369 65766972     raries/MiscDrive
10023720:	4c2f7372 6c2f4445 632e6465 00000000     rs/LED/led.c....
10023730:	20786469 756e203c 656c5f6d 00007364     idx < num_leds..

10023740 <gpio_cfg_uart3>:
10023740:	40080400 000000c0 00000003              ...@........

1002374c <gpio_cfg_uart2>:
1002374c:	40009000 00000003 00000002              ...@........

10023758 <gpio_cfg_uart1>:
10023758:	40008000 00003000 00000002              ...@.0......

10023764 <gpio_cfg_uart0>:
10023764:	40008000 00000003 00000002              ...@........

10023770 <gpio_cfg_i2c2>:
10023770:	40008000 c0000000 00000002              ...@........

1002377c <gpio_cfg_i2c1>:
1002377c:	40008000 00030000 00000002              ...@........

10023788 <gpio_cfg_i2c0>:
10023788:	40008000 00000c00 00000002              ...@........

10023794 <gpio_cfg_extclk>:
10023794:	40008000 00000008 00000002 6361502f     ...@......../Pac
100237a4:	30322d65 652d3432 2f667463 6b64736d     e-2024-ectf/msdk
100237b4:	62694c2f 69726172 432f7365 5349534d     /Libraries/CMSIS
100237c4:	2f2e2e2f 69726550 72446870 72657669     /../PeriphDriver
100237d4:	6f532f73 65637275 4950472f 70672f4f     s/Source/GPIO/gp
100237e4:	635f6f69 6f6d6d6f 00632e6e 74726f70     io_common.c.port
100237f4:	4d203c20 435f4358 475f4746 5f4f4950      < MXC_CFG_GPIO_
10023804:	54534e49 45434e41 00000053              INSTANCES...

10023810 <CSWTCH.16>:
10023810:	40009000 40080400 40080600 646c2565     ...@...@...@e%ld
10023820:	00000000                                ....

10023824 <basefix.0>:
10023824:	0001000a 00030002 00050004 00070006     ................
10023834:	00090008 000b000a 000d000c 000f000e     ................
10023844:	00000010 435f434c 414c4c4f 00004554     ....LC_COLLATE..
10023854:	435f434c 45505954 00000000 4d5f434c     LC_CTYPE....LC_M
10023864:	54454e4f 00595241 4e5f434c 52454d55     ONETARY.LC_NUMER
10023874:	00004349 545f434c 00454d49 4d5f434c     IC..LC_TIME.LC_M
10023884:	41535345 00534547                       ESSAGES.

1002388c <_ctype_>:
1002388c:	20202000 20202020 28282020 20282828     .         ((((( 
1002389c:	20202020 20202020 20202020 20202020                     
100238ac:	10108820 10101010 10101010 10101010      ...............
100238bc:	04040410 04040404 10040404 10101010     ................
100238cc:	41411010 41414141 01010101 01010101     ..AAAAAA........
100238dc:	01010101 01010101 01010101 10101010     ................
100238ec:	42421010 42424242 02020202 02020202     ..BBBBBB........
100238fc:	02020202 02020202 02020202 10101010     ................
1002390c:	00000020 00000000 00000000 00000000      ...............
	...
10023990:	0000666e 74696e69 00000079 00006e61     nf..inity...an..

100239a0 <fpinan.0>:
100239a0:	00000034 fffffbce 000003cb 00000001     4...............
100239b0:	00000000                                ....

100239b4 <fpi.1>:
100239b4:	00000035 fffffbce 000003cb 00000001     5...............
100239c4:	00000000                                ....

100239c8 <tinytens>:
100239c8:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
100239d8:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
100239e8:	64ac6f43 11680628 6c6c6142 7320636f     Co.d(.h.Balloc s
100239f8:	65636375 64656465 00000000 7461642f     ucceeded..../dat
10023a08:	656a2f61 6e696b6e 6f772f73 70736b72     a/jenkins/worksp
10023a18:	2f656361 2d554e47 6c6f6f74 69616863     ace/GNU-toolchai
10023a28:	72612f6e 32312d6d 6372732f 77656e2f     n/arm-12/src/new
10023a38:	2d62696c 77677963 6e2f6e69 696c7765     lib-cygwin/newli
10023a48:	696c2f62 732f6362 696c6474 64672f62     b/libc/stdlib/gd
10023a58:	2d616f74 68746567 632e7865 00000000     toa-gethex.c....

10023a68 <__hexdig>:
	...
10023a98:	13121110 17161514 00001918 00000000     ................
10023aa8:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...
10023ac8:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...

10023b68 <categories>:
10023b68:	00000000 201c001f 00000000 00002114     ....... .....!..
10023b78:	24160002 00000000 00002514 28150002     ...$.....%.....(
10023b88:	00000000 00002911 2a140000 00000000     .....).....*....
10023b98:	00002b18 2c140000 00000000 00002d10     .+.....,.....-..
10023ba8:	2e140000 00010000 0000300c 3a140009     .........0.....:
10023bb8:	00010000 00003c18 3f140002 00010000     .....<.....?....
10023bc8:	00004103 5b150019 00000000 00005c14     .A.....[.....\..
10023bd8:	5d110000 00000000 00005e17 5f0f0000     ...].....^....._
10023be8:	00000000 00006017 61030000 00190000     .....`.....a....
10023bf8:	00007b15 7c180000 00000000 00007d11     .{.....|.....}..
10023c08:	7e180000 00000000 00007f00 a01c0020     ...~........ ...
10023c18:	00000000 0000a114 a2160000 00030000     ................
10023c28:	0000a619 a7140000 00000000 0000a817     ................
10023c38:	a9190000 00000000 0000aa06 ab130000     ................
10023c48:	00000000 0000ac18 ad010000 00000000     ................
10023c58:	0000ae19 af170000 00000000 0000b019     ................
10023c68:	b1180000 00000000 0000b20e b4170001     ................
10023c78:	00000000 0000b503 b6140000 00010000     ................
10023c88:	0000b817 b90e0000 00000000 0000ba06     ................
10023c98:	bb120000 00000000 0000bc0e bf140002     ................
10023ca8:	00000000 0000c003 d7180016 00000000     ................
10023cb8:	0000d803 df040006 00000000 0000e003     ................
10023cc8:	f7180016 00000000 0000f803 3804003f     ............?..8
10023cd8:	00000001 00013903 4904000f 00000001     .....9.....I....
10023ce8:	00014a03 8d040042 00000001 00018e03     .J..B...........
10023cf8:	9b04000c 00000001 00019c03 aa04000d     ................
10023d08:	00010001 0001ac03 ba04000d 00000001     ................
10023d18:	0001bb06 bc030000 00010001 0001be04     ................
10023d28:	bf030000 00000001 0001c006 c4030003     ................
10023d38:	00000001 0001c507 c6030000 00010001     ................
10023d48:	0001c807 c9030000 00010001 0001cb07     ................
10023d58:	cc030000 00230001 0001f004 f1030000     ......#.........
10023d68:	00000001 0001f207 f3030000 002d0001     ..............-.
10023d78:	00022104 22030000 00110002 00023404     .!.....".....4..
10023d88:	3a030005 001a0002 00025504 56030000     ...:.....U.....V
10023d98:	00010002 00025804 59030000 00000002     .....X.....Y....
10023da8:	00025a04 5b030000 00010002 00025d04     .Z.....[.....]..
10023db8:	60030002 00010002 00026204 63030000     ...`.....b.....c
10023dc8:	00000002 00026404 65030000 00010002     .....d.....e....
10023dd8:	00026704 68030000 00040002 00026d04     .g.....h.....m..
10023de8:	6f030001 00000002 00027004 71030000     ...o.....p.....q
10023df8:	00010002 00027304 75030001 00000002     .....s.....u....
10023e08:	00027604 7d030006 00000002 00027e04     .v.....}.....~..
10023e18:	80030001 00000002 00028104 82030000     ................
10023e28:	00010002 00028404 87030002 00050002     ................
10023e38:	00028d04 92030004 00000002 00029304     ................
10023e48:	94060000 00000002 00029504 9d030007     ................
10023e58:	00010002 00029f04 b0050010 00110002     ................
10023e68:	0002c217 c6050003 000b0002 0002d217     ................
10023e78:	e005000d 00040002 0002e517 ec050006     ................
10023e88:	00000002 0002ed17 ee050000 00000002     ................
10023e98:	0002ef17 000b0010 006f0003 00037003     ..........o..p..
10023ea8:	74050003 00000003 00037517 76030000     ...t.....u.....v
10023eb8:	00010003 00037a05 7b030000 00020003     .....z.....{....
10023ec8:	00037e14 7f030000 00000003 00038417     .~..............
10023ed8:	86030001 00000003 00038714 88030000     ................
10023ee8:	00020003 00038c03 8e030000 00010003     ................
10023ef8:	00039004 91030000 00100003 0003a303     ................
10023f08:	b004000c 00000003 0003b103 d2080020     ............ ...
10023f18:	00020003 0003d503 f6180020 00000003     ........ .......
10023f28:	0003f703 fc040004 00000003 0003fd03     ................
10023f38:	82190084 00000004 0004830b 880a0004     ................
10023f48:	00010004 00048a03 310300a5 00250005     ...........1..%.
10023f58:	00055905 5a140000 00050005 00056004     .Y.....Z.....`..
10023f68:	61030000 00250005 00058704 89140001     ...a..%.........
10023f78:	00000005 00058a10 8d190000 00010005     ................
10023f88:	00058f16 910b0000 002c0005 0005be10     ..........,.....
10023f98:	bf0b0000 00000005 0005c014 c10b0000     ................
10023fa8:	00010005 0005c314 c40b0000 00010005     ................
10023fb8:	0005c614 c70b0000 00000005 0005d006     ................
10023fc8:	ef06001a 00030005 0005f314 00010001     ................
10023fd8:	00050006 00060618 09140002 00010006     ................
10023fe8:	00060b16 0c140000 00010006 00060e19     ................
10023ff8:	100b0001 000a0006 00061b14 1c010000     ................
10024008:	00000006 00061d14 20060002 001f0006     ........... ....
10024018:	00064005 41060000 00090006 00064b0b     .@.....A.....K..
10024028:	600c0014 00090006 00066a14 6e060003     ...`.....j.....n
10024038:	00010006 0006700b 71060000 00620006     .....p.....q..b.
10024048:	0006d414 d5060000 00000006 0006d60b     ................
10024058:	dd010006 00000006 0006de19 df0b0000     ................
10024068:	00050006 0006e505 e70b0001 00010006     ................
10024078:	0006e919 ea0b0000 00030006 0006ee06     ................
10024088:	f00c0001 00090006 0006fa06 fd190002     ................
10024098:	00010006 0006ff06 00140000 000d0007     ................
100240a8:	00070f01 10060000 00000007 0007110b     ................
100240b8:	12060000 001d0007 0007300b 4d06001a     .........0.....M
100240c8:	00580007 0007a60b b106000a 00000007     ..X.............
100240d8:	0007c00c ca060009 00200007 0007eb0b     .......... .....
100240e8:	f4050008 00010007 0007f619 f7140000     ................
100240f8:	00020007 0007fa05 fd0b0000 00000007     ................
10024108:	0007fe16 00060001 00150008 0008160b     ................
10024118:	1a050003 00000008 00081b0b 24050008     ...............$
10024128:	00000008 0008250b 28050002 00000008     .....%.....(....
10024138:	0008290b 30140004 000e0008 00084006     .).....0.....@..
10024148:	590b0018 00020008 00085e14 60060000     ...Y.....^.....`
10024158:	000a0008 00087006 88170017 00000008     .....p..........
10024168:	00088906 90010005 00010008 0008980b     ................
10024178:	a0060007 00280008 0008c905 ca0b0000     ......(.........
10024188:	00170008 0008e201 e30b0000 001f0008     ................
10024198:	00090309 04060000 00350009 00093a0b     ..........5..:..
100241a8:	3b090000 00000009 00093c0b 3d060000     ...;.....<.....=
100241b8:	00000009 00093e09 410b0002 00070009     .....>.....A....
100241c8:	00094909 4d0b0003 00000009 00094e09     .I.....M.....N..
100241d8:	50060001 00000009 0009510b 58060006     ...P.....Q.....X
100241e8:	00090009 0009620b 64140001 00010009     .....b.....d....
100241f8:	0009660c 70140009 00000009 00097105     .f.....p.....q..
10024208:	72060000 000e0009 0009810b 82090000     ...r............
10024218:	00010009 00098506 8f060007 00010009     ................
10024228:	00099306 aa060015 00060009 0009b206     ................
10024238:	b6060000 00030009 0009bc0b bd060000     ................
10024248:	00000009 0009be09 c10b0002 00030009     ................
10024258:	0009c709 cb090001 00010009 0009cd0b     ................
10024268:	ce060000 00000009 0009d709 dc060000     ................
10024278:	00010009 0009df06 e20b0002 00010009     ................
10024288:	0009e60c f0060009 00010009 0009f216     ................
10024298:	f40e0001 00050009 0009fa19 fb160000     ................
100242a8:	00000009 0009fc06 fd140000 00000009     ................
100242b8:	0009fe0b 010b0000 0001000a 000a0309     ................
100242c8:	05060000 0005000a 000a0f06 13060001     ................
100242d8:	0015000a 000a2a06 32060006 0001000a     .....*.....2....
100242e8:	000a3506 38060001 0001000a 000a3c0b     .5.....8.....<..
100242f8:	3e090000 0002000a 000a410b 470b0001     ...>.....A.....G
10024308:	0001000a 000a4b0b 510b0002 0000000a     .....K.....Q....
10024318:	000a5906 5e060003 0000000a 000a660c     .Y.....^.....f..
10024328:	700b0009 0001000a 000a7206 750b0002     ...p.....r.....u
10024338:	0000000a 000a7614 810b0000 0001000a     .....v..........
10024348:	000a8309 85060000 0008000a 000a8f06     ................
10024358:	93060002 0015000a 000aaa06 b2060006     ................
10024368:	0001000a 000ab506 bc0b0004 0000000a     ................
10024378:	000abd06 be090000 0002000a 000ac10b     ................
10024388:	c70b0004 0001000a 000ac909 cb090000     ................
10024398:	0001000a 000acd0b d0060000 0000000a     ................
100243a8:	000ae006 e20b0001 0001000a 000ae60c     ................
100243b8:	f0140009 0000000a 000af116 f9060000     ................
100243c8:	0000000a 000afa0b 010b0005 0000000b     ................
100243d8:	000b0209 05060001 0007000b 000b0f06     ................
100243e8:	13060001 0015000b 000b2a06 32060006     .........*.....2
100243f8:	0001000b 000b3506 3c0b0004 0000000b     .....5.....<....
10024408:	000b3d06 3e090000 0000000b 000b3f0b     .=.....>.....?..
10024418:	40090000 0000000b 000b410b 47090003     ...@.....A.....G
10024428:	0001000b 000b4b09 4d0b0001 0000000b     .....K.....M....
10024438:	000b550b 57090001 0000000b 000b5c06     .U.....W.....\..
10024448:	5f060001 0002000b 000b620b 660c0001     ..._.....b.....f
10024458:	0009000b 000b7019 71060000 0000000b     .....p.....q....
10024468:	000b720e 820b0005 0000000b 000b8306     .r..............
10024478:	85060000 0005000b 000b8e06 92060002     ................
10024488:	0003000b 000b9906 9c060001 0000000b     ................
10024498:	000b9e06 a3060001 0001000b 000ba806     ................
100244a8:	ae060002 000b000b 000bbe09 c00b0001     ................
100244b8:	0000000b 000bc109 c6090001 0002000b     ................
100244c8:	000bca09 cd0b0002 0000000b 000bd006     ................
100244d8:	d7090000 0000000b 000be60c f00e0009     ................
100244e8:	0002000b 000bf319 f9160005 0000000b     ................
100244f8:	000bfa19 000b0000 0000000c 000c0109     ................
10024508:	040b0002 0000000c 000c0506 0e060007     ................
10024518:	0002000c 000c1206 2a060016 000f000c     ...........*....
10024528:	000c3c0b 3d060000 0000000c 000c3e0b     .<.....=.....>..
10024538:	41090002 0003000c 000c460b 4a0b0002     ...A.....F.....J
10024548:	0003000c 000c550b 58060001 0002000c     .....U.....X....
10024558:	000c5d06 60060000 0001000c 000c620b     .].....`.....b..
10024568:	660c0001 0009000c 000c7714 780e0000     ...f.....w.....x
10024578:	0006000c 000c7f19 80060000 0000000c     ................
10024588:	000c810b 82090000 0001000c 000c8414     ................
10024598:	85060000 0007000c 000c8e06 92060002     ................
100245a8:	0016000c 000caa06 b5060009 0004000c     ................
100245b8:	000cbc0b bd060000 0000000c 000cbe09     ................
100245c8:	bf0b0000 0000000c 000cc009 c60b0004     ................
100245d8:	0000000c 000cc709 ca090001 0001000c     ................
100245e8:	000ccc0b d5090001 0001000c 000cdd06     ................
100245f8:	e0060001 0001000c 000ce20b e60c0001     ................
10024608:	0009000c 000cf106 f3090001 0000000c     ................
10024618:	000d000b 02090001 0001000d 000d0406     ................
10024628:	0e060008 0002000d 000d1206 3b0b0028     ............(..;
10024638:	0001000d 000d3d06 3e090000 0002000d     .....=.....>....
10024648:	000d410b 46090003 0002000d 000d4a09     .A.....F.....J..
10024658:	4d0b0002 0000000d 000d4e06 4f190000     ...M.....N.....O
10024668:	0000000d 000d5406 57090002 0000000d     .....T.....W....
10024678:	000d580e 5f060006 0002000d 000d620b     .X....._.....b..
10024688:	660c0001 0009000d 000d700e 79190008     ...f.....p.....y
10024698:	0000000d 000d7a06 810b0005 0000000d     .....z..........
100246a8:	000d8209 85060001 0011000d 000d9a06     ................
100246b8:	b3060017 0008000d 000dbd06 c0060000     ................
100246c8:	0006000d 000dca0b cf090000 0002000d     ................
100246d8:	000dd20b d60b0002 0000000d 000dd809     ................
100246e8:	e60c0007 0009000d 000df209 f4140001     ................
100246f8:	0000000d 000e0106 310b002f 0000000e     ......../..1....
10024708:	000e3206 340b0001 0006000e 000e3f16     .2.....4.....?..
10024718:	40060000 0005000e 000e4605 470b0000     ...@.....F.....G
10024728:	0007000e 000e4f14 500c0000 0009000e     .....O.....P....
10024738:	000e5a14 81060001 0001000e 000e8406     .Z..............
10024748:	86060000 0004000e 000e8c06 a5060017     ................
10024758:	0000000e 000ea706 b10b0009 0000000e     ................
10024768:	000eb206 b40b0001 0008000e 000ebd06     ................
10024778:	c0060000 0004000e 000ec605 c80b0000     ................
10024788:	0006000e 000ed00c dc060009 0003000e     ................
10024798:	000f0006 01190000 0002000f 000f0414     ................
100247a8:	1319000e 0000000f 000f1414 15190000     ................
100247b8:	0002000f 000f180b 1a190001 0005000f     ................
100247c8:	000f200c 2a0e0009 0009000f 000f3419     . .....*.....4..
100247d8:	350b0000 0000000f 000f3619 370b0000     ...5.....6.....7
100247e8:	0000000f 000f3819 390b0000 0000000f     .....8.....9....
100247f8:	000f3a15 3b110000 0000000f 000f3c15     .:.....;.....<..
10024808:	3d110000 0000000f 000f3e09 40060001     ...=.....>.....@
10024818:	0007000f 000f4906 710b0023 000d000f     .....I..#..q....
10024828:	000f7f09 800b0000 0004000f 000f8514     ................
10024838:	860b0000 0001000f 000f8806 8d0b0004     ................
10024848:	000a000f 000f990b be190023 0007000f     ........#.......
10024858:	000fc60b c7190000 0005000f 000fce19     ................
10024868:	d0140001 0004000f 000fd519 d9140003     ................
10024878:	0001000f 00100006 2b09002a 00010010     ........*..+....
10024888:	00102d0b 31090003 00000010 0010320b     .-.....1.....2..
10024898:	38090005 00000010 0010390b 3b090001     ...8.....9.....;
100248a8:	00010010 00103d0b 3f060001 00000010     .....=.....?....
100248b8:	0010400c 4a140009 00050010 00105006     .@.....J.....P..
100248c8:	56090005 00010010 0010580b 5a060001     ...V.....X.....Z
100248d8:	00030010 00105e0b 61060002 00000010     .....^.....a....
100248e8:	00106209 65060002 00010010 00106709     .b.....e.....g..
100248f8:	6e060006 00020010 0010710b 75060003     ...n.....q.....u
10024908:	000c0010 0010820b 83090000 00010010     ................
10024918:	0010850b 87090001 00050010 00108d0b     ................
10024928:	8e060000 00000010 00108f09 900c0000     ................
10024938:	00090010 00109a09 9d0b0002 00000010     ................
10024948:	00109e19 a0030001 00250010 0010c703     ..........%.....
10024958:	cd030000 00000010 0010d003 fb14002a     ............*...
10024968:	00000010 0010fc05 fd030000 00020010     ................
10024978:	00110006 4a060148 00030012 00125006     ....H..J.....P..
10024988:	58060006 00000012 00125a06 60060003     ...X.....Z.....`
10024998:	00280012 00128a06 90060003 00200012     ..(........... .
100249a8:	0012b206 b8060003 00060012 0012c006     ................
100249b8:	c2060000 00030012 0012c806 d806000e     ................
100249c8:	00380012 00131206 18060003 00420013     ..8...........B.
100249d8:	00135d0b 60140002 00080013 0013690e     .].....`.....i..
100249e8:	80060013 000f0013 00139019 a0030009     ................
100249f8:	00550013 0013f803 00100005 00000014     ..U.............
10024a08:	00140106 6d19026b 00000016 00166e14     ....k..m.....n..
10024a18:	6f060000 00100016 0016801c 81060000     ...o............
10024a28:	00190016 00169b15 9c110000 00000016     ................
10024a38:	0016a006 eb14004a 00020016 0016ee0d     ....J...........
10024a48:	f1060002 00070016 00170006 120b0011     ................
10024a58:	00020017 00171509 1f060000 00120017     ................
10024a68:	0017320b 34090001 00000017 00173514     .2.....4.....5..
10024a78:	40060001 00110017 0017520b 60060001     ...@.....R.....`
10024a88:	000c0017 00176e06 720b0002 00010017     .....n.....r....
10024a98:	00178006 b40b0033 00010017 0017b609     ....3...........
10024aa8:	b70b0000 00060017 0017be09 c60b0007     ................
10024ab8:	00000017 0017c709 c90b0001 000a0017     ................
10024ac8:	0017d414 d7050002 00000017 0017d814     ................
10024ad8:	db160002 00000017 0017dc06 dd0b0000     ................
10024ae8:	00000017 0017e00c f00e0009 00090017     ................
10024af8:	00180014 06100005 00000018 00180714     ................
10024b08:	0b0b0003 00020018 00180e01 0f0b0000     ................
10024b18:	00000018 0018100c 20060009 00220018     ........... ..".
10024b28:	00184305 44060000 00340018 00188006     .C.....D..4.....
10024b38:	850b0004 00010018 00188706 a90b0021     ............!...
10024b48:	00000018 0018aa06 b0060000 00450018     ..............E.
10024b58:	00190006 200b001e 00020019 00192309     ....... .....#..
10024b68:	270b0003 00010019 00192909 30090002     ...'.....).....0
10024b78:	00010019 0019320b 33090000 00050019     .....2.....3....
10024b88:	0019390b 40190002 00000019 00194414     .9.....@.....D..
10024b98:	460c0001 00090019 00195006 7006001d     ...F.....P.....p
10024ba8:	00040019 00198006 b006002b 00190019     ........+.......
10024bb8:	0019d00c da0e0009 00000019 0019de19     ................
10024bc8:	00060021 0016001a 001a170b 19090001     !...............
10024bd8:	0001001a 001a1b0b 1e140000 0001001a     ................
10024be8:	001a2006 55090034 0000001a 001a560b     . ..4..U.....V..
10024bf8:	57090000 0000001a 001a580b 600b0006     ...W.....X.....`
10024c08:	0000001a 001a6109 620b0000 0000001a     .....a.....b....
10024c18:	001a6309 650b0001 0007001a 001a6d09     .c.....e.....m..
10024c28:	730b0005 0009001a 001a7f0b 800c0000     ...s............
10024c38:	0009001a 001a900c a0140009 0006001a     ................
10024c48:	001aa705 a8140000 0005001a 001ab00b     ................
10024c58:	be0a000d 0000001a 001abf0b 000b000f     ................
10024c68:	0003001b 001b0409 05060000 002e001b     ................
10024c78:	001b340b 35090000 0000001b 001b360b     .4.....5.....6..
10024c88:	3b090004 0000001b 001b3c0b 3d090000     ...;.....<.....=
10024c98:	0004001b 001b420b 43090000 0001001b     .....B.....C....
10024ca8:	001b4506 500c0007 0009001b 001b5a14     .E.....P.....Z..
10024cb8:	61190006 0009001b 001b6b0b 74190008     ...a.....k.....t
10024cc8:	0008001b 001b7d14 800b0001 0001001b     .....}..........
10024cd8:	001b8209 83060000 001d001b 001ba109     ................
10024ce8:	a20b0000 0003001b 001ba609 a80b0001     ................
10024cf8:	0001001b 001baa09 ab0b0000 0002001b     ................
10024d08:	001bae06 b00c0001 0009001b 001bba06     ................
10024d18:	e60b002b 0000001b 001be709 e80b0000     +...............
10024d28:	0001001b 001bea09 ed0b0002 0000001b     ................
10024d38:	001bee09 ef0b0000 0002001b 001bf209     ................
10024d48:	fc140001 0003001b 001c0006 24090023     ............#..$
10024d58:	0007001c 001c2c0b 34090007 0001001c     .....,.....4....
10024d68:	001c360b 3b140001 0004001c 001c400c     .6.....;.....@..
10024d78:	4d060009 0002001c 001c500c 5a060009     ...M.....P.....Z
10024d88:	001d001c 001c7805 7e140005 0001001c     .....x.....~....
10024d98:	001c8003 90030008 002a001c 001cbd03     ..........*.....
10024da8:	c0140002 0007001c 001cd00b d3140002     ................
10024db8:	0000001c 001cd40b e109000c 0000001c     ................
10024dc8:	001ce20b e9060006 0003001c 001ced0b     ................
10024dd8:	ee060000 0005001c 001cf40b f5060000     ................
10024de8:	0001001c 001cf709 f80b0000 0001001c     ................
10024df8:	001cfa06 00040000 002b001d 001d2c05     ..........+..,..
10024e08:	6b04003e 000c001d 001d7805 79030000     >..k.....x.....y
10024e18:	0000001d 001d7a04 7d030002 0000001d     .....z.....}....
10024e28:	001d7e04 8e03000f 0000001d 001d8f04     .~..............
10024e38:	9b05000b 0024001d 001dc00b 0003003f     ......$.....?...
10024e48:	0095001e 001e9604 9b030004 0000001e     ................
10024e58:	001e9c04 9e030001 0000001e 001e9f04     ................
10024e68:	a0030000 0075001e 001f1803 20030005     ......u........ 
10024e78:	0025001f 001f4803 50040005 0000001f     ..%..H.....P....
10024e88:	001f5103 52040000 0000001f 001f5303     .Q.....R.....S..
10024e98:	54040000 0000001f 001f5503 56040000     ...T.....U.....V
10024ea8:	0000001f 001f5703 59030000 0000001f     .....W.....Y....
10024eb8:	001f5b03 5d030000 0000001f 001f5f03     .[.....]....._..
10024ec8:	8003001e 0007001f 001f8807 90030007     ................
10024ed8:	0007001f 001f9807 a0030007 0007001f     ................
10024ee8:	001fa807 b0030007 0001001f 001fb204     ................
10024ef8:	b3030000 0000001f 001fb404 b6040000     ................
10024f08:	0001001f 001fb803 bc070003 0000001f     ................
10024f18:	001fbd17 be030000 0000001f 001fbf17     ................
10024f28:	c2040002 0000001f 001fc303 c4040000     ................
10024f38:	0000001f 001fc604 c8030001 0003001f     ................
10024f48:	001fcc07 cd170000 0002001f 001fd003     ................
10024f58:	d2040001 0001001f 001fd604 d8030001     ................
10024f68:	0003001f 001fdd17 e0030002 0001001f     ................
10024f78:	001fe204 e5030002 0000001f 001fe604     ................
10024f88:	e8030001 0004001f 001fed17 f2040002     ................
10024f98:	0000001f 001ff303 f4040000 0000001f     ................
10024fa8:	001ff604 f8030001 0003001f 001ffc07     ................
10024fb8:	fd170000 0001001f 0020001c 0b01000a     .......... .....
10024fc8:	00040020 00201010 16140005 00010020      ..... ..... ...
10024fd8:	00201813 19120000 00000020 00201a15     .. ..... ..... .
10024fe8:	1b130000 00010020 00201d12 1e150000     .... ..... .....
10024ff8:	00000020 00201f13 20140000 00070020      ..... ....  ...
10025008:	0020281a 291b0000 00000020 00202a01     .( ....) ....* .
10025018:	2f1c0004 00000020 00203014 39130008     .../ ....0 ....9
10025028:	00000020 00203a12 3b140000 00030020      ....: ....; ...
10025038:	00203f0f 41140001 00020020 00204418     .? ....A ....D .
10025048:	45150000 00000020 00204611 47140000     ...E ....F ....G
10025058:	000a0020 00205218 53140000 00000020      ....R ....S ...
10025068:	0020540f 55140000 00090020 00205f1c     .T ....U ...._ .
10025078:	60010000 00040020 00206601 700e0009     ...` ....f ....p
10025088:	00000020 00207105 740e0000 00050020      ....q ....t ...
10025098:	00207a18 7d150002 00000020 00207e11     .z ....} ....~ .
100250a8:	7f050000 00000020 0020800e 8a180009     .... ..... .....
100250b8:	00020020 00208d15 8e110000 00000020      ..... ..... ...
100250c8:	00209005 a016000c 00200020 0020d00b     .. ..... . ... .
100250d8:	dd0a000c 00030020 0020e10b e20a0000     .... ..... .....
100250e8:	00020020 0020e50b 0019000b 00010021      ..... .....!...
100250f8:	00210208 03190000 00030021 00210708     ..!.....!.....!.
10025108:	08190000 00010021 00210a04 0b080000     ....!.....!.....
10025118:	00020021 00210e04 10080001 00020021     !.....!.....!...
10025128:	00211304 14190000 00000021 00211508     ..!.....!.....!.
10025138:	16190000 00010021 00211818 19080000     ....!.....!.....
10025148:	00040021 00211e19 24080005 00000021     !.....!....$!...
10025158:	00212519 26030000 00000021 00212719     .%!....&!....'!.
10025168:	28080000 00000021 00212919 2a030000     ...(!....)!....*
10025178:	00010021 00212c08 2e190001 00000021     !....,!.....!...
10025188:	00212f04 30080000 00010021 00213203     ./!....0!....2!.
10025198:	33080000 00000021 00213404 35060000     ...3!....4!....5
100251a8:	00030021 00213904 3a190000 00010021     !....9!....:!...
100251b8:	00213c04 3e080001 00010021 00214018     .<!....>!....@!.
100251c8:	45080004 00000021 00214604 4a190003     ...E!....F!....J
100251d8:	00000021 00214b18 4c190000 00010021     !....K!....L!...
100251e8:	00214e03 4f190000 00000021 0021500e     .N!....O!....P!.
100251f8:	600d000f 00220021 00218303 850d0001     ...`!."...!.....
10025208:	00030021 0021890e 8a190000 00010021     !.....!.....!...
10025218:	00219018 95190004 00040021 00219a18     ..!.....!.....!.
10025228:	9c190001 00030021 0021a018 a1190000     ....!.....!.....
10025238:	00010021 0021a318 a4190000 00010021     !.....!.....!...
10025248:	0021a618 a7190000 00060021 0021ae18     ..!.....!.....!.
10025258:	af190000 001e0021 0021ce18 d0190001     ....!.....!.....
10025268:	00010021 0021d218 d3190000 00000021     !.....!.....!...
10025278:	0021d418 d5190000 001e0021 0021f418     ..!.....!.....!.
10025288:	0019010b 00070023 00230815 09110000     ....#.....#.....
10025298:	00000023 00230a15 0b110000 00000023     #.....#.....#...
100252a8:	00230c19 20180013 00010023 00232219     ..#.... #...."#.
100252b8:	29150006 00000023 00232a11 2b190000     ...)#....*#....+
100252c8:	00500023 00237c18 7d190000 001d0023     #.P..|#....}#...
100252d8:	00239b18 b4190018 00270023 0023dc18     ..#.....#.'...#.
100252e8:	e2190005 00440023 00244019 600e000a     ....#.D..@$....`
100252f8:	003b0024 00249c19 ea0e004d 00150024     $.;...$.M...$...
10025308:	00250019 b71800b6 00000025 0025b819     ..%.....%.....%.
10025318:	c1180008 00000025 0025c219 f8180035     ....%.....%.5...
10025328:	00070025 00260019 6f18006e 00000026     %.....&.n..o&...
10025338:	00267019 681500f7 00000027 00276911     .p&....h'....i'.
10025348:	6a150000 00000027 00276b11 6c150000     ...j'....k'....l
10025358:	00000027 00276d11 6e150000 00000027     '....m'....n'...
10025368:	00276f11 70150000 00000027 00277111     .o'....p'....q'.
10025378:	72150000 00000027 00277311 74150000     ...r'....s'....t
10025388:	00000027 00277511 760e0000 001d0027     '....u'....v'...
10025398:	00279419 c018002b 00040027 0027c515     ..'.+...'.....'.
100253a8:	c6110000 00000027 0027c718 e615001e     ....'.....'.....
100253b8:	00000027 0027e711 e8150000 00000027     '.....'.....'...
100253c8:	0027e911 ea150000 00000027 0027eb11     ..'.....'.....'.
100253d8:	ec150000 00000027 0027ed11 ee150000     ....'.....'.....
100253e8:	00000027 0027ef11 f0180000 000f0027     '.....'.....'...
100253f8:	00280019 001800ff 00820029 00298315     ..(.....).....).
10025408:	84110000 00000029 00298515 86110000     ....).....).....
10025418:	00000029 00298715 88110000 00000029     ).....).....)...
10025428:	00298915 8a110000 00000029 00298b15     ..).....).....).
10025438:	8c110000 00000029 00298d15 8e110000     ....).....).....
10025448:	00000029 00298f15 90110000 00000029     ).....).....)...
10025458:	00299115 92110000 00000029 00299315     ..).....).....).
10025468:	94110000 00000029 00299515 96110000     ....).....).....
10025478:	00000029 00299715 98110000 00000029     ).....).....)...
10025488:	00299918 d815003e 00000029 0029d911     ..).>...).....).
10025498:	da150000 00000029 0029db11 dc180000     ....).....).....
100254a8:	001f0029 0029fc15 fd110000 00000029     ).....).....)...
100254b8:	0029fe18 00190101 002f002b 002b3018     ..).....+./..0+.
100254c8:	45190014 0001002b 002b4718 4d190005     ...E+....G+....M
100254d8:	0026002b 002b7619 9719001f 0068002b     +.&..v+.....+.h.
100254e8:	002c0003 71040070 0000002c 002c7203     ..,.p..q,....r,.
100254f8:	74040001 0000002c 002c7503 77040001     ...t,....u,....w
10025508:	0004002c 002c7c05 7e030001 0065002c     ,....|,....~,.e.
10025518:	002ce404 e5190000 0005002c 002ceb03     ..,.....,.....,.
10025528:	ef0b0003 0002002c 002cf203 f9140001     ....,.....,.....
10025538:	0003002c 002cfd0e fe140000 0001002c     ,.....,.....,...
10025548:	002d0003 27030025 0000002d 002d2d03     ..-.%..'-....--.
10025558:	30060000 0037002d 002d6f05 70140000     ...0-.7..o-....p
10025568:	0000002d 002d7f0b 80060000 0016002d     -.....-.....-...
10025578:	002da006 a8060006 0006002d 002db006     ..-.....-.....-.
10025588:	b8060006 0006002d 002dc006 c8060006     ....-.....-.....
10025598:	0006002d 002dd006 d8060006 0006002d     -.....-.....-...
100255a8:	002de00b 0014001f 0001002e 002e0213     ..-.............
100255b8:	03120000 0000002e 002e0413 05120000     ................
100255c8:	0000002e 002e0614 09130002 0000002e     ................
100255d8:	002e0a12 0b140000 0000002e 002e0c13     ................
100255e8:	0d120000 0000002e 002e0e14 17100008     ................
100255f8:	0000002e 002e1814 1a100001 0000002e     ................
10025608:	002e1b14 1c130000 0000002e 002e1d12     ................
10025618:	1e140000 0001002e 002e2013 21120000     ......... .....!
10025628:	0000002e 002e2215 23110000 0000002e     .....".....#....
10025638:	002e2415 25110000 0000002e 002e2615     .$.....%.....&..
10025648:	27110000 0000002e 002e2815 29110000     ...'.....(.....)
10025658:	0000002e 002e2a14 2f050004 0000002e     .....*...../....
10025668:	002e3014 3a100009 0001002e 002e3c14     .0.....:.....<..
10025678:	40100003 0000002e 002e4114 42150000     ...@.....A.....B
10025688:	0000002e 002e4314 5019000c 0001002e     .....C.....P....
10025698:	002e5214 55150002 0000002e 002e5611     .R.....U.....V..
100256a8:	57150000 0000002e 002e5811 59150000     ...W.....X.....Y
100256b8:	0000002e 002e5a11 5b150000 0000002e     .....Z.....[....
100256c8:	002e5c11 5d100000 0000002e 002e8019     .\.....]........
100256d8:	9b190019 0058002e 002f0019 f01900d5     ......X.../.....
100256e8:	000b002f 0030001c 01140000 00020030     /.....0.....0...
100256f8:	00300419 05050000 00000030 00300606     ..0.....0.....0.
10025708:	070d0000 00000030 00300815 09110000     ....0.....0.....
10025718:	00000030 00300a15 0b110000 00000030     0.....0.....0...
10025728:	00300c15 0d110000 00000030 00300e15     ..0.....0.....0.
10025738:	0f110000 00000030 00301015 11110000     ....0.....0.....
10025748:	00000030 00301219 14150001 00000030     0.....0.....0...
10025758:	00301511 16150000 00000030 00301711     ..0.....0.....0.
10025768:	18150000 00000030 00301911 1a150000     ....0.....0.....
10025778:	00000030 00301b11 1c100000 00000030     0.....0.....0...
10025788:	00301d15 1e110000 00010030 00302019     ..0.....0.... 0.
10025798:	210d0000 00080030 00302a0b 2e090003     ...!0....*0.....
100257a8:	00010030 00303010 31050000 00040030     0....00....10...
100257b8:	00303619 380d0001 00020030 00303b05     .60....80....;0.
100257c8:	3c060000 00000030 00303d14 3e190000     ...<0....=0....>
100257d8:	00010030 00304106 990b0055 00010030     0....A0.U...0...
100257e8:	00309b17 9d050001 00010030 00309f06     ..0.....0.....0.
100257f8:	a0100000 00000030 0030a106 fb140059     ....0.....0.Y...
10025808:	00000030 0030fc05 ff060002 00000030     0.....0.....0...
10025818:	00310506 3106002a 005d0031 00319019     ..1.*..11.]...1.
10025828:	920e0001 00030031 00319619 a0060009     ....1.....1.....
10025838:	001f0031 0031c019 f0060023 000f0031     1.....1.#...1...
10025848:	00320019 200e001e 00090032 00322a19     ..2.... 2....*2.
10025858:	480e001d 00070032 00325019 510e0000     ...H2....P2....Q
10025868:	000e0032 00326019 800e001f 00090032     2....`2.....2...
10025878:	00328a19 b10e0026 000e0032 0032c019     ..2.&...2.....2.
10025888:	0006013f 19bf0034 004dc019 0006003f     ?...4.....M.?...
10025898:	5214004e 00a01505 16060000 047600a0     N..R..........v.
100258a8:	00a49019 d0060036 002700a4 00a4f805     ....6.....'.....
100258b8:	fe140005 000100a4 00a50006 0c05010b     ................
100258c8:	000000a6 00a60d14 10060002 000f00a6     ................
100258d8:	00a6200c 2a060009 000100a6 00a64003     . .....*.....@..
100258e8:	6e06002d 000000a6 00a66f0b 700a0000     -..n.....o.....p
100258f8:	000200a6 00a67314 740b0000 000900a6     .....s.....t....
10025908:	00a67e14 7f050000 000000a6 00a68003     .~..............
10025918:	9c05001b 000100a6 00a69e0b a0060001     ................
10025928:	004500a6 00a6e60d f00b0009 000100a6     ..E.............
10025938:	00a6f214 00170005 001600a7 00a71705     ................
10025948:	20170008 000100a7 00a72203 3004000d     ... .....".....0
10025958:	000100a7 00a73203 7005003d 000000a7     .....2..=..p....
10025968:	00a77104 79030007 000e00a7 00a78805     .q.....y........
10025978:	89170000 000100a7 00a78b03 8e040002     ................
10025988:	000000a7 00a78f06 90030000 000400a7     ................
10025998:	00a79504 96030000 001800a7 00a7af04     ................
100259a8:	b0030000 001a00a7 00a7d003 d3040001     ................
100259b8:	000000a7 00a7d504 d6030000 000300a7     ................
100259c8:	00a7f205 f5030002 000100a7 00a7f706     ................
100259d8:	f8050000 000100a7 00a7fa04 fb060000     ................
100259e8:	000600a7 00a8020b 03060000 000200a8     ................
100259f8:	00a8060b 07060000 000300a8 00a80b0b     ................
10025a08:	0c060000 001600a8 00a82309 250b0001     .........#.....%
10025a18:	000100a8 00a82709 28190000 000300a8     .....'.....(....
10025a28:	00a82c0b 300e0000 000500a8 00a83619     .,.....0.....6..
10025a38:	38160001 000000a8 00a83919 40060000     ...8.....9.....@
10025a48:	003300a8 00a87414 80090003 000100a8     ..3..t..........
10025a58:	00a88206 b4090031 000f00a8 00a8c40b     ....1...........
10025a68:	ce140001 000100a8 00a8d00c e00b0009     ................
10025a78:	001100a8 00a8f206 f8140005 000200a8     ................
10025a88:	00a8fb06 fc140000 000000a8 00a8fd06     ................
10025a98:	ff0b0001 000000a8 00a9000c 0a060009     ................
10025aa8:	001b00a9 00a9260b 2e140007 000100a9     .....&..........
10025ab8:	00a93006 470b0016 000a00a9 00a95209     .0.....G.....R..
10025ac8:	5f140001 000000a9 00a96006 800b001c     ..._.....`......
10025ad8:	000200a9 00a98309 84060000 002e00a9     ................
10025ae8:	00a9b30b b4090000 000100a9 00a9b60b     ................
10025af8:	ba090003 000100a9 00a9bc0b be090001     ................
10025b08:	000200a9 00a9c114 cf05000c 000000a9     ................
10025b18:	00a9d00c de140009 000100a9 00a9e006     ................
10025b28:	e50b0004 000000a9 00a9e605 e7060000     ................
10025b38:	000800a9 00a9f00c fa060009 000400a9     ................
10025b48:	00aa0006 290b0028 000500aa 00aa2f09     ....(..)...../..
10025b58:	310b0001 000100aa 00aa3309 350b0001     ...1.....3.....5
10025b68:	000100aa 00aa4006 430b0002 000000aa     .....@.....C....
10025b78:	00aa4406 4c0b0007 000000aa 00aa4d09     .D.....L.....M..
10025b88:	500c0000 000900aa 00aa5c14 60060003     ...P.....\.....`
10025b98:	000f00aa 00aa7005 71060000 000500aa     .....p.....q....
10025ba8:	00aa7719 7a060002 000000aa 00aa7b09     .w.....z.....{..
10025bb8:	7c0b0000 000000aa 00aa7d09 7e060000     ...|.....}.....~
10025bc8:	003100aa 00aab00b b1060000 000000aa     ..1.............
10025bd8:	00aab20b b5060002 000100aa 00aab70b     ................
10025be8:	b9060001 000400aa 00aabe0b c0060001     ................
10025bf8:	000000aa 00aac10b c2060000 000000aa     ................
10025c08:	00aadb06 dd050001 000000aa 00aade14     ................
10025c18:	e0060001 000a00aa 00aaeb09 ec0b0000     ................
10025c28:	000100aa 00aaee09 f0140001 000100aa     ................
10025c38:	00aaf206 f3050000 000100aa 00aaf509     ................
10025c48:	f60b0000 000000aa 00ab0106 09060005     ................
10025c58:	000500ab 00ab1106 20060005 000600ab     ........... ....
10025c68:	00ab2806 30040006 002200ab 00ab5303     .(.....0.."..S..
10025c78:	54040000 000600ab 00ab5b17 5c050000     ...T.....[.....\
10025c88:	000300ab 00ab6004 69050008 000000ab     .....`.....i....
10025c98:	00ab6a17 70030001 004f00ab 00abc006     .j.....p..O.....
10025ca8:	e3090022 000100ab 00abe50b e6090000     "...............
10025cb8:	000100ab 00abe80b e9090000 000100ab     ................
10025cc8:	00abeb14 ec090000 000000ab 00abed0b     ................
10025cd8:	f00c0000 000900ab 00ac0006 b0062ba3     .............+..
10025ce8:	001600d7 00d7cb06 00020030 07ff00d8     ........0.......
10025cf8:	00f90006 7006016d 006900fa 00fb0004     ....m..p..i.....
10025d08:	13040006 000400fb 00fb1d06 1e0b0000     ................
10025d18:	000000fb 00fb1f06 29180009 000000fb     ...........)....
10025d28:	00fb2a06 3806000c 000400fb 00fb3e06     .*.....8.....>..
10025d38:	40060000 000100fb 00fb4306 46060001     ...@.....C.....F
10025d48:	006b00fb 00fbb217 d3060010 016a00fb     ..k...........j.
10025d58:	00fd3e11 3f150000 000000fd 00fd4019     .>.....?.....@..
10025d68:	5006000f 003f00fd 00fd9206 cf190035     ...P..?.....5...
10025d78:	000000fd 00fdf006 fc16000b 000000fd     ................
10025d88:	00fdfd19 000b0002 000f00fe 00fe1014     ................
10025d98:	17150006 000000fe 00fe1811 19140000     ................
10025da8:	000000fe 00fe200b 3014000f 000000fe     ..... .....0....
10025db8:	00fe3110 330f0001 000100fe 00fe3515     .1.....3.....5..
10025dc8:	36110000 000000fe 00fe3715 38110000     ...6.....7.....8
10025dd8:	000000fe 00fe3915 3a110000 000000fe     .....9.....:....
10025de8:	00fe3b15 3c110000 000000fe 00fe3d15     .;.....<.....=..
10025df8:	3e110000 000000fe 00fe3f15 40110000     ...>.....?.....@
10025e08:	000000fe 00fe4115 42110000 000000fe     .....A.....B....
10025e18:	00fe4315 44110000 000000fe 00fe4514     .C.....D.....E..
10025e28:	47150001 000000fe 00fe4811 49140000     ...G.....H.....I
10025e38:	000300fe 00fe4d0f 50140002 000200fe     .....M.....P....
10025e48:	00fe5414 58100003 000000fe 00fe5915     .T.....X.....Y..
10025e58:	5a110000 000000fe 00fe5b15 5c110000     ...Z.....[.....\
10025e68:	000000fe 00fe5d15 5e110000 000000fe     .....].....^....
10025e78:	00fe5f14 62180002 000000fe 00fe6310     ._.....b.....c..
10025e88:	64180000 000200fe 00fe6814 69160000     ...d.....h.....i
10025e98:	000000fe 00fe6a14 70060001 000400fe     .....j.....p....
10025ea8:	00fe7606 ff010086 000000fe 00ff0114     .v..............
10025eb8:	04160002 000000ff 00ff0514 08150002     ................
10025ec8:	000000ff 00ff0911 0a140000 000000ff     ................
10025ed8:	00ff0b18 0c140000 000000ff 00ff0d10     ................
10025ee8:	0e140000 000100ff 00ff100c 1a140009     ................
10025ef8:	000100ff 00ff1c18 1f140002 000100ff     ................
10025f08:	00ff2103 3b150019 000000ff 00ff3c14     .!.....;.....<..
10025f18:	3d110000 000000ff 00ff3e17 3f0f0000     ...=.....>.....?
10025f28:	000000ff 00ff4017 41030000 001900ff     .....@.....A....
10025f38:	00ff5b15 5c180000 000000ff 00ff5d11     .[.....\.....]..
10025f48:	5e180000 000000ff 00ff5f15 60110000     ...^....._.....`
10025f58:	000000ff 00ff6114 62150000 000000ff     .....a.....b....
10025f68:	00ff6311 64140000 000100ff 00ff6606     .c.....d.....f..
10025f78:	70050009 000000ff 00ff7106 9e05002c     ...p.....q..,...
10025f88:	000100ff 00ffa006 c206001e 000500ff     ................
10025f98:	00ffca06 d2060005 000500ff 00ffda06     ................
10025fa8:	e0160002 000100ff 00ffe218 e3170000     ................
10025fb8:	000000ff 00ffe419 e5160000 000100ff     ................
10025fc8:	00ffe819 e9180000 000300ff 00ffed19     ................
10025fd8:	f9010001 000200ff 00fffc19 00060001     ................
10025fe8:	000b0100 01000d06 28060019 00120100     ...........(....
10025ff8:	01003c06 3f060001 000e0100 01005006     .<.....?.....P..
10026008:	8006000d 007a0100 01010014 070e0002     ......z.........
10026018:	002c0101 01013719 400d0008 00340101     ..,..7.....@..4.
10026028:	0101750e 79190003 00100101 01018a0e     .u.....y........
10026038:	8c190001 00020101 01019019 a019000c     ................
10026048:	00000101 0101d019 fd0b002c 00000101     ........,.......
10026058:	01028006 a006001c 00300102 0102e00b     ..........0.....
10026068:	e10e0000 001a0102 01030006 200e001f     ............... 
10026078:	00030103 01032d06 410d0013 00000103     .....-.....A....
10026088:	01034206 4a0d0007 00000103 01035006     .B.....J.....P..
10026098:	760b0025 00040103 01038006 9f14001d     %..v............
100260a8:	00000103 0103a006 c8060023 00070103     ........#.......
100260b8:	0103d014 d10d0000 00040103 01040003     ................
100260c8:	5006004f 004d0104 0104a00c b0030009     O..P..M.........
100260d8:	00230104 0104d803 00060023 00270105     ..#.....#.....'.
100260e8:	01053006 6f140033 00000105 01057003     .0..3..o.....p..
100260f8:	7c03000a 000e0105 01058c03 94030006     ...|............
10026108:	00010105 01059703 a303000a 000e0105     ................
10026118:	0105b303 bb030006 00010105 01060006     ................
10026128:	40060136 00150107 01076006 80050007     6..@.....`......
10026138:	00050107 01078705 b2050029 00080107     ........).......
10026148:	01080006 08060005 00000108 01080a06     ................
10026158:	3706002b 00010108 01083c06 3f060000     +..7.....<.....?
10026168:	00160108 01085714 580e0000 00070108     .....W.....X....
10026178:	01086006 77190016 00010108 0108790e     .`.....w.....y..
10026188:	80060006 001e0108 0108a70e e0060008     ................
10026198:	00120108 0108f406 fb0e0001 00040108     ................
100261a8:	01090006 160e0015 00050109 01091f14     ................
100261b8:	20060000 00190109 01093f14 80060000     ... .....?......
100261c8:	00370109 0109bc0e be060001 00010109     ..7.............
100261d8:	0109c00e d20e000f 002d0109 010a0006     ..........-.....
100261e8:	010b0000 0002010a 010a050b 0c0b0001     ................
100261f8:	0003010a 010a1006 15060003 0002010a     ................
10026208:	010a1906 380b001c 0002010a 010a3f0b     .......8.....?..
10026218:	400e0000 0008010a 010a5014 60060008     ...@.....P.....`
10026228:	001c010a 010a7d0e 7f140001 0000010a     .....}..........
10026238:	010a8006 9d0e001c 0002010a 010ac006     ................
10026248:	c8190007 0000010a 010ac906 e50b001b     ................
10026258:	0001010a 010aeb0e f0140004 0006010a     ................
10026268:	010b0006 39140035 0006010b 010b4006     ....5..9.....@..
10026278:	580e0015 0007010b 010b6006 780e0012     ...X.....`.....x
10026288:	0007010b 010b8006 99140011 0003010b     ................
10026298:	010ba90e 00060006 0048010c 010c8003     ..........H.....
100262a8:	c0030032 0032010c 010cfa0e 00060005     2.....2.........
100262b8:	0023010d 010d240b 300c0003 0009010d     ..#..$.....0....
100262c8:	010e600e 8006001e 0029010e 010eab0b     .`........).....
100262d8:	ad100001 0000010e 010eb006 fd0b0001     ................
100262e8:	0002010e 010f0006 1d0e001c 0009010f     ................
100262f8:	010f2706 30060000 0015010f 010f460b     .'.....0.....F..
10026308:	510e000a 0003010f 010f5514 70060004     ...Q.....U.....p
10026318:	0011010f 010f820b 86140003 0003010f     ................
10026328:	010fb006 c50e0014 0006010f 010fe006     ................
10026338:	00090016 00000110 0110010b 02090000     ................
10026348:	00000110 01100306 380b0034 000e0110     ........4..8....
10026358:	01104714 520e0006 00130110 0110660c     .G.....R.....f..
10026368:	700b0009 00000110 01107106 730b0001     ...p.....q.....s
10026378:	00010110 01107506 7f0b0000 00020110     .....u..........
10026388:	01108209 83060000 002c0110 0110b009     ..........,.....
10026398:	b30b0002 00030110 0110b709 b90b0001     ................
100263a8:	00010110 0110bb14 bd010001 00000110     ................
100263b8:	0110be14 c20b0003 00000110 0110cd01     ................
100263c8:	d0060000 00180110 0110f00c 000b0009     ................
100263d8:	00020111 01110306 270b0023 00040111     ........#..'....
100263e8:	01112c09 2d0b0000 00070111 0111360c     .,.....-.....6..
100263f8:	40140009 00030111 01114406 45090000     ...@.....D.....E
10026408:	00010111 01114706 50060000 00220111     .....G.....P..".
10026418:	0111730b 74140000 00010111 01117606     .s.....t.....v..
10026428:	800b0000 00010111 01118209 83060000     ................
10026438:	002f0111 0111b309 b60b0002 00080111     ../.............
10026448:	0111bf09 c1060001 00030111 0111c514     ................
10026458:	c90b0003 00030111 0111cd14 ce090000     ................
10026468:	00000111 0111cf0b d00c0000 00090111     ................
10026478:	0111da06 db140000 00000111 0111dc06     ................
10026488:	dd140000 00020111 0111e10e 00060013     ................
10026498:	00110112 01121306 2c090018 00020112     ...........,....
100264a8:	01122f0b 32090002 00010112 0112340b     ./.....2.....4..
100264b8:	35090000 00000112 0112360b 38140001     ...5.....6.....8
100264c8:	00050112 01123e0b 3f060000 00010112     .....>.....?....
100264d8:	0112410b 80060000 00060112 01128806     .A..............
100264e8:	8a060000 00030112 01128f06 9f06000e     ................
100264f8:	00090112 0112a914 b0060000 002e0112     ................
10026508:	0112df0b e0090000 00020112 0112e30b     ................
10026518:	f00c0007 00090112 0113000b 02090001     ................
10026528:	00010113 01130506 0f060007 00010113     ................
10026538:	01131306 2a060015 00060113 01133206     .......*.....2..
10026548:	35060001 00040113 01133b0b 3d060001     ...5.....;.....=
10026558:	00000113 01133e09 400b0001 00000113     .....>.....@....
10026568:	01134109 47090003 00010113 01134b09     .A.....G.....K..
10026578:	50060002 00000113 01135709 5d060000     ...P.....W.....]
10026588:	00040113 01136209 660b0001 00060113     .....b.....f....
10026598:	0113700b 00060004 00340114 01143509     .p........4..5..
100265a8:	380b0002 00070114 01144009 420b0001     ...8.....@.....B
100265b8:	00020114 01144509 460b0000 00000114     .....E.....F....
100265c8:	01144706 4b140003 00040114 0114500c     .G.....K.....P..
100265d8:	5a140009 00010114 01145d14 5e0b0000     ...Z.....].....^
100265e8:	00000114 01145f06 80060002 002f0114     ....._......../.
100265f8:	0114b009 b30b0002 00050114 0114b909     ................
10026608:	ba0b0000 00000114 0114bb09 bf0b0003     ................
10026618:	00010114 0114c109 c20b0000 00010114     ................
10026628:	0114c406 c6140001 00000114 0114c706     ................
10026638:	d00c0000 00090114 01158006 af09002e     ................
10026648:	00020115 0115b20b b8090003 00030115     ................
10026658:	0115bc0b be090001 00000115 0115bf0b     ................
10026668:	c1140001 00160115 0115d806 dc0b0003     ................
10026678:	00010115 01160006 3009002f 00020116     ......../..0....
10026688:	0116330b 3b090007 00010116 01163d0b     .3.....;.....=..
10026698:	3e090000 00000116 01163f0b 41140001     ...>.....?.....A
100266a8:	00020116 01164406 500c0000 00090116     .....D.....P....
100266b8:	01166014 8006000c 002a0116 0116ab0b     .`........*.....
100266c8:	ac090000 00000116 0116ad0b ae090000     ................
100266d8:	00010116 0116b00b b6090005 00000116     ................
100266e8:	0116b70b b8060000 00000116 0116b914     ................
100266f8:	c00c0000 00090116 01170006 1d0b001a     ................
10026708:	00020117 01172009 220b0001 00030117     ..... ....."....
10026718:	01172609 270b0000 00040117 0117300c     .&.....'.....0..
10026728:	3a0e0009 00010117 01173c14 3f190002     ...:.....<.....?
10026738:	00000117 01174006 00060006 002b0118     .....@........+.
10026748:	01182c09 2f0b0002 00080118 01183809     .,...../.....8..
10026758:	390b0000 00010118 01183b14 a0030000     ...9.....;......
10026768:	003f0118 0118e00c ea0e0009 00080118     ..?.............
10026778:	0118ff06 09060007 00000119 01190c06     ................
10026788:	15060007 00010119 01191806 30090017     ...............0
10026798:	00050119 01193709 3b0b0001 00010119     .....7.....;....
100267a8:	01193d09 3e0b0000 00000119 01193f06     .=.....>.....?..
100267b8:	40090000 00000119 01194106 42090000     ...@.....A.....B
100267c8:	00000119 0119430b 44140000 00020119     .....C.....D....
100267d8:	0119500c a0060009 00070119 0119aa06     .P..............
100267e8:	d1090026 00020119 0119d40b da0b0003     &...............
100267f8:	00010119 0119dc09 e00b0003 00000119     ................
10026808:	0119e106 e2140000 00000119 0119e306     ................
10026818:	e4090000 00000119 011a0006 010b0000     ................
10026828:	0009011a 011a0b06 330b0027 0005011a     ........'..3....
10026838:	011a3909 3a060000 0000011a 011a3b0b     .9.....:.....;..
10026848:	3f140003 0007011a 011a470b 50060000     ...?.....G.....P
10026858:	0000011a 011a510b 57090005 0001011a     .....Q.....W....
10026868:	011a590b 5c060002 002d011a 011a8a0b     .Y.....\..-.....
10026878:	9709000c 0000011a 011a980b 9a140001     ................
10026888:	0002011a 011a9d06 9e140000 0004011a     ................
10026898:	011ab006 00140048 0009011b 011c0006     ....H...........
100268a8:	0a060008 0024011c 011c2f09 300b0000     ......$../.....0
100268b8:	0006011c 011c380b 3e090005 0000011c     .....8.....>....
100268c8:	011c3f0b 40060000 0000011c 011c4114     .?.....@.....A..
100268d8:	500c0004 0009011c 011c5a0e 70140012     ...P.....Z.....p
100268e8:	0001011c 011c7206 920b001d 0015011c     .....r..........
100268f8:	011ca909 aa0b0000 0006011c 011cb109     ................
10026908:	b20b0000 0001011c 011cb409 b50b0000     ................
10026918:	0001011c 011d0006 08060006 0001011d     ................
10026928:	011d0b06 310b0025 0005011d 011d3a0b     ....%..1.....:..
10026938:	3c0b0000 0001011d 011d3f0b 46060006     ...<.....?.....F
10026948:	0000011d 011d470b 500c0000 0009011d     .....G.....P....
10026958:	011d6006 67060005 0001011d 011d6a06     .`.....g.....j..
10026968:	8a09001f 0004011d 011d900b 93090001     ................
10026978:	0001011d 011d950b 96090000 0000011d     ................
10026988:	011d970b 98060000 0000011d 011da00c     ................
10026998:	e0060009 0012011e 011ef30b f5090001     ................
100269a8:	0001011e 011ef714 000b0001 0001011f     ................
100269b8:	011f0206 03090000 0000011f 011f0406     ................
100269c8:	1206000c 0021011f 011f3409 360b0001     ......!..4.....6
100269d8:	0004011f 011f3e09 400b0001 0000011f     .....>.....@....
100269e8:	011f4109 420b0000 0000011f 011f4314     .A.....B.....C..
100269f8:	500c000c 0009011f 011fb006 c00e0000     ...P............
10026a08:	0014011f 011fd519 dd160007 0003011f     ................
10026a18:	011fe119 ff140010 0000011f 01200006     .............. .
10026a28:	000d0399 006e0124 01247014 80060004     ....$.n..p$.....
10026a38:	00c30124 012f9006 f1140060 0001012f     $...../.`.../...
10026a48:	01300006 3001042f 000f0134 0134400b     ..0./..04....@4.
10026a58:	41060000 00050134 0134470b 0006000e     ...A4....G4.....
10026a68:	02460144 01680006 40060238 001e016a     D.F...h.8..@j...
10026a78:	016a600c 6e140009 0001016a 016a7006     .`j....nj....pj.
10026a88:	c00c004e 0009016a 016ad006 f00b001d     N...j.....j.....
10026a98:	0004016a 016af514 00060000 002f016b     j.....j.....k./.
10026aa8:	016b300b 37140006 0004016b 016b3c19     .0k....7k....<k.
10026ab8:	40050003 0003016b 016b4414 45190000     ...@k....Dk....E
10026ac8:	0000016b 016b500c 5b0e0009 0006016b     k....Pk....[k...
10026ad8:	016b6306 7d060014 0012016b 016e4003     .ck....}k....@n.
10026ae8:	800e003f 0016016e 016e9714 00060003     ?...n.....n.....
10026af8:	004a016f 016f4f0b 50060000 0000016f     o.J..Oo....Po...
10026b08:	016f5109 8f0b0036 0003016f 016f9305     .Qo.6...o.....o.
10026b18:	e005000c 0001016f 016fe214 e3050000     ....o.....o.....
10026b28:	0000016f 016fe40b f0090000 0001016f     o.....o.....o...
10026b38:	01700006 000617f7 04d50188 018d0006     ..p.............
10026b48:	f0050008 000301af 01aff505 fd050006     ................
10026b58:	000101af 01b00006 32060122 000001b1     ........"..2....
10026b68:	01b15006 55060002 000001b1 01b16406     .P.....U.....d..
10026b78:	70060003 018b01b1 01bc0006 7006006a     ...p........j..p
10026b88:	000c01bc 01bc8006 90060008 000901bc     ................
10026b98:	01bc9c19 9d0b0000 000101bc 01bc9f14     ................
10026ba8:	a0010000 000301bc 01cf000b 300b002d     ............-..0
10026bb8:	001601cf 01cf5019 00190073 00f501d0     .....P..s.......
10026bc8:	01d10019 29190026 003b01d1 01d16509     ....&..)..;..e..
10026bd8:	670b0001 000201d1 01d16a19 6d090002     ...g.....j.....m
10026be8:	000501d1 01d17301 7b0b0007 000701d1     .....s.....{....
10026bf8:	01d18319 850b0001 000601d1 01d18c19     ................
10026c08:	aa0b001d 000301d1 01d1ae19 0019003c     ............<...
10026c18:	004101d2 01d2420b 45190002 000001d2     ..A..B.....E....
10026c28:	01d2c00e e00e0013 001301d2 01d30019     ................
10026c38:	600e0056 001801d3 01d40008 1a040019     V..`............
10026c48:	001901d4 01d43408 4e040019 000601d4     .....4.....N....
10026c58:	01d45604 68080011 001901d4 01d48204     .V.....h........
10026c68:	9c080019 000001d4 01d49e08 a2080001     ................
10026c78:	000001d4 01d4a508 a9080001 000301d4     ................
10026c88:	01d4ae08 b6040007 000301d4 01d4bb04     ................
10026c98:	bd040000 000601d4 01d4c504 d008000a     ................
10026ca8:	001901d4 01d4ea04 04080019 000101d5     ................
10026cb8:	01d50708 0d080003 000701d5 01d51608     ................
10026cc8:	1e040006 001901d5 01d53808 3b080001     .........8.....;
10026cd8:	000301d5 01d54008 46080004 000001d5     .....@.....F....
10026ce8:	01d54a08 52040006 001901d5 01d56c08     .J.....R.....l..
10026cf8:	86040019 001901d5 01d5a008 ba040019     ................
10026d08:	001901d5 01d5d408 ee040019 001901d5     ................
10026d18:	01d60808 22040019 001901d6 01d63c08     .......".....<..
10026d28:	56040019 001901d6 01d67008 8a040019     ...V.....p......
10026d38:	001b01d6 01d6a808 c1180018 000001d6     ................
10026d48:	01d6c204 db180018 000001d6 01d6dc04     ................
10026d58:	e2080005 001801d6 01d6fb18 fc040000     ................
10026d68:	001801d6 01d71518 16040000 000501d7     ................
10026d78:	01d71c08 35180018 000001d7 01d73604     .......5.....6..
10026d88:	4f180018 000001d7 01d75004 56080005     ...O.....P.....V
10026d98:	001801d7 01d76f18 70040000 001801d7     .....o.....p....
10026da8:	01d78918 8a040000 000501d7 01d79008     ................
10026db8:	a9180018 000001d7 01d7aa04 c3180018     ................
10026dc8:	000001d7 01d7c404 ca080005 000001d7     ................
10026dd8:	01d7cb04 ce0c0000 003101d7 01d80019     ..........1.....
10026de8:	000b01ff 003601da 01da3719 3b0b0003     ......6..7.....;
10026df8:	003101da 01da6d19 750b0007 000001da     ..1..m.....u....
10026e08:	01da7619 840b000d 000001da 01da8519     .v..............
10026e18:	87140001 000401da 01da9b0b a10b0004     ................
10026e28:	000e01da 01df0004 0a060009 000001df     ................
10026e38:	01df0b04 25040013 000501df 01e0000b     .......%........
10026e48:	080b0006 001001e0 01e01b0b 230b0006     ...............#
10026e58:	000101e0 01e0260b 30050004 003d01e0     .....&.....0..=.
10026e68:	01e08f0b 00060000 002c01e1 01e1300b     ..........,..0..
10026e78:	37050006 000601e1 01e1400c 4e060009     ...7.....@.....N
10026e88:	000001e1 01e14f19 90060000 001d01e2     .....O..........
10026e98:	01e2ae0b c0060000 002b01e2 01e2ec0b     ..........+.....
10026ea8:	f00c0003 000901e2 01e2ff16 d0060000     ................
10026eb8:	001a01e4 01e4eb05 ec0b0000 000301e4     ................
10026ec8:	01e4f00c e0060009 000601e7 01e7e806     ................
10026ed8:	ed060003 000101e7 01e7f006 0006000e     ................
10026ee8:	00c401e8 01e8c70e d00b0008 000601e8     ................
10026ef8:	01e90003 440b0043 000601e9 01e94b05     ....C..D.....K..
10026f08:	500c0000 000901e9 01e95e14 710e0001     ...P.....^.....q
10026f18:	003a01ec 01ecac19 ad0e0000 000201ec     ..:.............
10026f28:	01ecb016 b10e0000 000301ec 01ed010e     ................
10026f38:	2e19002c 000001ed 01ed2f0e 0006000e     ,......../......
10026f48:	000301ee 01ee0506 2106001a 000101ee     ...........!....
10026f58:	01ee2406 27060000 000001ee 01ee2906     .$.....'.....)..
10026f68:	34060009 000301ee 01ee3906 3b060000     ...4.....9.....;
10026f78:	000001ee 01ee4206 47060000 000001ee     .....B.....G....
10026f88:	01ee4906 4b060000 000001ee 01ee4d06     .I.....K.....M..
10026f98:	51060002 000101ee 01ee5406 57060000     ...Q.....T.....W
10026fa8:	000001ee 01ee5906 5b060000 000001ee     .....Y.....[....
10026fb8:	01ee5d06 5f060000 000001ee 01ee6106     .]....._.....a..
10026fc8:	64060001 000001ee 01ee6706 6c060003     ...d.....g.....l
10026fd8:	000601ee 01ee7406 79060003 000301ee     .....t.....y....
10026fe8:	01ee7e06 80060000 000901ee 01ee8b06     .~..............
10026ff8:	a1060010 000201ee 01eea506 ab060004     ................
10027008:	001001ee 01eef018 00190001 002b01f0     ..............+.
10027018:	01f03019 a0190063 000e01f0 01f0b119     .0..c...........
10027028:	c119000e 000e01f0 01f0d119 000e0024     ............$...
10027038:	000c01f1 01f10d19 e61900a0 001c01f1     ................
10027048:	01f21019 4019002b 000801f2 01f25019     ....+..@.....P..
10027058:	60190001 000501f2 01f30019 fb1700fa     ...`............
10027068:	000401f3 01f40019 dc1902d7 001001f6     ................
10027078:	01f6f019 0019000c 007601f7 01f77b19     ..........v..{..
10027088:	e019005e 000b01f7 01f7f019 00190000     ^...............
10027098:	000b01f8 01f81019 50190037 000901f8     ........7..P....
100270a8:	01f86019 90190027 001d01f8 01f8b019     .`..'...........
100270b8:	00190001 015301f9 01fa6019 7019000d     ......S..`.....p
100270c8:	000c01fa 01fa8019 90190008 002d01fa     ..............-.
100270d8:	01fabf19 ce190006 000d01fa 01fae019     ................
100270e8:	f0190008 000801fa 01fb0019 94190092     ................
100270f8:	003601fb 01fbf00c 00060009 a6df0200     ..6.............
10027108:	02a70006 40061039 00dd02b7 02b82006     ....9..@..... ..
10027118:	b0061681 1d3002ce 02f80006 0006021d     ......0.........
10027128:	134a0300 03135006 0101105f 00000e00     ..J..P.._.......
10027138:	0e002001 000b005f 00ef0e01 0053494a     . .._.......JIS.
10027148:	53494a53 00000000 4a435545 00000050     SJIS....EUCJP...

10027158 <d02f4>:
10027158:	4e105f0c 4e2a4e15 4e364e31 4e3f4e3c     ._.N.N*N1N6N<N?N
10027168:	4e564e42 4e824e58 8c6b4e85 82124e8a     BNVNXN.N.Nk..N..
10027178:	4e8e5f0d 4e9f4e9e 4ea24ea0 4eb34eb0     ._.N.N.N.N.N.N.N
10027188:	4ece4eb6 4ec44ecd 4ec24ec6 4ede4ed7     .N.N.N.N.N.N.N.N
10027198:	4edf4eed 4f094ef7 4f304f5a 4f5d4f5b     .N.N.N.OZO0O[O]O
100271a8:	4f474f57 4f884f76 4f984f8f 4f694f7b     WOGOvO.O.O.O{OiO
100271b8:	4f914f70 4f864f6f 51184f96 4fdf4fd4     pO.OoO.O.O.Q.O.O
100271c8:	4fd84fce 4fd14fdb 4fd04fda 4fe54fe4     .O.O.O.O.O.O.O.O
100271d8:	5028501a 502a5014 50055025 4ff64f1c     .P(P.P*P%P.P.O.O
100271e8:	50295021 4ffe502c 50114fef 50435006     !P)P,P.O.O.P.PCP
100271f8:	67035047 50505055 505a5048 506c5056     GP.gUPPPHPZPVPlP
10027208:	50805078 5085509a 50b250b4 50ca50c9     xP.P.P.P.P.P.P.P
10027218:	50c250b3 50de50d6 50ed50e5 50ee50e3     .P.P.P.P.P.P.P.P
10027228:	50f550f9 51015109 51165102 51145115     .P.P.Q.Q.Q.Q.Q.Q
10027238:	5121511a 5137513a 513b513c 5140513f     .Q!Q:Q7Q<Q;Q?Q@Q
10027248:	514c5152 51625154 51697af8 516e516a     RQLQTQbQ.ziQjQnQ
10027258:	51825180 518c56d8 518f5189 51935191     .Q.Q.V.Q.Q.Q.Q.Q
10027268:	51965195 51a651a4 51a951a2 51ab51aa     .Q.Q.Q.Q.Q.Q.Q.Q
10027278:	51b151b3 51b051b2 51bd51b5 51c951c5     .Q.Q.Q.Q.Q.Q.Q.Q
10027288:	51e051db 51e98655 51f051ed 51fe51f5     .Q.QU..Q.Q.Q.Q.Q
10027298:	520b5204 520e5214 522a5227 5233522e     .R.R.R.R'R*R.R3R
100272a8:	524f5239 524b5244 525e524c 526a5254     9RORDRKRLR^RTRjR
100272b8:	52695274 527f5273 528d527d 52925294     tRiRsR.R}R.R.R.R
100272c8:	52885271 8fa85291 52ac8fa7 52bc52ad     qR.R.R.....R.R.R
100272d8:	52c152b5 52d752cd 52e352de 98ed52e6     .R.R.R.R.R.R.R..
100272e8:	52f352e0 52f852f5 530652f9 75385308     .R.R.R.R.R.S.S8u
100272f8:	5310530d 5315530f 5323531a 5331532f     .S.S.S.S.S#S/S1S
10027308:	53385333 53465340 4e175345 534d5349     3S8S@SFSES.NISMS
10027318:	535e51d6 536e5369 537b5918 53825377     .Q^SiSnS.Y{SwS.S
10027328:	53a05396 53a553a6 53b053ae 53c353b6     .S.S.S.S.S.S.S.S
10027338:	96d97c12 66fc53df 53ee71ee 53ed53e8     .|...S.f.q.S.S.S
10027348:	540153fa 5440543d 542d542c 542e543c     .S.T=T@T,T-T<T.T
10027358:	54295436 544e541d 5475548f 545f548e     6T)T.TNT.TuT.T_T
10027368:	54775471 54925470 5480547b 54845476     qTwTpT.T{T.TvT.T
10027378:	54865490 54a254c7 54a554b8 54c454ac     .T.T.T.T.T.T.T.T
10027388:	54a854c8 54c254ab 54be54a4 54d854bc     .T.T.T.T.T.T.T.T
10027398:	54e654e5 5514550f 54ee54fd 54fa54ed     .T.T.U.U.T.T.T.T
100273a8:	553954e2 55635540 552e554c 5545555c     .T9U@UcULU.U\UEU
100273b8:	55575556 55335538 5599555d 54af5580     VUWU8U3U]U.U.U.T
100273c8:	559f558a 557e557b 559e5598 557c55ae     .U.U{U~U.U.U.U|U
100273d8:	55a95583 55a85587 55c555da 55c455df     .U.U.U.U.U.U.U.U
100273e8:	55e455dc 561455d4 561655f7 55fd55fe     .U.U.U.V.U.V.U.U
100273f8:	55f9561b 5650564e 563471df 56325636     .V.UNVPV.q4V6V2V
10027408:	566b5638 562f5664 566a566c 56805686     8VkVdV/VlVjV.V.V
10027418:	56a0568a 568f5694 56ae56a5 56b456b6     .V.V.V.V.V.V.V.V
10027428:	56bc56c2 56c356c1 56c856c0 56d156ce     .V.V.V.V.V.V.V.V
10027438:	56d756d3 56f956ee 56ff5700 57095704     .V.V.V.V.W.V.W.W
10027448:	570b5708 5713570d 57165718 571c55c7     .W.W.W.W.W.W.U.W
10027458:	57375726 574e5738 5740573b 5769574f     &W7W8WNW;W@WOWiW
10027468:	578857c0 577f5761 57935789 57b357a0     .W.WaW.W.W.W.W.W
10027478:	57aa57a4 57c357b0 57d457c6 57d357d2     .W.W.W.W.W.W.W.W
10027488:	57d6580a 580b57e3 581d5819 58215872     .X.W.W.X.X.XrX!X
10027498:	584b5862 6bc05870 583d5852 58855879     bXKXpX.kRX=XyX.X
100274a8:	589f58b9 58ba58ab 58bb58de 58ae58b8     .X.X.X.X.X.X.X.X
100274b8:	58d358c5 58d758d1 58d858d9 58dc58e5     .X.X.X.X.X.X.X.X
100274c8:	58df58e4 58fa58ef 58fb58f9 58fd58fc     .X.X.X.X.X.X.X.X
100274d8:	590a5902 591b5910 592568a6 592d592c     .Y.Y.Y.Y.h%Y,Y-Y
100274e8:	59385932 7ad2593e 59505955 595a594e     2Y8Y>Y.zUYPYNYZY
100274f8:	59625958 59675960 5969596c 59815978     XYbY`YgYlYiYxY.Y
10027508:	4f5e599d 59a34fab 59c659b2 59dc59e8     .Y^O.O.Y.Y.Y.Y.Y
10027518:	59d9598d 5a2559da 5a115a1f 5a095a1c     .Y.Y.Y%Z.Z.Z.Z.Z
10027528:	5a405a1a 5a495a6c 5a365a35 5a6a5a62     .Z@ZlZIZ5Z6ZbZjZ
10027538:	5abc5a9a 5acb5abe 5abd5ac2 5ad75ae3     .Z.Z.Z.Z.Z.Z.Z.Z
10027548:	5ae95ae6 5afa5ad6 5b0c5afb 5b165b0b     .Z.Z.Z.Z.Z.[.[.[
10027558:	5ad05b32 5b365b2a 5b435b3e 5b405b45     2[.Z*[6[>[C[E[@[
10027568:	5b555b51 5b5b5b5a 5b695b65 5b735b70     Q[U[Z[[[e[i[p[s[
10027578:	5b785b75 5b7a6588 5b835b80 5bb85ba6     u[x[.ez[.[.[.[.[
10027588:	5bc75bc3 5bd45bc9 5be45bd0 5be25be6     .[.[.[.[.[.[.[.[
10027598:	5be55bde 5bf05beb 5bf35bf6 5c075c05     .[.[.[.[.[.[.\.\
100275a8:	5c0d5c08 5c205c13 5c285c22 5c395c38     .\.\.\ \"\(\8\9\
100275b8:	5c465c41 5c535c4e 5c4f5c50 5c6c5b71     A\F\N\S\P\O\q[l\
100275c8:	4e625c6e 5c795c76 5c915c8c 599b5c94     n\bNv\y\.\.\.\.Y
100275d8:	5cbb5cab 5cbc5cb6 5cc55cb7 5cc75cbe     .\.\.\.\.\.\.\.\
100275e8:	5ce95cd9 5cfa5cfd 5d8c5ced 5d0b5cea     .\.\.\.\.\.].\.]
100275f8:	5d175d15 5d1f5d5c 5d115d1b 5d225d14     .].]\].].].].]"]
10027608:	5d195d1a 5d4c5d18 5d4e5d52 5d6c5d4b     .].].]L]R]N]K]l]
10027618:	5d765d73 5d845d87 5da25d82 5dac5d9d     s]v].].].].].].]
10027628:	5dbd5dae 5db75d90 5dc95dbc 5dd35dcd     .].].].].].].].]
10027638:	5dd65dd2 5deb5ddb 5df55df2 5e1a5e0b     .].].].].].].^.^
10027648:	5e115e19 5e365e1b 5e445e37 5e405e43     .^.^.^6^7^D^C^@^
10027658:	5e575e4e 5e5f5e54 5e645e62 5e755e47     N^W^T^_^b^d^G^u^
10027668:	5e7a5e76 5e7f9ebc 5ec15ea0 5ec85ec2     v^z^...^.^.^.^.^
10027678:	5ecf5ed0 5ee35ed6 5eda5edd 5ee25edb     .^.^.^.^.^.^.^.^
10027688:	5ee85ee1 5eec5ee9 5ef35ef1 5ef45ef0     .^.^.^.^.^.^.^.^
10027698:	5efe5ef8 5f095f03 5f5c5f5d 5f115f0b     .^.^._._]_\_._._
100276a8:	5f295f16 5f385f2d 5f485f41 5f4e5f4c     ._)_-_8_A_H_L_N_
100276b8:	5f515f2f 5f575f56 5f615f59 5f735f6d     /_Q_V_W_Y_a_m_s_
100276c8:	5f835f77 5f7f5f82 5f885f8a 5f875f91     w_._._._._._._._
100276d8:	5f995f9e 5fa05f98 5fad5fa8 5fd65fbc     ._._._._._._._._
100276e8:	5fe45ffb 5ff15ff8 60b35fdd 60215fff     ._._._._._.`._!`
100276f8:	60196060 60296010 6031600e 6015601b     ``.`.`)`.`1`.`.`
10027708:	6026602b 603a600f 6041605a 6077606a     +`&`.`:`Z`A`j`w`
10027718:	604a605f 604d6046 60436063 60426064     _`J`F`M`c`C`d`B`
10027728:	606b606c 60816059 60e7608d 609a6083     l`k`Y`.`.`.`.`.`
10027738:	609b6084 60976096 60a76092 60e1608b     .`.`.`.`.`.`.`.`
10027748:	60e060b8 60b460d3 60bd5ff0 60b560c6     .`.`.`.`._.`.`.`
10027758:	614d60d8 61066115 60f760f6 60f46100     .`Ma.a.a.`.`.a.`
10027768:	610360fa 60fb6121 610d60f1 6147610e     .`.a!a.`.`.a.aGa
10027778:	6128613e 614a6127 613c613f 6134612c     >a(a'aJa?a<a,a4a
10027788:	6142613d 61736144 61586177 615a6159     =aBaDasawaXaYaZa
10027798:	6174616b 6165616f 615f6171 6153615d     kataoaeaqa_a]aSa
100277a8:	61996175 61876196 619461ac 618a619a     ua.a.a.a.a.a.a.a
100277b8:	61ab6191 61cc61ae 61c961ca 61c861f7     .a.a.a.a.a.a.a.a
100277c8:	61c661c3 61cb61ba 61cd7f79 61e361e6     .a.a.a.ay..a.a.a
100277d8:	61fa61f6 61ff61f4 61fc61fd 620061fe     .a.a.a.a.a.a.a.b
100277e8:	62096208 620c620d 621b6214 6221621e     .b.b.b.b.b.b.b!b
100277f8:	622e622a 62326230 62416233 625e624e     *b.b0b2b3bAbNb^b
10027808:	625b6263 62686260 6282627c 627e6289     cb[b`bhb|b.b.b~b
10027818:	62936292 62d46296 62946283 62d162d7     .b.b.b.b.b.b.b.b
10027828:	62cf62bb 62c662ff 62c864d4 62cc62dc     .b.b.b.b.d.b.b.b
10027838:	62c262ca 629b62c7 630c62c9 62f162ee     .b.b.b.b.b.c.b.b
10027848:	63026327 62ef6308 635062f5 634d633e     'c.c.c.b.bPc>cMc
10027858:	634f641c 638e6396 63ab6380 63a36376     .dOc.c.c.c.cvc.c
10027868:	6389638f 63b5639f 6369636b 63e963be     .c.c.c.ckcic.c.c
10027878:	63c663c0 63c963e3 63f663d2 641663c4     .c.c.c.c.c.c.c.d
10027888:	64066434 64266413 651d6436 64286417     4d.d.d&d6d.e.d(d
10027898:	6467640f 6476646f 652a644e 64936495     .dgdodvdNd*e.d.d
100278a8:	64a964a5 64bc6488 64d264da 64c764c5     .d.d.d.d.d.d.d.d
100278b8:	64d864bb 64f164c2 820964e7 64e164e0     .d.d.d.d.d...d.d
100278c8:	64e362ac 652c64ef 64f464f6 64fa64f2     .b.d.d,e.d.d.d.d
100278d8:	64fd6500 651c6518 65246505 652b6523     .e.d.e.e.e$e#e+e
100278e8:	65356534 65366537 754b6538 65566548     4e5e7e6e8eKuHeVe
100278f8:	654d6555 655e6558 6572655d 65826578     UeMeXe^e]erexe.e
10027908:	8b8a6583 659f659b 65b765ab 65c665c3     .e...e.e.e.e.e.e
10027918:	65c465c1 65d265cc 65d965db 65e165e0     .e.e.e.e.e.e.e.e
10027928:	677265f1 6603660a 677365fb 66366635     .erg.f.f.esg5f6f
10027938:	661c6634 6644664f 66416649 665d665e     4f.fOfDfIfAf^f]f
10027948:	66676664 665f6668 66706662 66886683     dfgfhf_fbfpf.f.f
10027958:	6689668e 66986684 66c1669d 66c966b9     .f.f.f.f.f.f.f.f
10027968:	66bc66be 66b866c4 66da66d6 663f66e0     .f.f.f.f.f.f.f?f
10027978:	66e966e6 66f566f0 670f66f7 671e6716     .f.f.f.f.f.g.g.g
10027988:	67276726 672e9738 6736673f 67386741     &g'g8..g?g6gAg8g
10027998:	67466737 6760675e 67636759 67896764     7gFg^g`gYgcgdg.g
100279a8:	67a96770 676a677c 678b678c 67a167a6     pg.g|gjg.g.g.g.g
100279b8:	67b76785 67b467ef 67b367ec 67b867e9     .g.g.g.g.g.g.g.g
100279c8:	67de67e4 67e267dd 67b967ee 67c667ce     .g.g.g.g.g.g.g.g
100279d8:	6a9c67e7 6846681e 68406829 6832684d     .g.j.hFh)h@hMh2h
100279e8:	68b3684e 6859682b 68776863 689f687f     Nh.h+hYhchwh.h.h
100279f8:	68ad688f 689d6894 6883689b 68b96aae     .h.h.h.h.h.h.j.h
10027a08:	68b56874 68ba68a0 688d690f 6901687e     th.h.h.h.i.h~h.i
10027a18:	690868ca 692268d8 68e16926 68cd690c     .h.i.h"i&i.h.i.h
10027a28:	68e768d4 693668d5 69046912 68e368d7     .h.h.h6i.i.i.h.h
10027a38:	68f96925 68ef68e0 692a6928 6923691a     %i.h.h.h(i*i.i#i
10027a48:	68c66921 69776979 6978695c 6954696b     !i.hyiwi\ixikiTi
10027a58:	696e697e 69746939 6959693d 69616930     ~ini9iti=iYi0iai
10027a68:	695d695e 696a6981 69ae69b2 69bf69d0     ^i]i.iji.i.i.i.i
10027a78:	69d369c1 69ce69be 69ca5be8 69bb69dd     .i.i.i.i.[.i.i.i
10027a88:	69a769c3 69916a2e 699c69a0 69b46995     .i.i.j.i.i.i.i.i
10027a98:	69e869de 6a1b6a02 6b0a69ff 69f269f9     .i.i.j.j.i.k.i.i
10027aa8:	6a0569e7 6a1e69b1 6a1469ed 6a0a69eb     .i.j.i.j.i.j.i.j
10027ab8:	6ac16a12 6a136a23 6a0c6a44 6a366a72     .j.j#j.jDj.jrj6j
10027ac8:	6a476a78 6a596a62 6a486a66 6a226a38     xjGjbjYjfjHj8j"j
10027ad8:	6a8d6a90 6a846aa0 6aa36aa2 86176a97     .j.j.j.j.j.j.j..
10027ae8:	6ac36abb 6ab86ac2 6aac6ab3 6ad16ade     .j.j.j.j.j.j.j.j
10027af8:	6aaa6adf 6aea6ada 6b056afb 6afa8616     .j.j.j.j.j.k...j
10027b08:	6b166b12 6b1f9b31 6b376b38 6b3976dc     .k.k1..k8k7k.v9k
10027b18:	6b4798ee 6b496b43 6b596b50 6b5b6b54     ..GkCkIkPkYkTk[k
10027b28:	6b616b5f 6b796b78 6b806b7f 6b836b84     _kakxkyk.k.k.k.k
10027b38:	6b986b8d 6b9e6b95 6baa6ba4 6baf6bab     .k.k.k.k.k.k.k.k
10027b48:	6bb16bb2 6bb76bb3 6bc66bbc 6bd36bcb     .k.k.k.k.k.k.k.k
10027b58:	6bec6bdf 6bf36beb 9ebe6bef 6c136c08     .k.k.k.k.k...l.l
10027b68:	6c1b6c14 6c236c24 6c556c5e 6c6a6c62     .l.l$l#l^lUlbljl
10027b78:	6c8d6c82 6c816c9a 6c7e6c9b 6c736c68     .l.l.l.l.l~lhlsl
10027b88:	6c906c92 6cf16cc4 6cbd6cd3 6cc56cd7     .l.l.l.l.l.l.l.l
10027b98:	6cae6cdd 6cbe6cb1 6cdb6cba 6cd96cef     .l.l.l.l.l.l.l.l
10027ba8:	6d1f6cea 6d36884d 6d3d6d2b 6d196d38     .l.mM.6m+m=m8m.m
10027bb8:	6d336d35 6d0c6d12 6d936d63 6d5a6d64     5m3m.m.mcm.mdmZm
10027bc8:	6d596d79 6d956d8e 6d856fe4 6e156df9     ymYm.m.m.o.m.m.n
10027bd8:	6db56e0a 6de66dc7 6dc66db8 6dde6dec     .n.m.m.m.m.m.m.m
10027be8:	6de86dcc 6dc56dd2 6dd96dfa 6dd56de4     .m.m.m.m.m.m.m.m
10027bf8:	6dee6dea 6e6e6e2d 6e196e2e 6e5f6e72     .m.m-nnn.n.nrn_n
10027c08:	6e236e3e 6e2b6e6b 6e4d6e76 6e436e1f     >n#nkn+nvnMn.nCn
10027c18:	6e4e6e3a 6eff6e24 6e386e1d 6eaa6e82     :nNn$n.n.n8n.n.n
10027c28:	6ec96e98 6ed36eb7 6eaf6ebd 6eb26ec4     .n.n.n.n.n.n.n.n
10027c38:	6ed56ed4 6ea56e8f 6e9f6ec2 6f116f41     .n.n.n.n.n.nAo.o
10027c48:	6eec704c 6efe6ef8 6ef26f3f 6eef6f31     Lp.n.n.n?o.n1o.n
10027c58:	6ecc6f32 6f136f3e 6f866ef7 6f786f7a     2o.n>o.o.n.ozoxo
10027c68:	6f806f81 6f5b6f6f 6f6d6ff3 6f7c6f82     .o.ooo[o.omo.o|o
10027c78:	6f8e6f58 6fc26f91 6fb36f66 6fa16fa3     Xo.o.o.ofo.o.o.o
10027c88:	6fb96fa4 6faa6fc6 6fd56fdf 6fd46fec     .o.o.o.o.o.o.o.o
10027c98:	6ff16fd8 6fdb6fee 700b7009 70116ffa     .o.o.o.o.p.p.o.p
10027ca8:	700f7001 701b6ffe 6f74701a 7018701d     .p.p.o.p.pto.p.p
10027cb8:	7030701f 7032703e 70637051 70927099     .p0p>p2pQpcp.p.p
10027cc8:	70f170af 70b870ac 70ae70b3 70cb70df     .p.p.p.p.p.p.p.p
10027cd8:	70d970dd 70fd7109 7119711c 71557165     .p.p.q.p.q.qeqUq
10027ce8:	71667188 714c7162 716c7156 71fb718f     .qfqbqLqVqlq.q.q
10027cf8:	71957184 71ac71a8 71b971d7 71d271be     .q.q.q.q.q.q.q.q
10027d08:	71d471c9 71e071ce 71e771ec 71fc71f5     .q.q.q.q.q.q.q.q
10027d18:	71ff71f9 7210720d 7228721b 722c722d     .q.q.r.r.r(r-r,r
10027d28:	72327230 723c723b 7240723f 724b7246     0r2r;r<r?r@rFrKr
10027d38:	72747258 7282727e 72877281 72967292     Xrtr~r.r.r.r.r.r
10027d48:	72a772a2 72b272b9 72c672c3 72ce72c4     .r.r.r.r.r.r.r.r
10027d58:	72e272d2 72e172e0 72f772f9 7317500f     .r.r.r.r.r.r.P.s
10027d68:	731c730a 731d7316 732f7334 73257329     .s.s.s.s4s/s)s%s
10027d78:	734e733e 9ed8734f 736a7357 73707368     >sNsOs..Wsjshsps
10027d88:	73757378 737a737b 73b373c8 73bb73ce     xsus{szs.s.s.s.s
10027d98:	73e573c0 73de73ee 740574a2 7425746f     .s.s.s.s.t.tot%t
10027da8:	743273f8 7455743a 745f743f 74417459     .s2t:tUt?t_tYtAt
10027db8:	7469745c 74637470 7476746a 748b747e     \titptctjtvt~t.t
10027dc8:	74a7749e 74cf74ca 73f174d4 74e374e0     .t.t.t.t.t.s.t.t
10027dd8:	74e974e7 74f274ee 74f174f0 74f774f8     .t.t.t.t.t.t.t.t
10027de8:	75037504 750c7505 750d750e 75137515     .u.u.u.u.u.u.u.u
10027df8:	7526751e 753c752c 754d7544 7549754a     .u&u,u<uDuMuJuIu
10027e08:	7546755b 7569755a 75677564 756d756b     [uFuZuiudugukumu
10027e18:	75767578 75877586 758a7574 75827589     xuvu.u.utu.u.u.u
10027e28:	759a7594 75a5759d 75c275a3 75c375b3     .u.u.u.u.u.u.u.u
10027e38:	75bd75b5 75bc75b8 75cd75b1 75d275ca     .u.u.u.u.u.u.u.u
10027e48:	75e375d9 75fe75de 75fc75ff 75f07601     .u.u.u.u.u.u.v.u
10027e58:	75f275fa 760b75f3 7609760d 7627761f     .u.u.u.v.v.v.v'v
10027e68:	76217620 76247622 76307634 7647763b      v!v"v$v4v0v;vGv
10027e78:	76467648 7658765c 76627661 76697668     HvFv\vXvavbvhviv
10027e88:	7667766a 7670766c 76767672 767c7678     jvgvlvpvrvvvxv|v
10027e98:	76837680 768b7688 7696768e 76997693     .v.v.v.v.v.v.v.v
10027ea8:	76b0769a 76b876b4 76ba76b9 76cd76c2     .v.v.v.v.v.v.v.v
10027eb8:	76d276d6 76e176de 76e776e5 862f76ea     .v.v.v.v.v.v.v/.
10027ec8:	770876fb 77047707 77247729 7725771e     .v.w.w.w)w$w.w%w
10027ed8:	771b7726 77387737 775a7747 776b7768     &w.w7w8wGwZwhwkw
10027ee8:	7765775b 777e777f 778e7779 7791778b     [wew.w~wyw.w.w.w
10027ef8:	779e77a0 77b677b0 77bf77b9 77bd77bc     .w.w.w.w.w.w.w.w
10027f08:	77c777bb 77d777cd 77dc77da 77ee77e3     .w.w.w.w.w.w.w.w
10027f18:	780c77fc 79267812 792a7820 788e7845     .w.x.x&y x*yEx.x
10027f28:	78867874 789a787c 78a3788c 78aa78b5     tx.x|x.x.x.x.x.x
10027f38:	78d178af 78cb78c6 78be78d4 78c578bc     .x.x.x.x.x.x.x.x
10027f48:	78ec78ca 78da78e7 78f478fd 79127907     .x.x.x.x.x.x.y.y
10027f58:	79197911 792b792c 79607940 795f7957     .y.y,y+y@y`yWy_y
10027f68:	7955795a 797a7953 798a797f 79a7799d     ZyUySyzy.y.y.y.y
10027f78:	79aa9f4b 79b379ae 79ba79b9 79d579c9     K..y.y.y.y.y.y.y
10027f88:	79ec79e7 79e379e1 7a0d7a08 7a197a18     .y.y.y.y.z.z.z.z
10027f98:	7a1f7a20 7a317980 7a3e7a3b 7a437a37      z.z.y1z;z>z7zCz
10027fa8:	7a497a57 7a627a61 9f9d7a69 7a797a70     WzIzazbziz..pzyz
10027fb8:	7a887a7d 7a957a97 7a967a98 7ac87aa9     }z.z.z.z.z.z.z.z
10027fc8:	7ab67ab0 7ac47ac5 90837abf 7aca7ac7     .z.z.z.z.z...z.z
10027fd8:	7acf7acd 7ad37ad5 7ada7ad9 7ae17add     .z.z.z.z.z.z.z.z
10027fe8:	7ae67ae2 7af07aed 7b0f7b02 7b067b0a     .z.z.z.z.{.{.{.{
10027ff8:	7b187b33 7b1e7b19 7b287b35 7b507b36     3{.{.{.{5{({6{P{
10028008:	7b047b7a 7b0b7b4d 7b457b4c 7b657b75     z{.{M{.{L{E{u{e{
10028018:	7b677b74 7b717b70 7b6e7b6c 7b987b9d     t{g{p{q{l{n{.{.{
10028028:	7b8d7b9f 7b9a7b9c 7b927b8b 7b5d7b8f     .{.{.{.{.{.{.{]{
10028038:	7bcb7b99 7bcc7bc1 7bb47bcf 7bdd7bc6     .{.{.{.{.{.{.{.{
10028048:	7c117be9 7be67c14 7c607be5 7c077c00     .{.|.|.{.{`|.|.|
10028058:	7bf37c13 7c177bf7 7bf67c0d 7c277c23     .|.{.{.|.|.{#|'|
10028068:	7c1f7c2a 7c2b7c37 7c4c7c3d 7c547c43     *|.|7|+|=|L|C|T|
10028078:	7c407c4f 7c587c50 7c647c5f 7c657c56     O|@|P|X|_|d|V|e|
10028088:	7c757c6c 7c907c83 7cad7ca4 7cab7ca2     l|u|.|.|.|.|.|.|
10028098:	7ca87ca1 7cb27cb3 7cae7cb1 7cbd7cb9     .|.|.|.|.|.|.|.|
100280a8:	7cc57cc0 7cd87cc2 7cdc7cd2 9b3b7ce2     .|.|.|.|.|.|.|;.
100280b8:	7cf27cef 7cf67cf4 7d067cfa 7d1c7d02     .|.|.|.|.|.}.}.}
100280c8:	7d0a7d15 7d4b7d45 7d327d2e 7d357d3f     .}.}E}K}.}2}?}5}
100280d8:	7d737d46 7d4e7d56 7d687d72 7d4f7d6e     F}s}V}N}r}h}n}O}
100280e8:	7d937d63 7d5b7d89 7d7d7d8f 7dba7d9b     c}.}.}[}.}}}.}.}
100280f8:	7da37dae 7dc77db5 7dab7dbd 7da27e3d     .}.}.}.}.}.}=~.}
10028108:	7ddc7daf 7d9f7db8 7dd87db0 7de47ddd     .}.}.}.}.}.}.}.}
10028118:	7dfb7dde 7de17df2 7e0a7e05 7e217e23     .}.}.}.}.~.~#~!~
10028128:	7e317e12 7e097e1f 7e227e0b 7e667e46     .~1~.~.~.~"~F~f~
10028138:	7e357e3b 7e437e39 7e327e37 7e677e3a     ;~5~9~C~7~2~:~g~
10028148:	7e567e5d 7e597e5e 7e797e5a 7e697e6a     ]~V~^~Y~Z~y~j~i~
10028158:	7e7b7e7c 7dd57e83 8fae7e7d 7e887e7f     |~{~.~.}}~...~.~
10028168:	7e8c7e89 7e907e92 7e947e93 7e8e7e96     .~.~.~.~.~.~.~.~
10028178:	7e9c7e9b 7f3a7f38 7f4c7f45 7f4e7f4d     .~.~8.:.E.L.M.N.
10028188:	7f517f50 7f547f55 7f5f7f58 7f687f60     P.Q.U.T.X._.`.h.
10028198:	7f677f69 7f827f78 7f837f86 7f877f88     i.g.x...........
100281a8:	7f947f8c 7f9d7f9e 7fa37f9a 7fb27faf     ................
100281b8:	7fae7fb9 7fb87fb6 7fc58b71 7fca7fc6     ........q.......
100281c8:	7fd47fd5 7fe67fe1 7ff37fe9 98dc7ff9     ................
100281d8:	80048006 8012800b 80198018 8021801c     ..............!.
100281e8:	803f8028 804a803b 80528046 805a8058     (.?.;.J.F.R.X.Z.
100281f8:	8062805f 80738068 80708072 80798076     _.b.h.s.r.p.v.y.
10028208:	807f807d 80868084 809b8085 809a8093     }...............
10028218:	519080ad 80db80ac 80d980e5 80c480dd     ...Q............
10028228:	80d680da 80ef8109 811b80f1 81238129     ............).#.
10028238:	814b812f 8146968b 8153813e 80fc8151     /.K...F.>.S.Q...
10028248:	816e8171 81668165 81838174 818a8188     q.n.e.f.t.......
10028258:	81828180 819581a0 81a381a4 8193815f     ............_...
10028268:	81b081a9 81be81b5 81bd81b8 81c281c0     ................
10028278:	81c981ba 81d181cd 81d881d9 81da81c8     ................
10028288:	81e081df 81fa81e7 81fe81fb 82028201     ................
10028298:	82078205 820d820a 82168210 822b8229     ............).+.
100282a8:	82338238 82598240 825d8258 825f825a     8.3.@.Y.X.].Z._.
100282b8:	82628264 826a8268 822e826b 82778271     d.b.h.j.k...q.w.
100282c8:	827e8278 8292828d 829f82ab 82ac82bb     x.~.............
100282d8:	82e382e1 82d282df 82f382f4 839382fa     ................
100282e8:	82fb8303 82de82f9 82dc8306 82d98309     ................
100282f8:	83348335 83328316 83408331 83508339     5.4...2.1.@.9.P.
10028308:	832f8345 8317832b 83858318 83aa839a     E./.+...........
10028318:	83a2839f 83238396 8387838e 837c838a     ......#.......|.
10028328:	837383b5 83a08375 83a88389 841383f4     ..s.u...........
10028338:	83ce83eb 840383fd 840b83d8 83f783c1     ................
10028348:	83e08407 840d83f2 84208422 843883bd     ........". ...8.
10028358:	83fb8506 842a846d 855a843c 84778484     ....m.*.<.Z...w.
10028368:	84ad846b 8482846e 84468469 846f842c     k...n...i.F.,.o.
10028378:	84358479 846284ca 84bf84b9 84d9849f     y.5...b.........
10028388:	84bb84cd 84d084da 84c684c1 84a184d6     ................
10028398:	84ff8521 851784f4 852c8518 8515851f     !.........,.....
100283a8:	84fc8514 85638540 85488558 86028541     ....@.c.X.H.A...
100283b8:	8555854b 85a48580 85918588 85a8858a     K.U.............
100283c8:	8594856d 85ea859b 859c8587 857e8577     m...........w.~.
100283d8:	85c98590 85cf85ba 85d085b9 85dd85d5     ................
100283e8:	85dc85e5 860a85f9 860b8613 85fa85fe     ................
100283f8:	86228606 8630861a 864d863f 86544e55     .."...0.?.M.UNT.
10028408:	8667865f 86938671 86a986a3 868b86aa     _.g.q...........
10028418:	86b6868c 86c486af 86b086c6 882386c9     ..............#.
10028428:	86d486ab 86e986de 86df86ec 86ef86db     ................
10028438:	87068712 87008708 86fb8703 87098711     ................
10028448:	86f9870d 8734870a 8737873f 8725873b     ......4.?.7.;.%.
10028458:	871a8729 875f8760 874c8778 8774874e     )...`._.x.L.N.t.
10028468:	87688757 8759876e 87638753 8805876a     W.h.n.Y.S.c.j...
10028478:	879f87a2 87af8782 87bd87cb 87d087c0     ................
10028488:	87ab96d6 87b387c4 87c687c7 87ef87bb     ................
10028498:	87e087f2 880d880f 87f687fe 880e87f7     ................
100284a8:	881187d2 88158816 88218822 88368831     ........".!.1.6.
100284b8:	88278839 8844883b 88528842 885e8859     9.'.;.D.B.R.Y.^.
100284c8:	886b8862 887e8881 8875889e 88b5887d     b.k...~...u.}...
100284d8:	88828872 88928897 889988ae 888d88a2     r...............
100284e8:	88b088a4 88b188bf 88c488c3 88d888d4     ................
100284f8:	88dd88d9 890288f9 88f488fc 88f288e8     ................
10028508:	890c8904 8913890a 891e8943 892a8925     ........C...%.*.
10028518:	8941892b 893b8944 89388936 891d894c     +.A.D.;.6.8.L...
10028528:	895e8960 89648966 896a896d 8974896f     `.^.f.d.m.j.o.t.
10028538:	897e8977 89888983 8993898a 89a18998     w.~.............
10028548:	89a689a9 89af89ac 89ba89b2 89bf89bd     ................
10028558:	89da89c0 89dd89dc 89f489e7 8a0389f8     ................
10028568:	8a108a16 8a1b8a0c 8a258a1d 8a418a36     ..........%.6.A.
10028578:	8a528a5b 8a488a46 8a6d8a7c 8a628a6c     [.R.F.H.|.m.l.b.
10028588:	8a828a85 8aa88a84 8a918aa1 8aa68aa5     ................
10028598:	8aa38a9a 8acd8ac4 8ada8ac2 8af38aeb     ................
100285a8:	8ae48ae7 8b148af1 8ae28ae0 8ade8af7     ................
100285b8:	8b0c8adb 8b1a8b07 8b168ae1 8b178b10     ................
100285c8:	8b338b20 8b2697ab 8b3e8b2b 8b418b28      .3...&.+.>.(.A.
100285d8:	8b4f8b4c 8b498b4e 8b5b8b56 8b6b8b5a     L.O.N.I.V.[.Z.k.
100285e8:	8b6c8b5f 8b748b6f 8b808b7d 8b8e8b8c     _.l.o.t.}.......
100285f8:	8b938b92 8b998b96 8c3a8b9a 8c3f8c41     ..........:.A.?.
10028608:	8c4c8c48 8c508c4e 8c628c55 8c788c6c     H.L.N.P.U.b.l.x.
10028618:	8c828c7a 8c858c89 8c8d8c8a 8c948c8e     z...............
10028628:	8c988c7c 8cad621d 8cbd8caa 8cb38cb2     |....b..........
10028638:	8cb68cae 8cc18cc8 8ce38ce4 8cfd8cda     ................
10028648:	8cfb8cfa 8d058d04 8d078d0a 8d0d8d0f     ................
10028658:	9f4e8d10 8ccd8d13 8d168d14 8d6d8d67     ..N.........g.m.
10028668:	8d738d71 8d998d81 8dbe8dc2 8dcf8dba     q.s.............
10028678:	8dd68dda 8ddb8dcc 8dea8dcb 8ddf8deb     ................
10028688:	8dfc8de3 8e098e08 8e1d8dff 8e108e1e     ................
10028698:	8e428e1f 8e308e35 8e4a8e34 8e498e47     ..B.5.0.4.J.G.I.
100286a8:	8e508e4c 8e598e48 8e608e64 8e638e2a     L.P.H.Y.d.`.*.c.
100286b8:	8e768e55 8e7c8e72 8e878e81 8e848e85     U.v.r.|.........
100286c8:	8e8a8e8b 8e918e93 8e998e94 8ea18eaa     ................
100286d8:	8eb08eac 8eb18ec6 8ec58ebe 8ecb8ec8     ................
100286e8:	8ee38edb 8efb8efc 8efe8eeb 8f058f0a     ................
100286f8:	8f128f15 8f138f19 8f1f8f1c 8f0c8f1b     ................
10028708:	8f338f26 8f398f3b 8f428f45 8f4c8f3e     &.3.;.9.E.B.>.L.
10028718:	8f468f49 8f578f4e 8f628f5c 8f648f63     I.F.N.W.\.b.c.d.
10028728:	8f9f8f9c 8fad8fa3 8fb78faf 8fe58fda     ................
10028738:	8fea8fe2 90878fef 90058ff4 8ffa8ff9     ................
10028748:	90159011 900d9021 9016901e 9027900b     ....!.........'.
10028758:	90359036 8ff89039 9050904f 90529051     6.5.9...O.P.Q.R.
10028768:	9049900e 9056903e 905e9058 906f9068     ..I.>.V.X.^.h.o.
10028778:	96a89076 90829072 9081907d 908a9080     v...r...}.......
10028788:	908f9089 90af90a8 90b590b1 90e490e2     ................
10028798:	90db6248 91129102 91329119 914a9130     Hb........2.0.J.
100287a8:	91589156 91659163 91739169 918b9172     V.X.c.e.i.s.r...
100287b8:	91829189 91ab91a2 91aa91af 91b491b5     ................
100287c8:	91c091ba 91c991c1 91d091cb 91df91d6     ................
100287d8:	91db91e1 91f591fc 921e91f6 921491ff     ................
100287e8:	9215922c 925e9211 92459257 92649249     ,.....^.W.E.I.d.
100287f8:	92959248 924b923f 929c9250 92939296     H...?.K.P.......
10028808:	925a929b 92b992cf 92e992b7 92fa930f     ..Z.............
10028818:	932e9344 93229319 9323931a 9335933a     D....."...#.:.5.
10028828:	935c933b 937c9360 9356936e 93ac93b0     ;.\.`.|.n.V.....
10028838:	939493ad 93d693b9 93e893d7 93d893e5     ................
10028848:	93dd93c3 93c893d0 941a93e4 94139414     ................
10028858:	94079403 94369410 9435942b 943a9421     ......6.+.5.!.:.
10028868:	94529441 945b9444 94629460 946a945e     A.R.D.[.`.b.^.j.
10028878:	94709229 94779475 945a947d 947e947c     ).p.u.w.}.Z.|.~.
10028888:	947f9481 95879582 9594958a 95989596     ................
10028898:	95a09599 95a795a8 95bc95ad 95b995bb     ................
100288a8:	95ca95be 95c36ff6 95cc95cd 95d495d5     .....o..........
100288b8:	95dc95d6 95e595e1 962195e2 962e9628     ..........!.(...
100288c8:	9642962f 964f964c 9677964b 965e965c     /.B.L.O.K.w.\.^.
100288d8:	965f965d 96729666 968d966c 96959698     ]._.f.r.l.......
100288e8:	96aa9697 96b196a7 96b096b2 96b696b4     ................
100288f8:	96b996b8 96cb96ce 96cd96c9 96dc894d     ............M...
10028908:	96d5970d 970496f9 97089706 970e9713     ................
10028918:	970f9711 97199716 972a9724 97399730     ........$.*.0.9.
10028928:	973e973d 97469744 97429748 975c9749     =.>.D.F.H.B.I.\.
10028938:	97649760 97689766 976b52d2 97799771     `.d.f.h..Rk.q.y.
10028948:	977c9785 977a9781 978b9786 9790978f     ..|...z.........
10028958:	97a8979c 97a397a6 97b497b3 97c697c3     ................
10028968:	97cb97c8 97ed97dc 97f29f4f 97f67adf     ........O....z..
10028978:	980f97f5 9838980c 98219824 983d9837     ......8.$.!.7.=.
10028988:	984f9846 986b984b 9870986f 98749871     F.O.K.k.o.p.q.t.
10028998:	98aa9873 98b198af 98c498b6 98c698c3     s...............
100289a8:	98eb98e9 99099903 99149912 99219918     ..............!.
100289b8:	991e991d 99209924 992e992c 993e993d     ....$. .,...=.>.
100289c8:	99499942 99509945 9951994b 994c9952     B.I.E.P.K.Q.R.L.
100289d8:	99979955 99a59998 99ae99ad 99df99bc     U...............
100289e8:	99dd99db 99d199d8 99ee99ed 99f299f1     ................
100289f8:	99f899fb 9a0f9a01 99e29a05 9a2b9a19     ..............+.
10028a08:	9a459a37 9a409a42 9a3e9a43 9a4d9a55     7.E.B.@.C.>.U.M.
10028a18:	9a579a5b 9a629a5f 9a649a65 9a6b9a69     [.W._.b.e.d.i.k.
10028a28:	9aad9a6a 9abc9ab0 9acf9ac0 9ad39ad1     j...............
10028a38:	9ade9ad4 9ae29adf 9ae69ae3 9aeb9aef     ................
10028a48:	9af49aee 9af79af1 9b069afb 9b1a9b18     ................
10028a58:	9b229b1f 9b259b23 9b289b27 9b2a9b29     ..".#.%.'.(.).*.
10028a68:	9b2f9b2e 9b449b32 9b4f9b43 9b4e9b4d     ../.2.D.C.O.M.N.
10028a78:	9b589b51 9b939b74 9b919b83 9b979b96     Q.X.t...........
10028a88:	9ba09b9f 9bb49ba8 9bca9bc0 9bc69bb9     ................
10028a98:	9bd19bcf 9be39bd2 9be49be2 9be19bd4     ................
10028aa8:	9bf29c3a 9bf09bf1 9c149c15 9c139c09     :...............
10028ab8:	9c069c0c 9c129c08 9c049c0a 9c1b9c2e     ................
10028ac8:	9c249c25 9c309c21 9c329c47 9c3e9c46     %.$.!.0.G.2.F.>.
10028ad8:	9c609c5a 9c769c67 9ce79c78 9cf09cec     Z.`.g.v.x.......
10028ae8:	9d089d09 9d039ceb 9d2a9d06 9daf9d26     ..........*.&...
10028af8:	9d1f9d23 9d159d44 9d419d12 9d3e9d3f     #...D.....A.?.>.
10028b08:	9d489d46 9d5e9d5d 9d519d64 9d599d50     F.H.].^.d.Q.P.Y.
10028b18:	9d899d72 9dab9d87 9d7a9d6f 9da49d9a     r.......o.z.....
10028b28:	9db29da9 9dc19dc4 9db89dbb 9dc69dba     ................
10028b38:	9dc29dcf 9dd39dd9 9de69df8 9def9ded     ................
10028b48:	9e1a9dfd 9e1e9e1b 9e799e75 9e819e7d     ........u.y.}...
10028b58:	9e8b9e88 9e929e8c 9e919e95 9ea59e9d     ................
10028b68:	9eb89ea9 9ead9eaa 9ecc9761 9ecf9ece     ........a.......
10028b78:	9ed49ed0 9ede9edc 9ee09edd 9ee89ee5     ................
10028b88:	9ef49eef 9ef79ef6 9efb9ef9 9efd9efc     ................
10028b98:	9f089f07 9f1576b7 9f2c9f21 9f4a9f3e     .....v..!.,.>.J.
10028ba8:	9f549f52 9f5f9f63 9f619f60 9f679f66     R.T.c._.`.a.f.g.
10028bb8:	9f6a9f6c 9f729f77 9f959f76 9fa09f9c     l.j.w.r.v.......
10028bc8:	69c7582f 74649059 719951dc              /X.iY.dt.Q.q

10028bd4 <b02cf>:
10028bd4:	55164e9c 963f5a03 611b54c0 59f66328     .N.U.Z?..T.a(c.Y
10028be4:	84759022 7a50831c 63e160aa 65ed6e25     ".u...Pz.`.c%n.e
10028bf4:	82a68466 68939bf5 65a15727 5b9b6271     f......h'W.eqb.[
10028c04:	867b59d0 7d6298f4 9b8e7dbe 7c9f6216     .Y{...b}.}...b.|
10028c14:	5b8988b7 63095eb5 68486697 978d95c7     ...[.^.c.fHh....
10028c24:	4ee5674f 4f4d4f0a 50494f9d 593756f2     Og.N.OMO.OIP.V7Y
10028c34:	5a0159d4 60df5c09 6170610f 69056613     .Y.Z.\.`.apa.f.i
10028c44:	754f70ba 79fb7570 7def7dad 840e80c3     .pOupu.y.}.}....
10028c54:	8b028863 907a9055 4e95533b 57df4ea5     c...U.z.;S.N.N.W
10028c64:	90c180b2 4e0078ef 6ea258f1 7a329038     .....x.N.X.n8.2z
10028c74:	828b8328 51419c2f 54bd5370 56e054e1     (.../.AQpS.T.T.V
10028c84:	5f1559fb 6deb98f2 852d80e4 96709662     .Y._...m..-.b.p.
10028c94:	97fb96a0 53f3540b 70cf5b87 8fc27fbd     .....T.S.[.p....
10028ca4:	536f96e8 7aba9d5c 78934e11 6e2681fc     ..oS\..z.N.x..&n
10028cb4:	55045618 851a6b1d 59e59c3b 6d6653a9     .V.U.k..;..Y.Sfm
10028cc4:	958f74dc 4e915642 96f2904b 990c834f     .t..BV.NK...O...
10028cd4:	55b653e1 5f715b30 66f36620 6c386804     .S.U0[q_ f.f.h8l
10028ce4:	6d296cf3 76c8745b 98347a4e 885b82f1     .l)m[t.vNz4...[.
10028cf4:	92ed8a60 75ab6db2 99c576ca 8b0160a6     `....m.u.v...`..
10028d04:	95b28d8a 53ad698e 57125186 59445830     .....i.S.Q.W0XDY
10028d14:	5ef65bb4 63a96028 6cbf63f4 708e6f14     .[.^(`.c.c.l.o.p
10028d24:	71597114 733f71d5 82767e01 859782d1     .qYq.q?s.~v.....
10028d34:	925b9060 58699d1b 6c5a65bc 51f97525     `.[...iX.eZl%u.Q
10028d44:	5965592e 5fdc5f80 65fa62bc 6b276a2a     .YeY._._.b.e*j'k
10028d54:	738b6bb4 89567fc1 9d0e9d2c 5ca19ec4     .k.s..V.,......\
10028d64:	837b6c96 5c4b5104 81c661b6 72616876     .l{..QK\.a..vhar
10028d74:	4ffa4e59 60695378 7a4f6e29 4e0b97f3     YN.OxSi`)nOz...N
10028d84:	4eee5316 4f3d4f55 4f734fa1 53ef52a0     .S.NUO=O.OsO.R.S
10028d94:	590f5609 5bb65ac1 79d15be1 679c6687     .V.Y.Z.[.[.y.f.g
10028da4:	6b4c67b6 706b6cb3 798d73c2 7a3c79be     .gLk.lkp.s.y.y<z
10028db4:	82b17b87 830482db 83ef8377 876683d3     .{......w.....f.
10028dc4:	56298ab2 8fe68ca8 971e904e 4fc4868a     ..)V....N......O
10028dd4:	62115ce8 753b7259 82bd81e5 8cc086fe     .\.bYr;u........
10028de4:	991396c5 4ecb99d5 89e34f1a 584a56de     .......N.O...VJX
10028df4:	5efb58ca 602a5feb 60626094 621261d0     .X.^._*`.`b`.a.b
10028e04:	653962d0 66669b41 6d7768b0 754c7070     .b9eA.ff.hwmppLu
10028e14:	7d757686 87f982a5 968e958b 51f18c9d     .vu}...........Q
10028e24:	591652be 5bb354b3 61685d16 6daf6982     .R.Y.T.[.]ha.i.m
10028e34:	84cb788d 8a728857 9ab893a7 99a86d6c     .x..W.r.....lm..
10028e44:	57a386d9 86ce67ff 5283920e 54045687     ...W.g.....R.V.T
10028e54:	62e15ed3 683c64b9 6bbb6838 78ba7372     .^.b.d<h8h.krs.x
10028e64:	899a7a6b 8d6b89d2 90ed8f03 969495a3     kz....k.........
10028e74:	5b669769 697d5cb3 984e984d 7b20639b     i.f[.\}iM.N..c {
10028e84:	6a7f6a2b 9c0d68b6 52726f5f 6070559d     +j.j.h.._orR.Up`
10028e94:	6d3b62ec 6ed16e07 8910845b 4e148f44     .b;m.n.n[...D..N
10028ea4:	53f69c39 6a3a691b 682a9784 7ac3515c     9..S.i:j..*h\Q.z
10028eb4:	91dc84b2 565b938c 68229d28 84318305     ......[V(."h..1.
10028ec4:	52087ca5 74e682c5 4f834e7e 5bd251a0     .|.R...t~N.O.Q.[
10028ed4:	52d8520a 5dfb52e7 582a559a 5b8c59e6     .R.R.R.].U*X.Y.[
10028ee4:	5bdb5b98 5e795e72 611f60a3 61be6163     .[.[r^y^.`.aca.a
10028ef4:	656263db 685367d1 6b3e68fa 6c576b53     .cbe.gSh.h>kSkWl
10028f04:	6f976f22 74b06f45 76e37518 7aff770b     "o.oEo.t.u.v.w.z
10028f14:	7c217ba1 7f367de9 809d7ff0 839e8266     .{!|.}6.....f...
10028f24:	8acc89b3 90848cab 95939451 95a29591     ........Q.......
10028f34:	97d39665 82189928 542b4e38 5dcc5cb8     e...(...8N+T.\.]
10028f44:	764c73a9 5ca9773c 8d0b7feb 981196c1     .sLv<w.\........
10028f54:	98589854 4f0e4f01 559c5371 57fa5668     T.X..O.OqS.UhV.W
10028f64:	5b095947 5c905bc4 5e7e5e0c 63ee5fcc     GY.[.[.\.^~^._.c
10028f74:	65d7673a 671f65e2 68c468cb 5e306a5f     :g.e.e.g.h.h_j0^
10028f84:	6c176bc5 757f6c7d 5b637948 7d007a00     .k.l}l.uHyc[.z.}
10028f94:	898f5fbd 8cb48a18 8ecc8d77 98e28f1d     ._......w.......
10028fa4:	9b3c9a0e 507d4e80 59935100 622f5b9c     ..<..N}P.Q.Y.[/b
10028fb4:	64ec6280 72a06b3a 79477591 87fb7fa9     .b.d:k.r.uGy....
10028fc4:	8b708abc 83ca63ac 540997a0 55ab5403     ..p..c.....T.T.U
10028fd4:	6a586854 78278a70 9ecd6775 5ba25374     ThXjp.'xug..tS.[
10028fe4:	8650811a 4e189006 4ec74e45 53ca4f11     ..P....NEN.N.O.S
10028ff4:	5bae5438 60255f13 673d6551 6c726c42     8T.[._%`Qe=gBlrl
10029004:	70786ce3 7a767403 7b087aae 7cfe7d1a     .lxp.tvz.z.{.}.|
10029014:	65e77d66 53bb725b 5de85c45 62e062d2     f}.e[r.SE\.].b.b
10029024:	6e206319 8a31865a 92f88ddd 79a66f01     .c nZ.1......o.y
10029034:	4ea89b5a 4eac4eab 4fa04f9b 514750d1     Z..N.N.N.O.O.PGQ
10029044:	51717af6 535451f6 537f5321 55ac53eb     .zqQ.QTS!S.S.S.U
10029054:	5ce15883 5f4a5f37 6050602f 631f606d     .X.\7_J_/`P`m`.c
10029064:	6a4b6559 72c26cc1 77ef72ed 810580f8     YeKj.l.r.r.w....
10029074:	854e8208 93e190f7 995797ff 4ef09a5a     ..N.......W.Z..N
10029084:	5c2d51dd 696d6681 66f25c40 73896975     .Q-\.fmi@\.fui.s
10029094:	7c816850 52e450c5 5dfe5747 65a49326     Ph.|.P.RGW.]&..e
100290a4:	6b3d6b23 79817434 7b4b79bd 82b97dca     #k=k4t.y.yK{.}..
100290b4:	887f83cc 8b39895f 91d18fd1 9280541f     ...._.9......T..
100290c4:	50364e5d 533a53e5 739672d7 82e677e9     ]N6P.S:S.r.s.w..
100290d4:	99c68eaf 99d299c8 611a5177 55b0865e     ........wQ.a^..U
100290e4:	50767a7a 90475bd3 4e329685 91e76adb     zzvP.[G...2N.j..
100290f4:	5c485c51 7a9f6398 97746c93 7aaa8f61     Q\H\.c.z.lt.a..z
10029104:	9688718a 68177c82 68517e70 52f2936c     .q...|.hp~Qhl..R
10029114:	85ab541b 7fa48a13 90e18ecd 88885366     .T..........fS..
10029124:	4fc27941 521150be 55535144 73ea572d     Ay.O.P.RDQSU-W.s
10029134:	5951578b 5f845f62 61766075 61a96167     .WQYb_._u`vaga.a
10029144:	643a63b2 666f656c 6e136842 7a3d7566     .c:dleofBh.nfu=z
10029154:	7d4c7cfb 7e4b7d99 830e7f6b 86cd834a     .|L}.}K~k...J...
10029164:	8a638a08 8efd8b66 9d8f981a 8fce82b8     ..c.f...........
10029174:	52879be8 6483621f 96996fc0 50916841     ...R.b.d.o..Ah.P
10029184:	6c7a6b20 7a746f54 88407d50 67088a23      kzlTotzP}@.#..g
10029194:	50394ef6 50655026 5238517c 55a75263     .N9P&PeP|Q8RcR.U
100291a4:	5805570f 5efa5acc 61f861b2 637262f3     .W.X.Z.^.a.a.brc
100291b4:	6a29691c 72ac727d 7814732e 7d79786f     .i)j}r.r.s.xoxy}
100291c4:	80a9770c 8b19898b 8ed28ce2 93759063     .w..........c.u.
100291d4:	9855967a 9e789a13 539f5143 5e7b53b3     z.U...x.CQ.S.S{^
100291e4:	6e1b5f26 73846e90 7d4373fe 8a008237     &_.n.n.s.sC}7...
100291f4:	96508afa 500b4e4e 547c53e4 59d156fa     ..P.NN.P.S|T.V.Y
10029204:	5df15b64 5f275eab 65456238 6e5667af     d[.].^'_8bEe.gVn
10029214:	7cca72d0 80a188b4 83f080e1 8a87864e     .r.|........N...
10029224:	92378de8 986796c7 4e949f13 4f0d4e92     ..7...g....N.N.O
10029234:	54495348 5a2f543e 5fa15f8c 68a7609f     HSIT>T/Z._._.`.h
10029244:	745a6a8e 8a9e7881 8b778aa4 4e5e9190     .jZt.x....w...^N
10029254:	4ea49bc9 4faf4f7c 50165019 516c5149     ...N|O.O.P.PIQlQ
10029264:	52b9529f 539a52fe 541153e3 5589540e     .R.R.R.S.S.T.T.U
10029274:	57a25751 5b54597d 5b8f5b5d 5de75de5     QW.W}YT[][.[.].]
10029284:	5e785df7 5e9a5e83 5f185eb7 614c6052     .]x^.^.^.^._R`La
10029294:	62d86297 653b63a7 66436602 676d66f4     .b.b.c;e.fCf.fmg
100292a4:	68976821 6c5f69cb 6d696d2a 6e9d6e2f     !h.h.i_l*mim/n.n
100292b4:	76877532 7a3f786c 7d057ce0 7d5e7d18     2u.vlx?z.|.}.}^}
100292c4:	80157db1 80af8003 815480b1 822a818f     .}........T...*.
100292d4:	884c8352 8b1b8861 8cfc8ca2 917590ca     R.L.a.........u.
100292e4:	783f9271 95a492fc 9805964d 9ad89999     q.?x....M.......
100292f4:	525b9d3b 53f752ab 58d55408 6fe062f7     ;.[R.R.S.T.X.b.o
10029304:	8f5f8c6a 514b9eb9 544a523b 7a4056fd     j._...KQ;RJT.V@z
10029314:	9d609177 73449ed2 81706f09 5ffd7511     w.`...Ds.op..u._
10029324:	9aa860da 8fbc72db 98036b64 56f04eca     .`...r..dk...N.V
10029334:	58be5764 60685a5a 660f61c7 68396606     dW.XZZh`.a.f.f9h
10029344:	6df768b1 7d3a75d5 9b42826e 4f504e9b     .h.m.u:}n.B..NPO
10029354:	550653c9 5de65d6f 67fb5dee 74736c99     .S.Uo].].].g.lst
10029364:	8a507802 88df9396 5ea75750 50b5632b     .xP.....PW.^+c.P
10029374:	518d50ac 54c96700 59bb585e 5f695bb0     .P.Q.g.T^X.Y.[i_
10029384:	63a1624d 6b73683d 707d6e08 728091c7     Mb.c=hsk.n}p...r
10029394:	78267815 658e796d 83dc7d30 8f0988c1     .x&xmy.e0}......
100293a4:	5264969b 67505728 8ca17f6a 574251b4     ..dR(WPgj....QBW
100293b4:	583a962a 80b4698a 5d0e54b2 789557fc     *.:X.i...T.].W.x
100293c4:	4f5c9dfa 548b524a 6628643e 67f56714     ..\OJR.T>d(f.g.g
100293d4:	7b567a84 932f7d22 9bad685c 53197b39     .zV{"}/.\h..9{.S
100293e4:	5237518a 62f65bdf 64e664ae 6bba672d     .Q7R.[.b.d.d-g.k
100293f4:	96d185a9 9bd67690 9306634c 76bf9bab     .....v..Lc.....v
10029404:	4e096652 53c25098 60e85c71 65636492     Rf.N.P.Sq\.`.dce
10029414:	71e6685f 752373ca 7e827b97 8b838695     _h.q.s#u.{.~....
10029424:	91788cdb 65ac9910 6b8b66ab 4ed44ed5     ..x....e.f.k.N.N
10029434:	4f7f4f3a 53f8523a 55e353f2 58eb56db     :O.O:R.S.S.U.V.X
10029444:	59c959cb 5b5059ff 5e025c4d 5fd75e2b     .Y.Y.YP[M\.^+^._
10029454:	6307601d 5b5c652f 65bd65af 679d65e8     .`.c/e\[.e.e.e.g
10029464:	6b7b6b62 73456c0f 79c17949 7d197cf8     bk{k.lEsIy.y.|.}
10029474:	80a27d2b 81f38102 8a5e8996 8a668a69     +}........^.i.f.
10029484:	8aee8a8c 8cdc8cc7 98fc96cc 4e8b6b6f     ............ok.N
10029494:	4f8d4f3c 5b575150 61485bfa 66426301     <O.OPQW[.[Ha.cBf
100294a4:	6ecb6b21 723e6cbb 75d474bd 793a78c1     !k.n.l>r.t.u.x:y
100294b4:	8033800c 849481ea 6c508f9e 5f0f9e7f     ..3.......Pl..._
100294c4:	9d2b8b58 8ef87afa 96eb5b8d 53f14e03     X.+..z...[...N.S
100294d4:	593157f7 5ba45ac9 6e7f6089 75be6f06     .W1Y.Z.[.`.n.o.u
100294e4:	5b9f8cea 7be08500 67f45072 5c61829d     ...[...{rP.g..a\
100294f4:	7e1e854a 5199820e 63685c04 659c8d66     J..~...Q.\hcf..e
10029504:	793e716e 80057d17 8eca8b1d 86c7906e     nq>y.}......n...
10029514:	501f90aa 5c3a52fa 707c6753 914c7235     ...P.R:\Sg|p5rL.
10029524:	932b91c8 5bc282e5 60f95f31 53d64e3b     ..+....[1_.`;N.S
10029534:	624b5b88 6b8a6731 73e072e9 816b7a2e     .[Kb1g.k.r.s.zk.
10029544:	91528da3 51129996 546a53d7 63885bff     ..R....Q.SjT.[.c
10029554:	7dac6a39 56da9700 546853ce 5c315b97     9j.}...V.ShT.[1\
10029564:	4fee5dde 62fe6101 79c06d32 7d4279cb     .].O.a.b2m.y.yB}
10029574:	7fd27e4d 821f81ed 88468490 8b908972     M~........F.r...
10029584:	8f2f8e74 914b9031 96c6916c 4ec0919c     t./.1.K.l......N
10029594:	51454f4f 5f935341 67d4620e 6e0b6c41     OOEQAS._.b.gAl.n
100295a4:	7e267363 928391cd 591953d4 6dd15bbf     cs&~.....S.Y.[.m
100295b4:	7e2e795d 587e7c9b 51fa719f 8ff08853     ]y.~.|~X.q.QS...
100295c4:	5cfb4fca 77ac6625 821c7ae3 51c699ff     .O.\%f.w.z.....Q
100295d4:	65ec5faa 6b89696f 6e966df3 76fe6f64     ._.eoi.k.m.ndo.v
100295e4:	5de17d14 91879075 51e69806 6240521d     .}.]u......Q.R@b
100295f4:	66d96691 5eb66e1a 7f727dd2 85af66f8     .f.f.n.^.}r..f..
10029604:	8af885f7 53d952a9 5e8f5973 60555f90     .....R.SsY.^._U`
10029614:	966492e4 511f50b7 532052dd 53ec5347     ..d..P.Q.R SGS.S
10029624:	554654e8 56175531 59be5968 5bb55a3c     .TFU1U.VhY.Y<Z.[
10029634:	5c0f5c06 5c1a5c11 5e8a5e84 5f705ee0     .\.\.\.\.^.^.^p_
10029644:	6284627f 638c62db 66076377 662d660c     .b.b.b.cwc.f.f-f
10029654:	677e6676 6a1f68a2 6cbc6a35 6e096d88     vf~g.h.j5j.l.m.n
10029664:	713c6e58 71677126 770175c7 7901785d     Xn<q&qgq.u.w]x.y
10029674:	79f07965 7b117ae0 7d397ca7 83d68096     ey.y.z.{.|9}....
10029684:	8549848b 88f3885d 8a3c8a1f 8a738a54     ..I.].....<.T.s.
10029694:	8cde8c61 926691a4 9418937e 9798969c     a.....f.~.......
100296a4:	4e084e0a 4e574e1e 52705197 583457ce     .N.N.NWN.QpR.W4X
100296b4:	5b2258cc 60c55e38 676164fe 6d446756     .X"[8^.`.dagVgDm
100296c4:	757372b6 84b87a63 91b88b72 56319320     .rsucz..r... .1V
100296d4:	98fe57f4 690d62ed 71ed6b96 80777e54     .W...b.i.k.qT~w.
100296e4:	89e68272 875598df 5c3b8fb1 4fe14f38     r.....U...;\8O.O
100296f4:	55074fb5 5bdd5a20 5fc35be9 632f614e     .O.U Z.[.[._Na/c
10029704:	664b65b0 699b68ee 6df16d78 75b97533     .eKf.h.ixm.m3u.u
10029714:	795e771f 7d3379e6 82af81e3 89aa85aa     .w^y.y3}........
10029724:	8eab8a3a 90328f9b 970791dd 4ec14eba     :.....2......N.N
10029734:	58755203 5c0b58ec 5c3d751a 8a0a814e     .RuX.X.\.u=\N...
10029744:	96638fc5 7b25976d 98088acf 56f39162     ..c.m.%{....b..V
10029754:	901753a8 57825439 63a85e25 708a6c34     .S..9T.W%^.c4l.p
10029764:	7c8b7761 88707fe0 91549042 93189310     aw.|..p.B.T.....
10029774:	745e968f 5d079ac4 65705d69 8da867a2     ..^t...]i]pe.g..
10029784:	636e96db 69196749 981783c5 88fe96c0     ..ncIg.i........
10029794:	647a6f84 4e165bf8 755d702c 51c4662f     .ozd.[.N,p]u/f.Q
100297a4:	52e25236 5f8159d3 62106027 6574653f     6R.R.Y._'`.b?ete
100297b4:	6674661f 681668f2 6e056b63 751f7272     .ftf.h.hck.nrr.u
100297c4:	7cbe76db 58f08056 897f88fd 8a938aa0     .v.|V..X........
100297d4:	901d8acb 97529192 65899759 81067a0e     ......R.Y..e.z..
100297e4:	5e2d96bb 621a60dc 661465a5 77f36790     ..-^.`.b.e.f.g.w
100297f4:	7c4d7a4d 810a7e3e 8d648cac 8e5f8de1     MzM|>~....d..._.
10029804:	520778a9 63a562d9 62986442 7a838a2d     .x.R.b.cBd.b-..z
10029814:	8aac7bc0 7d7696ea 8749820c 51484ed9     .{....v}..I..NHQ
10029824:	53605343 5c025ba3 5ddd5c16 62476226     CS`S.[.\.\.]&bGb
10029834:	681364b0 6cc96834 6d176d45 6f5c67d3     .d.h4h.lEm.m.g\o
10029844:	717d714e 7a7f65cb 7dda7bad 7fa87e4a     Nq}q.e.z.{.}J~..
10029854:	821b817a 85a68239 8cce8a6e 90788df5     z...9...n.....x.
10029864:	92ad9077 95839291 524d9bae 6f385584     w.........MR.U8o
10029874:	51687136 7e557985 7cce81b3 5851564c     6qhQ.yU~...|LVQX
10029884:	63aa5ca8 66fd66fe 72d9695a 758e758f     .\.c.f.fZi.r.u.u
10029894:	7956790e 7c9779df 7d447d20 8a348607     .yVy.y.| }D}..4.
100298a4:	9061963b 50e79f20 53cc5275 500953e2     ;.a. ..PuR.S.S.P
100298b4:	58ee55aa 723d594f 5c645b8b 60e3531d     .U.XOY=r.[d\.S.`
100298c4:	635c60f3 633f6383 64cd63bb 66f965e9     .`\c.c?c.c.d.e.f
100298d4:	69cd5de3 6f1569fd 4e8971e5 76f875e9     .].i.i.o.q.N.u.v
100298e4:	7cdf7a93 7d9c7dcf 83498061 846c8358     .z.|.}.}a.I.X.l.
100298f4:	85fb84bc 8d7088c5 906d9001 971c9397     ......p...m.....
10029904:	50cf9a12 618e5897 853581d3 90208d08     ...P.X.a..5... .
10029914:	50744fc3 53735247 6349606f 6e2c675f     .OtPGRsSo`Ic_g,n
10029924:	901f8db3 5c5e4fd7 65cf8cca 53527d9a     .....O^\...e.}RS
10029934:	51768896 5b5863c3 5c0a5b6b 6751640d     ..vQ.cX[k[.\.dQg
10029944:	4ed6905c 592a591a 8a516c70 5815553e     \..N.Y*YplQ.>U.X
10029954:	60f059a5 67c16253 69558235 99c49640     .Y.`Sb.g5.Ui@...
10029964:	4f539a28 5bfe5806 5cb18010 5f855e2f     (.SO.X.[...\/^._
10029974:	614b6020 66ff6234 6ede6cf0 817f80ce      `Ka4b.f.l.n....
10029984:	888b82d4 90008cb8 968a902e 9bdb9edb     ................
10029994:	53f04ee3 7b2c5927 984c918d 6edd9df9     .N.S'Y,{..L....n
100299a4:	53537027 5b855544 629e6258 6ca262d3     'pSSDU.[Xb.b.b.l
100299b4:	74226fef 94388a17 8afe6fc1 51e78338     .o"t..8..o..8..Q
100299c4:	53ea86f8 4f4653e9 8fb09054 8131596a     ...S.SFOT...jY1.
100299d4:	7aea5dfd 68da8fbf 72f88c37 6a3d9c48     .].z...h7..rH.=j
100299e4:	4e398ab0 56065358 62c55766 65e663a2     ..9NXS.VfW.b.c.e
100299f4:	6de16b4e 70ad6e5b 7aef77ed 7dbb7baa     Nk.m[n.p.w.z.{.}
10029a04:	80c6803d 8a9586cb 56e3935b 5f3e58c7     =.......[..V.X>_
10029a14:	669665ad 6bb56a80 8ac77537 77e55024     .e.f.j.k7u..$P.w
10029a24:	5f1b5730 667a6065 75f46c60 7f6e7a1a     0W._e`zf`l.u.zn.
10029a34:	871881f4 99b39045 755c7bc9 7b517af9     ....E....{\u.zQ{
10029a44:	901084c4 7a9279e9 5ae18336 4e2d7740     .....y.z6..Z@w-N
10029a54:	5b994ef2 62bd5fe0 67f1663c 866b6ce8     .N.[._.b<f.g.lk.
10029a64:	8a3b8877 92f3914e 6a1799d0 732a7026     w.;.N......j&p*s
10029a74:	845782e7 4e018caf 51cb5146 5bf5558b     ..W....NFQ.Q.U.[
10029a84:	5e335e16 5f145e81 5f6b5f35 61f25fb4     .^3^.^._5_k_._.a
10029a94:	66a26311 6f6e671d 753a7252 8074773a     .c.f.gnoRr:u:wt.
10029aa4:	81788139 8abf8776 8d858adc 929a8df3     9.x.v...........
10029ab4:	98029577 52c59ce5 76f46357 6c886715     w......RWc.v.g.l
10029ac4:	8cc373cd 967393ae 589c6d25 69cc690e     .s....s.%m.X.i.i
10029ad4:	939a8ffd 901a75db 6802585a 69fb63b4     .....u..ZX.h.c.i
10029ae4:	6f2c4f43 8fbb67d8 7db48526 693f9354     CO,o.g..&..}T.?i
10029af4:	576a6f70 5b2c58f7 722a7d2c 91e3540a     pojW.X,[,}*r.T..
10029b04:	4ead9db4 505c4f4e 52435075 54488c9e     ...NNO\PuPCR..HT
10029b14:	5b9a5824 5e955e1d 5ef75ead 608c5f1f     $X.[.^.^.^.^._.`
10029b24:	633a62b5 68af63d0 78876c40 7a0b798e     .b:c.c.h@l.x.y.z
10029b34:	82477de0 8ae68a02 90138e44 912d90b8     .}G.....D.....-.
10029b44:	9f0e91d8 64586ce5 657564e2 76846ef4     .....lXd.due.n.v
10029b54:	90697b1b 6eba93d1 5fb954f2 8f4d64a4     .{i....n.T._.dM.
10029b64:	92448fed 586b5178 5c555929 6dfb5e97     ..D.xQkX)YU\.^.m
10029b74:	751c7e8f 8ee28cbc 70b9985b 6bbf4f1d     .~.u....[..p.O.k
10029b84:	75306fb1 514e96fb 58355410 59ac5857     .o0u..NQ.T5XWX.Y
10029b94:	5f925c60 675c6597 767b6e21 8ced83df     `\._.e\g!n{v....
10029ba4:	90fd9014 7825934d 52aa783a 571f5ea6     ....M.%x:x.R.^.W
10029bb4:	60125974 515a5012 51cd51ac 55105200     tY.`.PZQ.Q.Q.R.U
10029bc4:	58585854 5b955957 5d8b5cf6 629560bc     TXXXWY.[.\.].`.b
10029bd4:	6771642d 68bc6843 76d768df 6e6f6dd8     -dqgCh.h.h.v.mon
10029be4:	706f6d9b 5f5371c8 797775d8 7b547b49     .mop.qS_.uwyI{T{
10029bf4:	7cd67b52 52307d71 85698463 8a0e85e4     R{.|q}0Rc.i.....
10029c04:	8c468b04 90038e0f 9419900f 982d9676     ..F.........v.-.
10029c14:	95d89a30 52d550cd 5802540c 61a75c0e     0....P.R.T.X.\.a
10029c24:	6d1e649e 7ae577b3 840480f4 92859053     .d.m.w.z....S...
10029c34:	9d075ce0 5f97533f 6d9c5fb3 77637279     .\..?S._._.myrcw
10029c44:	7be479bf 72ec6bd2 68038aad 51f86a61     .y.{.k.r...haj.Q
10029c54:	69347a81 9cf65c4a 5bc582eb 701e9149     .z4iJ\.....[I..p
10029c64:	5c6f5678 656660c7 8c5a6c8c 98139041     xVo\.`fe.lZ.A...
10029c74:	66c75451 5948920d 518590a3 51ea4e4d     QT.f..HY...QMN.Q
10029c84:	8b0e8599 637a7058 6962934b 7e0499b4     ....XpzcK.bi...~
10029c94:	53577577 8edf6960 6c5d96e3 5c3c4e8c     wuWS`i....]l.N<\
10029ca4:	8fe95f10 8cd15302 86798089 65e55eff     ._...S....y..^.e
10029cb4:	51654e73 5c3f5982 4efb97ee 5fcd598a     sNeQ.Y?\...N.Y._
10029cc4:	6fe18a8d 796279b0 84715be7 71b1732b     ...o.yby.[q.+s.q
10029cd4:	5ff55e74 649a637b 7c9871c3 5efc4e43     t^._{c.d.q.|CN.^
10029ce4:	57dc4e4b 60a956a2 7d0d6fc3 813380fd     KN.W.V.`.o.}..3.
10029cf4:	8fb281bf 86a48997 628a5df4 898764ad     .........].b.d..
10029d04:	6ce26777 74366d3e 5a467834 82ad7f75     wg.l>m6t4xFZu...
10029d14:	4ff399ac 62dd5ec3 65576392 76c3676f     ...O.^.b.cWeog.v
10029d24:	80cc724c 8f2980ba 500d914d 5a9257f9     Lr....).M..P.W.Z
10029d34:	69736885 72fd7164 58f28cb7 966a8ce0     .hsidq.r...X..j.
10029d44:	877f9019 77e779e4 4f2f8429 535a5265     .....y.w)./OeRZS
10029d54:	67cf62cd 767d6cca 7c957b94 85848236     .b.g.l}v.{.|6...
10029d64:	66dd8feb 72066f20 83ab7e1b 9ea699c1     ...f o.r.~......
10029d74:	7bb151fd 7bb87872 7b488087 5e616ae8     .Q.{rx.{..H{.ja^
10029d84:	7551808c 516b7560 6e8c9262 9197767a     ..Qu`ukQb..nzv..
10029d94:	4f109aea 629c7f70 95a57b4f 567a9ce9     ...Op..bO{....zV
10029da4:	86e45859 4f3496bc 534a5224 53db53cd     YX....4O$RJS.S.S
10029db4:	642c5e06 677f6591 6c4e6c3e 72af7248     .^,d.e.g>lNlHr.r
10029dc4:	755473ed 822c7e41 8ca985e9 91c67bc4     .sTuA~,......{..
10029dd4:	98127169 633d98ef 756a6669 78d076e4     iq....=cifju.v.x
10029de4:	86ee8543 5351532a 59835426 5f7c5e87     C...*SQS&T.Y.^|_
10029df4:	624960b2 62ab6279 6bd46590 75b26ccc     .`Ibyb.b.e.k.l.u
10029e04:	789176ae 7dcb79d8 80a57f77 8ab988ab     .v.x.y.}w.......
10029e14:	907f8cbb 98db975e 7c386a0b 5c3e5099     ....^....j8|.P>\
10029e24:	67875fae 74356bd8 7f8e7709 67ca9f3b     ._.g.k5t.w..;..g
10029e34:	53397a17 9aed758b 819d5f66 809883f1     .z9S.u..f_......
10029e44:	5fc55f3c 7b467562 6867903c 5a9b59eb     <_._buF{<.gh.Y.Z
10029e54:	767e7d10 4ff58b2c 6a195f6a 6f026c37     .}~v,..Oj_.j7l.o
10029e64:	796874e2 8a558868 5edf8c79 75c563cf     .thyh.U.y..^.c.u
10029e74:	82d779d2 92f29328 86ed849c 54c19c2d     .y..(.......-..T
10029e84:	658c5f6c 70156d5c 8cd38ca7 654f983b     l_.e\m.p....;.Oe
10029e94:	4e0d74f6 57e04ed8 5a66592b 51a85bcc     .t.N.N.W+YfZ.[.Q
10029ea4:	5e9c5e03 62766016 65a76577 6d6e666e     .^.^.`vbwe.enfnm
10029eb4:	7b267236 819a8150 8b5c8299 8ce68ca0     6r&{P.....\.....
10029ec4:	961c8d74 4fae9644 6b6664ab 8461821e     t...D..O.dfk..a.
10029ed4:	90e8856a 69535c01 847a98a8 4f0f8557     j....\Si..z.W..O
10029ee4:	5fa9526f 670d5e45 8179798f 89868907     oR._E^.g.yy.....
10029ef4:	5f176df5 6cb86255 72694ecf 52069b92     .m._Ub.l.Nir...R
10029f04:	5674543b 61a458b3 711a626e 7c89596e     ;TtV.X.anb.qnY.|
10029f14:	7d1b7cde 658796f0 4e19805e 51754f75     .|.}...e^..NuOuQ
10029f24:	5e635840 5f0a5e73 4e2667c4 9589853d     @Xc^s^._.g&N=...
10029f34:	7c73965b 50fb9801 765658c1 522578a7     [.s|...P.XVv.x%R
10029f44:	851177a5 504f7b86 72475909 7de87bc7     .w...{OP.YGr.{.}
10029f54:	8fd48fba 4fbf904d 5a2952c9 97ad5f01     ....M..O.R)Z._..
10029f64:	82174fdd 570392ea 6b696355 88dc752b     .O.....WUcik+u..
10029f74:	7a428f14 589352df 620a6155 6bcd66ae     ..Bz.R.XUa.b.f.k
10029f84:	83e97c3f 4ff85023 54465305 59495831     ?|..#P.O.SFT1XIY
10029f94:	5cf05b9d 5d295cef 62b15e96 653e6367     .[.\.\)].^.bgc>e
10029fa4:	670b65b9 6ce16cd5 783270f9 80de7e2b     .e.g.l.l.p2x+~..
10029fb4:	840c82b3 870284ec 8a2a8912 90a68c4a     ..........*.J...
10029fc4:	98fd92d2 9d6c9cf3 4ea14e4f 5256508d     ......l.ON.N.PVR
10029fd4:	59a8574a 5fd85e3d 623f5fd9 671b66b4     JW.Y=^._._?b.f.g
10029fe4:	68d267d0 7d215192 81a880aa 8c8c8b00     .g.h.Q!}........
10029ff4:	927e8cbf 54209632 5317982c 535c50d5     ..~.2. T,..S.P\S
1002a004:	64b258a8 72676734 7a467766 52c391e6     .X.d4ggrfwFz...R
1002a014:	6b866ca1 5e4c5800 672c5954 51e17ffb     .l.k.XL^TY,g...Q
1002a024:	646976c6 9b5478e8 57cb9ebb 662759b9     .vid.xT....W.Y'f
1002a034:	6bce679a 69d954e9 819c5e55 9baa6795     .g.k.T.iU^...g..
1002a044:	9c5267fe 4ea6685d 53c84fe3 672b62b9     .gR.]h.N.O.S.b+g
1002a054:	8fc46cab 7e6d4fad 4e079ebf 6e806162     .l...Om~...Nba.n
1002a064:	85136f2b 672a5473 5df39b45 5cac7b95     +o..sT*gE..].{.\
1002a074:	871c5bc6 84d16e4a 81087a14 7c8d5999     .[..Jn...z...Y.|
1002a084:	77206c11 592252d9 725f7121 972777db     .l w.R"Y!q_r.w'.
1002a094:	690b9d61 5a185a7f 540d51a5 660e547d     a..i.Z.Z.Q.T}T.f
1002a0a4:	8ff776df 9cf49298 725d59ea 514d6ec5     .v.......Y]r.nMQ
1002a0b4:	7dbf68c9 97627dec 64789eba 83026a21     .h.}.}b...xd!j..
1002a0c4:	5b5f5984 731b6bdb 7db276f2 84998017     .Y_[.k.s.v.}....
1002a0d4:	67285132 76ee9ed9 52ff6762 5c249905     2Q(g...vbg.R..$\
1002a0e4:	7c7e623b 554f8cb0 7d0b60b6 53019580     ;b~|..OU.`.}...S
1002a0f4:	51b64e5f 723a591c 91ce8036 77e25f25     _N.Q.Y:r6...%_.w
1002a104:	5f795384 85ac7d04 8e8d8a33 67f39756     .Sy_.}..3...V..g
1002a114:	945385ae 61086109 76526cb9 8f388aed     ..S..a.a.lRv..8.
1002a124:	4f51552f 52c7512a 5ba553cb 60a05e7d     /UQO*Q.R.S.[}^.`
1002a134:	63d66182 67da6709 6d8c6e67 73377336     .a.c.g.ggn.m6s7s
1002a144:	79507531 8a9888d5 9091904a 96c490f5     1uPy....J.......
1002a154:	5915878d 4f594e88 8a894e0e 98108f3f     ...Y.NYO.N..?...
1002a164:	5e7c50ad 5bb95996 63da5eb8 64c163fa     .P|^.Y.[.^.c.c.d
1002a174:	694a66dc 6d0b69d8 71946eb6 7aaf7528     .fJi.i.m.n.q(u.z
1002a184:	80007f8a 84c98449 8b218981 90658e0a     ....I.....!...e.
1002a194:	990a967d 6291617e 6c836b32 7fcc6d74     }...~a.b2k.ltm..
1002a1a4:	6dc07ffc 87ba7f85 676588f8 983c83b1     ...m......eg..<.
1002a1b4:	6d1b96f7 843d7d61 4e71916a 5d505375     ...ma}=.j.qNuSP]
1002a1c4:	6feb6b04 862d85cd 522989a7 5c65540f     .k.o..-...)R.Te\
1002a1d4:	68a8674e 74837406 88cf75e2 91cc88e1     Ng.h.t.t.u......
1002a1e4:	967896e2 73875f8b 844e7acb 756563a0     ..x.._.s.zN..ceu
1002a1f4:	6d415289 74096e9c 786b7559 96867c92     .RAm.n.tYukx.|..
1002a204:	9f8d7adc 616e4fb6 865c65c5 4eae4e86     .z...Ona.e\..N.N
1002a214:	4e2150da 5bee51cc 68816599 731f6dbc     .P!N.Q.[.e.h.m.s
1002a224:	77ad7642 7ce77a1c 8ad2826f 91cf907c     Bv.w.z.|o...|...
1002a234:	98189675 7dd1529b 5398502b 6dcb6797     u....R.}+P.S.g.m
1002a244:	743371d0 8f2a81e8 9c5796a3 74609e9f     .q3t..*...W...`t
1002a254:	6d995841 985e7d2f 4f364ee4 51b74f8b     AX.m/}^..N6O.O.Q
1002a264:	5dba52b1 73b2601c 82d3793c 96b79234     .R.].`.s<y..4...
1002a274:	970a96f6 9f629e97 6b7466a6 52a35217     ......b..ftk.R.R
1002a284:	88c270c8 604b5ec9 6f236190 7c3e7149     .p...^K`.a#oIq>|
1002a294:	806f7df4 902384ee 5442932c 6ad39b6f     .}o...#.,.BTo..j
1002a2a4:	8cc27089 97328def 5a4152b4 5f045eca     .p....2..RAZ.^._
1002a2b4:	697c6717 6d6a6994 72626f0f 7bed72fc     .g|i.ijm.obr.r.{
1002a2c4:	807e8001 90ce874b 9e93516d 808b7984     ..~.K...mQ...y..
1002a2d4:	8ad69332 548c502d 6b6a8a71 81078cc4     2...-P.Tq.jk....
1002a2e4:	67a060d1 4e999df2 9c104e98 85c18a6b     .`.g...N.N..k...
1002a2f4:	69008568 78976e7e 00008155              h..i~n.xU...

1002a300 <a8>:
1002a300:	25022500 2510250c 25142518 252c251c     .%.%.%.%.%.%.%,%
1002a310:	25342524 2501253c 250f2503 251b2513     $%4%<%.%.%.%.%.%
1002a320:	25232517 252b2533 254b253b 252f2520     .%#%3%+%;%K% %/%
1002a330:	25372528 251d253f 25252530 25422538     (%7%?%.%0%%%8%B%

1002a340 <a7>:
1002a340:	04110410 04130412 04150414 04160401     ................
1002a350:	04180417 041a0419 041c041b 041e041d     ................
1002a360:	0420041f 04220421 04240423 04260425     .. .!.".#.$.%.&.
1002a370:	04280427 042a0429 042c042b 042e042d     '.(.).*.+.,.-...
1002a380:	0000042f 00000000 00000000 00000000     /...............
	...
1002a3a0:	04310430 04330432 04350434 04360451     0.1.2.3.4.5.Q.6.
1002a3b0:	04380437 043a0439 043c043b 043e043d     7.8.9.:.;.<.=.>.
1002a3c0:	0440043f 04420441 04440443 04460445     ?.@.A.B.C.D.E.F.
1002a3d0:	04480447 044a0449 044c044b 044e044d     G.H.I.J.K.L.M.N.
1002a3e0:	0000044f                                O...

1002a3e4 <a6>:
1002a3e4:	03920391 03940393 03960395 03980397     ................
1002a3f4:	039a0399 039c039b 039e039d 03a0039f     ................
1002a404:	03a303a1 03a503a4 03a703a6 03a903a8     ................
	...
1002a424:	03b203b1 03b403b3 03b603b5 03b803b7     ................
1002a434:	03ba03b9 03bc03bb 03be03bd 03c003bf     ................
1002a444:	03c303c1 03c503c4 03c703c6 03c903c8     ................

1002a454 <a3>:
	...
1002a460:	01000000 01010101 01010101 00000001     ................
1002a470:	00000000 01010101 01010101 01010101     ................
1002a480:	01010101 01010101 01010101 00000101     ................
1002a490:	00000000 01010100 01010101 01010101     ................
1002a4a0:	01010101 01010101 01010101 00010101     ................

1002a4b0 <a2>:
1002a4b0:	25a125c6 25b325a0 25bd25b2 203b25bc     .%.%.%.%.%.%.%; 
1002a4c0:	21923012 21912190 30132193 00000000     .0.!.!.!.!.0....
	...
1002a4e0:	22080000 2286220b 22822287 222a2283     ..."."."."."."*"
1002a4f0:	00002229 00000000 00000000 00000000     )"..............
1002a500:	22270000 00ac2228 21d421d2 22032200     ..'"("...!.!."."
1002a510:	00002229 00000000 00000000 00000000     )"..............
1002a520:	00000000 22200000 231222a5 22072202     ...... ".".#."."
1002a530:	22522261 226b226a 223d221a 2235221d     a"R"j"k"."="."5"
1002a540:	222c222b 00000000 00000000 00000000     +","............
1002a550:	212b0000 266f2030 266a266d 20212020     ..+!0 o&m&j&  ! 
1002a560:	222c00b6 00000000 25ef0000              ..,".......%

1002a56c <a1>:
1002a56c:	30013000 ff0c3002 30fbff0e ff1bff1a     .0.0.0.....0....
1002a57c:	ff01ff1f 309c309b ff4000b4 ff3e00a8     .....0.0..@...>.
1002a58c:	ff3f203e 30fe30fd 309e309d 4edd3003     > ?..0.0.0.0.0.N
1002a59c:	30063005 30fc3007 20102014 ff3cff0f     .0.0.0.0. . ..<.
1002a5ac:	2016301c 2026ff5c 20182025 201c2019     .0. \.& % . . . 
1002a5bc:	ff08201d 3014ff09 ff3b3015 ff5bff3d     . .....0.0;.=.[.
1002a5cc:	3008ff5d 300a3009 300c300b 300e300d     ]..0.0.0.0.0.0.0
1002a5dc:	3010300f ff0b3011 00b12212 00f700d7     .0.0.0..."......
1002a5ec:	2260ff1d ff1eff1c 22672266 2234221e     ..`"....f"g"."4"
1002a5fc:	26402642 203200b0 21032033 ff0400a5     B&@&..2 3 .!....
1002a60c:	00a300a2 ff03ff05 ff0aff06 00a7ff20     ............ ...
1002a61c:	26052606 25cf25cb 25c725ce 00464e49     .&.&.%.%.%.%INF.
1002a62c:	00666e69 004e414e 006e616e 33323130     inf.NAN.nan.0123
1002a63c:	37363534 62613938 66656463 00000000     456789abcdef....
1002a64c:	33323130 37363534 42413938 46454443     0123456789ABCDEF
1002a65c:	00000000 6c756e28 0000296c 00000030     ....(null)..0...

1002a66c <zeroes.0>:
1002a66c:	30303030 30303030 30303030 30303030     0000000000000000

1002a67c <blanks.1>:
1002a67c:	20202020 20202020 20202020 20202020                     

1002a68c <zeroes.0>:
1002a68c:	30303030 30303030 30303030 30303030     0000000000000000

1002a69c <blanks.1>:
1002a69c:	20202020 20202020 20202020 20202020                     

1002a6ac <zeroes.0>:
1002a6ac:	30303030 30303030 30303030 30303030     0000000000000000

1002a6bc <blanks.1>:
1002a6bc:	20202020 20202020 20202020 20202020                     
1002a6cc:	7566202c 6974636e 203a6e6f 00000000     , function: ....
1002a6dc:	65737361 6f697472 2522206e 66202273     assertion "%s" f
1002a6ec:	656c6961 66203a64 20656c69 22732522     ailed: file "%s"
1002a6fc:	696c202c 2520656e 25732564 00000a73     , line %d%s%s...
1002a70c:	7461642f 656a2f61 6e696b6e 6f772f73     /data/jenkins/wo
1002a71c:	70736b72 2f656361 2d554e47 6c6f6f74     rkspace/GNU-tool
1002a72c:	69616863 72612f6e 32312d6d 6372732f     chain/arm-12/src
1002a73c:	77656e2f 2d62696c 77677963 6e2f6e69     /newlib-cygwin/n
1002a74c:	696c7765 696c2f62 732f6362 696c6474     ewlib/libc/stdli
1002a75c:	706d2f62 2e636572 00000063              b/mprec.c...

1002a768 <p05.0>:
1002a768:	00000005 00000019 0000007d 00000000     ........}.......

1002a778 <__mprec_bigtens>:
1002a778:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
1002a788:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
1002a798:	7f73bf3c 75154fdd                       <.s..O.u

1002a7a0 <__mprec_tens>:
1002a7a0:	00000000 3ff00000 00000000 40240000     .......?......$@
1002a7b0:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
1002a7c0:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
1002a7d0:	00000000 412e8480 00000000 416312d0     .......A......cA
1002a7e0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
1002a7f0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
1002a800:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
1002a810:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
1002a820:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
1002a830:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
1002a840:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
1002a850:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
1002a860:	79d99db4 44ea7843 69666e49 7974696e     ...yCx.DInfinity
1002a870:	00000000 004e614e 7461642f 656a2f61     ....NaN./data/je
1002a880:	6e696b6e 6f772f73 70736b72 2f656361     nkins/workspace/
1002a890:	2d554e47 6c6f6f74 69616863 72612f6e     GNU-toolchain/ar
1002a8a0:	32312d6d 6372732f 77656e2f 2d62696c     m-12/src/newlib-
1002a8b0:	77677963 6e2f6e69 696c7765 696c2f62     cygwin/newlib/li
1002a8c0:	732f6362 696c6474 74642f62 632e616f     bc/stdlib/dtoa.c
1002a8d0:	00000000                                ....

1002a8d4 <_init>:
1002a8d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1002a8d6:	bf00      	nop
1002a8d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
1002a8da:	bc08      	pop	{r3}
1002a8dc:	469e      	mov	lr, r3
1002a8de:	4770      	bx	lr

1002a8e0 <_fini>:
1002a8e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1002a8e2:	bf00      	nop
1002a8e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
1002a8e6:	bc08      	pop	{r3}
1002a8e8:	469e      	mov	lr, r3
1002a8ea:	4770      	bx	lr
1002a8ec:	0000      	movs	r0, r0
	...

1002a8f0 <__MXC_FLC_PageErase_veneer>:
1002a8f0:	f85f f000 	ldr.w	pc, [pc]	@ 1002a8f4 <__MXC_FLC_PageErase_veneer+0x4>
1002a8f4:	200006c9 	.word	0x200006c9

1002a8f8 <__MXC_FLC_Com_Write_veneer>:
1002a8f8:	f85f f000 	ldr.w	pc, [pc]	@ 1002a8fc <__MXC_FLC_Com_Write_veneer+0x4>
1002a8fc:	20000ac9 	.word	0x20000ac9

1002a900 <__MXC_FLC_Com_Read_veneer>:
1002a900:	f85f f000 	ldr.w	pc, [pc]	@ 1002a904 <__MXC_FLC_Com_Read_veneer+0x4>
1002a904:	20000ba1 	.word	0x20000ba1

1002a908 <__MXC_FLC_RevA_Write32Using128_veneer>:
1002a908:	f85f f000 	ldr.w	pc, [pc]	@ 1002a90c <__MXC_FLC_RevA_Write32Using128_veneer+0x4>
1002a90c:	20000939 	.word	0x20000939

1002a910 <__EH_FRAME_BEGIN__>:
1002a910:	00000010 00000000 00527a01 010e7c02     .........zR..|..
1002a920:	000d0c1b 00000014 00000018 fffebee4     ................
1002a930:	00000134 0a710200 00000b43 00000010     4.....q.C.......
1002a940:	00000000 00527a01 010e7c02 000d0c1b     .....zR..|......
1002a950:	0000001c 00000018 fffec028 000000d8     ........(.......
1002a960:	080e4100 02840185 4a0a4902 0b41c4c5     .A.......I.J..A.
1002a970:	00000010 00000000 00527a01 010e7c02     .........zR..|..
1002a980:	000d0c1b 00000038 00000018 ffff5444     ....8.......DT..
1002a990:	0000009e 100e5100 03850484 01870286     .....Q..........
1002a9a0:	c5c6c75b 4c000ec4 0a0b420a 100e0b42     [......L.B..B...
1002a9b0:	03850484 01870286 c5c6c751 00000ec4     ........Q.......

1002a9c0 <__FRAME_END__>:
1002a9c0:	00000000                                ....

Disassembly of section .data:

20000000 <ConsoleUart>:
20000000:	40042000                                . .@

20000004 <overflows>:
20000004:	ffffffff                                ....

20000008 <flc_int>:
20000008:	40029000                                ...@

2000000c <interruptCheck>:
2000000c:	00001008                                ....

20000010 <__malloc_sbrk_base>:
20000010:	ffffffff                                ....

20000014 <__malloc_trim_threshold>:
20000014:	00020000                                ....

20000018 <__malloc_av_>:
	...
20000020:	20000018 20000018 20000020 20000020     ... ...  ..  .. 
20000030:	20000028 20000028 20000030 20000030     (.. (.. 0.. 0.. 
20000040:	20000038 20000038 20000040 20000040     8.. 8.. @.. @.. 
20000050:	20000048 20000048 20000050 20000050     H.. H.. P.. P.. 
20000060:	20000058 20000058 20000060 20000060     X.. X.. `.. `.. 
20000070:	20000068 20000068 20000070 20000070     h.. h.. p.. p.. 
20000080:	20000078 20000078 20000080 20000080     x.. x.. ... ... 
20000090:	20000088 20000088 20000090 20000090     ... ... ... ... 
200000a0:	20000098 20000098 200000a0 200000a0     ... ... ... ... 
200000b0:	200000a8 200000a8 200000b0 200000b0     ... ... ... ... 
200000c0:	200000b8 200000b8 200000c0 200000c0     ... ... ... ... 
200000d0:	200000c8 200000c8 200000d0 200000d0     ... ... ... ... 
200000e0:	200000d8 200000d8 200000e0 200000e0     ... ... ... ... 
200000f0:	200000e8 200000e8 200000f0 200000f0     ... ... ... ... 
20000100:	200000f8 200000f8 20000100 20000100     ... ... ... ... 
20000110:	20000108 20000108 20000110 20000110     ... ... ... ... 
20000120:	20000118 20000118 20000120 20000120     ... ...  ..  .. 
20000130:	20000128 20000128 20000130 20000130     (.. (.. 0.. 0.. 
20000140:	20000138 20000138 20000140 20000140     8.. 8.. @.. @.. 
20000150:	20000148 20000148 20000150 20000150     H.. H.. P.. P.. 
20000160:	20000158 20000158 20000160 20000160     X.. X.. `.. `.. 
20000170:	20000168 20000168 20000170 20000170     h.. h.. p.. p.. 
20000180:	20000178 20000178 20000180 20000180     x.. x.. ... ... 
20000190:	20000188 20000188 20000190 20000190     ... ... ... ... 
200001a0:	20000198 20000198 200001a0 200001a0     ... ... ... ... 
200001b0:	200001a8 200001a8 200001b0 200001b0     ... ... ... ... 
200001c0:	200001b8 200001b8 200001c0 200001c0     ... ... ... ... 
200001d0:	200001c8 200001c8 200001d0 200001d0     ... ... ... ... 
200001e0:	200001d8 200001d8 200001e0 200001e0     ... ... ... ... 
200001f0:	200001e8 200001e8 200001f0 200001f0     ... ... ... ... 
20000200:	200001f8 200001f8 20000200 20000200     ... ... ... ... 
20000210:	20000208 20000208 20000210 20000210     ... ... ... ... 
20000220:	20000218 20000218 20000220 20000220     ... ...  ..  .. 
20000230:	20000228 20000228 20000230 20000230     (.. (.. 0.. 0.. 
20000240:	20000238 20000238 20000240 20000240     8.. 8.. @.. @.. 
20000250:	20000248 20000248 20000250 20000250     H.. H.. P.. P.. 
20000260:	20000258 20000258 20000260 20000260     X.. X.. `.. `.. 
20000270:	20000268 20000268 20000270 20000270     h.. h.. p.. p.. 
20000280:	20000278 20000278 20000280 20000280     x.. x.. ... ... 
20000290:	20000288 20000288 20000290 20000290     ... ... ... ... 
200002a0:	20000298 20000298 200002a0 200002a0     ... ... ... ... 
200002b0:	200002a8 200002a8 200002b0 200002b0     ... ... ... ... 
200002c0:	200002b8 200002b8 200002c0 200002c0     ... ... ... ... 
200002d0:	200002c8 200002c8 200002d0 200002d0     ... ... ... ... 
200002e0:	200002d8 200002d8 200002e0 200002e0     ... ... ... ... 
200002f0:	200002e8 200002e8 200002f0 200002f0     ... ... ... ... 
20000300:	200002f8 200002f8 20000300 20000300     ... ... ... ... 
20000310:	20000308 20000308 20000310 20000310     ... ... ... ... 
20000320:	20000318 20000318 20000320 20000320     ... ...  ..  .. 
20000330:	20000328 20000328 20000330 20000330     (.. (.. 0.. 0.. 
20000340:	20000338 20000338 20000340 20000340     8.. 8.. @.. @.. 
20000350:	20000348 20000348 20000350 20000350     H.. H.. P.. P.. 
20000360:	20000358 20000358 20000360 20000360     X.. X.. `.. `.. 
20000370:	20000368 20000368 20000370 20000370     h.. h.. p.. p.. 
20000380:	20000378 20000378 20000380 20000380     x.. x.. ... ... 
20000390:	20000388 20000388 20000390 20000390     ... ... ... ... 
200003a0:	20000398 20000398 200003a0 200003a0     ... ... ... ... 
200003b0:	200003a8 200003a8 200003b0 200003b0     ... ... ... ... 
200003c0:	200003b8 200003b8 200003c0 200003c0     ... ... ... ... 
200003d0:	200003c8 200003c8 200003d0 200003d0     ... ... ... ... 
200003e0:	200003d8 200003d8 200003e0 200003e0     ... ... ... ... 
200003f0:	200003e8 200003e8 200003f0 200003f0     ... ... ... ... 
20000400:	200003f8 200003f8 20000400 20000400     ... ... ... ... 
20000410:	20000408 20000408 20000410 20000410     ... ... ... ... 

20000420 <__atexit_recursive_mutex>:
20000420:	20001490                                ... 

20000424 <__global_locale>:
20000424:	00000043 00000000 00000000 00000000     C...............
	...
20000444:	00000043 00000000 00000000 00000000     C...............
	...
20000464:	00000043 00000000 00000000 00000000     C...............
	...
20000484:	00000043 00000000 00000000 00000000     C...............
	...
200004a4:	00000043 00000000 00000000 00000000     C...............
	...
200004c4:	00000043 00000000 00000000 00000000     C...............
	...
200004e4:	00000043 00000000 00000000 00000000     C...............
	...
20000504:	10019055 1001e0d1 00000000 1002388c     U............8..
20000514:	1002151c 10021458 10021458 10021458     ....X...X...X...
20000524:	10021458 10021458 10021458 10021458     X...X...X...X...
20000534:	10021458 10021458 ffffffff ffffffff     X...X...........
20000544:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
2000056c:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20000590 <_impure_ptr>:
20000590:	20000598 00000000                       ... ....

20000598 <_impure_data>:
20000598:	00000000 2000149c 20001504 2000156c     ....... ... l.. 
	...
20000630:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20000640:	0005deec 0000000b 00000000 00000000     ................
	...

200006b8 <__sglue>:
200006b8:	00000000 00000003 2000149c              ........... 

200006c4 <MXC_FLC_Busy>:
    return MXC_FLC_RevA_Busy();
200006c4:	f000 b864 	b.w	20000790 <MXC_FLC_RevA_Busy>

200006c8 <MXC_FLC_PageErase>:
    if ((addr >= MXC_FLASH_MEM_BASE) && (addr < (MXC_FLASH_MEM_BASE + MXC_FLASH_MEM_SIZE))) {
200006c8:	f100 4370 	add.w	r3, r0, #4026531840	@ 0xf0000000
200006cc:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
200006d0:	d320      	bcc.n	20000714 <MXC_FLC_PageErase+0x4c>
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
200006d2:	f1a0 5384 	sub.w	r3, r0, #276824064	@ 0x10800000
200006d6:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
200006da:	d21e      	bcs.n	2000071a <MXC_FLC_PageErase+0x52>
        *result = (addr & (MXC_INFO_MEM_SIZE - 1)) + MXC_FLASH_MEM_SIZE;
200006dc:	f3c0 000d 	ubfx	r0, r0, #0, #14
200006e0:	f500 2100 	add.w	r1, r0, #524288	@ 0x80000
{
200006e4:	b500      	push	{lr}
    err = MXC_FLC_RevA_PageErase((mxc_flc_reva_regs_t *)flc, addr);
200006e6:	480e      	ldr	r0, [pc, #56]	@ (20000720 <MXC_FLC_PageErase+0x58>)
{
200006e8:	b083      	sub	sp, #12
    err = MXC_FLC_RevA_PageErase((mxc_flc_reva_regs_t *)flc, addr);
200006ea:	f000 f897 	bl	2000081c <MXC_FLC_RevA_PageErase>
    MXC_GCR->sysctrl |= MXC_F_GCR_SYSCTRL_ICC0_FLUSH;
200006ee:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
200006f2:	6813      	ldr	r3, [r2, #0]
200006f4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
200006f8:	6013      	str	r3, [r2, #0]
    while (MXC_GCR->sysctrl & MXC_F_GCR_SYSCTRL_ICC0_FLUSH) {}
200006fa:	6813      	ldr	r3, [r2, #0]
200006fc:	065b      	lsls	r3, r3, #25
200006fe:	d4fc      	bmi.n	200006fa <MXC_FLC_PageErase+0x32>
    line = *line_addr;
20000700:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
    line = *line_addr;
20000704:	4b07      	ldr	r3, [pc, #28]	@ (20000724 <MXC_FLC_PageErase+0x5c>)
    line = *line_addr;
20000706:	6812      	ldr	r2, [r2, #0]
20000708:	9201      	str	r2, [sp, #4]
    line = *line_addr;
2000070a:	681b      	ldr	r3, [r3, #0]
2000070c:	9301      	str	r3, [sp, #4]
}
2000070e:	b003      	add	sp, #12
20000710:	f85d fb04 	ldr.w	pc, [sp], #4
        *result = addr & (MXC_FLASH_MEM_SIZE - 1);
20000714:	f3c0 0112 	ubfx	r1, r0, #0, #19
20000718:	e7e4      	b.n	200006e4 <MXC_FLC_PageErase+0x1c>
        return E_BAD_PARAM;
2000071a:	f06f 0002 	mvn.w	r0, #2
}
2000071e:	4770      	bx	lr
20000720:	40029000 	.word	0x40029000
20000724:	10002000 	.word	0x10002000

20000728 <MXC_FLC_Write128>:
    if (address & 0xF) {
20000728:	0702      	lsls	r2, r0, #28
2000072a:	d129      	bne.n	20000780 <MXC_FLC_Write128+0x58>
    if ((addr >= MXC_FLASH_MEM_BASE) && (addr < (MXC_FLASH_MEM_BASE + MXC_FLASH_MEM_SIZE))) {
2000072c:	f100 4370 	add.w	r3, r0, #4026531840	@ 0xf0000000
20000730:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
20000734:	460a      	mov	r2, r1
20000736:	d320      	bcc.n	2000077a <MXC_FLC_Write128+0x52>
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
20000738:	f1a0 5384 	sub.w	r3, r0, #276824064	@ 0x10800000
2000073c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
20000740:	d21e      	bcs.n	20000780 <MXC_FLC_Write128+0x58>
        *result = (addr & (MXC_INFO_MEM_SIZE - 1)) + MXC_FLASH_MEM_SIZE;
20000742:	f3c0 000d 	ubfx	r0, r0, #0, #14
20000746:	f500 2100 	add.w	r1, r0, #524288	@ 0x80000
{
2000074a:	b500      	push	{lr}
    err = MXC_FLC_RevA_Write128((mxc_flc_reva_regs_t *)flc, addr, data);
2000074c:	480e      	ldr	r0, [pc, #56]	@ (20000788 <MXC_FLC_Write128+0x60>)
{
2000074e:	b083      	sub	sp, #12
    err = MXC_FLC_RevA_Write128((mxc_flc_reva_regs_t *)flc, addr, data);
20000750:	f000 f958 	bl	20000a04 <MXC_FLC_RevA_Write128>
    MXC_GCR->sysctrl |= MXC_F_GCR_SYSCTRL_ICC0_FLUSH;
20000754:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
20000758:	6813      	ldr	r3, [r2, #0]
2000075a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
2000075e:	6013      	str	r3, [r2, #0]
    while (MXC_GCR->sysctrl & MXC_F_GCR_SYSCTRL_ICC0_FLUSH) {}
20000760:	6813      	ldr	r3, [r2, #0]
20000762:	065b      	lsls	r3, r3, #25
20000764:	d4fc      	bmi.n	20000760 <MXC_FLC_Write128+0x38>
    line = *line_addr;
20000766:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
    line = *line_addr;
2000076a:	4b08      	ldr	r3, [pc, #32]	@ (2000078c <MXC_FLC_Write128+0x64>)
    line = *line_addr;
2000076c:	6812      	ldr	r2, [r2, #0]
2000076e:	9201      	str	r2, [sp, #4]
    line = *line_addr;
20000770:	681b      	ldr	r3, [r3, #0]
20000772:	9301      	str	r3, [sp, #4]
}
20000774:	b003      	add	sp, #12
20000776:	f85d fb04 	ldr.w	pc, [sp], #4
        *result = addr & (MXC_FLASH_MEM_SIZE - 1);
2000077a:	f3c0 0112 	ubfx	r1, r0, #0, #19
2000077e:	e7e4      	b.n	2000074a <MXC_FLC_Write128+0x22>
        return E_BAD_PARAM;
20000780:	f06f 0002 	mvn.w	r0, #2
}
20000784:	4770      	bx	lr
20000786:	bf00      	nop
20000788:	40029000 	.word	0x40029000
2000078c:	10002000 	.word	0x10002000

20000790 <MXC_FLC_RevA_Busy>:
    return (flc->ctrl &
20000790:	4b02      	ldr	r3, [pc, #8]	@ (2000079c <MXC_FLC_RevA_Busy+0xc>)
20000792:	6898      	ldr	r0, [r3, #8]
}
20000794:	f000 0007 	and.w	r0, r0, #7
20000798:	4770      	bx	lr
2000079a:	bf00      	nop
2000079c:	40029000 	.word	0x40029000

200007a0 <MXC_FLC_RevA_MassErase>:
    return (flc->ctrl &
200007a0:	6882      	ldr	r2, [r0, #8]
{
200007a2:	4603      	mov	r3, r0
    if (MXC_busy_flc(flc)) {
200007a4:	0750      	lsls	r0, r2, #29
200007a6:	d12a      	bne.n	200007fe <MXC_FLC_RevA_MassErase+0x5e>
    flc->clkdiv = SystemCoreClock / 1000000;
200007a8:	4a1a      	ldr	r2, [pc, #104]	@ (20000814 <MXC_FLC_RevA_MassErase+0x74>)
200007aa:	491b      	ldr	r1, [pc, #108]	@ (20000818 <MXC_FLC_RevA_MassErase+0x78>)
200007ac:	6812      	ldr	r2, [r2, #0]
200007ae:	fba1 1202 	umull	r1, r2, r1, r2
200007b2:	0c92      	lsrs	r2, r2, #18
200007b4:	605a      	str	r2, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200007b6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
200007b8:	0791      	lsls	r1, r2, #30
200007ba:	d41b      	bmi.n	200007f4 <MXC_FLC_RevA_MassErase+0x54>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
200007bc:	689a      	ldr	r2, [r3, #8]
200007be:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
200007c2:	f042 5200 	orr.w	r2, r2, #536870912	@ 0x20000000
200007c6:	609a      	str	r2, [r3, #8]
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_ERASE_CODE) |
200007c8:	689a      	ldr	r2, [r3, #8]
200007ca:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
200007ce:	f442 422a 	orr.w	r2, r2, #43520	@ 0xaa00
200007d2:	609a      	str	r2, [r3, #8]
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_ME;
200007d4:	689a      	ldr	r2, [r3, #8]
200007d6:	f042 0202 	orr.w	r2, r2, #2
200007da:	609a      	str	r2, [r3, #8]
    return (flc->ctrl &
200007dc:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
200007de:	0752      	lsls	r2, r2, #29
200007e0:	d1fc      	bne.n	200007dc <MXC_FLC_RevA_MassErase+0x3c>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
200007e2:	689a      	ldr	r2, [r3, #8]
200007e4:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
200007e8:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200007ea:	6a58      	ldr	r0, [r3, #36]	@ 0x24
200007ec:	f010 0002 	ands.w	r0, r0, #2
200007f0:	d108      	bne.n	20000804 <MXC_FLC_RevA_MassErase+0x64>
}
200007f2:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
200007f4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
200007f6:	f022 0202 	bic.w	r2, r2, #2
200007fa:	625a      	str	r2, [r3, #36]	@ 0x24
200007fc:	e7de      	b.n	200007bc <MXC_FLC_RevA_MassErase+0x1c>
        return E_BUSY;
200007fe:	f06f 0005 	mvn.w	r0, #5
20000802:	e7f6      	b.n	200007f2 <MXC_FLC_RevA_MassErase+0x52>
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000804:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000806:	f022 0202 	bic.w	r2, r2, #2
        return E_BAD_STATE;
2000080a:	f06f 0006 	mvn.w	r0, #6
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
2000080e:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
20000810:	4770      	bx	lr
20000812:	bf00      	nop
20000814:	20001768 	.word	0x20001768
20000818:	431bde83 	.word	0x431bde83

2000081c <MXC_FLC_RevA_PageErase>:
    return (flc->ctrl &
2000081c:	6882      	ldr	r2, [r0, #8]
    if (MXC_busy_flc(flc)) {
2000081e:	0752      	lsls	r2, r2, #29
{
20000820:	4603      	mov	r3, r0
    if (MXC_busy_flc(flc)) {
20000822:	d12b      	bne.n	2000087c <MXC_FLC_RevA_PageErase+0x60>
    flc->clkdiv = SystemCoreClock / 1000000;
20000824:	4a1a      	ldr	r2, [pc, #104]	@ (20000890 <MXC_FLC_RevA_PageErase+0x74>)
20000826:	481b      	ldr	r0, [pc, #108]	@ (20000894 <MXC_FLC_RevA_PageErase+0x78>)
20000828:	6812      	ldr	r2, [r2, #0]
2000082a:	fba0 0202 	umull	r0, r2, r0, r2
2000082e:	0c92      	lsrs	r2, r2, #18
20000830:	605a      	str	r2, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000832:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000834:	0790      	lsls	r0, r2, #30
20000836:	d41c      	bmi.n	20000872 <MXC_FLC_RevA_PageErase+0x56>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
20000838:	689a      	ldr	r2, [r3, #8]
2000083a:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
2000083e:	f042 5200 	orr.w	r2, r2, #536870912	@ 0x20000000
20000842:	609a      	str	r2, [r3, #8]
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_ERASE_CODE) |
20000844:	689a      	ldr	r2, [r3, #8]
20000846:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
2000084a:	f442 42aa 	orr.w	r2, r2, #21760	@ 0x5500
2000084e:	609a      	str	r2, [r3, #8]
    flc->addr = addr;
20000850:	6019      	str	r1, [r3, #0]
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_PGE;
20000852:	689a      	ldr	r2, [r3, #8]
20000854:	f042 0204 	orr.w	r2, r2, #4
20000858:	609a      	str	r2, [r3, #8]
    return (flc->ctrl &
2000085a:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
2000085c:	0752      	lsls	r2, r2, #29
2000085e:	d1fc      	bne.n	2000085a <MXC_FLC_RevA_PageErase+0x3e>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
20000860:	689a      	ldr	r2, [r3, #8]
20000862:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
20000866:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000868:	6a58      	ldr	r0, [r3, #36]	@ 0x24
2000086a:	f010 0002 	ands.w	r0, r0, #2
2000086e:	d108      	bne.n	20000882 <MXC_FLC_RevA_PageErase+0x66>
}
20000870:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000872:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000874:	f022 0202 	bic.w	r2, r2, #2
20000878:	625a      	str	r2, [r3, #36]	@ 0x24
2000087a:	e7dd      	b.n	20000838 <MXC_FLC_RevA_PageErase+0x1c>
        return E_BUSY;
2000087c:	f06f 0005 	mvn.w	r0, #5
20000880:	e7f6      	b.n	20000870 <MXC_FLC_RevA_PageErase+0x54>
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000882:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000884:	f022 0202 	bic.w	r2, r2, #2
        return E_BAD_STATE;
20000888:	f06f 0006 	mvn.w	r0, #6
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
2000088c:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
2000088e:	4770      	bx	lr
20000890:	20001768 	.word	0x20001768
20000894:	431bde83 	.word	0x431bde83

20000898 <MXC_FLC_RevA_Write32>:
    if (logicAddr & 0x3) {
20000898:	078b      	lsls	r3, r1, #30
2000089a:	d139      	bne.n	20000910 <MXC_FLC_RevA_Write32+0x78>
    if ((*(uint32_t *)logicAddr & data) != data) {
2000089c:	4603      	mov	r3, r0
2000089e:	6808      	ldr	r0, [r1, #0]
200008a0:	ea32 0000 	bics.w	r0, r2, r0
200008a4:	d141      	bne.n	2000092a <MXC_FLC_RevA_Write32+0x92>
    return (flc->ctrl &
200008a6:	6898      	ldr	r0, [r3, #8]
    if (MXC_busy_flc(flc)) {
200008a8:	0740      	lsls	r0, r0, #29
    logicAddr = logicAddr & 0xfffffffc;
200008aa:	f021 0103 	bic.w	r1, r1, #3
    if (MXC_busy_flc(flc)) {
200008ae:	d132      	bne.n	20000916 <MXC_FLC_RevA_Write32+0x7e>
    flc->clkdiv = SystemCoreClock / 1000000;
200008b0:	481f      	ldr	r0, [pc, #124]	@ (20000930 <MXC_FLC_RevA_Write32+0x98>)
{
200008b2:	b410      	push	{r4}
    flc->clkdiv = SystemCoreClock / 1000000;
200008b4:	6800      	ldr	r0, [r0, #0]
200008b6:	4c1f      	ldr	r4, [pc, #124]	@ (20000934 <MXC_FLC_RevA_Write32+0x9c>)
200008b8:	fba4 4000 	umull	r4, r0, r4, r0
200008bc:	0c80      	lsrs	r0, r0, #18
200008be:	6058      	str	r0, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200008c0:	6a58      	ldr	r0, [r3, #36]	@ 0x24
200008c2:	0780      	lsls	r0, r0, #30
200008c4:	d41f      	bmi.n	20000906 <MXC_FLC_RevA_Write32+0x6e>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
200008c6:	6898      	ldr	r0, [r3, #8]
200008c8:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
200008cc:	f040 5000 	orr.w	r0, r0, #536870912	@ 0x20000000
200008d0:	6098      	str	r0, [r3, #8]
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_WDTH;
200008d2:	6898      	ldr	r0, [r3, #8]
200008d4:	f040 0010 	orr.w	r0, r0, #16
200008d8:	6098      	str	r0, [r3, #8]
    flc->addr = logicAddr;
200008da:	6019      	str	r1, [r3, #0]
    flc->data[0] = data;
200008dc:	631a      	str	r2, [r3, #48]	@ 0x30
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_WR;
200008de:	689a      	ldr	r2, [r3, #8]
200008e0:	f042 0201 	orr.w	r2, r2, #1
200008e4:	609a      	str	r2, [r3, #8]
    while ((flc->ctrl & MXC_F_FLC_REVA_CTRL_PEND) != 0) {}
200008e6:	689a      	ldr	r2, [r3, #8]
200008e8:	01d1      	lsls	r1, r2, #7
200008ea:	d4fc      	bmi.n	200008e6 <MXC_FLC_RevA_Write32+0x4e>
    return (flc->ctrl &
200008ec:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
200008ee:	0752      	lsls	r2, r2, #29
200008f0:	d1fc      	bne.n	200008ec <MXC_FLC_RevA_Write32+0x54>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
200008f2:	689a      	ldr	r2, [r3, #8]
200008f4:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
200008f8:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200008fa:	6a58      	ldr	r0, [r3, #36]	@ 0x24
200008fc:	f010 0002 	ands.w	r0, r0, #2
20000900:	d10c      	bne.n	2000091c <MXC_FLC_RevA_Write32+0x84>
}
20000902:	bc10      	pop	{r4}
20000904:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000906:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000908:	f020 0002 	bic.w	r0, r0, #2
2000090c:	6258      	str	r0, [r3, #36]	@ 0x24
2000090e:	e7da      	b.n	200008c6 <MXC_FLC_RevA_Write32+0x2e>
        return E_BAD_PARAM;
20000910:	f06f 0002 	mvn.w	r0, #2
20000914:	4770      	bx	lr
        return E_BUSY;
20000916:	f06f 0005 	mvn.w	r0, #5
2000091a:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
2000091c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
2000091e:	f022 0202 	bic.w	r2, r2, #2
20000922:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
20000924:	f06f 0006 	mvn.w	r0, #6
20000928:	e7eb      	b.n	20000902 <MXC_FLC_RevA_Write32+0x6a>
2000092a:	f06f 0006 	mvn.w	r0, #6
}
2000092e:	4770      	bx	lr
20000930:	20001768 	.word	0x20001768
20000934:	431bde83 	.word	0x431bde83

20000938 <MXC_FLC_RevA_Write32Using128>:
{
20000938:	b570      	push	{r4, r5, r6, lr}
2000093a:	4684      	mov	ip, r0
2000093c:	b084      	sub	sp, #16
    uint32_t current_data[4] = { 0, 0, 0, 0 };
2000093e:	2000      	movs	r0, #0
    if (logicAddr & 0x3) {
20000940:	078e      	lsls	r6, r1, #30
    uint32_t current_data[4] = { 0, 0, 0, 0 };
20000942:	e9cd 0000 	strd	r0, r0, [sp]
20000946:	e9cd 0002 	strd	r0, r0, [sp, #8]
    if (logicAddr & 0x3) {
2000094a:	d150      	bne.n	200009ee <MXC_FLC_RevA_Write32Using128+0xb6>
    if ((*(uint32_t *)logicAddr & data) != data) {
2000094c:	6808      	ldr	r0, [r1, #0]
2000094e:	ea32 0000 	bics.w	r0, r2, r0
20000952:	d149      	bne.n	200009e8 <MXC_FLC_RevA_Write32Using128+0xb0>
    return (flc->ctrl &
20000954:	f8dc 4008 	ldr.w	r4, [ip, #8]
    if (MXC_busy_flc(flc)) {
20000958:	0765      	lsls	r5, r4, #29
    logicAddr = logicAddr & 0xfffffff0;
2000095a:	f021 000f 	bic.w	r0, r1, #15
    if (MXC_busy_flc(flc)) {
2000095e:	d149      	bne.n	200009f4 <MXC_FLC_RevA_Write32Using128+0xbc>
    flc->clkdiv = SystemCoreClock / 1000000;
20000960:	4c26      	ldr	r4, [pc, #152]	@ (200009fc <MXC_FLC_RevA_Write32Using128+0xc4>)
20000962:	4d27      	ldr	r5, [pc, #156]	@ (20000a00 <MXC_FLC_RevA_Write32Using128+0xc8>)
20000964:	6824      	ldr	r4, [r4, #0]
20000966:	fba5 5404 	umull	r5, r4, r5, r4
2000096a:	0ca4      	lsrs	r4, r4, #18
2000096c:	f8cc 4004 	str.w	r4, [ip, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000970:	f8dc 4024 	ldr.w	r4, [ip, #36]	@ 0x24
20000974:	07a4      	lsls	r4, r4, #30
20000976:	d425      	bmi.n	200009c4 <MXC_FLC_RevA_Write32Using128+0x8c>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
20000978:	f8dc 4008 	ldr.w	r4, [ip, #8]
2000097c:	f024 4470 	bic.w	r4, r4, #4026531840	@ 0xf0000000
20000980:	f044 5400 	orr.w	r4, r4, #536870912	@ 0x20000000
20000984:	f8cc 4008 	str.w	r4, [ip, #8]
    for (ptr = (uint32_t *)logicAddr; ptr < (uint32_t *)(logicAddr + 16); ptr++, i++) {
20000988:	f100 0410 	add.w	r4, r0, #16
2000098c:	42a0      	cmp	r0, r4
2000098e:	4686      	mov	lr, r0
20000990:	d20d      	bcs.n	200009ae <MXC_FLC_RevA_Write32Using128+0x76>
20000992:	1d05      	adds	r5, r0, #4
20000994:	42ac      	cmp	r4, r5
20000996:	bf34      	ite	cc
20000998:	2401      	movcc	r4, #1
2000099a:	2404      	movcs	r4, #4
2000099c:	eb00 0484 	add.w	r4, r0, r4, lsl #2
200009a0:	466d      	mov	r5, sp
        current_data[i] = *ptr;
200009a2:	f85e 6b04 	ldr.w	r6, [lr], #4
200009a6:	f845 6b04 	str.w	r6, [r5], #4
    for (ptr = (uint32_t *)logicAddr; ptr < (uint32_t *)(logicAddr + 16); ptr++, i++) {
200009aa:	45a6      	cmp	lr, r4
200009ac:	d1f9      	bne.n	200009a2 <MXC_FLC_RevA_Write32Using128+0x6a>
    if (byte < 4) {
200009ae:	f011 0f0c 	tst.w	r1, #12
    flc->addr = physicalAddr;
200009b2:	f8cc 3000 	str.w	r3, [ip]
    if (byte < 4) {
200009b6:	d10c      	bne.n	200009d2 <MXC_FLC_RevA_Write32Using128+0x9a>
        current_data[0] = data;
200009b8:	9200      	str	r2, [sp, #0]
    return MXC_FLC_Write128(logicAddr, current_data);
200009ba:	4669      	mov	r1, sp
200009bc:	f7ff feb4 	bl	20000728 <MXC_FLC_Write128>
}
200009c0:	b004      	add	sp, #16
200009c2:	bd70      	pop	{r4, r5, r6, pc}
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
200009c4:	f8dc 4024 	ldr.w	r4, [ip, #36]	@ 0x24
200009c8:	f024 0402 	bic.w	r4, r4, #2
200009cc:	f8cc 4024 	str.w	r4, [ip, #36]	@ 0x24
200009d0:	e7d2      	b.n	20000978 <MXC_FLC_RevA_Write32Using128+0x40>
    } else if (byte < 8) {
200009d2:	070b      	lsls	r3, r1, #28
200009d4:	d401      	bmi.n	200009da <MXC_FLC_RevA_Write32Using128+0xa2>
        current_data[1] = data;
200009d6:	9201      	str	r2, [sp, #4]
200009d8:	e7ef      	b.n	200009ba <MXC_FLC_RevA_Write32Using128+0x82>
    byte = (logicAddr & 0xf);
200009da:	f001 010f 	and.w	r1, r1, #15
    } else if (byte < 12) {
200009de:	290b      	cmp	r1, #11
        current_data[2] = data;
200009e0:	bf94      	ite	ls
200009e2:	9202      	strls	r2, [sp, #8]
        current_data[3] = data;
200009e4:	9203      	strhi	r2, [sp, #12]
200009e6:	e7e8      	b.n	200009ba <MXC_FLC_RevA_Write32Using128+0x82>
        return E_BAD_STATE;
200009e8:	f06f 0006 	mvn.w	r0, #6
200009ec:	e7e8      	b.n	200009c0 <MXC_FLC_RevA_Write32Using128+0x88>
        return E_BAD_PARAM;
200009ee:	f06f 0002 	mvn.w	r0, #2
200009f2:	e7e5      	b.n	200009c0 <MXC_FLC_RevA_Write32Using128+0x88>
        return E_BUSY;
200009f4:	f06f 0005 	mvn.w	r0, #5
200009f8:	e7e2      	b.n	200009c0 <MXC_FLC_RevA_Write32Using128+0x88>
200009fa:	bf00      	nop
200009fc:	20001768 	.word	0x20001768
20000a00:	431bde83 	.word	0x431bde83

20000a04 <MXC_FLC_RevA_Write128>:
    if (addr & 0xF) {
20000a04:	070b      	lsls	r3, r1, #28
20000a06:	d13a      	bne.n	20000a7e <MXC_FLC_RevA_Write128+0x7a>
    return (flc->ctrl &
20000a08:	4603      	mov	r3, r0
20000a0a:	6880      	ldr	r0, [r0, #8]
    if (MXC_busy_flc(flc)) {
20000a0c:	0740      	lsls	r0, r0, #29
20000a0e:	d139      	bne.n	20000a84 <MXC_FLC_RevA_Write128+0x80>
    flc->clkdiv = SystemCoreClock / 1000000;
20000a10:	4821      	ldr	r0, [pc, #132]	@ (20000a98 <MXC_FLC_RevA_Write128+0x94>)
{
20000a12:	b410      	push	{r4}
    flc->clkdiv = SystemCoreClock / 1000000;
20000a14:	6800      	ldr	r0, [r0, #0]
20000a16:	4c21      	ldr	r4, [pc, #132]	@ (20000a9c <MXC_FLC_RevA_Write128+0x98>)
20000a18:	fba4 4000 	umull	r4, r0, r4, r0
20000a1c:	0c80      	lsrs	r0, r0, #18
20000a1e:	6058      	str	r0, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000a20:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000a22:	0780      	lsls	r0, r0, #30
20000a24:	d426      	bmi.n	20000a74 <MXC_FLC_RevA_Write128+0x70>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
20000a26:	6898      	ldr	r0, [r3, #8]
20000a28:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
20000a2c:	f040 5000 	orr.w	r0, r0, #536870912	@ 0x20000000
20000a30:	6098      	str	r0, [r3, #8]
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_WDTH;
20000a32:	6898      	ldr	r0, [r3, #8]
20000a34:	f020 0010 	bic.w	r0, r0, #16
20000a38:	6098      	str	r0, [r3, #8]
    flc->addr = addr;
20000a3a:	6019      	str	r1, [r3, #0]
    flc->data[0] = data[0];
20000a3c:	6811      	ldr	r1, [r2, #0]
20000a3e:	6319      	str	r1, [r3, #48]	@ 0x30
    flc->data[1] = data[1];
20000a40:	6851      	ldr	r1, [r2, #4]
20000a42:	6359      	str	r1, [r3, #52]	@ 0x34
    flc->data[2] = data[2];
20000a44:	6891      	ldr	r1, [r2, #8]
20000a46:	6399      	str	r1, [r3, #56]	@ 0x38
    flc->data[3] = data[3];
20000a48:	68d2      	ldr	r2, [r2, #12]
20000a4a:	63da      	str	r2, [r3, #60]	@ 0x3c
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_WR;
20000a4c:	689a      	ldr	r2, [r3, #8]
20000a4e:	f042 0201 	orr.w	r2, r2, #1
20000a52:	609a      	str	r2, [r3, #8]
    while ((flc->ctrl & MXC_F_FLC_REVA_CTRL_PEND) != 0) {}
20000a54:	689a      	ldr	r2, [r3, #8]
20000a56:	01d1      	lsls	r1, r2, #7
20000a58:	d4fc      	bmi.n	20000a54 <MXC_FLC_RevA_Write128+0x50>
    return (flc->ctrl &
20000a5a:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
20000a5c:	0752      	lsls	r2, r2, #29
20000a5e:	d1fc      	bne.n	20000a5a <MXC_FLC_RevA_Write128+0x56>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
20000a60:	689a      	ldr	r2, [r3, #8]
20000a62:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
20000a66:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000a68:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000a6a:	f010 0002 	ands.w	r0, r0, #2
20000a6e:	d10c      	bne.n	20000a8a <MXC_FLC_RevA_Write128+0x86>
}
20000a70:	bc10      	pop	{r4}
20000a72:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000a74:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000a76:	f020 0002 	bic.w	r0, r0, #2
20000a7a:	6258      	str	r0, [r3, #36]	@ 0x24
20000a7c:	e7d3      	b.n	20000a26 <MXC_FLC_RevA_Write128+0x22>
        return E_BAD_PARAM;
20000a7e:	f06f 0002 	mvn.w	r0, #2
20000a82:	4770      	bx	lr
        return E_BUSY;
20000a84:	f06f 0005 	mvn.w	r0, #5
}
20000a88:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000a8a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000a8c:	f022 0202 	bic.w	r2, r2, #2
        return E_BAD_STATE;
20000a90:	f06f 0006 	mvn.w	r0, #6
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000a94:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
20000a96:	e7eb      	b.n	20000a70 <MXC_FLC_RevA_Write128+0x6c>
20000a98:	20001768 	.word	0x20001768
20000a9c:	431bde83 	.word	0x431bde83

20000aa0 <MXC_FLC_Com_VerifyData>:
// Length is number of 32-bit words
int MXC_FLC_Com_VerifyData(uint32_t address, uint32_t length, uint32_t *data)
{
    volatile uint32_t *ptr;

    for (ptr = (uint32_t *)address; ptr < (((uint32_t *)(address)) + length); ptr++, data++) {
20000aa0:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
20000aa4:	4560      	cmp	r0, ip
20000aa6:	d20d      	bcs.n	20000ac4 <MXC_FLC_Com_VerifyData+0x24>
20000aa8:	3a04      	subs	r2, #4
20000aaa:	e001      	b.n	20000ab0 <MXC_FLC_Com_VerifyData+0x10>
20000aac:	4560      	cmp	r0, ip
20000aae:	d209      	bcs.n	20000ac4 <MXC_FLC_Com_VerifyData+0x24>
        if (*ptr != *data) {
20000ab0:	6801      	ldr	r1, [r0, #0]
20000ab2:	f852 3f04 	ldr.w	r3, [r2, #4]!
20000ab6:	4299      	cmp	r1, r3
    for (ptr = (uint32_t *)address; ptr < (((uint32_t *)(address)) + length); ptr++, data++) {
20000ab8:	f100 0004 	add.w	r0, r0, #4
        if (*ptr != *data) {
20000abc:	d0f6      	beq.n	20000aac <MXC_FLC_Com_VerifyData+0xc>
            return E_BAD_STATE;
20000abe:	f06f 0006 	mvn.w	r0, #6
        }
    }

    return E_NO_ERROR;
}
20000ac2:	4770      	bx	lr
    return E_NO_ERROR;
20000ac4:	2000      	movs	r0, #0
20000ac6:	4770      	bx	lr

20000ac8 <MXC_FLC_Com_Write>:
#else
__attribute__((section(".flashprog")))
#endif
// make sure to disable ICC with ICC_Disable(); before Running this function
int MXC_FLC_Com_Write(uint32_t address, uint32_t length, uint32_t *buffer)
{
20000ac8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    uint32_t current_data_32;
    uint8_t *current_data = (uint8_t *)&current_data_32;
    uint8_t *buffer8 = (uint8_t *)buffer;

    // Align the address to a word boundary and read/write if we have to
    if (address & 0x3) {
20000acc:	f010 0703 	ands.w	r7, r0, #3
{
20000ad0:	b087      	sub	sp, #28
20000ad2:	4604      	mov	r4, r0
20000ad4:	460e      	mov	r6, r1
20000ad6:	4615      	mov	r5, r2
    if (address & 0x3) {
20000ad8:	d00b      	beq.n	20000af2 <MXC_FLC_Com_Write+0x2a>
20000ada:	e012      	b.n	20000b02 <MXC_FLC_Com_Write+0x3a>
        length -= bytes_written;
        buffer8 += bytes_written;
    }

    // Align the address to a 4-word (128bit) boundary
    while ((length >= 4) && ((address & 0xF) != 0)) {
20000adc:	0723      	lsls	r3, r4, #28
20000ade:	d028      	beq.n	20000b32 <MXC_FLC_Com_Write+0x6a>
        memcpy(current_data, buffer8, 4);
20000ae0:	6829      	ldr	r1, [r5, #0]
20000ae2:	9101      	str	r1, [sp, #4]
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000ae4:	4620      	mov	r0, r4
20000ae6:	f000 f867 	bl	20000bb8 <__MXC_FLC_Write32_veneer>
            return err;
        }

        address += 4;
        length -= 4;
20000aea:	3e04      	subs	r6, #4
        address += 4;
20000aec:	3404      	adds	r4, #4
        buffer8 += 4;
20000aee:	3504      	adds	r5, #4
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000af0:	b920      	cbnz	r0, 20000afc <MXC_FLC_Com_Write+0x34>
    while ((length >= 4) && ((address & 0xF) != 0)) {
20000af2:	2e03      	cmp	r6, #3
20000af4:	d8f2      	bhi.n	20000adc <MXC_FLC_Com_Write+0x14>
        address += 4;
        length -= 4;
        buffer8 += 4;
    }

    if (length > 0) {
20000af6:	2e00      	cmp	r6, #0
20000af8:	d143      	bne.n	20000b82 <MXC_FLC_Com_Write+0xba>
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
            return err;
        }
    }

    return E_NO_ERROR;
20000afa:	4630      	mov	r0, r6
}
20000afc:	b007      	add	sp, #28
20000afe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        memcpy(current_data, (void *)(address & (~0x3)), 4);
20000b02:	f020 0903 	bic.w	r9, r0, #3
        memcpy(&current_data[4 - bytes_written], buffer8, bytes_written);
20000b06:	ab01      	add	r3, sp, #4
        bytes_written = 4 - (address & 0x3);
20000b08:	f1c7 0804 	rsb	r8, r7, #4
        memcpy(&current_data[4 - bytes_written], buffer8, bytes_written);
20000b0c:	19d8      	adds	r0, r3, r7
20000b0e:	4629      	mov	r1, r5
        memcpy(current_data, (void *)(address & (~0x3)), 4);
20000b10:	f8d9 3000 	ldr.w	r3, [r9]
20000b14:	9301      	str	r3, [sp, #4]
        memcpy(&current_data[4 - bytes_written], buffer8, bytes_written);
20000b16:	4642      	mov	r2, r8
20000b18:	f000 f84a 	bl	20000bb0 <__memcpy_veneer>
        if ((err = MXC_FLC_Write32(address - (address % 4), current_data_32)) != E_NO_ERROR) {
20000b1c:	9901      	ldr	r1, [sp, #4]
20000b1e:	4648      	mov	r0, r9
20000b20:	f000 f84a 	bl	20000bb8 <__MXC_FLC_Write32_veneer>
20000b24:	2800      	cmp	r0, #0
20000b26:	d1e9      	bne.n	20000afc <MXC_FLC_Com_Write+0x34>
        address += bytes_written;
20000b28:	3e04      	subs	r6, #4
20000b2a:	4444      	add	r4, r8
        length -= bytes_written;
20000b2c:	443e      	add	r6, r7
        buffer8 += bytes_written;
20000b2e:	4445      	add	r5, r8
20000b30:	e7df      	b.n	20000af2 <MXC_FLC_Com_Write+0x2a>
    if (length >= 16) {
20000b32:	2e0f      	cmp	r6, #15
20000b34:	d902      	bls.n	20000b3c <MXC_FLC_Com_Write+0x74>
20000b36:	e010      	b.n	20000b5a <MXC_FLC_Com_Write+0x92>
    while (length >= 4) {
20000b38:	2e03      	cmp	r6, #3
20000b3a:	d9dc      	bls.n	20000af6 <MXC_FLC_Com_Write+0x2e>
        memcpy(current_data, buffer8, 4);
20000b3c:	6829      	ldr	r1, [r5, #0]
20000b3e:	9101      	str	r1, [sp, #4]
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b40:	4620      	mov	r0, r4
20000b42:	f000 f839 	bl	20000bb8 <__MXC_FLC_Write32_veneer>
        length -= 4;
20000b46:	3e04      	subs	r6, #4
        address += 4;
20000b48:	3404      	adds	r4, #4
        buffer8 += 4;
20000b4a:	3504      	adds	r5, #4
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b4c:	2800      	cmp	r0, #0
20000b4e:	d0f3      	beq.n	20000b38 <MXC_FLC_Com_Write+0x70>
}
20000b50:	b007      	add	sp, #28
20000b52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        while (length >= 16) {
20000b56:	2e0f      	cmp	r6, #15
20000b58:	d9ee      	bls.n	20000b38 <MXC_FLC_Com_Write+0x70>
            memcpy(buff128, buffer8, 16);
20000b5a:	6828      	ldr	r0, [r5, #0]
20000b5c:	6869      	ldr	r1, [r5, #4]
20000b5e:	68aa      	ldr	r2, [r5, #8]
20000b60:	68eb      	ldr	r3, [r5, #12]
20000b62:	f10d 0c08 	add.w	ip, sp, #8
20000b66:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
            if ((err = MXC_FLC_Write128(address, buff128)) != E_NO_ERROR) {
20000b6a:	4620      	mov	r0, r4
20000b6c:	a902      	add	r1, sp, #8
20000b6e:	f7ff fddb 	bl	20000728 <MXC_FLC_Write128>
            length -= 16;
20000b72:	3e10      	subs	r6, #16
            address += 16;
20000b74:	3410      	adds	r4, #16
            buffer8 += 16;
20000b76:	3510      	adds	r5, #16
            if ((err = MXC_FLC_Write128(address, buff128)) != E_NO_ERROR) {
20000b78:	2800      	cmp	r0, #0
20000b7a:	d0ec      	beq.n	20000b56 <MXC_FLC_Com_Write+0x8e>
}
20000b7c:	b007      	add	sp, #28
20000b7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        memcpy(current_data, (void *)(address), 4);
20000b82:	6823      	ldr	r3, [r4, #0]
20000b84:	9301      	str	r3, [sp, #4]
        memcpy(current_data, buffer8, length);
20000b86:	4629      	mov	r1, r5
20000b88:	4632      	mov	r2, r6
20000b8a:	a801      	add	r0, sp, #4
20000b8c:	f000 f810 	bl	20000bb0 <__memcpy_veneer>
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b90:	9901      	ldr	r1, [sp, #4]
20000b92:	4620      	mov	r0, r4
}
20000b94:	b007      	add	sp, #28
20000b96:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b9a:	f000 b80d 	b.w	20000bb8 <__MXC_FLC_Write32_veneer>
20000b9e:	bf00      	nop

20000ba0 <MXC_FLC_Com_Read>:
#pragma section = ".flashprog"
#else
__attribute__((section(".flashprog")))
#endif
void MXC_FLC_Com_Read(int address, void *buffer, int len)
{
20000ba0:	4603      	mov	r3, r0
    memcpy(buffer, (void *)address, len);
20000ba2:	4608      	mov	r0, r1
20000ba4:	4619      	mov	r1, r3
20000ba6:	f000 b803 	b.w	20000bb0 <__memcpy_veneer>
20000baa:	bf00      	nop
20000bac:	0000      	movs	r0, r0
	...

20000bb0 <__memcpy_veneer>:
20000bb0:	f85f f000 	ldr.w	pc, [pc]	@ 20000bb4 <__memcpy_veneer+0x4>
20000bb4:	10016811 	.word	0x10016811

20000bb8 <__MXC_FLC_Write32_veneer>:
20000bb8:	f85f f000 	ldr.w	pc, [pc]	@ 20000bbc <__MXC_FLC_Write32_veneer+0x4>
20000bbc:	10012289 	.word	0x10012289

20000bc0 <__init_array_start>:
20000bc0:	10015ba5 	.word	0x10015ba5

20000bc4 <__frame_dummy_init_array_entry>:
20000bc4:	1000e271                                q...

20000bc8 <__do_global_dtors_aux_fini_array_entry>:
20000bc8:	1000e249                                I...
